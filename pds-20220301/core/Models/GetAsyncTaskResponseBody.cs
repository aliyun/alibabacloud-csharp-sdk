// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Pds20220301.Models
{
    public class GetAsyncTaskResponseBody : TeaModel {
        /// <summary>
        /// The ID of the asynchronous task.
        /// </summary>
        [NameInMap("async_task_id")]
        [Validation(Required=false)]
        public string AsyncTaskId { get; set; }

        /// <summary>
        /// The custom category of the task.
        /// </summary>
        [NameInMap("category")]
        [Validation(Required=false)]
        public string Category { get; set; }

        /// <summary>
        /// The total amount of work that is done in the asynchronous task, such as the number of files that are packaged for package download on the server.
        /// </summary>
        [NameInMap("consumed_process")]
        [Validation(Required=false)]
        public long? ConsumedProcess { get; set; }

        /// <summary>
        /// The time when the task was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. Example: 2019-03-28T13:03:29.298Z.
        /// </summary>
        [NameInMap("created_at")]
        [Validation(Required=false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// <warning>This parameter is no longer used. We recommend that you use error_code instead.</warning>
        /// 
        /// The error code returned if the asynchronous task failed.
        /// </summary>
        [NameInMap("err_code")]
        [Validation(Required=false)]
        public long? ErrCode { get; set; }

        /// <summary>
        /// The error code returned if the asynchronous task failed.
        /// </summary>
        [NameInMap("error_code")]
        [Validation(Required=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// The error message returned if the asynchronous task failed.
        /// </summary>
        [NameInMap("error_message")]
        [Validation(Required=false)]
        public string ErrorMessage { get; set; }

        [NameInMap("failed_process")]
        [Validation(Required=false)]
        public long? FailedProcess { get; set; }

        /// <summary>
        /// The time when the task was complete. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. Example: 2019-03-28T13:03:29.298Z.
        /// </summary>
        [NameInMap("finished_at")]
        [Validation(Required=false)]
        public string FinishedAt { get; set; }

        /// <summary>
        /// <warning>This parameter is no longer used. We recommend that you use error_message instead.</warning>
        /// 
        /// The error message returned if the asynchronous task failed.
        /// </summary>
        [NameInMap("message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        [NameInMap("skipped_process")]
        [Validation(Required=false)]
        public long? SkippedProcess { get; set; }

        /// <summary>
        /// The time when the task was started. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. Example: 2019-03-28T13:03:29.298Z.
        /// </summary>
        [NameInMap("started_at")]
        [Validation(Required=false)]
        public string StartedAt { get; set; }

        /// <summary>
        /// The state of the task. Valid values:
        /// 
        /// *   Failed
        /// *   Running
        /// *   PartialSucceed
        /// *   Succeed
        /// </summary>
        [NameInMap("state")]
        [Validation(Required=false)]
        public string State { get; set; }

        /// <summary>
        /// <warning>This parameter is no longer used. We recommend that you use state instead.</warning>
        /// 
        /// The state of the task. Valid values:
        /// 
        /// *   Failed
        /// *   Running
        /// *   PartialSucceed
        /// *   Succeed
        /// </summary>
        [NameInMap("status")]
        [Validation(Required=false)]
        public string Status { get; set; }

        /// <summary>
        /// The total amount of work to be done in the asynchronous task, such as the number of files to be packaged for package download on the server.
        /// </summary>
        [NameInMap("total_process")]
        [Validation(Required=false)]
        public long? TotalProcess { get; set; }

        /// <summary>
        /// The extracted files.
        /// </summary>
        [NameInMap("uncompress_file_list")]
        [Validation(Required=false)]
        public List<UncompressedFileInfo> UncompressFileList { get; set; }

        /// <summary>
        /// The download URL of the data generated by the asynchronous task, such as the download URL of the packaged files generated by the task of package download on the server.
        /// </summary>
        [NameInMap("url")]
        [Validation(Required=false)]
        public string Url { get; set; }

    }

}
