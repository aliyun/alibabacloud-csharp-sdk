// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Dts20200101.Models
{
    public class DescribeDtsJobsResponseBody : TeaModel {
        /// <summary>
        /// <para>The Data Transmission Service (DTS) tasks and the details of each task.</para>
        /// </summary>
        [NameInMap("DtsJobList")]
        [Validation(Required=false)]
        public List<DescribeDtsJobsResponseBodyDtsJobList> DtsJobList { get; set; }
        public class DescribeDtsJobsResponseBodyDtsJobList : TeaModel {
            /// <summary>
            /// <para>Indicates whether the <b>new</b> change tracking feature is used.</para>
            /// <remarks>
            /// <para> This parameter is returned only for change tracking instances of the new version.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>new</para>
            /// </summary>
            [NameInMap("AppName")]
            [Validation(Required=false)]
            public string AppName { get; set; }

            /// <summary>
            /// <para>The start of the time range for change tracking. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-15T08:25:34Z</para>
            /// </summary>
            [NameInMap("BeginTimestamp")]
            [Validation(Required=false)]
            public string BeginTimestamp { get; set; }

            /// <summary>
            /// <para>The start offset of incremental data synchronization. The value is a UNIX timestamp representing the number of seconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1616899019</para>
            /// </summary>
            [NameInMap("Checkpoint")]
            [Validation(Required=false)]
            public string Checkpoint { get; set; }

            /// <summary>
            /// <para>The consumption checkpoint of the change tracking instance. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-23T07:30:31Z</para>
            /// </summary>
            [NameInMap("ConsumptionCheckpoint")]
            [Validation(Required=false)]
            public string ConsumptionCheckpoint { get; set; }

            /// <summary>
            /// <para>The downstream client information, in the following format: \<IP address of the downstream client>:\<Random ID generated by DTS>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>114...:dts******</para>
            /// </summary>
            [NameInMap("ConsumptionClient")]
            [Validation(Required=false)]
            public string ConsumptionClient { get; set; }

            /// <summary>
            /// <para>The CPU utilization of the instance. Unit: percentage.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("CpuUsage")]
            [Validation(Required=false)]
            public string CpuUsage { get; set; }

            /// <summary>
            /// <para>The point in time when the task was created. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-16T08:01:19Z</para>
            /// </summary>
            [NameInMap("CreateTime")]
            [Validation(Required=false)]
            public string CreateTime { get; set; }

            /// <summary>
            /// <para>The state of the physical gateway-based migration task.</para>
            /// </summary>
            [NameInMap("DataCloudStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListDataCloudStatus DataCloudStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListDataCloudStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>framework: DTS-31009: In process of processing data ****</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>Indicates whether the instance needs to be upgraded. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b> </description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>false</para>
                /// </summary>
                [NameInMap("NeedUpgrade")]
                [Validation(Required=false)]
                public bool? NeedUpgrade { get; set; }

                /// <summary>
                /// <para>The progress of the task. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>85</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of tables that have been migrated.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of the task. For more information about the valid values, see the description of the request parameter <b>Status</b>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Migrating</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state of the extract, transform, and load (ETL) task. Valid values:</para>
            /// <remarks>
            /// <para> This parameter collection is returned only if an ETL task is configured.</para>
            /// </remarks>
            /// </summary>
            [NameInMap("DataEtlStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListDataEtlStatus DataEtlStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListDataEtlStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>The task has failed for a long time and cannot be recovered.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of the ETL task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>95</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of records that have been processed by the ETL task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0/0</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of the ETL task. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started.</description></item>
                /// <item><description><b>Migrating</b>: The task is in progress.</description></item>
                /// <item><description><b>Failed</b>: The task failed.</description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// <item><description><b>Catched</b>: The task is not delayed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state of full data synchronization.</para>
            /// </summary>
            [NameInMap("DataInitializationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListDataInitializationStatus DataInitializationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListDataInitializationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if full data synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of full data synchronization. This is expressed as a percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of records that have been synchronized during full data synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>44755</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of full data synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started.</description></item>
                /// <item><description><b>Migrating</b>: The task is in progress.</description></item>
                /// <item><description><b>Failed</b>: The task failed.</description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state of incremental data migration or synchronization.</para>
            /// </summary>
            [NameInMap("DataSynchronizationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListDataSynchronizationStatus DataSynchronizationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListDataSynchronizationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if incremental data migration or synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>The task has failed for a long time and cannot be recovered.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>Indicates whether the instance needs to be upgraded. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// <remarks>
                /// <para> To upgrade a DTS instance, call the <a href="https://help.aliyun.com/document_detail/281093.html">TransferInstanceClass</a> operation.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("NeedUpgrade")]
                [Validation(Required=false)]
                public bool? NeedUpgrade { get; set; }

                /// <summary>
                /// <para>The progress of incremental data migration or synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>95</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of records that have been migrated or synchronized during incremental data migration or synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0/0</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of incremental data migration or synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started.</description></item>
                /// <item><description><b>Migrating</b>: The task is in progress.</description></item>
                /// <item><description><b>Failed</b>: The task failed.</description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// <item><description><b>Catched</b>: The task is not delayed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Catched</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The objects that you want to synchronize. The value is a JSON string and can contain regular expressions. For more information, see &quot;Objects of DTS tasks&quot;.</para>
            /// 
            /// <b>Example:</b>
            /// <para>{&quot;dtstestdata&quot;: { &quot;name&quot;: &quot;dtstestdata&quot;, &quot;all&quot;: true }}</para>
            /// </summary>
            [NameInMap("DbObject")]
            [Validation(Required=false)]
            public string DbObject { get; set; }

            /// <summary>
            /// <para>The ID of the DTS dedicated cluster on which a DTS task runs.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dtscluster_ft7y3**********</para>
            /// </summary>
            [NameInMap("DedicatedClusterId")]
            [Validation(Required=false)]
            public string DedicatedClusterId { get; set; }

            /// <summary>
            /// <para>The latency of incremental data synchronization. Unit: seconds.</para>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("Delay")]
            [Validation(Required=false)]
            public long? Delay { get; set; }

            /// <summary>
            /// <para>The connection settings of the destination instance.</para>
            /// </summary>
            [NameInMap("DestinationEndpoint")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListDestinationEndpoint DestinationEndpoint { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListDestinationEndpoint : TeaModel {
                /// <summary>
                /// <para>The name of the database to which the migration object in the destination instance belongs.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstestdata</para>
                /// </summary>
                [NameInMap("DatabaseName")]
                [Validation(Required=false)]
                public string DatabaseName { get; set; }

                /// <summary>
                /// <para>The database type of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>MySQL</para>
                /// </summary>
                [NameInMap("EngineName")]
                [Validation(Required=false)]
                public string EngineName { get; set; }

                /// <summary>
                /// <para>The ID of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>rm-bp1imrtn6fq7h****</para>
                /// </summary>
                [NameInMap("InstanceID")]
                [Validation(Required=false)]
                public string InstanceID { get; set; }

                /// <summary>
                /// <para>The type of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS</para>
                /// </summary>
                [NameInMap("InstanceType")]
                [Validation(Required=false)]
                public string InstanceType { get; set; }

                /// <summary>
                /// <para>The endpoint of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>172.16.88.***</para>
                /// </summary>
                [NameInMap("Ip")]
                [Validation(Required=false)]
                public string Ip { get; set; }

                /// <summary>
                /// <para>The SID of the Oracle database.</para>
                /// <remarks>
                /// <para> This parameter is returned only if the <b>EngineName</b> parameter of the destination instance is set to <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>testsid</para>
                /// </summary>
                [NameInMap("OracleSID")]
                [Validation(Required=false)]
                public string OracleSID { get; set; }

                /// <summary>
                /// <para>The database service port of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3306</para>
                /// </summary>
                [NameInMap("Port")]
                [Validation(Required=false)]
                public string Port { get; set; }

                /// <summary>
                /// <para>The ID of the region in which the destination instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">List of supported regions</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>cn-hangzhou</para>
                /// </summary>
                [NameInMap("Region")]
                [Validation(Required=false)]
                public string Region { get; set; }

                /// <summary>
                /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>DISABLE</b>: SSL encryption is disabled.</description></item>
                /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled, and the CA certificate is uploaded.</description></item>
                /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection to an AWS MongoDB Altas database.</description></item>
                /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection to a Kafka cluster.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>DISABLE</para>
                /// </summary>
                [NameInMap("SslSolutionEnum")]
                [Validation(Required=false)]
                public string SslSolutionEnum { get; set; }

                /// <summary>
                /// <para>The database account of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstest</para>
                /// </summary>
                [NameInMap("UserName")]
                [Validation(Required=false)]
                public string UserName { get; set; }

            }

            /// <summary>
            /// <para>The environment tag of the DTS instance. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>normal</b></description></item>
            /// <item><description><b>online</b></description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>normal</para>
            /// </summary>
            [NameInMap("DtsBisLabel")]
            [Validation(Required=false)]
            public string DtsBisLabel { get; set; }

            /// <summary>
            /// <para>The ID of the data synchronization instance.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dtsi03e3zty16i****</para>
            /// </summary>
            [NameInMap("DtsInstanceID")]
            [Validation(Required=false)]
            public string DtsInstanceID { get; set; }

            /// <summary>
            /// <para>The instance class.</para>
            /// <remarks>
            /// <para> For more information about the test performance of each instance class, see <a href="https://help.aliyun.com/document_detail/26605.html">Specifications of data synchronization instances</a>.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>large</para>
            /// </summary>
            [NameInMap("DtsJobClass")]
            [Validation(Required=false)]
            public string DtsJobClass { get; set; }

            /// <summary>
            /// <para>The synchronization direction. The value is <b>Reverse</b>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>Forward</para>
            /// </summary>
            [NameInMap("DtsJobDirection")]
            [Validation(Required=false)]
            public string DtsJobDirection { get; set; }

            /// <summary>
            /// <para>The ID of the data synchronization task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>i03e3zty16i****</para>
            /// </summary>
            [NameInMap("DtsJobId")]
            [Validation(Required=false)]
            public string DtsJobId { get; set; }

            /// <summary>
            /// <para>The name of the data synchronization task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>RDS_TO_RDS_MIGRATION</para>
            /// </summary>
            [NameInMap("DtsJobName")]
            [Validation(Required=false)]
            public string DtsJobName { get; set; }

            /// <summary>
            /// <para>The DTS Units (DUs) usage of a task in a DTS dedicated cluster.</para>
            /// 
            /// <b>Example:</b>
            /// <para>12.0%</para>
            /// </summary>
            [NameInMap("DuRealUsage")]
            [Validation(Required=false)]
            public string DuRealUsage { get; set; }

            /// <summary>
            /// <para>The number of DUs that have been used.</para>
            /// 
            /// <b>Example:</b>
            /// <para>15</para>
            /// </summary>
            [NameInMap("DuUsage")]
            [Validation(Required=false)]
            public long? DuUsage { get; set; }

            /// <summary>
            /// <para>The end of the time range for change tracking. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-26T14:03:21Z</para>
            /// </summary>
            [NameInMap("EndTimestamp")]
            [Validation(Required=false)]
            public string EndTimestamp { get; set; }

            /// <summary>
            /// <para>The error message returned.</para>
            /// </summary>
            [NameInMap("ErrorDetails")]
            [Validation(Required=false)]
            public List<DescribeDtsJobsResponseBodyDtsJobListErrorDetails> ErrorDetails { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListErrorDetails : TeaModel {
                /// <summary>
                /// <para>The error code returned.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-31009</para>
                /// </summary>
                [NameInMap("ErrorCode")]
                [Validation(Required=false)]
                public string ErrorCode { get; set; }

                /// <summary>
                /// <para>The URL of the documentation.</para>
                /// 
                /// <b>Example:</b>
                /// <para>https://<b>.ali</b>.com/**</para>
                /// </summary>
                [NameInMap("HelpUrl")]
                [Validation(Required=false)]
                public string HelpUrl { get; set; }

            }

            /// <summary>
            /// <para>The error message returned if the task failed.</para>
            /// 
            /// <b>Example:</b>
            /// <para>DTS-070211: Connect Source DB failed. cause by [com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException:Could not create connection to database server. Attempted reconnect 3 times. Giving up.][com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.][java.net.ConnectException:Connection timed out (Connection timed out)] About more information in [<a href="https://yq.aliyun.com/articles/499178%5D">https://yq.aliyun.com/articles/499178]</a>.</para>
            /// </summary>
            [NameInMap("ErrorMessage")]
            [Validation(Required=false)]
            public string ErrorMessage { get; set; }

            /// <summary>
            /// <para>The checkpoint of the ETL task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1610540493</para>
            /// </summary>
            [NameInMap("EtlSafeCheckpoint")]
            [Validation(Required=false)]
            public string EtlSafeCheckpoint { get; set; }

            /// <summary>
            /// <para>The point in time when the instance expires. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// <remarks>
            /// <para> This parameter is returned only if the value of the <b>PayType</b> parameter is <b>PrePaid</b>.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>2022-03-16T08:01:19Z</para>
            /// </summary>
            [NameInMap("ExpireTime")]
            [Validation(Required=false)]
            public string ExpireTime { get; set; }

            /// <summary>
            /// <para>The state information about the full data verification task.</para>
            /// </summary>
            [NameInMap("FullDataCheckStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListFullDataCheckStatus FullDataCheckStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListFullDataCheckStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of the full data verification task. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The progress of the full data verification task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1 rows/s (row: 5/5, table: 1/1)</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of the full data verification task. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The verification is not started. </description></item>
                /// <item><description><b>Checking</b>: The verification is in progress. </description></item>
                /// <item><description><b>Failed</b>: The verification failed. </description></item>
                /// <item><description><b>Finished</b>: The verification is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Checking</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state information about the incremental data verification task.</para>
            /// </summary>
            [NameInMap("IncDataCheckStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListIncDataCheckStatus IncDataCheckStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListIncDataCheckStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of the incremental data verification task. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>95</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The progress of the incremental data verification task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1 rows/s (row: 5/5, table: 1/1)</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of the incremental data verification task. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>Catched</b>: The verification is delayed. </description></item>
                /// <item><description><b>NotStarted</b>: The verification is not started. </description></item>
                /// <item><description><b>Checking</b>: The verification is in progress. </description></item>
                /// <item><description><b>Failed</b>: The verification failed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Checking</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The type of the DTS task. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>MIGRATION</b>: data migration task </description></item>
            /// <item><description><b>SYNC</b>: data synchronization task </description></item>
            /// <item><description><b>SUBSCRIBE</b>: change tracking task</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>MIGRATION</para>
            /// </summary>
            [NameInMap("JobType")]
            [Validation(Required=false)]
            public string JobType { get; set; }

            /// <summary>
            /// <para>Upper limit of DU.</para>
            /// <remarks>
            /// <para>Only supported by Serverless instances.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>16</para>
            /// </summary>
            [NameInMap("MaxDu")]
            [Validation(Required=false)]
            public double? MaxDu { get; set; }

            /// <summary>
            /// <para>The memory that has been used. Unit: MB.</para>
            /// 
            /// <b>Example:</b>
            /// <para>500</para>
            /// </summary>
            [NameInMap("MemUsage")]
            [Validation(Required=false)]
            public string MemUsage { get; set; }

            /// <summary>
            /// <para>The error code.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dts.retry.err.0046</para>
            /// </summary>
            [NameInMap("MigrationErrCode")]
            [Validation(Required=false)]
            public string MigrationErrCode { get; set; }

            /// <summary>
            /// <para>The ID of the error code-related documentation.</para>
            /// 
            /// <b>Example:</b>
            /// <para>462133</para>
            /// </summary>
            [NameInMap("MigrationErrHelpDocId")]
            [Validation(Required=false)]
            public string MigrationErrHelpDocId { get; set; }

            /// <summary>
            /// <para>The key of the error code-related documentation.</para>
            /// 
            /// <b>Example:</b>
            /// <para>DTS-RETRY-ERR-0046</para>
            /// </summary>
            [NameInMap("MigrationErrHelpDocKey")]
            [Validation(Required=false)]
            public string MigrationErrHelpDocKey { get; set; }

            /// <summary>
            /// <para>The error message.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dts.retry.err.0046.msg</para>
            /// </summary>
            [NameInMap("MigrationErrMsg")]
            [Validation(Required=false)]
            public string MigrationErrMsg { get; set; }

            /// <summary>
            /// <para>The type of the error code.</para>
            /// 
            /// <b>Example:</b>
            /// <para>ForeignKey</para>
            /// </summary>
            [NameInMap("MigrationErrType")]
            [Validation(Required=false)]
            public string MigrationErrType { get; set; }

            /// <summary>
            /// <para>The solution to the error.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dts.retry.err.0046.workaround</para>
            /// </summary>
            [NameInMap("MigrationErrWorkaround")]
            [Validation(Required=false)]
            public string MigrationErrWorkaround { get; set; }

            /// <summary>
            /// <para>The migration or synchronization modes.</para>
            /// </summary>
            [NameInMap("MigrationMode")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListMigrationMode MigrationMode { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListMigrationMode : TeaModel {
                /// <summary>
                /// <para>Indicates whether full data migration or synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("DataInitialization")]
                [Validation(Required=false)]
                public bool? DataInitialization { get; set; }

                /// <summary>
                /// <para>Indicates whether incremental data migration or synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("DataSynchronization")]
                [Validation(Required=false)]
                public bool? DataSynchronization { get; set; }

                /// <summary>
                /// <para>Indicates whether full data verification is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("FullDataCheck")]
                [Validation(Required=false)]
                public bool? FullDataCheck { get; set; }

                /// <summary>
                /// <para>Indicates whether incremental data verification is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("IncDataCheck")]
                [Validation(Required=false)]
                public bool? IncDataCheck { get; set; }

                /// <summary>
                /// <para>Indicates whether schema migration or schema synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b>: yes</description></item>
                /// <item><description><b>false</b>: no</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("StructureInitialization")]
                [Validation(Required=false)]
                public bool? StructureInitialization { get; set; }

            }

            /// <summary>
            /// <para>Lower limit of DU.</para>
            /// <remarks>
            /// <para>Only supported by Serverless instances.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("MinDu")]
            [Validation(Required=false)]
            public double? MinDu { get; set; }

            /// <summary>
            /// <para>The source of the task. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>PTS</b></description></item>
            /// <item><description><b>DMS</b></description></item>
            /// <item><description><b>DTS</b></description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>DTS</para>
            /// </summary>
            [NameInMap("OriginType")]
            [Validation(Required=false)]
            public string OriginType { get; set; }

            /// <summary>
            /// <para>The billing method of the DTS instance. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>PrePaid</b>: subscription</description></item>
            /// <item><description><b>PostPaid</b>: pay-as-you-go</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>PrePaid</para>
            /// </summary>
            [NameInMap("PayType")]
            [Validation(Required=false)]
            public string PayType { get; set; }

            /// <summary>
            /// <para>The performance of the data migration or synchronization instance.</para>
            /// </summary>
            [NameInMap("Performance")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListPerformance Performance { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListPerformance : TeaModel {
                /// <summary>
                /// <para>The size of data that is migrated or synchronized per second. Unit: MB/s.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Flow")]
                [Validation(Required=false)]
                public string Flow { get; set; }

                /// <summary>
                /// <para>The number of times that SQL statements are migrated or synchronized per second, including BEGIN, COMMIT, DML, and DDL statements. DML statements include INSERT, DELETE, and UPDATE.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Rps")]
                [Validation(Required=false)]
                public string Rps { get; set; }

            }

            /// <summary>
            /// <para>The precheck state.</para>
            /// </summary>
            [NameInMap("PrecheckStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListPrecheckStatus PrecheckStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListPrecheckStatus : TeaModel {
                /// <summary>
                /// <para>The result of each precheck item.</para>
                /// </summary>
                [NameInMap("Detail")]
                [Validation(Required=false)]
                public List<DescribeDtsJobsResponseBodyDtsJobListPrecheckStatusDetail> Detail { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListPrecheckStatusDetail : TeaModel {
                    /// <summary>
                    /// <para>The name of the precheck item.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_CONN_SRC</para>
                    /// </summary>
                    [NameInMap("CheckItem")]
                    [Validation(Required=false)]
                    public string CheckItem { get; set; }

                    /// <summary>
                    /// <para>The description of the precheck item.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_CONN_SRC_DETAIL</para>
                    /// </summary>
                    [NameInMap("CheckItemDescription")]
                    [Validation(Required=false)]
                    public string CheckItemDescription { get; set; }

                    /// <summary>
                    /// <para>The precheck result. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>Success</b></description></item>
                    /// <item><description><b>Failed</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Success</para>
                    /// </summary>
                    [NameInMap("CheckResult")]
                    [Validation(Required=false)]
                    public string CheckResult { get; set; }

                    /// <summary>
                    /// <para>The error message returned if the task failed to pass the precheck.</para>
                    /// <remarks>
                    /// <para> This parameter is returned only if the value of the <b>CheckResult</b> parameter is <b>Failed</b>.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Original error: Access denied for user \&quot;dtstest\&quot;@\&quot;100.104.***.**\&quot; (using password: YES)</para>
                    /// </summary>
                    [NameInMap("FailedReason")]
                    [Validation(Required=false)]
                    public string FailedReason { get; set; }

                    /// <summary>
                    /// <para>The method to fix the precheck failure.</para>
                    /// <remarks>
                    /// <para> This parameter is returned only if the value of the <b>CheckResult</b> parameter is <b>Failed</b>.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_ERROR_DEST_CONN_REPAIR2</para>
                    /// </summary>
                    [NameInMap("RepairMethod")]
                    [Validation(Required=false)]
                    public string RepairMethod { get; set; }

                }

                /// <summary>
                /// <para>The cause of the precheck failure.</para>
                /// 
                /// <b>Example:</b>
                /// <para>CHECK__ERROR_SAME_OBJ.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The precheck progress. This is expressed as a percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The precheck status. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b></description></item>
                /// <item><description><b>Suspending</b>:</description></item>
                /// <item><description><b>Checking</b></description></item>
                /// <item><description><b>Failed</b></description></item>
                /// <item><description><b>Finished</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The reserved parameter of DTS. The value is a JSON string. You can specify this parameter to meet specific requirements, for example, whether to automatically start a precheck. For more information, see <a href="https://help.aliyun.com/document_detail/176470.html">MigrationReserved</a>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>{\&quot;srcHostPorts\&quot;:\&quot;\&quot;,\&quot;whitelist.dms.online.ddl.enable\&quot;:false,\&quot;filterDDL\&quot;:false,\&quot;sqlparser.dms.original.ddl\&quot;:true,\&quot;srcOracleType\&quot;:\&quot;sid\&quot;,\&quot;maxRetryTime\&quot;:43200,\&quot;destSSL\&quot;:\&quot;0\&quot;,\&quot;destOracleType\&quot;:\&quot;sid\&quot;,\&quot;srcSSL\&quot;:\&quot;0\&quot;,\&quot;dbListCaseChangeMode\&quot;:\&quot;default\&quot;,\&quot;SourceEngineVersion\&quot;:\&quot;8.0.18\&quot;,\&quot;srcNetType\&quot;:\&quot;VPC\&quot;,\&quot;destNetType\&quot;:\&quot;VPC\&quot;,\&quot;srcVpcNetMappingInst\&quot;:\&quot;172.16.1**.<b>:10803\&quot;,\&quot;destVpcNetMappingInst\&quot;:\&quot;172.16.1</b>.**:11077\&quot;,\&quot;useJobTask\&quot;:\&quot;1\&quot;}</para>
            /// </summary>
            [NameInMap("Reserved")]
            [Validation(Required=false)]
            public string Reserved { get; set; }

            /// <summary>
            /// <para>The name of the resource group.</para>
            /// 
            /// <b>Example:</b>
            /// <para>default resource group</para>
            /// </summary>
            [NameInMap("ResourceGroupDisplayName")]
            [Validation(Required=false)]
            public string ResourceGroupDisplayName { get; set; }

            /// <summary>
            /// <para>The resource group ID.</para>
            /// 
            /// <b>Example:</b>
            /// <para>rg-acfmzawhxxc****</para>
            /// </summary>
            [NameInMap("ResourceGroupId")]
            [Validation(Required=false)]
            public string ResourceGroupId { get; set; }

            /// <summary>
            /// <para>The information about the retries performed by DTS due to an exception.</para>
            /// </summary>
            [NameInMap("RetryState")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListRetryState RetryState { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListRetryState : TeaModel {
                /// <summary>
                /// <para>The error message returned if these retries failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Unexpected error</para>
                /// </summary>
                [NameInMap("ErrMessage")]
                [Validation(Required=false)]
                public string ErrMessage { get; set; }

                /// <summary>
                /// <para>The task ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>bi6e22ay243****</para>
                /// </summary>
                [NameInMap("JobId")]
                [Validation(Required=false)]
                public string JobId { get; set; }

                /// <summary>
                /// <para>The maximum duration of a retry. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>7200</para>
                /// </summary>
                [NameInMap("MaxRetryTime")]
                [Validation(Required=false)]
                public int? MaxRetryTime { get; set; }

                /// <summary>
                /// <para>The error code.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dts.retry.err.0046</para>
                /// </summary>
                [NameInMap("MigrationErrCode")]
                [Validation(Required=false)]
                public string MigrationErrCode { get; set; }

                /// <summary>
                /// <para>The ID of the error code-related documentation.</para>
                /// 
                /// <b>Example:</b>
                /// <para>462133</para>
                /// </summary>
                [NameInMap("MigrationErrHelpDocId")]
                [Validation(Required=false)]
                public string MigrationErrHelpDocId { get; set; }

                /// <summary>
                /// <para>The key of the error code-related documentation.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-RETRY-ERR-0046</para>
                /// </summary>
                [NameInMap("MigrationErrHelpDocKey")]
                [Validation(Required=false)]
                public string MigrationErrHelpDocKey { get; set; }

                /// <summary>
                /// <para>The error message.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dts.retry.err.0046.msg</para>
                /// </summary>
                [NameInMap("MigrationErrMsg")]
                [Validation(Required=false)]
                public string MigrationErrMsg { get; set; }

                /// <summary>
                /// <para>The type of the error code.</para>
                /// 
                /// <b>Example:</b>
                /// <para>ForeignKey</para>
                /// </summary>
                [NameInMap("MigrationErrType")]
                [Validation(Required=false)]
                public string MigrationErrType { get; set; }

                /// <summary>
                /// <para>The solution to the error.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dts.retry.err.0046.workaround</para>
                /// </summary>
                [NameInMap("MigrationErrWorkaround")]
                [Validation(Required=false)]
                public string MigrationErrWorkaround { get; set; }

                /// <summary>
                /// <para>The progress of the instance when DTS retries.</para>
                /// 
                /// <b>Example:</b>
                /// <para>03</para>
                /// </summary>
                [NameInMap("Module")]
                [Validation(Required=false)]
                public string Module { get; set; }

                /// <summary>
                /// <para>The number of retries that have been performed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>5</para>
                /// </summary>
                [NameInMap("RetryCount")]
                [Validation(Required=false)]
                public int? RetryCount { get; set; }

                /// <summary>
                /// <para>The object on which these retries are performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>srcDB</b>: the source database </description></item>
                /// <item><description><b>destDB</b>: the destination database </description></item>
                /// <item><description><b>inner_module</b>: an internal module of DTS</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>srcDB</para>
                /// </summary>
                [NameInMap("RetryTarget")]
                [Validation(Required=false)]
                public string RetryTarget { get; set; }

                /// <summary>
                /// <para>The time that has elapsed from the time when the first retry starts. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3600</para>
                /// </summary>
                [NameInMap("RetryTime")]
                [Validation(Required=false)]
                public int? RetryTime { get; set; }

                /// <summary>
                /// <para>Indicates whether the task is being retried. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>false</para>
                /// </summary>
                [NameInMap("Retrying")]
                [Validation(Required=false)]
                public bool? Retrying { get; set; }

            }

            /// <summary>
            /// <para>The details of the data synchronization task in the reverse direction. </para>
            /// <remarks>
            /// <para>This parameter is returned only for two-way data synchronization tasks.</para>
            /// </remarks>
            /// </summary>
            [NameInMap("ReverseJob")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListReverseJob ReverseJob { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListReverseJob : TeaModel {
                /// <summary>
                /// <para>The start offset of incremental data synchronization. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1616980369</para>
                /// </summary>
                [NameInMap("Checkpoint")]
                [Validation(Required=false)]
                public string Checkpoint { get; set; }

                /// <summary>
                /// <para>The CPU utilization of the instance. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>90</para>
                /// </summary>
                [NameInMap("CpuUsage")]
                [Validation(Required=false)]
                public string CpuUsage { get; set; }

                /// <summary>
                /// <para>The time when the task was created. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
                /// 
                /// <b>Example:</b>
                /// <para>2022-03-16T08:01:19Z</para>
                /// </summary>
                [NameInMap("CreateTime")]
                [Validation(Required=false)]
                public string CreateTime { get; set; }

                /// <summary>
                /// <para>The state of initial full data synchronization.</para>
                /// </summary>
                [NameInMap("DataInitializationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobDataInitializationStatus DataInitializationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobDataInitializationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if initial full data synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of initial full data synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of entries that have been synchronized during initial full data synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>43071</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of initial full data synchronization. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                    /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The task failed. </description></item>
                    /// <item><description><b>Finished</b>: The task is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The state of incremental data synchronization.</para>
                /// </summary>
                [NameInMap("DataSynchronizationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobDataSynchronizationStatus DataSynchronizationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobDataSynchronizationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if incremental data synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>The task has failed for a long time and cannot be recovered.</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>Indicates whether the instance needs to be upgraded. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// <remarks>
                    /// <para>To upgrade a DTS instance, call the <a href="https://help.aliyun.com/document_detail/281093.html">TransferInstanceClass</a> operation.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("NeedUpgrade")]
                    [Validation(Required=false)]
                    public bool? NeedUpgrade { get; set; }

                    /// <summary>
                    /// <para>The progress of incremental data synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of entries that have been migrated or synchronized during incremental data migration or synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>20001</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of incremental data synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Migrating</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The schema of the objects that you want to synchronize. The value is a JSON string and can contain regular expressions. For more information, see Objects of DTS tasks.</para>
                /// 
                /// <b>Example:</b>
                /// <para>{&quot;dtstestdata&quot;: { &quot;name&quot;: &quot;dtstestdata&quot;, &quot;all&quot;: true }}</para>
                /// </summary>
                [NameInMap("DbObject")]
                [Validation(Required=false)]
                public string DbObject { get; set; }

                /// <summary>
                /// <para>The ID of the DTS dedicated cluster on which a DTS task runs.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtscluster_dpwl3**********</para>
                /// </summary>
                [NameInMap("DedicatedClusterId")]
                [Validation(Required=false)]
                public string DedicatedClusterId { get; set; }

                /// <summary>
                /// <para>The latency of incremental data synchronization. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("Delay")]
                [Validation(Required=false)]
                public long? Delay { get; set; }

                /// <summary>
                /// <para>The connection settings of the destination instance.</para>
                /// </summary>
                [NameInMap("DestinationEndpoint")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobDestinationEndpoint DestinationEndpoint { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobDestinationEndpoint : TeaModel {
                    /// <summary>
                    /// <para>The name of the database that contains the synchronized objects in the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstestdata</para>
                    /// </summary>
                    [NameInMap("DatabaseName")]
                    [Validation(Required=false)]
                    public string DatabaseName { get; set; }

                    /// <summary>
                    /// <para>The database engine of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>MySQL</para>
                    /// </summary>
                    [NameInMap("EngineName")]
                    [Validation(Required=false)]
                    public string EngineName { get; set; }

                    /// <summary>
                    /// <para>The ID of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>rm-bp1162kryivb8****</para>
                    /// </summary>
                    [NameInMap("InstanceID")]
                    [Validation(Required=false)]
                    public string InstanceID { get; set; }

                    /// <summary>
                    /// <para>The type of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>RDS</para>
                    /// </summary>
                    [NameInMap("InstanceType")]
                    [Validation(Required=false)]
                    public string InstanceType { get; set; }

                    /// <summary>
                    /// <para>The endpoint of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>172.16.88.***</para>
                    /// </summary>
                    [NameInMap("Ip")]
                    [Validation(Required=false)]
                    public string Ip { get; set; }

                    /// <summary>
                    /// <para>The SID of the Oracle database. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the destination instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>testsid</para>
                    /// </summary>
                    [NameInMap("OracleSID")]
                    [Validation(Required=false)]
                    public string OracleSID { get; set; }

                    /// <summary>
                    /// <para>The port number of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>3306</para>
                    /// </summary>
                    [NameInMap("Port")]
                    [Validation(Required=false)]
                    public string Port { get; set; }

                    /// <summary>
                    /// <para>The ID of the region in which the destination instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">List of supported regions</a>.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>cn-hangzhou</para>
                    /// </summary>
                    [NameInMap("Region")]
                    [Validation(Required=false)]
                    public string Region { get; set; }

                    /// <summary>
                    /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                    /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DISABLE</para>
                    /// </summary>
                    [NameInMap("SslSolutionEnum")]
                    [Validation(Required=false)]
                    public string SslSolutionEnum { get; set; }

                    /// <summary>
                    /// <para>The database account of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstest</para>
                    /// </summary>
                    [NameInMap("UserName")]
                    [Validation(Required=false)]
                    public string UserName { get; set; }

                }

                /// <summary>
                /// <para>The ID of the data synchronization instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtsi03e3zty16i****</para>
                /// </summary>
                [NameInMap("DtsInstanceID")]
                [Validation(Required=false)]
                public string DtsInstanceID { get; set; }

                /// <summary>
                /// <para>The instance class. </para>
                /// <remarks>
                /// <para>For more information about the test performance of each instance class, see <a href="https://help.aliyun.com/document_detail/26605.html">Specifications of data synchronization instances</a>.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>large</para>
                /// </summary>
                [NameInMap("DtsJobClass")]
                [Validation(Required=false)]
                public string DtsJobClass { get; set; }

                /// <summary>
                /// <para>The synchronization direction. <b>Reverse</b> is returned.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Reverse</para>
                /// </summary>
                [NameInMap("DtsJobDirection")]
                [Validation(Required=false)]
                public string DtsJobDirection { get; set; }

                /// <summary>
                /// <para>The ID of the synchronization task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>i03e3zty16i****</para>
                /// </summary>
                [NameInMap("DtsJobId")]
                [Validation(Required=false)]
                public string DtsJobId { get; set; }

                /// <summary>
                /// <para>The name of the data synchronization task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS_TO_RDS_MIGRATION</para>
                /// </summary>
                [NameInMap("DtsJobName")]
                [Validation(Required=false)]
                public string DtsJobName { get; set; }

                /// <summary>
                /// <para>The number of DUs that have been used.</para>
                /// 
                /// <b>Example:</b>
                /// <para>15</para>
                /// </summary>
                [NameInMap("DuUsage")]
                [Validation(Required=false)]
                public long? DuUsage { get; set; }

                /// <summary>
                /// <para>The error message returned.</para>
                /// </summary>
                [NameInMap("ErrorDetails")]
                [Validation(Required=false)]
                public List<DescribeDtsJobsResponseBodyDtsJobListReverseJobErrorDetails> ErrorDetails { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobErrorDetails : TeaModel {
                    /// <summary>
                    /// <para>The error code returned.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DTS-31009</para>
                    /// </summary>
                    [NameInMap("ErrorCode")]
                    [Validation(Required=false)]
                    public string ErrorCode { get; set; }

                    /// <summary>
                    /// <para>The URL of the documentation.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>https://<b>.ali</b>.com/**</para>
                    /// </summary>
                    [NameInMap("HelpUrl")]
                    [Validation(Required=false)]
                    public string HelpUrl { get; set; }

                }

                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-070211: Connect Source DB failed. cause by [com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException:Could not create connection to database server. Attempted reconnect 3 times. Giving up.][com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.][java.net.ConnectException:Connection timed out (Connection timed out)] About more information in [<a href="https://yq.aliyun.com/articles/499178%5D">https://yq.aliyun.com/articles/499178]</a>.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The checkpoint of the ETL task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1610540493</para>
                /// </summary>
                [NameInMap("EtlSafeCheckpoint")]
                [Validation(Required=false)]
                public string EtlSafeCheckpoint { get; set; }

                /// <summary>
                /// <para>The time when the instance expires. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC. </para>
                /// <remarks>
                /// <para>This parameter is returned only if the returned value of <b>PayType</b> is <b>PrePaid</b>.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>2023-03-16T08:01:19Z</para>
                /// </summary>
                [NameInMap("ExpireTime")]
                [Validation(Required=false)]
                public string ExpireTime { get; set; }

                /// <summary>
                /// <para>The state information about the full data verification task.</para>
                /// </summary>
                [NameInMap("FullDataCheckStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobFullDataCheckStatus FullDataCheckStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobFullDataCheckStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if the task failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of the full data verification task. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The progress of the full data verification task.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1 rows/s (row: 5/5, table: 1/1)</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of the full data verification task. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The verification is not started. </description></item>
                    /// <item><description><b>Checking</b>: The verification is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The verification failed. </description></item>
                    /// <item><description><b>Finished</b>: The verification is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Checking</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The state information about the incremental data verification task.</para>
                /// </summary>
                [NameInMap("IncDataCheckStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobIncDataCheckStatus IncDataCheckStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobIncDataCheckStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if the task failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of the incremental data verification task. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>95</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The progress of the incremental data verification task.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1 rows/s (row: 5/5, table: 1/1)</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of the incremental data verification task. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>Catched</b>: The verification is delayed. </description></item>
                    /// <item><description><b>NotStarted</b>: The verification is not started. </description></item>
                    /// <item><description><b>Checking</b>: The verification is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The verification failed.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Checking</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>Upper limit of DU.</para>
                /// <remarks>
                /// <para>Only supported by Serverless instances.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>16</para>
                /// </summary>
                [NameInMap("MaxDu")]
                [Validation(Required=false)]
                public double? MaxDu { get; set; }

                /// <summary>
                /// <para>The memory that has been used. Unit: MB.</para>
                /// 
                /// <b>Example:</b>
                /// <para>500</para>
                /// </summary>
                [NameInMap("MemUsage")]
                [Validation(Required=false)]
                public string MemUsage { get; set; }

                /// <summary>
                /// <para>The initial synchronization types.</para>
                /// </summary>
                [NameInMap("MigrationMode")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobMigrationMode MigrationMode { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobMigrationMode : TeaModel {
                    /// <summary>
                    /// <para>Indicates whether initial full data synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("DataInitialization")]
                    [Validation(Required=false)]
                    public bool? DataInitialization { get; set; }

                    /// <summary>
                    /// <para>Indicates whether incremental data synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("DataSynchronization")]
                    [Validation(Required=false)]
                    public bool? DataSynchronization { get; set; }

                    /// <summary>
                    /// <para>Indicates whether full data verification is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b>: yes</description></item>
                    /// <item><description><b>false</b>: no</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("FullDataCheck")]
                    [Validation(Required=false)]
                    public bool? FullDataCheck { get; set; }

                    /// <summary>
                    /// <para>Indicates whether incremental data verification is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b>: yes</description></item>
                    /// <item><description><b>false</b>: no</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("IncDataCheck")]
                    [Validation(Required=false)]
                    public bool? IncDataCheck { get; set; }

                    /// <summary>
                    /// <para>Indicates whether initial schema synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("StructureInitialization")]
                    [Validation(Required=false)]
                    public bool? StructureInitialization { get; set; }

                }

                /// <summary>
                /// <para>Lower limit of DU.</para>
                /// <remarks>
                /// <para>Only supported by Serverless instances.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("MinDu")]
                [Validation(Required=false)]
                public double? MinDu { get; set; }

                /// <summary>
                /// <para>The billing method of the DTS instance. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>PrePaid</b>: subscription</description></item>
                /// <item><description><b>PostPaid</b>: pay-as-you-go</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>PostPaid</para>
                /// </summary>
                [NameInMap("PayType")]
                [Validation(Required=false)]
                public string PayType { get; set; }

                /// <summary>
                /// <para>The performance of the data synchronization instance.</para>
                /// </summary>
                [NameInMap("Performance")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobPerformance Performance { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobPerformance : TeaModel {
                    /// <summary>
                    /// <para>The size of data that is synchronized per second. Unit: MB/s.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1</para>
                    /// </summary>
                    [NameInMap("Flow")]
                    [Validation(Required=false)]
                    public string Flow { get; set; }

                    /// <summary>
                    /// <para>The number of times that SQL statements are synchronized per second, including BEGIN, COMMIT, DML, and DDL statements. DML statements include INSERT, DELETE, and UPDATE.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Rps")]
                    [Validation(Required=false)]
                    public string Rps { get; set; }

                }

                /// <summary>
                /// <para>The precheck state.</para>
                /// </summary>
                [NameInMap("PrecheckStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobPrecheckStatus PrecheckStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobPrecheckStatus : TeaModel {
                    /// <summary>
                    /// <para>The result of each precheck item.</para>
                    /// </summary>
                    [NameInMap("Detail")]
                    [Validation(Required=false)]
                    public List<DescribeDtsJobsResponseBodyDtsJobListReverseJobPrecheckStatusDetail> Detail { get; set; }
                    public class DescribeDtsJobsResponseBodyDtsJobListReverseJobPrecheckStatusDetail : TeaModel {
                        /// <summary>
                        /// <para>The name of the precheck item.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_CONN_SRC</para>
                        /// </summary>
                        [NameInMap("CheckItem")]
                        [Validation(Required=false)]
                        public string CheckItem { get; set; }

                        /// <summary>
                        /// <para>The description of the precheck item.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_CONN_SRC_DETAIL</para>
                        /// </summary>
                        [NameInMap("CheckItemDescription")]
                        [Validation(Required=false)]
                        public string CheckItemDescription { get; set; }

                        /// <summary>
                        /// <para>The precheck result. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description><b>Success</b></description></item>
                        /// <item><description><b>Failed</b></description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>Success</para>
                        /// </summary>
                        [NameInMap("CheckResult")]
                        [Validation(Required=false)]
                        public string CheckResult { get; set; }

                        /// <summary>
                        /// <para>The error message returned if the task failed to pass the precheck.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>Original error: Access denied for user \&quot;dtstest\&quot;@\&quot;100.104.***.**\&quot; (using password: YES)</para>
                        /// </summary>
                        [NameInMap("FailedReason")]
                        [Validation(Required=false)]
                        public string FailedReason { get; set; }

                        /// <summary>
                        /// <para>The method to fix a precheck failure.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_ERROR_DEST_CONN_REPAIR2</para>
                        /// </summary>
                        [NameInMap("RepairMethod")]
                        [Validation(Required=false)]
                        public string RepairMethod { get; set; }

                    }

                    /// <summary>
                    /// <para>The error message returned if the precheck failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK__ERROR_SAME_OBJ.</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The precheck progress. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The precheck state. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The precheck is not started. </description></item>
                    /// <item><description><b>Suspending</b>: The precheck is paused. </description></item>
                    /// <item><description><b>Checking</b>: The precheck is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The precheck failed. </description></item>
                    /// <item><description><b>Finished</b>: The precheck is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The reserved parameter of DTS. The value is a JSON string. You can specify this parameter to meet specific requirements, for example, whether to automatically start a precheck. For more information, see <a href="https://help.aliyun.com/document_detail/176470.html">MigrationReserved</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>{\&quot;srcHostPorts\&quot;:\&quot;\&quot;,\&quot;whitelist.dms.online.ddl.enable\&quot;:false,\&quot;filterDDL\&quot;:false,\&quot;sqlparser.dms.original.ddl\&quot;:true,\&quot;srcOracleType\&quot;:\&quot;sid\&quot;,\&quot;maxRetryTime\&quot;:43200,\&quot;destSSL\&quot;:\&quot;0\&quot;,\&quot;destOracleType\&quot;:\&quot;sid\&quot;,\&quot;srcSSL\&quot;:\&quot;0\&quot;,\&quot;dbListCaseChangeMode\&quot;:\&quot;default\&quot;,\&quot;SourceEngineVersion\&quot;:\&quot;8.0.18\&quot;,\&quot;srcNetType\&quot;:\&quot;VPC\&quot;,\&quot;destNetType\&quot;:\&quot;VPC\&quot;,\&quot;srcVpcNetMappingInst\&quot;:\&quot;172.16.1**.<b>:10803\&quot;,\&quot;destVpcNetMappingInst\&quot;:\&quot;172.16.1</b>.**:11077\&quot;,\&quot;useJobTask\&quot;:\&quot;1\&quot;}</para>
                /// </summary>
                [NameInMap("Reserved")]
                [Validation(Required=false)]
                public string Reserved { get; set; }

                /// <summary>
                /// <para>The connection settings of the source instance.</para>
                /// </summary>
                [NameInMap("SourceEndpoint")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobSourceEndpoint SourceEndpoint { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobSourceEndpoint : TeaModel {
                    /// <summary>
                    /// <para>The name of the database that contains the objects to be migrated from the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstestdata</para>
                    /// </summary>
                    [NameInMap("DatabaseName")]
                    [Validation(Required=false)]
                    public string DatabaseName { get; set; }

                    /// <summary>
                    /// <para>The database engine of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>MySQL</para>
                    /// </summary>
                    [NameInMap("EngineName")]
                    [Validation(Required=false)]
                    public string EngineName { get; set; }

                    /// <summary>
                    /// <para>The ID of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>rm-bp1imrtn6fq7h****</para>
                    /// </summary>
                    [NameInMap("InstanceID")]
                    [Validation(Required=false)]
                    public string InstanceID { get; set; }

                    /// <summary>
                    /// <para>The type of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>RDS</para>
                    /// </summary>
                    [NameInMap("InstanceType")]
                    [Validation(Required=false)]
                    public string InstanceType { get; set; }

                    /// <summary>
                    /// <para>The endpoint of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>172.16.88.***</para>
                    /// </summary>
                    [NameInMap("Ip")]
                    [Validation(Required=false)]
                    public string Ip { get; set; }

                    /// <summary>
                    /// <para>The SID of the Oracle database. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the source instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>testsid</para>
                    /// </summary>
                    [NameInMap("OracleSID")]
                    [Validation(Required=false)]
                    public string OracleSID { get; set; }

                    /// <summary>
                    /// <para>The port number of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>3306</para>
                    /// </summary>
                    [NameInMap("Port")]
                    [Validation(Required=false)]
                    public string Port { get; set; }

                    /// <summary>
                    /// <para>The ID of the region in which the source instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>cn-hangzhou</para>
                    /// </summary>
                    [NameInMap("Region")]
                    [Validation(Required=false)]
                    public string Region { get; set; }

                    /// <summary>
                    /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                    /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DISABLE</para>
                    /// </summary>
                    [NameInMap("SslSolutionEnum")]
                    [Validation(Required=false)]
                    public string SslSolutionEnum { get; set; }

                    /// <summary>
                    /// <para>The database account of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstest</para>
                    /// </summary>
                    [NameInMap("UserName")]
                    [Validation(Required=false)]
                    public string UserName { get; set; }

                }

                /// <summary>
                /// <para>The state of the DTS instance. For more information about the valid values, see the description of the request parameter <b>Status</b>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Synchronizing</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

                /// <summary>
                /// <para>The state of initial schema synchronization.</para>
                /// </summary>
                [NameInMap("StructureInitializationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyDtsJobListReverseJobStructureInitializationStatus StructureInitializationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyDtsJobListReverseJobStructureInitializationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if initial schema synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DTS-1020042 Execute sql error sql: ERROR: type &quot;geometry&quot; does not exist;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of initial schema synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of tables that have been synchronized during initial schema synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of initial schema synchronization. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                    /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The task failed. </description></item>
                    /// <item><description><b>Finished</b>: The task is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

            }

            /// <summary>
            /// <para>The connection settings of the source instance.</para>
            /// </summary>
            [NameInMap("SourceEndpoint")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListSourceEndpoint SourceEndpoint { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListSourceEndpoint : TeaModel {
                /// <summary>
                /// <para>The name of the database that contains the objects to be migrated from the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstestdata</para>
                /// </summary>
                [NameInMap("DatabaseName")]
                [Validation(Required=false)]
                public string DatabaseName { get; set; }

                /// <summary>
                /// <para>The database engine of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>MySQL</para>
                /// </summary>
                [NameInMap("EngineName")]
                [Validation(Required=false)]
                public string EngineName { get; set; }

                /// <summary>
                /// <para>The ID of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>rm-bp1162kryivb8****</para>
                /// </summary>
                [NameInMap("InstanceID")]
                [Validation(Required=false)]
                public string InstanceID { get; set; }

                /// <summary>
                /// <para>The type of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS</para>
                /// </summary>
                [NameInMap("InstanceType")]
                [Validation(Required=false)]
                public string InstanceType { get; set; }

                /// <summary>
                /// <para>The endpoint of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>172.16.88.***</para>
                /// </summary>
                [NameInMap("Ip")]
                [Validation(Required=false)]
                public string Ip { get; set; }

                /// <summary>
                /// <para>The SID of the Oracle database. </para>
                /// <remarks>
                /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the source instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>testsid</para>
                /// </summary>
                [NameInMap("OracleSID")]
                [Validation(Required=false)]
                public string OracleSID { get; set; }

                /// <summary>
                /// <para>The port number of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3306</para>
                /// </summary>
                [NameInMap("Port")]
                [Validation(Required=false)]
                public string Port { get; set; }

                /// <summary>
                /// <para>The ID of the region in which the source instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>cn-hangzhou</para>
                /// </summary>
                [NameInMap("Region")]
                [Validation(Required=false)]
                public string Region { get; set; }

                /// <summary>
                /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                /// <item><description><b>ENABLE_WITH_CERTIFICAT</b>E: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>DISABLE</para>
                /// </summary>
                [NameInMap("SslSolutionEnum")]
                [Validation(Required=false)]
                public string SslSolutionEnum { get; set; }

                /// <summary>
                /// <para>The database account of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstest</para>
                /// </summary>
                [NameInMap("UserName")]
                [Validation(Required=false)]
                public string UserName { get; set; }

            }

            /// <summary>
            /// <para>The state of the DTS instance. For more information about the valid values, see the description of the request parameter <b>Status</b>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>Migrating</para>
            /// </summary>
            [NameInMap("Status")]
            [Validation(Required=false)]
            public string Status { get; set; }

            /// <summary>
            /// <para>The state of schema migration or initial schema synchronization.</para>
            /// </summary>
            [NameInMap("StructureInitializationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyDtsJobListStructureInitializationStatus StructureInitializationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListStructureInitializationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if schema migration or initial schema synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-1020042 Execute sql error sql: ERROR: type &quot;geometry&quot; does not exist;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of schema migration or initial schema synchronization. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of tables that have been migrated or synchronized during schema migration or initial schema synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of schema migration or initial schema synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                /// <item><description><b>Failed</b>: The task failed. </description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The tags of the task.</para>
            /// </summary>
            [NameInMap("TagList")]
            [Validation(Required=false)]
            public List<DescribeDtsJobsResponseBodyDtsJobListTagList> TagList { get; set; }
            public class DescribeDtsJobsResponseBodyDtsJobListTagList : TeaModel {
                /// <summary>
                /// <para>The key of the tag.</para>
                /// 
                /// <b>Example:</b>
                /// <para>testkey</para>
                /// </summary>
                [NameInMap("TagKey")]
                [Validation(Required=false)]
                public string TagKey { get; set; }

                /// <summary>
                /// <para>The value of the tag.</para>
                /// 
                /// <b>Example:</b>
                /// <para>testvalue</para>
                /// </summary>
                [NameInMap("TagValue")]
                [Validation(Required=false)]
                public string TagValue { get; set; }

            }

        }

        /// <summary>
        /// <para>The dynamic error code. This parameter will be removed in the future.</para>
        /// 
        /// <b>Example:</b>
        /// <para>403</para>
        /// </summary>
        [NameInMap("DynamicCode")]
        [Validation(Required=false)]
        public string DynamicCode { get; set; }

        /// <summary>
        /// <para>The dynamic part in the error message. The value of this parameter is used to replace the <b>%s</b> variable in the value of the <b>ErrMessage</b> parameter.</para>
        /// <remarks>
        /// <para> For example, if the value of the <b>ErrMessage</b> parameter is <b>The Value of Input Parameter %s is not valid</b> and the value of the <b>DynamicMessage</b> parameter is <b>Type</b>, the specified <b>Type</b> parameter is invalid.</para>
        /// </remarks>
        /// 
        /// <b>Example:</b>
        /// <para>Type</para>
        /// </summary>
        [NameInMap("DynamicMessage")]
        [Validation(Required=false)]
        public string DynamicMessage { get; set; }

        /// <summary>
        /// <para>The error code returned if the call failed.</para>
        /// 
        /// <b>Example:</b>
        /// <para>InternalError</para>
        /// </summary>
        [NameInMap("ErrCode")]
        [Validation(Required=false)]
        public string ErrCode { get; set; }

        /// <summary>
        /// <para>The error message returned if the call failed.</para>
        /// 
        /// <b>Example:</b>
        /// <para>The Value of Input Parameter %s is not valid.</para>
        /// </summary>
        [NameInMap("ErrMessage")]
        [Validation(Required=false)]
        public string ErrMessage { get; set; }

        /// <summary>
        /// <para>The DTS tasks and the details of each task.</para>
        /// </summary>
        [NameInMap("EtlDemoList")]
        [Validation(Required=false)]
        public List<DescribeDtsJobsResponseBodyEtlDemoList> EtlDemoList { get; set; }
        public class DescribeDtsJobsResponseBodyEtlDemoList : TeaModel {
            /// <summary>
            /// <para>Indicates whether the <b>new</b> change tracking feature is used. </para>
            /// <remarks>
            /// <para>This parameter is returned only for change tracking instances of the new version.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>new</para>
            /// </summary>
            [NameInMap("AppName")]
            [Validation(Required=false)]
            public string AppName { get; set; }

            /// <summary>
            /// <para>The start of the time range for change tracking. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-15T08:25:34Z</para>
            /// </summary>
            [NameInMap("BeginTimestamp")]
            [Validation(Required=false)]
            public string BeginTimestamp { get; set; }

            /// <summary>
            /// <para>The start offset of incremental data migration or data synchronization. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1616899019</para>
            /// </summary>
            [NameInMap("Checkpoint")]
            [Validation(Required=false)]
            public string Checkpoint { get; set; }

            /// <summary>
            /// <para>The consumption checkpoint of the change tracking instance. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-23T07:30:31Z</para>
            /// </summary>
            [NameInMap("ConsumptionCheckpoint")]
            [Validation(Required=false)]
            public string ConsumptionCheckpoint { get; set; }

            /// <summary>
            /// <para>The downstream client information in the following format: <IP address of the downstream client>:<Random ID generated by DTS>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>114...:dts******</para>
            /// </summary>
            [NameInMap("ConsumptionClient")]
            [Validation(Required=false)]
            public string ConsumptionClient { get; set; }

            /// <summary>
            /// <para>The time when the task was created. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:s</em>sZ format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-16T08:01:19Z</para>
            /// </summary>
            [NameInMap("CreateTime")]
            [Validation(Required=false)]
            public string CreateTime { get; set; }

            /// <summary>
            /// <para>The state of the ETL task. </para>
            /// <remarks>
            /// <para>This parameter collection is returned only if an ETL task is configured.</para>
            /// </remarks>
            /// </summary>
            [NameInMap("DataEtlStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListDataEtlStatus DataEtlStatus { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListDataEtlStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if the ETL task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>The task has failed for a long time and cannot be recovered.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of the ETL task. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>95</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of entries that have been processed by the ETL task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0/0</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of the ETL task. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                /// <item><description><b>Failed</b>: The task failed. </description></item>
                /// <item><description><b>Finished</b>: The task is complete. </description></item>
                /// <item><description><b>Catched</b>: The task is not delayed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state of full data migration or initial full data synchronization.</para>
            /// </summary>
            [NameInMap("DataInitializationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListDataInitializationStatus DataInitializationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListDataInitializationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if full data migration or initial full data synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of full data migration or initial full data synchronization. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of entries that have been migrated or synchronized during full data migration or initial full data synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>44755</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of full data migration or initial full data synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                /// <item><description><b>Failed</b>: The task failed. </description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The state of incremental data migration or synchronization.</para>
            /// </summary>
            [NameInMap("DataSynchronizationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListDataSynchronizationStatus DataSynchronizationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListDataSynchronizationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if incremental data migration or synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>The task has failed for a long time and cannot be recovered.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>Indicates whether the instance needs to be upgraded. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// <remarks>
                /// <para>To upgrade a DTS instance, call the <a href="https://help.aliyun.com/document_detail/281093.html">TransferInstanceClass</a> operation.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("NeedUpgrade")]
                [Validation(Required=false)]
                public bool? NeedUpgrade { get; set; }

                /// <summary>
                /// <para>The progress of incremental data migration or synchronization. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>95</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of entries that have been migrated or synchronized during incremental data migration or synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0/0</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of incremental data migration or synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                /// <item><description><b>Failed</b>: The task failed. </description></item>
                /// <item><description><b>Finished</b>: The task is complete. </description></item>
                /// <item><description><b>Catched</b>: The task is not delayed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Catched</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The objects of the data migration, data synchronization, or change tracking task. For more information, see <a href="https://help.aliyun.com/document_detail/209545.html">Objects of DTS tasks</a>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>{&quot;dtstestdata&quot;: { &quot;name&quot;: &quot;dtstestdata&quot;, &quot;all&quot;: true }}</para>
            /// </summary>
            [NameInMap("DbObject")]
            [Validation(Required=false)]
            public string DbObject { get; set; }

            /// <summary>
            /// <para>The latency of incremental data migration or synchronization. </para>
            /// <remarks>
            /// <para>If you query data migration tasks, the unit of this parameter is milliseconds. If you query data synchronization tasks, the unit of this parameter is seconds.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>0</para>
            /// </summary>
            [NameInMap("Delay")]
            [Validation(Required=false)]
            public long? Delay { get; set; }

            /// <summary>
            /// <para>The connection settings of the destination instance.</para>
            /// </summary>
            [NameInMap("DestinationEndpoint")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListDestinationEndpoint DestinationEndpoint { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListDestinationEndpoint : TeaModel {
                /// <summary>
                /// <para>The name of the database that contains the migrated objects in the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstestdata</para>
                /// </summary>
                [NameInMap("DatabaseName")]
                [Validation(Required=false)]
                public string DatabaseName { get; set; }

                /// <summary>
                /// <para>The database engine of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>MySQL</para>
                /// </summary>
                [NameInMap("EngineName")]
                [Validation(Required=false)]
                public string EngineName { get; set; }

                /// <summary>
                /// <para>The ID of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>rm-bp1imrtn6fq7h****</para>
                /// </summary>
                [NameInMap("InstanceID")]
                [Validation(Required=false)]
                public string InstanceID { get; set; }

                /// <summary>
                /// <para>The type of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS</para>
                /// </summary>
                [NameInMap("InstanceType")]
                [Validation(Required=false)]
                public string InstanceType { get; set; }

                /// <summary>
                /// <para>The endpoint of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>172.16.88.***</para>
                /// </summary>
                [NameInMap("Ip")]
                [Validation(Required=false)]
                public string Ip { get; set; }

                /// <summary>
                /// <para>The SID of the Oracle database. </para>
                /// <remarks>
                /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the destination instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>testsid</para>
                /// </summary>
                [NameInMap("OracleSID")]
                [Validation(Required=false)]
                public string OracleSID { get; set; }

                /// <summary>
                /// <para>The port number of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3306</para>
                /// </summary>
                [NameInMap("Port")]
                [Validation(Required=false)]
                public string Port { get; set; }

                /// <summary>
                /// <para>The ID of the region in which the destination instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>cn-hangzhou</para>
                /// </summary>
                [NameInMap("Region")]
                [Validation(Required=false)]
                public string Region { get; set; }

                /// <summary>
                /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>DISABLE</para>
                /// </summary>
                [NameInMap("SslSolutionEnum")]
                [Validation(Required=false)]
                public string SslSolutionEnum { get; set; }

                /// <summary>
                /// <para>The database account of the destination instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstest</para>
                /// </summary>
                [NameInMap("UserName")]
                [Validation(Required=false)]
                public string UserName { get; set; }

            }

            /// <summary>
            /// <para>The ID of the data migration, data synchronization, or change tracking instance.</para>
            /// 
            /// <b>Example:</b>
            /// <para>dtsi03e3zty16i****</para>
            /// </summary>
            [NameInMap("DtsInstanceID")]
            [Validation(Required=false)]
            public string DtsInstanceID { get; set; }

            /// <summary>
            /// <para>The instance class. </para>
            /// <remarks>
            /// <para>For more information about the test performance of each instance class, see <a href="https://help.aliyun.com/document_detail/26606.html">Specifications of data migration instances</a> and <a href="https://help.aliyun.com/document_detail/26605.html">Specifications of data synchronization instances</a>.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>large</para>
            /// </summary>
            [NameInMap("DtsJobClass")]
            [Validation(Required=false)]
            public string DtsJobClass { get; set; }

            /// <summary>
            /// <para>The synchronization direction. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>Forward</b></description></item>
            /// <item><description><b>Reverse</b></description></item>
            /// </list>
            /// <remarks>
            /// <para>This parameter is returned only if the topology of the data synchronization instance is two-way synchronization.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>Forward</para>
            /// </summary>
            [NameInMap("DtsJobDirection")]
            [Validation(Required=false)]
            public string DtsJobDirection { get; set; }

            /// <summary>
            /// <para>The ID of the data migration, data synchronization, or change tracking task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>i03e3zty16i****</para>
            /// </summary>
            [NameInMap("DtsJobId")]
            [Validation(Required=false)]
            public string DtsJobId { get; set; }

            /// <summary>
            /// <para>The name of the data migration, data synchronization, or change tracking task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>RDS_TO_RDS_MIGRATION</para>
            /// </summary>
            [NameInMap("DtsJobName")]
            [Validation(Required=false)]
            public string DtsJobName { get; set; }

            /// <summary>
            /// <para>The end of the time range for change tracking. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// 
            /// <b>Example:</b>
            /// <para>2021-03-26T14:03:21Z</para>
            /// </summary>
            [NameInMap("EndTimestamp")]
            [Validation(Required=false)]
            public string EndTimestamp { get; set; }

            /// <summary>
            /// <para>The error message returned if the task failed.</para>
            /// 
            /// <b>Example:</b>
            /// <para>DTS-070211: Connect Source DB failed. cause by [com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException:Could not create connection to database server. Attempted reconnect 3 times. Giving up.][com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.][java.net.ConnectException:Connection timed out (Connection timed out)] About more information in [<a href="https://yq.aliyun.com/articles/499178%5D">https://yq.aliyun.com/articles/499178]</a>.</para>
            /// </summary>
            [NameInMap("ErrorMessage")]
            [Validation(Required=false)]
            public string ErrorMessage { get; set; }

            /// <summary>
            /// <para>The checkpoint of the ETL task.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1610540493</para>
            /// </summary>
            [NameInMap("EtlSafeCheckpoint")]
            [Validation(Required=false)]
            public string EtlSafeCheckpoint { get; set; }

            /// <summary>
            /// <para>The time when the instance expires. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
            /// <remarks>
            /// <para>This parameter is returned only if the returned value of <b>PayType</b> is <b>PrePaid</b>.</para>
            /// </remarks>
            /// 
            /// <b>Example:</b>
            /// <para>2022-03-16T08:01:19Z</para>
            /// </summary>
            [NameInMap("ExpireTime")]
            [Validation(Required=false)]
            public string ExpireTime { get; set; }

            /// <summary>
            /// <para>The type of the DTS task. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>MIGRATION</b>: data migration task </description></item>
            /// <item><description><b>SYNC</b>: data synchronization task </description></item>
            /// <item><description><b>SUBSCRIBE</b>: change tracking task</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>MIGRATION</para>
            /// </summary>
            [NameInMap("JobType")]
            [Validation(Required=false)]
            public string JobType { get; set; }

            /// <summary>
            /// <para>The migration types or initial synchronization types.</para>
            /// </summary>
            [NameInMap("MigrationMode")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListMigrationMode MigrationMode { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListMigrationMode : TeaModel {
                /// <summary>
                /// <para>Indicates whether full data migration or initial full data synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("DataInitialization")]
                [Validation(Required=false)]
                public bool? DataInitialization { get; set; }

                /// <summary>
                /// <para>Indicates whether incremental data migration or synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("DataSynchronization")]
                [Validation(Required=false)]
                public bool? DataSynchronization { get; set; }

                /// <summary>
                /// <para>Indicates whether schema migration or initial schema synchronization is performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>true</para>
                /// </summary>
                [NameInMap("StructureInitialization")]
                [Validation(Required=false)]
                public bool? StructureInitialization { get; set; }

            }

            /// <summary>
            /// <para>The source of the task.</para>
            /// <list type="bullet">
            /// <item><description><b>PTS</b></description></item>
            /// <item><description><b>DMS</b></description></item>
            /// <item><description><b>DTS</b></description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>DTS</para>
            /// </summary>
            [NameInMap("OriginType")]
            [Validation(Required=false)]
            public string OriginType { get; set; }

            /// <summary>
            /// <para>The billing method of the DTS instance. Valid values:</para>
            /// <list type="bullet">
            /// <item><description><b>PrePaid</b>: subscription </description></item>
            /// <item><description><b>PostPaid</b>: pay-as-you-go</description></item>
            /// </list>
            /// 
            /// <b>Example:</b>
            /// <para>PrePaid</para>
            /// </summary>
            [NameInMap("PayType")]
            [Validation(Required=false)]
            public string PayType { get; set; }

            /// <summary>
            /// <para>The performance of the data migration or synchronization instance.</para>
            /// </summary>
            [NameInMap("Performance")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListPerformance Performance { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListPerformance : TeaModel {
                /// <summary>
                /// <para>The size of data that is migrated or synchronized per second. Unit: MB/s.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Flow")]
                [Validation(Required=false)]
                public string Flow { get; set; }

                /// <summary>
                /// <para>The number of times that SQL statements are migrated or synchronized per second, including BEGIN, COMMIT, DML, and DDL statements. DML statements include INSERT, DELETE, and UPDATE.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Rps")]
                [Validation(Required=false)]
                public string Rps { get; set; }

            }

            /// <summary>
            /// <para>The precheck state.</para>
            /// </summary>
            [NameInMap("PrecheckStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListPrecheckStatus PrecheckStatus { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListPrecheckStatus : TeaModel {
                /// <summary>
                /// <para>The result of each precheck item.</para>
                /// </summary>
                [NameInMap("Detail")]
                [Validation(Required=false)]
                public List<DescribeDtsJobsResponseBodyEtlDemoListPrecheckStatusDetail> Detail { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListPrecheckStatusDetail : TeaModel {
                    /// <summary>
                    /// <para>The name of the precheck item.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_CONN_SRC</para>
                    /// </summary>
                    [NameInMap("CheckItem")]
                    [Validation(Required=false)]
                    public string CheckItem { get; set; }

                    /// <summary>
                    /// <para>The description of the precheck item.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_CONN_SRC_DETAIL</para>
                    /// </summary>
                    [NameInMap("CheckItemDescription")]
                    [Validation(Required=false)]
                    public string CheckItemDescription { get; set; }

                    /// <summary>
                    /// <para>The precheck result. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>Success</b></description></item>
                    /// <item><description><b>Failed</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Success</para>
                    /// </summary>
                    [NameInMap("CheckResult")]
                    [Validation(Required=false)]
                    public string CheckResult { get; set; }

                    /// <summary>
                    /// <para>The error message returned if the task failed to pass the precheck. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>CheckResult</b> is <b>Failed</b>.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Original error: Access denied for user \&quot;dtstest\&quot;@\&quot;100.104.***.**\&quot; (using password: YES)</para>
                    /// </summary>
                    [NameInMap("FailedReason")]
                    [Validation(Required=false)]
                    public string FailedReason { get; set; }

                    /// <summary>
                    /// <para>The method to fix a precheck failure. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>CheckResult</b> is <b>Failed</b>.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK_ERROR_DEST_CONN_REPAIR2</para>
                    /// </summary>
                    [NameInMap("RepairMethod")]
                    [Validation(Required=false)]
                    public string RepairMethod { get; set; }

                }

                /// <summary>
                /// <para>The error message returned if the precheck failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>CHECK__ERROR_SAME_OBJ.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The precheck progress. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The precheck state. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The precheck is not started. </description></item>
                /// <item><description><b>Suspending</b>: The precheck is paused. </description></item>
                /// <item><description><b>Checking</b>: The precheck is in progress. </description></item>
                /// <item><description><b>Failed</b>: The precheck failed. </description></item>
                /// <item><description><b>Finished</b>: The precheck is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The reserved parameter of DTS. The value is a JSON string. You can specify this parameter to meet specific requirements, for example, whether to automatically start a precheck. For more information, see <a href="https://help.aliyun.com/document_detail/176470.html">MigrationReserved</a>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>{\&quot;srcHostPorts\&quot;:\&quot;\&quot;,\&quot;whitelist.dms.online.ddl.enable\&quot;:false,\&quot;filterDDL\&quot;:false,\&quot;sqlparser.dms.original.ddl\&quot;:true,\&quot;srcOracleType\&quot;:\&quot;sid\&quot;,\&quot;maxRetryTime\&quot;:43200,\&quot;destSSL\&quot;:\&quot;0\&quot;,\&quot;destOracleType\&quot;:\&quot;sid\&quot;,\&quot;srcSSL\&quot;:\&quot;0\&quot;,\&quot;dbListCaseChangeMode\&quot;:\&quot;default\&quot;,\&quot;SourceEngineVersion\&quot;:\&quot;8.0.18\&quot;,\&quot;srcNetType\&quot;:\&quot;VPC\&quot;,\&quot;destNetType\&quot;:\&quot;VPC\&quot;,\&quot;srcVpcNetMappingInst\&quot;:\&quot;172.16.1**.<b>:10803\&quot;,\&quot;destVpcNetMappingInst\&quot;:\&quot;172.16.1</b>.**:11077\&quot;,\&quot;useJobTask\&quot;:\&quot;1\&quot;}</para>
            /// </summary>
            [NameInMap("Reserved")]
            [Validation(Required=false)]
            public string Reserved { get; set; }

            /// <summary>
            /// <para>The name of the resource group.</para>
            /// 
            /// <b>Example:</b>
            /// <para>default resource group</para>
            /// </summary>
            [NameInMap("ResourceGroupDisplayName")]
            [Validation(Required=false)]
            public string ResourceGroupDisplayName { get; set; }

            /// <summary>
            /// <para>The resource group ID.</para>
            /// 
            /// <b>Example:</b>
            /// <para>rg-acfmzawhxxc****</para>
            /// </summary>
            [NameInMap("ResourceGroupId")]
            [Validation(Required=false)]
            public string ResourceGroupId { get; set; }

            /// <summary>
            /// <para>The information about the retries performed by DTS due to an exception.</para>
            /// </summary>
            [NameInMap("RetryState")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListRetryState RetryState { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListRetryState : TeaModel {
                /// <summary>
                /// <para>The error message returned if these retries failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Unexpected error</para>
                /// </summary>
                [NameInMap("ErrMessage")]
                [Validation(Required=false)]
                public string ErrMessage { get; set; }

                /// <summary>
                /// <para>The task ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>bi6e22ay243****</para>
                /// </summary>
                [NameInMap("JobId")]
                [Validation(Required=false)]
                public string JobId { get; set; }

                /// <summary>
                /// <para>The maximum duration of a retry. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>7200</para>
                /// </summary>
                [NameInMap("MaxRetryTime")]
                [Validation(Required=false)]
                public int? MaxRetryTime { get; set; }

                /// <summary>
                /// <para>The progress of the instance when DTS retries.</para>
                /// 
                /// <b>Example:</b>
                /// <para>03</para>
                /// </summary>
                [NameInMap("Module")]
                [Validation(Required=false)]
                public string Module { get; set; }

                /// <summary>
                /// <para>The number of retries that have been performed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>5</para>
                /// </summary>
                [NameInMap("RetryCount")]
                [Validation(Required=false)]
                public int? RetryCount { get; set; }

                /// <summary>
                /// <para>The object on which these retries are performed. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>srcDB</b>: the source database </description></item>
                /// <item><description><b>destDB</b>: the destination database </description></item>
                /// <item><description><b>inner_module</b>: an internal module of DTS</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>srcDB</para>
                /// </summary>
                [NameInMap("RetryTarget")]
                [Validation(Required=false)]
                public string RetryTarget { get; set; }

                /// <summary>
                /// <para>The time that has elapsed from the time when the first retry starts. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3600</para>
                /// </summary>
                [NameInMap("RetryTime")]
                [Validation(Required=false)]
                public int? RetryTime { get; set; }

                /// <summary>
                /// <para>Indicates whether the task is being retried. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>true</b></description></item>
                /// <item><description><b>false</b></description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>false</para>
                /// </summary>
                [NameInMap("Retrying")]
                [Validation(Required=false)]
                public bool? Retrying { get; set; }

            }

            /// <summary>
            /// <para>The details of the data synchronization task in the reverse direction. </para>
            /// <remarks>
            /// <para>This parameter is returned only for two-way data synchronization tasks.</para>
            /// </remarks>
            /// </summary>
            [NameInMap("ReverseJob")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListReverseJob ReverseJob { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListReverseJob : TeaModel {
                /// <summary>
                /// <para>The start offset of incremental data synchronization. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1616980369</para>
                /// </summary>
                [NameInMap("Checkpoint")]
                [Validation(Required=false)]
                public string Checkpoint { get; set; }

                /// <summary>
                /// <para>The time when the task was created. The time follows the ISO 8601 standard in the <em>yyyy-MM-dd</em>T<em>HH:mm:ss</em>Z format. The time is displayed in UTC.</para>
                /// 
                /// <b>Example:</b>
                /// <para>2021-03-16T08:01:19Z</para>
                /// </summary>
                [NameInMap("CreateTime")]
                [Validation(Required=false)]
                public string CreateTime { get; set; }

                /// <summary>
                /// <para>The state of initial full data synchronization.</para>
                /// </summary>
                [NameInMap("DataInitializationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobDataInitializationStatus DataInitializationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobDataInitializationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if initial full data synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>java.lang.NumberFormatException: For input string: &quot;&quot;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of initial full data synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of entries that have been synchronized during initial full data synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>43071</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of initial full data synchronization. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                    /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The task failed. </description></item>
                    /// <item><description><b>Finished</b>: The task is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The state of incremental data synchronization.</para>
                /// </summary>
                [NameInMap("DataSynchronizationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobDataSynchronizationStatus DataSynchronizationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobDataSynchronizationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if incremental data synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>The task has failed for a long time and cannot be recovered.</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>Indicates whether the instance needs to be upgraded. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// <remarks>
                    /// <para>To upgrade a DTS instance, call the <a href="https://help.aliyun.com/document_detail/281093.html">TransferInstanceClass</a> operation.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("NeedUpgrade")]
                    [Validation(Required=false)]
                    public bool? NeedUpgrade { get; set; }

                    /// <summary>
                    /// <para>The progress of incremental data synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of entries that have been migrated or synchronized during incremental data migration or synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>20001</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of incremental data synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Migrating</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The schema of the objects that you want to synchronize. The value is a JSON string and can contain regular expressions. For more information, see Objects of DTS tasks.</para>
                /// 
                /// <b>Example:</b>
                /// <para>{&quot;dtstestdata&quot;: { &quot;name&quot;: &quot;dtstestdata&quot;, &quot;all&quot;: true }}</para>
                /// </summary>
                [NameInMap("DbObject")]
                [Validation(Required=false)]
                public string DbObject { get; set; }

                /// <summary>
                /// <para>The latency of incremental data synchronization. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("Delay")]
                [Validation(Required=false)]
                public long? Delay { get; set; }

                /// <summary>
                /// <para>The connection settings of the destination instance.</para>
                /// </summary>
                [NameInMap("DestinationEndpoint")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobDestinationEndpoint DestinationEndpoint { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobDestinationEndpoint : TeaModel {
                    /// <summary>
                    /// <para>The name of the database that contains the synchronized objects in the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstestdata</para>
                    /// </summary>
                    [NameInMap("DatabaseName")]
                    [Validation(Required=false)]
                    public string DatabaseName { get; set; }

                    /// <summary>
                    /// <para>The database engine of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>MySQL</para>
                    /// </summary>
                    [NameInMap("EngineName")]
                    [Validation(Required=false)]
                    public string EngineName { get; set; }

                    /// <summary>
                    /// <para>The ID of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>rm-bp1162kryivb8****</para>
                    /// </summary>
                    [NameInMap("InstanceID")]
                    [Validation(Required=false)]
                    public string InstanceID { get; set; }

                    /// <summary>
                    /// <para>The type of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>RDS</para>
                    /// </summary>
                    [NameInMap("InstanceType")]
                    [Validation(Required=false)]
                    public string InstanceType { get; set; }

                    /// <summary>
                    /// <para>The endpoint of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>172.16.88.***</para>
                    /// </summary>
                    [NameInMap("Ip")]
                    [Validation(Required=false)]
                    public string Ip { get; set; }

                    /// <summary>
                    /// <para>The SID of the Oracle database. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the destination instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>testsid</para>
                    /// </summary>
                    [NameInMap("OracleSID")]
                    [Validation(Required=false)]
                    public string OracleSID { get; set; }

                    /// <summary>
                    /// <para>The port number of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>3306</para>
                    /// </summary>
                    [NameInMap("Port")]
                    [Validation(Required=false)]
                    public string Port { get; set; }

                    /// <summary>
                    /// <para>The ID of the region in which the destination instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>cn-hangzhou</para>
                    /// </summary>
                    [NameInMap("Region")]
                    [Validation(Required=false)]
                    public string Region { get; set; }

                    /// <summary>
                    /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                    /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DISABLE</para>
                    /// </summary>
                    [NameInMap("SslSolutionEnum")]
                    [Validation(Required=false)]
                    public string SslSolutionEnum { get; set; }

                    /// <summary>
                    /// <para>The database account of the destination instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstest</para>
                    /// </summary>
                    [NameInMap("UserName")]
                    [Validation(Required=false)]
                    public string UserName { get; set; }

                }

                /// <summary>
                /// <para>The ID of the data synchronization instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtsi03e3zty16i****</para>
                /// </summary>
                [NameInMap("DtsInstanceID")]
                [Validation(Required=false)]
                public string DtsInstanceID { get; set; }

                /// <summary>
                /// <para>The instance class. </para>
                /// <remarks>
                /// <para>For more information about the test performance of each instance class, see <a href="https://help.aliyun.com/document_detail/26605.html">Specifications of data synchronization instances</a>.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>large</para>
                /// </summary>
                [NameInMap("DtsJobClass")]
                [Validation(Required=false)]
                public string DtsJobClass { get; set; }

                /// <summary>
                /// <para>The synchronization direction. <b>Reverse</b> is returned.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Reverse</para>
                /// </summary>
                [NameInMap("DtsJobDirection")]
                [Validation(Required=false)]
                public string DtsJobDirection { get; set; }

                /// <summary>
                /// <para>The ID of the synchronization task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>i03e3zty16i****</para>
                /// </summary>
                [NameInMap("DtsJobId")]
                [Validation(Required=false)]
                public string DtsJobId { get; set; }

                /// <summary>
                /// <para>The name of the data synchronization task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS_TO_RDS_MIGRATION</para>
                /// </summary>
                [NameInMap("DtsJobName")]
                [Validation(Required=false)]
                public string DtsJobName { get; set; }

                /// <summary>
                /// <para>The error message returned if the task failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-070211: Connect Source DB failed. cause by [com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException:Could not create connection to database server. Attempted reconnect 3 times. Giving up.][com.mysql.jdbc.exceptions.jdbc4.CommunicationsException:Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.][java.net.ConnectException:Connection timed out (Connection timed out)] About more information in [<a href="https://yq.aliyun.com/articles/499178%5D">https://yq.aliyun.com/articles/499178]</a>.</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The checkpoint of the ETL task.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1610540493</para>
                /// </summary>
                [NameInMap("EtlSafeCheckpoint")]
                [Validation(Required=false)]
                public string EtlSafeCheckpoint { get; set; }

                /// <summary>
                /// <para>The time when the instance expires. The time follows the ISO 8601 standard in the* yyyy-MM-dd<em>T</em>HH:mm:ss*Z format. The time is displayed in UTC. </para>
                /// <remarks>
                /// <para>This parameter is returned only if the returned value of <b>PayType</b> is <b>PrePaid</b>.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>2022-03-16T08:01:19Z</para>
                /// </summary>
                [NameInMap("ExpireTime")]
                [Validation(Required=false)]
                public string ExpireTime { get; set; }

                /// <summary>
                /// <para>The migration types or initial synchronization types.</para>
                /// </summary>
                [NameInMap("MigrationMode")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobMigrationMode MigrationMode { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobMigrationMode : TeaModel {
                    /// <summary>
                    /// <para>Indicates whether full data migration or initial full data synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("DataInitialization")]
                    [Validation(Required=false)]
                    public bool? DataInitialization { get; set; }

                    /// <summary>
                    /// <para>Indicates whether incremental data migration or synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("DataSynchronization")]
                    [Validation(Required=false)]
                    public bool? DataSynchronization { get; set; }

                    /// <summary>
                    /// <para>Indicates whether schema migration or initial schema synchronization is performed. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>true</b></description></item>
                    /// <item><description><b>false</b></description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("StructureInitialization")]
                    [Validation(Required=false)]
                    public bool? StructureInitialization { get; set; }

                }

                /// <summary>
                /// <para>The billing method of the DTS instance. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>PrePaid</b>: subscription</description></item>
                /// <item><description><b>PostPaid</b>: pay-as-you-go</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>PostPaid</para>
                /// </summary>
                [NameInMap("PayType")]
                [Validation(Required=false)]
                public string PayType { get; set; }

                /// <summary>
                /// <para>The performance of the data migration or synchronization instance.</para>
                /// </summary>
                [NameInMap("Performance")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobPerformance Performance { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobPerformance : TeaModel {
                    /// <summary>
                    /// <para>The size of data that is migrated or synchronized per second. Unit: MB/s.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1</para>
                    /// </summary>
                    [NameInMap("Flow")]
                    [Validation(Required=false)]
                    public string Flow { get; set; }

                    /// <summary>
                    /// <para>The number of times that SQL statements are migrated or synchronized per second, including BEGIN, COMMIT, DML, and DDL statements. DML statements include INSERT, DELETE, and UPDATE.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Rps")]
                    [Validation(Required=false)]
                    public string Rps { get; set; }

                }

                /// <summary>
                /// <para>The precheck state.</para>
                /// </summary>
                [NameInMap("PrecheckStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobPrecheckStatus PrecheckStatus { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobPrecheckStatus : TeaModel {
                    /// <summary>
                    /// <para>The result of each precheck item.</para>
                    /// </summary>
                    [NameInMap("Detail")]
                    [Validation(Required=false)]
                    public List<DescribeDtsJobsResponseBodyEtlDemoListReverseJobPrecheckStatusDetail> Detail { get; set; }
                    public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobPrecheckStatusDetail : TeaModel {
                        /// <summary>
                        /// <para>The name of the precheck item.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_CONN_SRC</para>
                        /// </summary>
                        [NameInMap("CheckItem")]
                        [Validation(Required=false)]
                        public string CheckItem { get; set; }

                        /// <summary>
                        /// <para>The description of the precheck item.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_CONN_SRC_DETAIL</para>
                        /// </summary>
                        [NameInMap("CheckItemDescription")]
                        [Validation(Required=false)]
                        public string CheckItemDescription { get; set; }

                        /// <summary>
                        /// <para>The precheck result. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description><b>Success</b></description></item>
                        /// <item><description><b>Failed</b></description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>Success</para>
                        /// </summary>
                        [NameInMap("CheckResult")]
                        [Validation(Required=false)]
                        public string CheckResult { get; set; }

                        /// <summary>
                        /// <para>The error message returned if the task failed to pass the precheck. </para>
                        /// <remarks>
                        /// <para>This parameter is returned only if the returned value of <b>CheckResult</b> is <b>Failed</b>.</para>
                        /// </remarks>
                        /// 
                        /// <b>Example:</b>
                        /// <para>Original error: Access denied for user \&quot;dtstest\&quot;@\&quot;100.104.***.**\&quot; (using password: YES)</para>
                        /// </summary>
                        [NameInMap("FailedReason")]
                        [Validation(Required=false)]
                        public string FailedReason { get; set; }

                        /// <summary>
                        /// <para>The method to fix a precheck failure. </para>
                        /// <remarks>
                        /// <para>This parameter is returned only if the returned value of <b>CheckResult</b> is <b>Failed</b>.</para>
                        /// </remarks>
                        /// 
                        /// <b>Example:</b>
                        /// <para>CHECK_ERROR_DEST_CONN_REPAIR2</para>
                        /// </summary>
                        [NameInMap("RepairMethod")]
                        [Validation(Required=false)]
                        public string RepairMethod { get; set; }

                    }

                    /// <summary>
                    /// <para>The error message returned if the precheck failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>CHECK__ERROR_SAME_OBJ</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The precheck progress. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The precheck state. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The precheck is not started. </description></item>
                    /// <item><description><b>Suspending</b>: The precheck is paused. </description></item>
                    /// <item><description><b>Checking</b>: The precheck is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The precheck failed. </description></item>
                    /// <item><description><b>Finished</b>: The precheck is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

                /// <summary>
                /// <para>The reserved parameter of DTS. The value is a JSON string. You can specify this parameter to meet specific requirements, for example, whether to automatically start a precheck. For more information, see <a href="https://help.aliyun.com/document_detail/176470.html">MigrationReserved</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>{\&quot;srcHostPorts\&quot;:\&quot;\&quot;,\&quot;whitelist.dms.online.ddl.enable\&quot;:false,\&quot;filterDDL\&quot;:false,\&quot;sqlparser.dms.original.ddl\&quot;:true,\&quot;srcOracleType\&quot;:\&quot;sid\&quot;,\&quot;maxRetryTime\&quot;:43200,\&quot;destSSL\&quot;:\&quot;0\&quot;,\&quot;destOracleType\&quot;:\&quot;sid\&quot;,\&quot;srcSSL\&quot;:\&quot;0\&quot;,\&quot;dbListCaseChangeMode\&quot;:\&quot;default\&quot;,\&quot;SourceEngineVersion\&quot;:\&quot;8.0.18\&quot;,\&quot;srcNetType\&quot;:\&quot;VPC\&quot;,\&quot;destNetType\&quot;:\&quot;VPC\&quot;,\&quot;srcVpcNetMappingInst\&quot;:\&quot;172.16.1**.<b>:10803\&quot;,\&quot;destVpcNetMappingInst\&quot;:\&quot;172.16.1</b>.**:11077\&quot;,\&quot;useJobTask\&quot;:\&quot;1\&quot;}</para>
                /// </summary>
                [NameInMap("Reserved")]
                [Validation(Required=false)]
                public string Reserved { get; set; }

                /// <summary>
                /// <para>The connection settings of the source instance.</para>
                /// </summary>
                [NameInMap("SourceEndpoint")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobSourceEndpoint SourceEndpoint { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobSourceEndpoint : TeaModel {
                    /// <summary>
                    /// <para>The name of the database that contains the objects to be migrated from the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstestdata</para>
                    /// </summary>
                    [NameInMap("DatabaseName")]
                    [Validation(Required=false)]
                    public string DatabaseName { get; set; }

                    /// <summary>
                    /// <para>The database engine of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>MySQL</para>
                    /// </summary>
                    [NameInMap("EngineName")]
                    [Validation(Required=false)]
                    public string EngineName { get; set; }

                    /// <summary>
                    /// <para>The ID of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>rm-bp1imrtn6fq7h****</para>
                    /// </summary>
                    [NameInMap("InstanceID")]
                    [Validation(Required=false)]
                    public string InstanceID { get; set; }

                    /// <summary>
                    /// <para>The type of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>RDS</para>
                    /// </summary>
                    [NameInMap("InstanceType")]
                    [Validation(Required=false)]
                    public string InstanceType { get; set; }

                    /// <summary>
                    /// <para>The endpoint of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>172.16.88.***</para>
                    /// </summary>
                    [NameInMap("Ip")]
                    [Validation(Required=false)]
                    public string Ip { get; set; }

                    /// <summary>
                    /// <para>The SID of the Oracle database. </para>
                    /// <remarks>
                    /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the source instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                    /// </remarks>
                    /// 
                    /// <b>Example:</b>
                    /// <para>testsid</para>
                    /// </summary>
                    [NameInMap("OracleSID")]
                    [Validation(Required=false)]
                    public string OracleSID { get; set; }

                    /// <summary>
                    /// <para>The port number of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>3306</para>
                    /// </summary>
                    [NameInMap("Port")]
                    [Validation(Required=false)]
                    public string Port { get; set; }

                    /// <summary>
                    /// <para>The ID of the region in which the source instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>cn-hangzhou</para>
                    /// </summary>
                    [NameInMap("Region")]
                    [Validation(Required=false)]
                    public string Region { get; set; }

                    /// <summary>
                    /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                    /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                    /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DISABLE</para>
                    /// </summary>
                    [NameInMap("SslSolutionEnum")]
                    [Validation(Required=false)]
                    public string SslSolutionEnum { get; set; }

                    /// <summary>
                    /// <para>The database account of the source instance.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>dtstest</para>
                    /// </summary>
                    [NameInMap("UserName")]
                    [Validation(Required=false)]
                    public string UserName { get; set; }

                }

                /// <summary>
                /// <para>The state of the DTS instance. For more information about the valid values, see the description of the request parameter <b>Status</b>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Synchronizing</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

                /// <summary>
                /// <para>The state of initial schema synchronization.</para>
                /// </summary>
                [NameInMap("StructureInitializationStatus")]
                [Validation(Required=false)]
                public DescribeDtsJobsResponseBodyEtlDemoListReverseJobStructureInitializationStatus StructureInitializationStatus { get; set; }
                public class DescribeDtsJobsResponseBodyEtlDemoListReverseJobStructureInitializationStatus : TeaModel {
                    /// <summary>
                    /// <para>The error message returned if initial schema synchronization failed.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>DTS-1020042 Execute sql error sql: ERROR: type &quot;geometry&quot; does not exist;</para>
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The progress of initial schema synchronization. Unit: percentage.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>100</para>
                    /// </summary>
                    [NameInMap("Percent")]
                    [Validation(Required=false)]
                    public string Percent { get; set; }

                    /// <summary>
                    /// <para>The number of tables that have been synchronized during initial schema synchronization.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>1</para>
                    /// </summary>
                    [NameInMap("Progress")]
                    [Validation(Required=false)]
                    public string Progress { get; set; }

                    /// <summary>
                    /// <para>The state of initial schema synchronization. Valid values:</para>
                    /// <list type="bullet">
                    /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                    /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                    /// <item><description><b>Failed</b>: The task failed. </description></item>
                    /// <item><description><b>Finished</b>: The task is complete.</description></item>
                    /// </list>
                    /// 
                    /// <b>Example:</b>
                    /// <para>Finished</para>
                    /// </summary>
                    [NameInMap("Status")]
                    [Validation(Required=false)]
                    public string Status { get; set; }

                }

            }

            /// <summary>
            /// <para>The connection settings of the source instance.</para>
            /// </summary>
            [NameInMap("SourceEndpoint")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListSourceEndpoint SourceEndpoint { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListSourceEndpoint : TeaModel {
                /// <summary>
                /// <para>The name of the database that contains the objects to be migrated from the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstestdata</para>
                /// </summary>
                [NameInMap("DatabaseName")]
                [Validation(Required=false)]
                public string DatabaseName { get; set; }

                /// <summary>
                /// <para>The database engine of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>MySQL</para>
                /// </summary>
                [NameInMap("EngineName")]
                [Validation(Required=false)]
                public string EngineName { get; set; }

                /// <summary>
                /// <para>The ID of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>rm-bp1162kryivb8****</para>
                /// </summary>
                [NameInMap("InstanceID")]
                [Validation(Required=false)]
                public string InstanceID { get; set; }

                /// <summary>
                /// <para>The type of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>RDS</para>
                /// </summary>
                [NameInMap("InstanceType")]
                [Validation(Required=false)]
                public string InstanceType { get; set; }

                /// <summary>
                /// <para>The endpoint of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>172.16.88.***</para>
                /// </summary>
                [NameInMap("Ip")]
                [Validation(Required=false)]
                public string Ip { get; set; }

                /// <summary>
                /// <para>The SID of the Oracle database. </para>
                /// <remarks>
                /// <para>This parameter is returned only if the returned value of <b>EngineName</b> of the source instance is <b>Oracle</b> and the Oracle database is deployed in a non-RAC architecture.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>testsid</para>
                /// </summary>
                [NameInMap("OracleSID")]
                [Validation(Required=false)]
                public string OracleSID { get; set; }

                /// <summary>
                /// <para>The port number of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>3306</para>
                /// </summary>
                [NameInMap("Port")]
                [Validation(Required=false)]
                public string Port { get; set; }

                /// <summary>
                /// <para>The ID of the region in which the source instance resides. For more information, see <a href="https://help.aliyun.com/document_detail/141033.html">Supported regions</a>.</para>
                /// 
                /// <b>Example:</b>
                /// <para>cn-hangzhou</para>
                /// </summary>
                [NameInMap("Region")]
                [Validation(Required=false)]
                public string Region { get; set; }

                /// <summary>
                /// <para>Indicates whether SSL encryption is enabled. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>DISABLE</b>: SSL encryption is disabled. </description></item>
                /// <item><description><b>ENABLE_WITH_CERTIFICATE</b>: SSL encryption is enabled and the CA certificate is uploaded. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_MONGODB_ALTAS</b>: SSL encryption is enabled for the connection with an AWS MongoDB Altas database. </description></item>
                /// <item><description><b>ENABLE_ONLY_4_KAFKA_SCRAM_SHA_256</b>: SCRAM-SHA-256 is used to encrypt the connection with a Kafka cluster.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>DISABLE</para>
                /// </summary>
                [NameInMap("SslSolutionEnum")]
                [Validation(Required=false)]
                public string SslSolutionEnum { get; set; }

                /// <summary>
                /// <para>The database account of the source instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>dtstest</para>
                /// </summary>
                [NameInMap("UserName")]
                [Validation(Required=false)]
                public string UserName { get; set; }

            }

            /// <summary>
            /// <para>The state of the DTS instance. For more information about the valid values, see the description of the request parameter <b>Status</b>.</para>
            /// 
            /// <b>Example:</b>
            /// <para>Migrating</para>
            /// </summary>
            [NameInMap("Status")]
            [Validation(Required=false)]
            public string Status { get; set; }

            /// <summary>
            /// <para>The state of schema migration or initial schema synchronization.</para>
            /// </summary>
            [NameInMap("StructureInitializationStatus")]
            [Validation(Required=false)]
            public DescribeDtsJobsResponseBodyEtlDemoListStructureInitializationStatus StructureInitializationStatus { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListStructureInitializationStatus : TeaModel {
                /// <summary>
                /// <para>The error message returned if schema migration or initial schema synchronization failed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>DTS-1020042 Execute sql error sql: ERROR: type &quot;geometry&quot; does not exist;</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>The progress of schema migration or initial schema synchronization. Unit: percentage.</para>
                /// 
                /// <b>Example:</b>
                /// <para>100</para>
                /// </summary>
                [NameInMap("Percent")]
                [Validation(Required=false)]
                public string Percent { get; set; }

                /// <summary>
                /// <para>The number of tables that have been migrated or synchronized during schema migration or initial schema synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public string Progress { get; set; }

                /// <summary>
                /// <para>The state of schema migration or initial schema synchronization. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>NotStarted</b>: The task is not started. </description></item>
                /// <item><description><b>Migrating</b>: The task is in progress. </description></item>
                /// <item><description><b>Failed</b>: The task failed. </description></item>
                /// <item><description><b>Finished</b>: The task is complete.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Finished</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

            }

            /// <summary>
            /// <para>The tags of the task.</para>
            /// </summary>
            [NameInMap("TagList")]
            [Validation(Required=false)]
            public List<DescribeDtsJobsResponseBodyEtlDemoListTagList> TagList { get; set; }
            public class DescribeDtsJobsResponseBodyEtlDemoListTagList : TeaModel {
                /// <summary>
                /// <para>The tag key.</para>
                /// 
                /// <b>Example:</b>
                /// <para>testkey</para>
                /// </summary>
                [NameInMap("TagKey")]
                [Validation(Required=false)]
                public string TagKey { get; set; }

                /// <summary>
                /// <para>The tag value.</para>
                /// 
                /// <b>Example:</b>
                /// <para>testvalue</para>
                /// </summary>
                [NameInMap("TagValue")]
                [Validation(Required=false)]
                public string TagValue { get; set; }

            }

        }

        /// <summary>
        /// <para>The HTTP status code.</para>
        /// 
        /// <b>Example:</b>
        /// <para>200</para>
        /// </summary>
        [NameInMap("HttpStatusCode")]
        [Validation(Required=false)]
        public int? HttpStatusCode { get; set; }

        /// <summary>
        /// <para>The page number of the returned page.</para>
        /// 
        /// <b>Example:</b>
        /// <para>2</para>
        /// </summary>
        [NameInMap("PageNumber")]
        [Validation(Required=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// <para>The number of entries returned per page.</para>
        /// 
        /// <b>Example:</b>
        /// <para>20</para>
        /// </summary>
        [NameInMap("PageRecordCount")]
        [Validation(Required=false)]
        public int? PageRecordCount { get; set; }

        /// <summary>
        /// <para>The ID of the request.</para>
        /// 
        /// <b>Example:</b>
        /// <para>621BB4F8-3016-4FAA-8D5A-5D3163CC****</para>
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// <para>Indicates whether the call was successful.</para>
        /// 
        /// <b>Example:</b>
        /// <para>true</para>
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// <para>The total number of DTS tasks that meet the query condition.</para>
        /// 
        /// <b>Example:</b>
        /// <para>15</para>
        /// </summary>
        [NameInMap("TotalRecordCount")]
        [Validation(Required=false)]
        public int? TotalRecordCount { get; set; }

    }

}
