// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Hbr20170908.Models
{
    public class SearchHistoricalSnapshotsResponseBody : TeaModel {
        /// <summary>
        /// The HTTP status code. The status code 200 indicates that the call is successful.
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// The number of historical backup snapshots that are displayed on the current page.
        /// </summary>
        [NameInMap("Limit")]
        [Validation(Required=false)]
        public int? Limit { get; set; }

        /// <summary>
        /// The message that is returned. If the call is successful, "successful" is returned. If the call fails, an error message is returned.
        /// </summary>
        [NameInMap("Message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        /// <summary>
        /// The token that is required to obtain the next page of backup snapshots.
        /// </summary>
        [NameInMap("NextToken")]
        [Validation(Required=false)]
        public string NextToken { get; set; }

        /// <summary>
        /// The ID of the request.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// The historical backup snapshots.
        /// </summary>
        [NameInMap("Snapshots")]
        [Validation(Required=false)]
        public SearchHistoricalSnapshotsResponseBodySnapshots Snapshots { get; set; }
        public class SearchHistoricalSnapshotsResponseBodySnapshots : TeaModel {
            [NameInMap("Snapshot")]
            [Validation(Required=false)]
            public List<SearchHistoricalSnapshotsResponseBodySnapshotsSnapshot> Snapshot { get; set; }
            public class SearchHistoricalSnapshotsResponseBodySnapshotsSnapshot : TeaModel {
                /// <summary>
                /// The actual data amount of backup snapshots after duplicates are removed. Unit: bytes.
                /// </summary>
                [NameInMap("ActualBytes")]
                [Validation(Required=false)]
                public long? ActualBytes { get; set; }

                /// <summary>
                /// The actual number of backup snapshots.
                /// 
                /// >  This parameter is available only for file backup.
                /// </summary>
                [NameInMap("ActualItems")]
                [Validation(Required=false)]
                public long? ActualItems { get; set; }

                [NameInMap("ArchiveTime")]
                [Validation(Required=false)]
                public long? ArchiveTime { get; set; }

                /// <summary>
                /// The backup type. Valid value: **COMPLETE**, which indicates full backup.
                /// </summary>
                [NameInMap("BackupType")]
                [Validation(Required=false)]
                public string BackupType { get; set; }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **OSS**. This parameter indicates the name of the OSS bucket.
                /// </summary>
                [NameInMap("Bucket")]
                [Validation(Required=false)]
                public string Bucket { get; set; }

                /// <summary>
                /// The actual amount of data that is generated by incremental backups. Unit: bytes.
                /// </summary>
                [NameInMap("BytesDone")]
                [Validation(Required=false)]
                public long? BytesDone { get; set; }

                /// <summary>
                /// The total amount of data. Unit: bytes.
                /// </summary>
                [NameInMap("BytesTotal")]
                [Validation(Required=false)]
                public long? BytesTotal { get; set; }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **ECS_FILE**. This parameter indicates the ID of the HBR client.
                /// </summary>
                [NameInMap("ClientId")]
                [Validation(Required=false)]
                public string ClientId { get; set; }

                /// <summary>
                /// The time when the backup snapshot was completed. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("CompleteTime")]
                [Validation(Required=false)]
                public long? CompleteTime { get; set; }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **NAS**. This parameter indicates the time when the file system was created. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("CreateTime")]
                [Validation(Required=false)]
                public long? CreateTime { get; set; }

                /// <summary>
                /// The time when the backup snapshot was created. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("CreatedTime")]
                [Validation(Required=false)]
                public long? CreatedTime { get; set; }

                /// <summary>
                /// The files that record the information about backup failures, including the information about partially completed backups.
                /// </summary>
                [NameInMap("ErrorFile")]
                [Validation(Required=false)]
                public string ErrorFile { get; set; }

                [NameInMap("Exclude")]
                [Validation(Required=false)]
                public string Exclude { get; set; }

                /// <summary>
                /// The time when the snapshot expired. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("ExpireTime")]
                [Validation(Required=false)]
                public long? ExpireTime { get; set; }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **NAS**. This parameter indicates the ID of the NAS file system.
                /// </summary>
                [NameInMap("FileSystemId")]
                [Validation(Required=false)]
                public string FileSystemId { get; set; }

                [NameInMap("Include")]
                [Validation(Required=false)]
                public string Include { get; set; }

                /// <summary>
                /// This parameter is valid only if the **SourceType** parameter is set to **ECS_FILE**. This parameter indicates the ID of the ECS instance.
                /// </summary>
                [NameInMap("InstanceId")]
                [Validation(Required=false)]
                public string InstanceId { get; set; }

                /// <summary>
                /// The name of the Tablestore instance.
                /// </summary>
                [NameInMap("InstanceName")]
                [Validation(Required=false)]
                public string InstanceName { get; set; }

                /// <summary>
                /// The number of objects that are backed up.
                /// 
                /// >  This parameter is available only for file backup.
                /// </summary>
                [NameInMap("ItemsDone")]
                [Validation(Required=false)]
                public long? ItemsDone { get; set; }

                /// <summary>
                /// The total number of objects in the data source.
                /// 
                /// >  This parameter is available only for file backup.
                /// </summary>
                [NameInMap("ItemsTotal")]
                [Validation(Required=false)]
                public long? ItemsTotal { get; set; }

                /// <summary>
                /// The ID of the backup job.
                /// </summary>
                [NameInMap("JobId")]
                [Validation(Required=false)]
                public string JobId { get; set; }

                /// <summary>
                /// The hash value of the parent backup snapshot.
                /// </summary>
                [NameInMap("ParentSnapshotHash")]
                [Validation(Required=false)]
                public string ParentSnapshotHash { get; set; }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **ECS_FILE**. This parameter indicates the path to the files that are backed up.
                /// </summary>
                [NameInMap("Path")]
                [Validation(Required=false)]
                public string Path { get; set; }

                /// <summary>
                /// The source paths.
                /// </summary>
                [NameInMap("Paths")]
                [Validation(Required=false)]
                public SearchHistoricalSnapshotsResponseBodySnapshotsSnapshotPaths Paths { get; set; }
                public class SearchHistoricalSnapshotsResponseBodySnapshotsSnapshotPaths : TeaModel {
                    [NameInMap("Path")]
                    [Validation(Required=false)]
                    public List<string> Path { get; set; }

                }

                /// <summary>
                /// This parameter is returned only if the **SourceType** parameter is set to **OSS**. This parameter indicates the prefix of objects that are backed up.
                /// </summary>
                [NameInMap("Prefix")]
                [Validation(Required=false)]
                public string Prefix { get; set; }

                /// <summary>
                /// The time when the backup job ended. The value is a UNIX timestamp. Unit: milliseconds.
                /// </summary>
                [NameInMap("RangeEnd")]
                [Validation(Required=false)]
                public long? RangeEnd { get; set; }

                /// <summary>
                /// The time when the backup job started. The value is a UNIX timestamp. Unit: milliseconds.
                /// </summary>
                [NameInMap("RangeStart")]
                [Validation(Required=false)]
                public long? RangeStart { get; set; }

                /// <summary>
                /// The retention period of the backup snapshot. Unit: days.
                /// </summary>
                [NameInMap("Retention")]
                [Validation(Required=false)]
                public long? Retention { get; set; }

                /// <summary>
                /// The hash value of the backup snapshot.
                /// </summary>
                [NameInMap("SnapshotHash")]
                [Validation(Required=false)]
                public string SnapshotHash { get; set; }

                /// <summary>
                /// The ID of the backup snapshot.
                /// </summary>
                [NameInMap("SnapshotId")]
                [Validation(Required=false)]
                public string SnapshotId { get; set; }

                [NameInMap("SourceParentSnapshotHash")]
                [Validation(Required=false)]
                public string SourceParentSnapshotHash { get; set; }

                [NameInMap("SourceSnapshotHash")]
                [Validation(Required=false)]
                public string SourceSnapshotHash { get; set; }

                /// <summary>
                /// The type of the data source. Valid values:
                /// 
                /// *   **ECS_FILE**: backup snapshots for ECS files
                /// *   **OSS**: backup snapshots for OSS buckets
                /// *   **NAS**: backup snapshots for NAS file systems
                /// </summary>
                [NameInMap("SourceType")]
                [Validation(Required=false)]
                public string SourceType { get; set; }

                /// <summary>
                /// The time when the backup snapshot started. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("StartTime")]
                [Validation(Required=false)]
                public long? StartTime { get; set; }

                /// <summary>
                /// The status of the backup job. Valid values:
                /// 
                /// *   **COMPLETE**: The backup job is completed.
                /// *   **PARTIAL_COMPLETE**: The backup job is partially completed.
                /// *   **FAILED**: The backup job has failed.
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

                [NameInMap("StorageClass")]
                [Validation(Required=false)]
                public string StorageClass { get; set; }

                /// <summary>
                /// The name of a table in the Tablestore instance.
                /// </summary>
                [NameInMap("TableName")]
                [Validation(Required=false)]
                public string TableName { get; set; }

                /// <summary>
                /// The time when the backup snapshot was updated. The value is a UNIX timestamp. Unit: seconds.
                /// </summary>
                [NameInMap("UpdatedTime")]
                [Validation(Required=false)]
                public long? UpdatedTime { get; set; }

                [NameInMap("UseCommonNas")]
                [Validation(Required=false)]
                public bool? UseCommonNas { get; set; }

                /// <summary>
                /// The ID of the backup vault that stores the backup snapshot.
                /// </summary>
                [NameInMap("VaultId")]
                [Validation(Required=false)]
                public string VaultId { get; set; }

            }

        }

        /// <summary>
        /// Indicates whether the call is successful. Valid values:
        /// 
        /// *   true: The call is successful.
        /// *   false: The call fails.
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// The total number of returned backup snapshots that meet the specified conditions.
        /// </summary>
        [NameInMap("TotalCount")]
        [Validation(Required=false)]
        public int? TotalCount { get; set; }

    }

}
