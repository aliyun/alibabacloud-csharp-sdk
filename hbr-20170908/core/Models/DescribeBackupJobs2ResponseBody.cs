// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Hbr20170908.Models
{
    public class DescribeBackupJobs2ResponseBody : TeaModel {
        /// <summary>
        /// <para>The returned backup jobs that meet the specified conditions.</para>
        /// </summary>
        [NameInMap("BackupJobs")]
        [Validation(Required=false)]
        public DescribeBackupJobs2ResponseBodyBackupJobs BackupJobs { get; set; }
        public class DescribeBackupJobs2ResponseBodyBackupJobs : TeaModel {
            [NameInMap("BackupJob")]
            [Validation(Required=false)]
            public List<DescribeBackupJobs2ResponseBodyBackupJobsBackupJob> BackupJob { get; set; }
            public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJob : TeaModel {
                /// <summary>
                /// <para>The actual amount of data that is backed up after duplicates are removed. Unit: bytes.</para>
                /// 
                /// <b>Example:</b>
                /// <para>600</para>
                /// </summary>
                [NameInMap("ActualBytes")]
                [Validation(Required=false)]
                public long? ActualBytes { get; set; }

                /// <summary>
                /// <para>The number of files that are actually processed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>8</para>
                /// </summary>
                [NameInMap("ActualFiles")]
                [Validation(Required=false)]
                public long? ActualFiles { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the actual number of objects that are backed up by the backup job.</para>
                /// 
                /// <b>Example:</b>
                /// <para>6</para>
                /// </summary>
                [NameInMap("ActualItems")]
                [Validation(Required=false)]
                public long? ActualItems { get; set; }

                /// <summary>
                /// <para>The backup type. Valid value: <b>COMPLETE</b>, which indicates full backup.</para>
                /// 
                /// <b>Example:</b>
                /// <para>COMPLETE</para>
                /// </summary>
                [NameInMap("BackupType")]
                [Validation(Required=false)]
                public string BackupType { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>OSS</b>. This parameter indicates the name of the OSS bucket that is backed up.</para>
                /// 
                /// <b>Example:</b>
                /// <para>hbr-backup-oss</para>
                /// </summary>
                [NameInMap("Bucket")]
                [Validation(Required=false)]
                public string Bucket { get; set; }

                /// <summary>
                /// <para>The actual amount of data that is generated by incremental backups. Unit: bytes.</para>
                /// 
                /// <b>Example:</b>
                /// <para>800</para>
                /// </summary>
                [NameInMap("BytesDone")]
                [Validation(Required=false)]
                public long? BytesDone { get; set; }

                /// <summary>
                /// <para>The total amount of data that is backed up from the data source. Unit: bytes.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1000</para>
                /// </summary>
                [NameInMap("BytesTotal")]
                [Validation(Required=false)]
                public long? BytesTotal { get; set; }

                /// <summary>
                /// <para>The data source details at the destination. Thisparameter is returned only for data synchronization.</para>
                /// 
                /// <b>Example:</b>
                /// <para>{&quot;dataSourceId&quot;: &quot;ds-123456789&quot;, &quot;path&quot;: &quot;/changelist&quot;}</para>
                /// </summary>
                [NameInMap("ChangeListPath")]
                [Validation(Required=false)]
                public string ChangeListPath { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the ID of the backup client.</para>
                /// 
                /// <b>Example:</b>
                /// <para>c-*********************</para>
                /// </summary>
                [NameInMap("ClientId")]
                [Validation(Required=false)]
                public string ClientId { get; set; }

                /// <summary>
                /// <para>The time when the backup job was completed. This value is a UNIX timestamp. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1554347313</para>
                /// </summary>
                [NameInMap("CompleteTime")]
                [Validation(Required=false)]
                public long? CompleteTime { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>NAS</b>. This parameter indicates the time when the file system was created. This value is a UNIX timestamp. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1607436917</para>
                /// </summary>
                [NameInMap("CreateTime")]
                [Validation(Required=false)]
                public long? CreateTime { get; set; }

                /// <summary>
                /// <para>The time when the backup job was created. This value is a UNIX timestamp. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1554347313</para>
                /// </summary>
                [NameInMap("CreatedTime")]
                [Validation(Required=false)]
                public long? CreatedTime { get; set; }

                /// <summary>
                /// <para>The name of the RAM role that is created within the source Alibaba Cloud account and assigned to the current Alibaba Cloud account to authorize the current Alibaba Cloud account to back up data across Alibaba Cloud accounts.</para>
                /// 
                /// <b>Example:</b>
                /// <para>BackupRole</para>
                /// </summary>
                [NameInMap("CrossAccountRoleName")]
                [Validation(Required=false)]
                public string CrossAccountRoleName { get; set; }

                /// <summary>
                /// <para>Specifies whether data is backed up within the same Alibaba Cloud account or across Alibaba Cloud accounts. Valid values:</para>
                /// <list type="bullet">
                /// <item><description>SELF_ACCOUNT: Data is backed up within the same Alibaba Cloud account.</description></item>
                /// <item><description>CROSS_ACCOUNT: Data is backed up across Alibaba Cloud accounts.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>SELF_ACCOUNT</para>
                /// </summary>
                [NameInMap("CrossAccountType")]
                [Validation(Required=false)]
                public string CrossAccountType { get; set; }

                /// <summary>
                /// <para>The ID of the source Alibaba Cloud account that authorizes the current Alibaba Cloud account to back up data across Alibaba Cloud accounts.</para>
                /// 
                /// <b>Example:</b>
                /// <para>158975xxxxx4625</para>
                /// </summary>
                [NameInMap("CrossAccountUserId")]
                [Validation(Required=false)]
                public long? CrossAccountUserId { get; set; }

                /// <summary>
                /// <para>Destination data source details. (Required only for synchronization)</para>
                /// 
                /// <b>Example:</b>
                /// <para>{\&quot;prefix\&quot;:\&quot;/\&quot;}</para>
                /// </summary>
                [NameInMap("DestDataSourceDetail")]
                [Validation(Required=false)]
                public string DestDataSourceDetail { get; set; }

                /// <summary>
                /// <para>Destination data source ID. (Required only for synchronization)</para>
                /// 
                /// <b>Example:</b>
                /// <para>ds-000cov4ufudxklj24zdk</para>
                /// </summary>
                [NameInMap("DestDataSourceId")]
                [Validation(Required=false)]
                public string DestDataSourceId { get; set; }

                /// <summary>
                /// <para>Destination data source type. (Required only for synchronization)</para>
                /// 
                /// <b>Example:</b>
                /// <para>OSS</para>
                /// </summary>
                [NameInMap("DestSourceType")]
                [Validation(Required=false)]
                public string DestSourceType { get; set; }

                /// <summary>
                /// <para>The udm backup job detail.</para>
                /// </summary>
                [NameInMap("Detail")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetail Detail { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetail : TeaModel {
                    /// <summary>
                    /// <para>The information about the remote replication failure.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>ECS.CreatingSnapshot</para>
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotErrorMessage")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotErrorMessage { get; set; }

                    /// <summary>
                    /// <para>The ID of the remote replication snapshot.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>s-******************</para>
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotId")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotId { get; set; }

                    /// <summary>
                    /// <para>The progress of the remote replication.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>85</para>
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotProgress")]
                    [Validation(Required=false)]
                    public int? DestinationNativeSnapshotProgress { get; set; }

                    /// <summary>
                    /// <para>The state of the remote replication.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>COMPLETE</para>
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotStatus")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotStatus { get; set; }

                    /// <summary>
                    /// <para>The retention period of the remote replication backup.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>30</para>
                    /// </summary>
                    [NameInMap("DestinationRetention")]
                    [Validation(Required=false)]
                    public long? DestinationRetention { get; set; }

                    /// <summary>
                    /// <para>The ID of the remote replication backup.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>s-******************</para>
                    /// </summary>
                    [NameInMap("DestinationSnapshotId")]
                    [Validation(Required=false)]
                    public string DestinationSnapshotId { get; set; }

                    /// <summary>
                    /// <para>The mapping between snapshots and disks.</para>
                    /// </summary>
                    [NameInMap("DiskNativeSnapshotIdList")]
                    [Validation(Required=false)]
                    public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetailDiskNativeSnapshotIdList DiskNativeSnapshotIdList { get; set; }
                    public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetailDiskNativeSnapshotIdList : TeaModel {
                        [NameInMap("DiskNativeSnapshotId")]
                        [Validation(Required=false)]
                        public List<string> DiskNativeSnapshotId { get; set; }

                    }

                    /// <summary>
                    /// <para>Indicates whether remote replication is enabled.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("DoCopy")]
                    [Validation(Required=false)]
                    public bool? DoCopy { get; set; }

                    /// <summary>
                    /// <para>The ecs instance infos.</para>
                    /// </summary>
                    [NameInMap("InstanceInfos")]
                    [Validation(Required=false)]
                    public Dictionary<string, object> InstanceInfos { get; set; }

                    /// <summary>
                    /// <para>The ID of the backup snapshot.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>s-******************</para>
                    /// </summary>
                    [NameInMap("NativeSnapshotId")]
                    [Validation(Required=false)]
                    public string NativeSnapshotId { get; set; }

                }

                /// <summary>
                /// <para>The error message that is returned for the backup job.</para>
                /// 
                /// <b>Example:</b>
                /// <para>PARTIAL_COMPLETE</para>
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the paths to the files that are excluded from the backup job. The value must be 1 to 255 characters in length.</para>
                /// 
                /// <b>Example:</b>
                /// <para>[&quot;/var&quot;, &quot;/proc&quot;]</para>
                /// </summary>
                [NameInMap("Exclude")]
                [Validation(Required=false)]
                public string Exclude { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>NAS</b>. This parameter indicates the ID of the NAS file system.</para>
                /// 
                /// <b>Example:</b>
                /// <para>005494</para>
                /// </summary>
                [NameInMap("FileSystemId")]
                [Validation(Required=false)]
                public string FileSystemId { get; set; }

                /// <summary>
                /// <para>The number of files that have been processed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>9</para>
                /// </summary>
                [NameInMap("FilesDone")]
                [Validation(Required=false)]
                public long? FilesDone { get; set; }

                /// <summary>
                /// <para>The total number of files to be processed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10</para>
                /// </summary>
                [NameInMap("FilesTotal")]
                [Validation(Required=false)]
                public long? FilesTotal { get; set; }

                /// <summary>
                /// <para>The identifier of the container cluster. For a Container Service for Kubernetes (ACK) cluster, specify the cluster ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>c83**************************b76</para>
                /// </summary>
                [NameInMap("Identifier")]
                [Validation(Required=false)]
                public string Identifier { get; set; }

                /// <summary>
                /// <para>The paths to the files that are included in the backup job.</para>
                /// 
                /// <b>Example:</b>
                /// <para>[&quot;/home/alice/<em>.pdf&quot;, &quot;/home/bob/</em>.txt&quot;]</para>
                /// </summary>
                [NameInMap("Include")]
                [Validation(Required=false)]
                public string Include { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>NAS</b>. This parameter indicates the ID of the ECS instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>i-*********************</para>
                /// </summary>
                [NameInMap("InstanceId")]
                [Validation(Required=false)]
                public string InstanceId { get; set; }

                /// <summary>
                /// <para>The name of the Tablestore instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>instancename</para>
                /// </summary>
                [NameInMap("InstanceName")]
                [Validation(Required=false)]
                public string InstanceName { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the number of objects that are backed up.</para>
                /// 
                /// <b>Example:</b>
                /// <para>8</para>
                /// </summary>
                [NameInMap("ItemsDone")]
                [Validation(Required=false)]
                public long? ItemsDone { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the total number of objects in the data source.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10</para>
                /// </summary>
                [NameInMap("ItemsTotal")]
                [Validation(Required=false)]
                public long? ItemsTotal { get; set; }

                /// <summary>
                /// <para>The ID of the backup job.</para>
                /// 
                /// <b>Example:</b>
                /// <para>job-000g********w7</para>
                /// </summary>
                [NameInMap("JobId")]
                [Validation(Required=false)]
                public string JobId { get; set; }

                /// <summary>
                /// <para>The name of the backup job.</para>
                /// 
                /// <b>Example:</b>
                /// <para>jobname</para>
                /// </summary>
                [NameInMap("JobName")]
                [Validation(Required=false)]
                public string JobName { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates whether Windows VSS is used to define a backup path.</para>
                /// <list type="bullet">
                /// <item><description>This parameter is available only for Windows ECS instances.</description></item>
                /// <item><description>If data changes occur in the backup source, the source data must be the same as the data to be backed up before the system sets this parameter to <c>[&quot;UseVSS&quot;:true]</c>.</description></item>
                /// <item><description>If you use VSS, you cannot back up data from multiple directories.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>{&quot;UseVSS&quot;:false}</para>
                /// </summary>
                [NameInMap("Options")]
                [Validation(Required=false)]
                public string Options { get; set; }

                /// <summary>
                /// <para>The details about the Tablestore instance.</para>
                /// </summary>
                [NameInMap("OtsDetail")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetail OtsDetail { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetail : TeaModel {
                    /// <summary>
                    /// <para>The names of the destination tables in the Tablestore instance.</para>
                    /// </summary>
                    [NameInMap("TableNames")]
                    [Validation(Required=false)]
                    public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetailTableNames TableNames { get; set; }
                    public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetailTableNames : TeaModel {
                        [NameInMap("TableName")]
                        [Validation(Required=false)]
                        public List<string> TableName { get; set; }

                    }

                }

                /// <summary>
                /// <para>The backup paths.</para>
                /// </summary>
                [NameInMap("Paths")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobPaths Paths { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobPaths : TeaModel {
                    [NameInMap("Path")]
                    [Validation(Required=false)]
                    public List<string> Path { get; set; }

                }

                /// <summary>
                /// <para>The ID of the backup plan.</para>
                /// 
                /// <b>Example:</b>
                /// <para>plan-20********35</para>
                /// </summary>
                [NameInMap("PlanId")]
                [Validation(Required=false)]
                public string PlanId { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>OSS</b>. This parameter indicates the prefix of objects that are backed up.</para>
                /// 
                /// <b>Example:</b>
                /// <para>example/</para>
                /// </summary>
                [NameInMap("Prefix")]
                [Validation(Required=false)]
                public string Prefix { get; set; }

                /// <summary>
                /// <para>The backup progress. For example, 10000 indicates that the progress is 100%.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10000</para>
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public int? Progress { get; set; }

                /// <summary>
                /// <para>The type of the data source. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>ECS_FILE</b>: ECS files</description></item>
                /// <item><description><b>OSS</b>: OSS buckets</description></item>
                /// <item><description><b>NAS</b>: NAS file systems</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>ECS_FILE</para>
                /// </summary>
                [NameInMap("SourceType")]
                [Validation(Required=false)]
                public string SourceType { get; set; }

                /// <summary>
                /// <para>The average speed at which data is backed up. Unit: KB/s.</para>
                /// 
                /// <b>Example:</b>
                /// <para>500</para>
                /// </summary>
                [NameInMap("Speed")]
                [Validation(Required=false)]
                public long? Speed { get; set; }

                /// <summary>
                /// <para>This parameter is returned only if the <b>SourceType</b> parameter is set to <b>ECS_FILE</b>. This parameter indicates the throttling rules. Format: <c>{start}{end}{bandwidth}</c>. Multiple throttling rules are separated with vertical bars (<c>{start}|{end}|{bandwidth}</c>). A specified time range cannot overlap with another one.</para>
                /// <list type="bullet">
                /// <item><description><b>start</b>: the start hour</description></item>
                /// <item><description><b>end</b>: the end hour</description></item>
                /// <item><description><b>bandwidth</b>: the bandwidth. Unit: KB/s.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>0:24:5120</para>
                /// </summary>
                [NameInMap("SpeedLimit")]
                [Validation(Required=false)]
                public string SpeedLimit { get; set; }

                /// <summary>
                /// <para>The time when the backup job started. This value is a UNIX timestamp. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1554347313</para>
                /// </summary>
                [NameInMap("StartTime")]
                [Validation(Required=false)]
                public long? StartTime { get; set; }

                /// <summary>
                /// <para>The status of the backup job. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>COMPLETE</b>: The backup job is completed.</description></item>
                /// <item><description><b>PARTIAL_COMPLETE</b>: The backup job is partially completed.</description></item>
                /// <item><description><b>FAILED</b>: The restore job has failed.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>COMPLETE</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

                /// <summary>
                /// <para>The name of a destination table in the Tablestore instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>table1</para>
                /// </summary>
                [NameInMap("TableName")]
                [Validation(Required=false)]
                public string TableName { get; set; }

                /// <summary>
                /// <para>The time when the backup job was updated. This value is a UNIX timestamp. Unit: seconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1554347313</para>
                /// </summary>
                [NameInMap("UpdatedTime")]
                [Validation(Required=false)]
                public long? UpdatedTime { get; set; }

                /// <summary>
                /// <para>The ID of the backup vault.</para>
                /// 
                /// <b>Example:</b>
                /// <para>v-0006******q</para>
                /// </summary>
                [NameInMap("VaultId")]
                [Validation(Required=false)]
                public string VaultId { get; set; }

            }

        }

        /// <summary>
        /// <para>The HTTP status code. The status code 200 indicates that the call is successful.</para>
        /// 
        /// <b>Example:</b>
        /// <para>200</para>
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// <para>The message that is returned. If the call is successful, &quot;successful&quot; is returned. If the call fails, an error message is returned.</para>
        /// 
        /// <b>Example:</b>
        /// <para>successful</para>
        /// </summary>
        [NameInMap("Message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        /// <summary>
        /// <para>The page number of the returned page. Pages start from page 1. Default value: 1.</para>
        /// 
        /// <b>Example:</b>
        /// <para>1</para>
        /// </summary>
        [NameInMap("PageNumber")]
        [Validation(Required=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// <para>The number of entries returned per page. Valid values: 1 to 99. Default value: 10.</para>
        /// 
        /// <b>Example:</b>
        /// <para>10</para>
        /// </summary>
        [NameInMap("PageSize")]
        [Validation(Required=false)]
        public int? PageSize { get; set; }

        /// <summary>
        /// <para>The ID of the request.</para>
        /// 
        /// <b>Example:</b>
        /// <para>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</para>
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// <para>Indicates whether the call is successful.</para>
        /// <list type="bullet">
        /// <item><description>true: The call is successful.</description></item>
        /// <item><description>false: The call fails.</description></item>
        /// </list>
        /// 
        /// <b>Example:</b>
        /// <para>true</para>
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// <para>The total number of returned backup jobs that meet the specified conditions.</para>
        /// 
        /// <b>Example:</b>
        /// <para>8</para>
        /// </summary>
        [NameInMap("TotalCount")]
        [Validation(Required=false)]
        public long? TotalCount { get; set; }

    }

}
