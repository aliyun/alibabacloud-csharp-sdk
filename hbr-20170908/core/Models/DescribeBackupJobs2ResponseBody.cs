// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Hbr20170908.Models
{
    public class DescribeBackupJobs2ResponseBody : TeaModel {
        /// <summary>
        /// The backup jobs that meet the specified conditions.
        /// </summary>
        [NameInMap("BackupJobs")]
        [Validation(Required=false)]
        public DescribeBackupJobs2ResponseBodyBackupJobs BackupJobs { get; set; }
        public class DescribeBackupJobs2ResponseBodyBackupJobs : TeaModel {
            [NameInMap("BackupJob")]
            [Validation(Required=false)]
            public List<DescribeBackupJobs2ResponseBodyBackupJobsBackupJob> BackupJob { get; set; }
            public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJob : TeaModel {
                /// <summary>
                /// The actual amount of data that is backed up after the system removes duplicate files. Unit: bytes.
                /// </summary>
                [NameInMap("ActualBytes")]
                [Validation(Required=false)]
                public long? ActualBytes { get; set; }

                /// <summary>
                /// The number of files that are actually processed.
                /// </summary>
                [NameInMap("ActualFiles")]
                [Validation(Required=false)]
                public long? ActualFiles { get; set; }

                /// <summary>
                /// The actual number of objects that are backed up by the backup job. This parameter is returned only if the value of **SourceType** is **ECS_FILE**.
                /// </summary>
                [NameInMap("ActualItems")]
                [Validation(Required=false)]
                public long? ActualItems { get; set; }

                /// <summary>
                /// The backup type. Only **COMPLETE** may be returned, which indicates full backup.
                /// </summary>
                [NameInMap("BackupType")]
                [Validation(Required=false)]
                public string BackupType { get; set; }

                /// <summary>
                /// The name of the OSS bucket that is backed up. This parameter is returned only if the value of **SourceType** is **OSS**.
                /// </summary>
                [NameInMap("Bucket")]
                [Validation(Required=false)]
                public string Bucket { get; set; }

                /// <summary>
                /// The actual amount of data that is generated by incremental backups. Unit: bytes.
                /// </summary>
                [NameInMap("BytesDone")]
                [Validation(Required=false)]
                public long? BytesDone { get; set; }

                /// <summary>
                /// The total amount of data that is backed up from the data source. Unit: bytes.
                /// </summary>
                [NameInMap("BytesTotal")]
                [Validation(Required=false)]
                public long? BytesTotal { get; set; }

                /// <summary>
                /// The configurations of the incremental file synchronization. This parameter is returned only for data synchronization.
                /// </summary>
                [NameInMap("ChangeListPath")]
                [Validation(Required=false)]
                public string ChangeListPath { get; set; }

                /// <summary>
                /// The ID of the backup client. This parameter is returned only if the value of **SourceType** is **ECS_FILE**.
                /// </summary>
                [NameInMap("ClientId")]
                [Validation(Required=false)]
                public string ClientId { get; set; }

                /// <summary>
                /// The time when the backup job was complete. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.
                /// </summary>
                [NameInMap("CompleteTime")]
                [Validation(Required=false)]
                public long? CompleteTime { get; set; }

                /// <summary>
                /// The time when the file system was created. This parameter is returned only if the value of **SourceType** is **NAS**. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.
                /// </summary>
                [NameInMap("CreateTime")]
                [Validation(Required=false)]
                public long? CreateTime { get; set; }

                /// <summary>
                /// The time when the backup job was created. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.
                /// </summary>
                [NameInMap("CreatedTime")]
                [Validation(Required=false)]
                public long? CreatedTime { get; set; }

                /// <summary>
                /// The name of the Resource Access Management (RAM) role that is created within the source Alibaba Cloud account and assigned to the current Alibaba Cloud account to authorize the current Alibaba Cloud account to back up data across Alibaba Cloud accounts.
                /// </summary>
                [NameInMap("CrossAccountRoleName")]
                [Validation(Required=false)]
                public string CrossAccountRoleName { get; set; }

                /// <summary>
                /// The backup type. Valid values:
                /// 
                /// *   SELF_ACCOUNT: Data is backed up within the same Alibaba Cloud account.
                /// *   CROSS_ACCOUNT: Data is backed up across Alibaba Cloud accounts.
                /// </summary>
                [NameInMap("CrossAccountType")]
                [Validation(Required=false)]
                public string CrossAccountType { get; set; }

                /// <summary>
                /// The ID of the source Alibaba Cloud account that authorizes the current Alibaba Cloud account to back up data across Alibaba Cloud accounts.
                /// </summary>
                [NameInMap("CrossAccountUserId")]
                [Validation(Required=false)]
                public long? CrossAccountUserId { get; set; }

                /// <summary>
                /// The data source details at the destination. This parameter is returned only for data synchronization.
                /// </summary>
                [NameInMap("DestDataSourceDetail")]
                [Validation(Required=false)]
                public string DestDataSourceDetail { get; set; }

                /// <summary>
                /// The data source ID at the destination. This parameter is returned only for data synchronization.
                /// </summary>
                [NameInMap("DestDataSourceId")]
                [Validation(Required=false)]
                public string DestDataSourceId { get; set; }

                /// <summary>
                /// The data source type at the destination. This parameter is returned only for data synchronization.
                /// </summary>
                [NameInMap("DestSourceType")]
                [Validation(Required=false)]
                public string DestSourceType { get; set; }

                /// <summary>
                /// The details of the ECS instance backup job.
                /// </summary>
                [NameInMap("Detail")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetail Detail { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetail : TeaModel {
                    /// <summary>
                    /// The information about the remote replication failure.
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotErrorMessage")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotErrorMessage { get; set; }

                    /// <summary>
                    /// The ID of the remote replication snapshot.
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotId")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotId { get; set; }

                    /// <summary>
                    /// The progress of the remote replication.
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotProgress")]
                    [Validation(Required=false)]
                    public int? DestinationNativeSnapshotProgress { get; set; }

                    /// <summary>
                    /// The state of the remote replication.
                    /// </summary>
                    [NameInMap("DestinationNativeSnapshotStatus")]
                    [Validation(Required=false)]
                    public string DestinationNativeSnapshotStatus { get; set; }

                    /// <summary>
                    /// The retention period of the remote replication backup.
                    /// </summary>
                    [NameInMap("DestinationRetention")]
                    [Validation(Required=false)]
                    public long? DestinationRetention { get; set; }

                    /// <summary>
                    /// The ID of the remote replication backup.
                    /// </summary>
                    [NameInMap("DestinationSnapshotId")]
                    [Validation(Required=false)]
                    public string DestinationSnapshotId { get; set; }

                    /// <summary>
                    /// The mapping between snapshots and disks.
                    /// </summary>
                    [NameInMap("DiskNativeSnapshotIdList")]
                    [Validation(Required=false)]
                    public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetailDiskNativeSnapshotIdList DiskNativeSnapshotIdList { get; set; }
                    public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobDetailDiskNativeSnapshotIdList : TeaModel {
                        [NameInMap("DiskNativeSnapshotId")]
                        [Validation(Required=false)]
                        public List<string> DiskNativeSnapshotId { get; set; }

                    }

                    /// <summary>
                    /// Indicates whether remote replication is enabled.
                    /// </summary>
                    [NameInMap("DoCopy")]
                    [Validation(Required=false)]
                    public bool? DoCopy { get; set; }

                    /// <summary>
                    /// The ID of the backup snapshot.
                    /// </summary>
                    [NameInMap("NativeSnapshotId")]
                    [Validation(Required=false)]
                    public string NativeSnapshotId { get; set; }

                }

                /// <summary>
                /// The error message that is returned for the backup job.
                /// </summary>
                [NameInMap("ErrorMessage")]
                [Validation(Required=false)]
                public string ErrorMessage { get; set; }

                /// <summary>
                /// The paths to the files that are excluded from the backup job. This parameter is returned only if the value of **SourceType** is **ECS_FILE**. The value can be up to 255 characters in length.
                /// </summary>
                [NameInMap("Exclude")]
                [Validation(Required=false)]
                public string Exclude { get; set; }

                /// <summary>
                /// The ID of the NAS file system. This parameter is returned only if the value of **SourceType** is **NAS**.
                /// </summary>
                [NameInMap("FileSystemId")]
                [Validation(Required=false)]
                public string FileSystemId { get; set; }

                /// <summary>
                /// The number of files that have been processed.
                /// </summary>
                [NameInMap("FilesDone")]
                [Validation(Required=false)]
                public long? FilesDone { get; set; }

                /// <summary>
                /// The total number of files to be processed.
                /// </summary>
                [NameInMap("FilesTotal")]
                [Validation(Required=false)]
                public long? FilesTotal { get; set; }

                /// <summary>
                /// The identifier of the cluster that is backed up in the container backup job. This parameter is returned only if the value of SourceType is CONTAINER. If the cluster is a Container Service for Kubernetes (ACK) cluster, the value of this parameter is the ACK cluster ID.
                /// </summary>
                [NameInMap("Identifier")]
                [Validation(Required=false)]
                public string Identifier { get; set; }

                /// <summary>
                /// The paths to the files that are included in the backup job.
                /// </summary>
                [NameInMap("Include")]
                [Validation(Required=false)]
                public string Include { get; set; }

                /// <summary>
                /// The ID of the ECS instance. This parameter is returned only if the value of **SourceType** is **NAS**.
                /// </summary>
                [NameInMap("InstanceId")]
                [Validation(Required=false)]
                public string InstanceId { get; set; }

                /// <summary>
                /// The name of the Tablestore instance.
                /// </summary>
                [NameInMap("InstanceName")]
                [Validation(Required=false)]
                public string InstanceName { get; set; }

                /// <summary>
                /// The number of objects that are backed up. This parameter is returned only if the value of **SourceType** is **ECS_FILE**.
                /// </summary>
                [NameInMap("ItemsDone")]
                [Validation(Required=false)]
                public long? ItemsDone { get; set; }

                /// <summary>
                /// The total number of objects in the data source. This parameter is returned only if the value of **SourceType** is **ECS_FILE**.
                /// </summary>
                [NameInMap("ItemsTotal")]
                [Validation(Required=false)]
                public long? ItemsTotal { get; set; }

                /// <summary>
                /// The ID of the backup job.
                /// </summary>
                [NameInMap("JobId")]
                [Validation(Required=false)]
                public string JobId { get; set; }

                /// <summary>
                /// The name of the backup job.
                /// </summary>
                [NameInMap("JobName")]
                [Validation(Required=false)]
                public string JobName { get; set; }

                /// <summary>
                /// Indicates whether Windows Volume Shadow Copy Service (VSS) is used to define a source path. This parameter is returned only if the value of **SourceType** is **ECS_FILE**.
                /// 
                /// *   This parameter is available only for Windows ECS instances.
                /// *   A value of `["UseVSS":true]` indicates that the consistency between the source data and backup data is ensured while data changes occur in the source data.
                /// *   If VSS is used, multiple directories cannot be backed up at a time.
                /// </summary>
                [NameInMap("Options")]
                [Validation(Required=false)]
                public string Options { get; set; }

                /// <summary>
                /// The details of the Tablestore instance.
                /// </summary>
                [NameInMap("OtsDetail")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetail OtsDetail { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetail : TeaModel {
                    /// <summary>
                    /// The names of the tables in the Tablestore instance.
                    /// </summary>
                    [NameInMap("TableNames")]
                    [Validation(Required=false)]
                    public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetailTableNames TableNames { get; set; }
                    public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobOtsDetailTableNames : TeaModel {
                        [NameInMap("TableName")]
                        [Validation(Required=false)]
                        public List<string> TableName { get; set; }

                    }

                }

                /// <summary>
                /// The source paths.
                /// </summary>
                [NameInMap("Paths")]
                [Validation(Required=false)]
                public DescribeBackupJobs2ResponseBodyBackupJobsBackupJobPaths Paths { get; set; }
                public class DescribeBackupJobs2ResponseBodyBackupJobsBackupJobPaths : TeaModel {
                    [NameInMap("Path")]
                    [Validation(Required=false)]
                    public List<string> Path { get; set; }

                }

                /// <summary>
                /// The ID of the backup plan.
                /// </summary>
                [NameInMap("PlanId")]
                [Validation(Required=false)]
                public string PlanId { get; set; }

                /// <summary>
                /// The prefix of objects that are backed up. This parameter is returned only if the value of **SourceType** is **OSS**.
                /// </summary>
                [NameInMap("Prefix")]
                [Validation(Required=false)]
                public string Prefix { get; set; }

                /// <summary>
                /// The backup progress. Valid values: 0 to 10000. For example, a value of 10000 indicates that the progress is 100%.
                /// </summary>
                [NameInMap("Progress")]
                [Validation(Required=false)]
                public int? Progress { get; set; }

                /// <summary>
                /// The type of the data source. Valid values:
                /// 
                /// *   **ECS_FILE**: ECS file.
                /// *   **OSS**: OSS bucket.
                /// *   **NAS**: NAS file system.
                /// </summary>
                [NameInMap("SourceType")]
                [Validation(Required=false)]
                public string SourceType { get; set; }

                /// <summary>
                /// The average speed at which data is backed up. Unit: KB/s.
                /// </summary>
                [NameInMap("Speed")]
                [Validation(Required=false)]
                public long? Speed { get; set; }

                /// <summary>
                /// The throttling rules. This parameter is returned only if the value of **SourceType** is **ECS_FILE**. Format: `{start}:{end}:{bandwidth}`. Multiple throttling rules are separated by vertical bars (`|`). The time ranges of the throttling rules cannot overlap.
                /// 
                /// *   **start**: the start hour.
                /// *   **end**: the end hour
                /// *   **bandwidth**: the bandwidth. Unit: KB/s.
                /// </summary>
                [NameInMap("SpeedLimit")]
                [Validation(Required=false)]
                public string SpeedLimit { get; set; }

                /// <summary>
                /// The time when the backup job started. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.
                /// </summary>
                [NameInMap("StartTime")]
                [Validation(Required=false)]
                public long? StartTime { get; set; }

                /// <summary>
                /// The state of the backup job. Valid values:
                /// 
                /// *   **COMPLETE**
                /// *   **PARTIAL_COMPLETE**
                /// *   **FAILED**
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public string Status { get; set; }

                /// <summary>
                /// The name of the table in the Tablestore instance.
                /// </summary>
                [NameInMap("TableName")]
                [Validation(Required=false)]
                public string TableName { get; set; }

                /// <summary>
                /// The time when the backup job was last updated. This value is a UNIX timestamp representing the number of seconds that have elapsed since January 1, 1970, 00:00:00 UTC.
                /// </summary>
                [NameInMap("UpdatedTime")]
                [Validation(Required=false)]
                public long? UpdatedTime { get; set; }

                /// <summary>
                /// The ID of the backup vault.
                /// </summary>
                [NameInMap("VaultId")]
                [Validation(Required=false)]
                public string VaultId { get; set; }

            }

        }

        /// <summary>
        /// The HTTP status code. The status code 200 indicates that the call is successful.
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// The message that is returned. If the call is successful, "successful" is returned. If the call fails, an error message is returned.
        /// </summary>
        [NameInMap("Message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        /// <summary>
        /// The page number of the returned page. Pages start from page 1. Default value: 1.
        /// </summary>
        [NameInMap("PageNumber")]
        [Validation(Required=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// The number of entries returned on each page. Valid values: 1 to 99. Default value: 10.
        /// </summary>
        [NameInMap("PageSize")]
        [Validation(Required=false)]
        public int? PageSize { get; set; }

        /// <summary>
        /// The ID of the request.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Indicates whether the call is successful. Valid values:
        /// 
        /// *   true: The call is successful.
        /// *   false: The call fails.
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// The total number of returned backup jobs that meet the specified conditions.
        /// </summary>
        [NameInMap("TotalCount")]
        [Validation(Required=false)]
        public long? TotalCount { get; set; }

    }

}
