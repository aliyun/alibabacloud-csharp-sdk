// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.CloudAPI20160714.Models
{
    public class DescribeApiGroupResponseBody : TeaModel {
        /// <summary>
        /// The root path of the API.
        /// </summary>
        [NameInMap("BasePath")]
        [Validation(Required=false)]
        public string BasePath { get; set; }

        /// <summary>
        /// The billing status of the API group.
        /// 
        /// *   **NORMAL**: The API group is normal.
        /// *   **LOCKED**: The API group is locked due to overdue payments.
        /// </summary>
        [NameInMap("BillingStatus")]
        [Validation(Required=false)]
        public string BillingStatus { get; set; }

        /// <summary>
        /// The products on Alibaba Cloud Marketplace.
        /// </summary>
        [NameInMap("CloudMarketCommodity")]
        [Validation(Required=false)]
        public bool? CloudMarketCommodity { get; set; }

        /// <summary>
        /// The CloudMonitor application group.
        /// </summary>
        [NameInMap("CmsMonitorGroup")]
        [Validation(Required=false)]
        public string CmsMonitorGroup { get; set; }

        /// <summary>
        /// The list of associated tags. Separate multiple tags with commas (,).
        /// </summary>
        [NameInMap("CompatibleFlags")]
        [Validation(Required=false)]
        public string CompatibleFlags { get; set; }

        /// <summary>
        /// The creation time (UTC) of the API group.
        /// </summary>
        [NameInMap("CreatedTime")]
        [Validation(Required=false)]
        public string CreatedTime { get; set; }

        /// <summary>
        /// The details about the custom domain name.
        /// </summary>
        [NameInMap("CustomDomains")]
        [Validation(Required=false)]
        public DescribeApiGroupResponseBodyCustomDomains CustomDomains { get; set; }
        public class DescribeApiGroupResponseBodyCustomDomains : TeaModel {
            [NameInMap("DomainItem")]
            [Validation(Required=false)]
            public List<DescribeApiGroupResponseBodyCustomDomainsDomainItem> DomainItem { get; set; }
            public class DescribeApiGroupResponseBodyCustomDomainsDomainItem : TeaModel {
                /// <summary>
                /// Bind runtime environment alias
                /// </summary>
                [NameInMap("BindStageAlias")]
                [Validation(Required=false)]
                public string BindStageAlias { get; set; }

                /// <summary>
                /// The environment in which the associated API group runs.
                /// </summary>
                [NameInMap("BindStageName")]
                [Validation(Required=false)]
                public string BindStageName { get; set; }

                /// <summary>
                /// The SSL certificate ID, which is automatically generated by the system.
                /// </summary>
                [NameInMap("CertificateId")]
                [Validation(Required=false)]
                public string CertificateId { get; set; }

                /// <summary>
                /// The name of the SSL certificate.
                /// </summary>
                [NameInMap("CertificateName")]
                [Validation(Required=false)]
                public string CertificateName { get; set; }

                /// <summary>
                /// The time when the certificate expires.
                /// </summary>
                [NameInMap("CertificateValidEnd")]
                [Validation(Required=false)]
                public long? CertificateValidEnd { get; set; }

                /// <summary>
                /// The time when the certificate takes effect.
                /// </summary>
                [NameInMap("CertificateValidStart")]
                [Validation(Required=false)]
                public long? CertificateValidStart { get; set; }

                /// <summary>
                /// The type of the custom domain name.
                /// </summary>
                [NameInMap("CustomDomainType")]
                [Validation(Required=false)]
                public string CustomDomainType { get; set; }

                /// <summary>
                /// The binding status of the custom domain name. Valid values:
                /// 
                /// *   **BINDING**: The domain name is bound.
                /// *   **BOUND**: The domain name is not bound.
                /// </summary>
                [NameInMap("DomainBindingStatus")]
                [Validation(Required=false)]
                public string DomainBindingStatus { get; set; }

                /// <summary>
                /// The domain name resolution status. Valid values:
                /// 
                /// *   **RESOLVED**
                /// *   **UNRESOLVED**
                /// </summary>
                [NameInMap("DomainCNAMEStatus")]
                [Validation(Required=false)]
                public string DomainCNAMEStatus { get; set; }

                /// <summary>
                /// The validity status of the domain name. Valid values:
                /// 
                /// *   **NORMAL**: The domain name is valid.
                /// *   **ABNORMAL**: The domain name is invalid. This status affects API calls and needs to be rectified as soon as possible.
                /// </summary>
                [NameInMap("DomainLegalStatus")]
                [Validation(Required=false)]
                public string DomainLegalStatus { get; set; }

                /// <summary>
                /// The domain name.
                /// </summary>
                [NameInMap("DomainName")]
                [Validation(Required=false)]
                public string DomainName { get; set; }

                /// <summary>
                /// Remarks about the domain name, such as the cause of an exception.
                /// </summary>
                [NameInMap("DomainRemark")]
                [Validation(Required=false)]
                public string DomainRemark { get; set; }

                /// <summary>
                /// The status of the domain that uses the WebSocket feature.
                /// </summary>
                [NameInMap("DomainWebSocketStatus")]
                [Validation(Required=false)]
                public string DomainWebSocketStatus { get; set; }

                /// <summary>
                /// Indicates whether to redirect HTTP requests to HTTPS.
                /// </summary>
                [NameInMap("IsHttpRedirectToHttps")]
                [Validation(Required=false)]
                public bool? IsHttpRedirectToHttps { get; set; }

                /// <summary>
                /// The wildcard domain name mode.
                /// </summary>
                [NameInMap("WildcardDomainPatterns")]
                [Validation(Required=false)]
                public string WildcardDomainPatterns { get; set; }

            }

        }

        /// <summary>
        /// The custom trace configuration.
        /// </summary>
        [NameInMap("CustomTraceConfig")]
        [Validation(Required=false)]
        public string CustomTraceConfig { get; set; }

        /// <summary>
        /// The list of custom configuration items.
        /// </summary>
        [NameInMap("CustomerConfigs")]
        [Validation(Required=false)]
        public string CustomerConfigs { get; set; }

        /// <summary>
        /// The type of exclusive instance where the group is located
        /// 
        /// - VPC fusion type exclusive instance: vpc_connect
        /// - Traditional type exclusive instance: normal
        /// </summary>
        [NameInMap("DedicatedInstanceType")]
        [Validation(Required=false)]
        public string DedicatedInstanceType { get; set; }

        /// <summary>
        /// The default domain name.
        /// </summary>
        [NameInMap("DefaultDomain")]
        [Validation(Required=false)]
        public string DefaultDomain { get; set; }

        /// <summary>
        /// The description of the API group.
        /// </summary>
        [NameInMap("Description")]
        [Validation(Required=false)]
        public string Description { get; set; }

        /// <summary>
        /// Indicates whether access over the public second-level domain name is enabled. Valid values:
        /// 
        /// *   true
        /// *   false
        /// </summary>
        [NameInMap("DisableInnerDomain")]
        [Validation(Required=false)]
        public bool? DisableInnerDomain { get; set; }

        /// <summary>
        /// The ID of the API group. This ID is generated by the system and globally unique.
        /// </summary>
        [NameInMap("GroupId")]
        [Validation(Required=false)]
        public string GroupId { get; set; }

        /// <summary>
        /// The name of the group to which the API belongs.
        /// </summary>
        [NameInMap("GroupName")]
        [Validation(Required=false)]
        public string GroupName { get; set; }

        /// <summary>
        /// The HTTPS policy.
        /// </summary>
        [NameInMap("HttpsPolicy")]
        [Validation(Required=false)]
        public string HttpsPolicy { get; set; }

        /// <summary>
        /// The validity status of the API group. Valid values:
        /// 
        /// *   **NORMAL**: The API group is normal.
        /// *   **LOCKED**: The API group is locked because it is not valid.
        /// </summary>
        [NameInMap("IllegalStatus")]
        [Validation(Required=false)]
        public string IllegalStatus { get; set; }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [NameInMap("InstanceId")]
        [Validation(Required=false)]
        public string InstanceId { get; set; }

        /// <summary>
        /// The type of the instance.
        /// 
        /// *   CLASSIC_SHARED: shared instance that uses the classic network configuration
        /// *   VPC_SHARED: shared instance that uses VPC
        /// *   VPC_DEDICATED: dedicated instance that uses VPC
        /// </summary>
        [NameInMap("InstanceType")]
        [Validation(Required=false)]
        public string InstanceType { get; set; }

        /// <summary>
        /// The IPv6 status.
        /// </summary>
        [NameInMap("Ipv6Status")]
        [Validation(Required=false)]
        public string Ipv6Status { get; set; }

        /// <summary>
        /// The reason for the failure of the group migration instance task. When the value of the MigrationStatus parameter is Failed, it is not empty.
        /// </summary>
        [NameInMap("MigrationError")]
        [Validation(Required=false)]
        public string MigrationError { get; set; }

        /// <summary>
        /// Group migration instance task status
        /// 
        /// - Running
        /// - Success
        /// - Failed
        /// </summary>
        [NameInMap("MigrationStatus")]
        [Validation(Required=false)]
        public string MigrationStatus { get; set; }

        /// <summary>
        /// The last modification time (UTC) of the API group.
        /// </summary>
        [NameInMap("ModifiedTime")]
        [Validation(Required=false)]
        public string ModifiedTime { get; set; }

        /// <summary>
        /// Specifies whether to pass headers.
        /// </summary>
        [NameInMap("PassthroughHeaders")]
        [Validation(Required=false)]
        public string PassthroughHeaders { get; set; }

        /// <summary>
        /// The region to which the API group belongs.
        /// </summary>
        [NameInMap("RegionId")]
        [Validation(Required=false)]
        public string RegionId { get; set; }

        /// <summary>
        /// The ID of the request.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// The runtime environment information.
        /// </summary>
        [NameInMap("StageItems")]
        [Validation(Required=false)]
        public DescribeApiGroupResponseBodyStageItems StageItems { get; set; }
        public class DescribeApiGroupResponseBodyStageItems : TeaModel {
            [NameInMap("StageInfo")]
            [Validation(Required=false)]
            public List<DescribeApiGroupResponseBodyStageItemsStageInfo> StageInfo { get; set; }
            public class DescribeApiGroupResponseBodyStageItemsStageInfo : TeaModel {
                /// <summary>
                /// The environment description.
                /// </summary>
                [NameInMap("Description")]
                [Validation(Required=false)]
                public string Description { get; set; }

                /// <summary>
                /// The environment ID.
                /// </summary>
                [NameInMap("StageId")]
                [Validation(Required=false)]
                public string StageId { get; set; }

                /// <summary>
                /// The environment name.
                /// </summary>
                [NameInMap("StageName")]
                [Validation(Required=false)]
                public string StageName { get; set; }

            }

        }

        /// <summary>
        /// The status of the API group.
        /// 
        /// *   **NORMAL**: The API group is normal.
        /// *   **DELETE**: The API group is deleted.
        /// </summary>
        [NameInMap("Status")]
        [Validation(Required=false)]
        public string Status { get; set; }

        /// <summary>
        /// The second-level domain name automatically assigned to the API group.
        /// </summary>
        [NameInMap("SubDomain")]
        [Validation(Required=false)]
        public string SubDomain { get; set; }

        /// <summary>
        /// The upper QPS limit of the API group. The default value is 500. You can increase the upper limit by submitting an application.
        /// </summary>
        [NameInMap("TrafficLimit")]
        [Validation(Required=false)]
        public int? TrafficLimit { get; set; }

        /// <summary>
        /// The user log settings.
        /// </summary>
        [NameInMap("UserLogConfig")]
        [Validation(Required=false)]
        public string UserLogConfig { get; set; }

        /// <summary>
        /// The VPC domain name.
        /// </summary>
        [NameInMap("VpcDomain")]
        [Validation(Required=false)]
        public string VpcDomain { get; set; }

        /// <summary>
        /// The VPC SLB domain name.
        /// </summary>
        [NameInMap("VpcSlbIntranetDomain")]
        [Validation(Required=false)]
        public string VpcSlbIntranetDomain { get; set; }

    }

}
