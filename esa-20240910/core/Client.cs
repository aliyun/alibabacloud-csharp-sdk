// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;

using Tea;
using Tea.Utils;

using AlibabaCloud.SDK.ESA20240910.Models;

namespace AlibabaCloud.SDK.ESA20240910
{
    public class Client : AlibabaCloud.OpenApiClient.Client
    {

        public Client(AlibabaCloud.OpenApiClient.Models.Config config): base(config)
        {
            this._endpointRule = "";
            CheckConfig(config);
            this._endpoint = GetEndpoint("esa", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
        }


        public string GetEndpoint(string productId, string regionId, string endpointRule, string network, string suffix, Dictionary<string, string> endpointMap, string endpoint)
        {
            if (!AlibabaCloud.TeaUtil.Common.Empty(endpoint))
            {
                return endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(endpointMap) && !AlibabaCloud.TeaUtil.Common.Empty(endpointMap.Get(regionId)))
            {
                return endpointMap.Get(regionId);
            }
            return AlibabaCloud.EndpointUtil.Common.GetEndpointRules(productId, regionId, endpointRule, network, suffix);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the client based on the certificate ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActivateClientCertificateResponse
        /// </returns>
        public ActivateClientCertificateResponse ActivateClientCertificateWithOptions(ActivateClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActivateClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActivateClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the client based on the certificate ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActivateClientCertificateResponse
        /// </returns>
        public async Task<ActivateClientCertificateResponse> ActivateClientCertificateWithOptionsAsync(ActivateClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActivateClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActivateClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the client based on the certificate ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// ActivateClientCertificateResponse
        /// </returns>
        public ActivateClientCertificateResponse ActivateClientCertificate(ActivateClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ActivateClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Activates the client based on the certificate ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// ActivateClientCertificateResponse
        /// </returns>
        public async Task<ActivateClientCertificateResponse> ActivateClientCertificateAsync(ActivateClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ActivateClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enable Version Management</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateVersionManagementRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActivateVersionManagementResponse
        /// </returns>
        public ActivateVersionManagementResponse ActivateVersionManagementWithOptions(ActivateVersionManagementRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActivateVersionManagement",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActivateVersionManagementResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enable Version Management</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateVersionManagementRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ActivateVersionManagementResponse
        /// </returns>
        public async Task<ActivateVersionManagementResponse> ActivateVersionManagementWithOptionsAsync(ActivateVersionManagementRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ActivateVersionManagement",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ActivateVersionManagementResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enable Version Management</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateVersionManagementRequest
        /// </param>
        /// 
        /// <returns>
        /// ActivateVersionManagementResponse
        /// </returns>
        public ActivateVersionManagementResponse ActivateVersionManagement(ActivateVersionManagementRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ActivateVersionManagementWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enable Version Management</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ActivateVersionManagementRequest
        /// </param>
        /// 
        /// <returns>
        /// ActivateVersionManagementResponse
        /// </returns>
        public async Task<ActivateVersionManagementResponse> ActivateVersionManagementAsync(ActivateVersionManagementRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ActivateVersionManagementWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Applies for a free SSL certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ApplyCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ApplyCertificateResponse
        /// </returns>
        public ApplyCertificateResponse ApplyCertificateWithOptions(ApplyCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ApplyCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ApplyCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Applies for a free SSL certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ApplyCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ApplyCertificateResponse
        /// </returns>
        public async Task<ApplyCertificateResponse> ApplyCertificateWithOptionsAsync(ApplyCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ApplyCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ApplyCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Applies for a free SSL certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ApplyCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// ApplyCertificateResponse
        /// </returns>
        public ApplyCertificateResponse ApplyCertificate(ApplyCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ApplyCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Applies for a free SSL certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ApplyCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// ApplyCertificateResponse
        /// </returns>
        public async Task<ApplyCertificateResponse> ApplyCertificateAsync(ApplyCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ApplyCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds DNS records of different record types at a time..</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to create or update multiple DNS records at a time. It is suitable for managing a large number of DNS configurations. Supported record types include but are not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. The operation allows you to configure the priority, flag, tag, and weight for DNS records. In addition, for specific types of records, such as CERT, SSHFP, SMIMEA, and TLSA, advanced settings such as certificate information and encryption algorithms are also supported.
        /// Successful and failed records along with error messages are listed in the response.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// BatchCreateRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateRecordsResponse
        /// </returns>
        public BatchCreateRecordsResponse BatchCreateRecordsWithOptions(BatchCreateRecordsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchCreateRecordsShrinkRequest request = new BatchCreateRecordsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RecordList))
            {
                request.RecordListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RecordList, "RecordList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordListShrink))
            {
                query["RecordList"] = request.RecordListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds DNS records of different record types at a time..</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to create or update multiple DNS records at a time. It is suitable for managing a large number of DNS configurations. Supported record types include but are not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. The operation allows you to configure the priority, flag, tag, and weight for DNS records. In addition, for specific types of records, such as CERT, SSHFP, SMIMEA, and TLSA, advanced settings such as certificate information and encryption algorithms are also supported.
        /// Successful and failed records along with error messages are listed in the response.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// BatchCreateRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateRecordsResponse
        /// </returns>
        public async Task<BatchCreateRecordsResponse> BatchCreateRecordsWithOptionsAsync(BatchCreateRecordsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchCreateRecordsShrinkRequest request = new BatchCreateRecordsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RecordList))
            {
                request.RecordListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RecordList, "RecordList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordListShrink))
            {
                query["RecordList"] = request.RecordListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds DNS records of different record types at a time..</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to create or update multiple DNS records at a time. It is suitable for managing a large number of DNS configurations. Supported record types include but are not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. The operation allows you to configure the priority, flag, tag, and weight for DNS records. In addition, for specific types of records, such as CERT, SSHFP, SMIMEA, and TLSA, advanced settings such as certificate information and encryption algorithms are also supported.
        /// Successful and failed records along with error messages are listed in the response.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchCreateRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateRecordsResponse
        /// </returns>
        public BatchCreateRecordsResponse BatchCreateRecords(BatchCreateRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCreateRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds DNS records of different record types at a time..</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to create or update multiple DNS records at a time. It is suitable for managing a large number of DNS configurations. Supported record types include but are not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. The operation allows you to configure the priority, flag, tag, and weight for DNS records. In addition, for specific types of records, such as CERT, SSHFP, SMIMEA, and TLSA, advanced settings such as certificate information and encryption algorithms are also supported.
        /// Successful and failed records along with error messages are listed in the response.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchCreateRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateRecordsResponse
        /// </returns>
        public async Task<BatchCreateRecordsResponse> BatchCreateRecordsAsync(BatchCreateRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCreateRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Create WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchCreateWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateWafRulesResponse
        /// </returns>
        public BatchCreateWafRulesResponse BatchCreateWafRulesWithOptions(BatchCreateWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchCreateWafRulesShrinkRequest request = new BatchCreateWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Configs))
            {
                request.ConfigsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Configs, "Configs", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Shared))
            {
                request.SharedShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Shared, "Shared", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigsShrink))
            {
                body["Configs"] = request.ConfigsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharedShrink))
            {
                body["Shared"] = request.SharedShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateWafRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Create WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchCreateWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateWafRulesResponse
        /// </returns>
        public async Task<BatchCreateWafRulesResponse> BatchCreateWafRulesWithOptionsAsync(BatchCreateWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchCreateWafRulesShrinkRequest request = new BatchCreateWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Configs))
            {
                request.ConfigsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Configs, "Configs", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Shared))
            {
                request.SharedShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Shared, "Shared", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigsShrink))
            {
                body["Configs"] = request.ConfigsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharedShrink))
            {
                body["Shared"] = request.SharedShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateWafRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Create WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchCreateWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateWafRulesResponse
        /// </returns>
        public BatchCreateWafRulesResponse BatchCreateWafRules(BatchCreateWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCreateWafRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Create WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchCreateWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchCreateWafRulesResponse
        /// </returns>
        public async Task<BatchCreateWafRulesResponse> BatchCreateWafRulesAsync(BatchCreateWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCreateWafRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes key-value pairs from a namespace at a time based on keys.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchDeleteKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvResponse
        /// </returns>
        public BatchDeleteKvResponse BatchDeleteKvWithOptions(BatchDeleteKvRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchDeleteKvShrinkRequest request = new BatchDeleteKvShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Keys))
            {
                request.KeysShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Keys, "Keys", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeysShrink))
            {
                body["Keys"] = request.KeysShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteKvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes key-value pairs from a namespace at a time based on keys.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchDeleteKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvResponse
        /// </returns>
        public async Task<BatchDeleteKvResponse> BatchDeleteKvWithOptionsAsync(BatchDeleteKvRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchDeleteKvShrinkRequest request = new BatchDeleteKvShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Keys))
            {
                request.KeysShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Keys, "Keys", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeysShrink))
            {
                body["Keys"] = request.KeysShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteKvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes key-value pairs from a namespace at a time based on keys.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchDeleteKvRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvResponse
        /// </returns>
        public BatchDeleteKvResponse BatchDeleteKv(BatchDeleteKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchDeleteKvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes key-value pairs from a namespace at a time based on keys.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchDeleteKvRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvResponse
        /// </returns>
        public async Task<BatchDeleteKvResponse> BatchDeleteKvAsync(BatchDeleteKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchDeleteKvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes multiple key-value pairs from a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchDeleteKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchDeleteWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for deleting key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         rawReq := BatchDeleteKvRequest{
        ///             Namespace: &amp;namespace,
        ///         }
        ///         for i := 0; i &lt; 10000; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             rawReq.Keys = append(rawReq.Keys, &amp;key)
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchDeleteKvWithHighCapacity operation for deletion.
        ///         reqHighCapacity := BatchDeleteKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchDeleteKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchDeleteKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvWithHighCapacityResponse
        /// </returns>
        public BatchDeleteKvWithHighCapacityResponse BatchDeleteKvWithHighCapacityWithOptions(BatchDeleteKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteKvWithHighCapacityResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes multiple key-value pairs from a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchDeleteKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchDeleteWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for deleting key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         rawReq := BatchDeleteKvRequest{
        ///             Namespace: &amp;namespace,
        ///         }
        ///         for i := 0; i &lt; 10000; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             rawReq.Keys = append(rawReq.Keys, &amp;key)
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchDeleteKvWithHighCapacity operation for deletion.
        ///         reqHighCapacity := BatchDeleteKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchDeleteKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchDeleteKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvWithHighCapacityResponse
        /// </returns>
        public async Task<BatchDeleteKvWithHighCapacityResponse> BatchDeleteKvWithHighCapacityWithOptionsAsync(BatchDeleteKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteKvWithHighCapacityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes multiple key-value pairs from a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchDeleteKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchDeleteWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for deleting key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         rawReq := BatchDeleteKvRequest{
        ///             Namespace: &amp;namespace,
        ///         }
        ///         for i := 0; i &lt; 10000; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             rawReq.Keys = append(rawReq.Keys, &amp;key)
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchDeleteKvWithHighCapacity operation for deletion.
        ///         reqHighCapacity := BatchDeleteKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchDeleteKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchDeleteKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvWithHighCapacityResponse
        /// </returns>
        public BatchDeleteKvWithHighCapacityResponse BatchDeleteKvWithHighCapacity(BatchDeleteKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchDeleteKvWithHighCapacityWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes multiple key-value pairs from a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850204.html">BatchDeleteKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchDeleteKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchDeleteWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for deleting key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         rawReq := BatchDeleteKvRequest{
        ///             Namespace: &amp;namespace,
        ///         }
        ///         for i := 0; i &lt; 10000; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             rawReq.Keys = append(rawReq.Keys, &amp;key)
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchDeleteKvWithHighCapacity operation for deletion.
        ///         reqHighCapacity := BatchDeleteKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchDeleteKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchDeleteKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchDeleteKvWithHighCapacityResponse
        /// </returns>
        public async Task<BatchDeleteKvWithHighCapacityResponse> BatchDeleteKvWithHighCapacityAsync(BatchDeleteKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchDeleteKvWithHighCapacityWithOptionsAsync(request, runtime);
        }

        public BatchDeleteKvWithHighCapacityResponse BatchDeleteKvWithHighCapacityAdvance(BatchDeleteKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = this._credential.GetAccessKeyId();
            string accessKeySecret = this._credential.GetAccessKeySecret();
            string securityToken = this._credential.GetSecurityToken();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            BatchDeleteKvWithHighCapacityRequest batchDeleteKvWithHighCapacityReq = new BatchDeleteKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, batchDeleteKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = authClient.AuthorizeFileUploadWithOptions(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                ossClient.PostObject(uploadRequest, ossRuntime);
                batchDeleteKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            BatchDeleteKvWithHighCapacityResponse batchDeleteKvWithHighCapacityResp = BatchDeleteKvWithHighCapacityWithOptions(batchDeleteKvWithHighCapacityReq, runtime);
            return batchDeleteKvWithHighCapacityResp;
        }

        public async Task<BatchDeleteKvWithHighCapacityResponse> BatchDeleteKvWithHighCapacityAdvanceAsync(BatchDeleteKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = await this._credential.GetAccessKeyIdAsync();
            string accessKeySecret = await this._credential.GetAccessKeySecretAsync();
            string securityToken = await this._credential.GetSecurityTokenAsync();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            BatchDeleteKvWithHighCapacityRequest batchDeleteKvWithHighCapacityReq = new BatchDeleteKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, batchDeleteKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = await authClient.AuthorizeFileUploadWithOptionsAsync(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                await ossClient.PostObjectAsync(uploadRequest, ossRuntime);
                batchDeleteKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            BatchDeleteKvWithHighCapacityResponse batchDeleteKvWithHighCapacityResp = await BatchDeleteKvWithHighCapacityWithOptionsAsync(batchDeleteKvWithHighCapacityReq, runtime);
            return batchDeleteKvWithHighCapacityResp;
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Get Expression Matches</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchGetExpressionFieldsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchGetExpressionFieldsResponse
        /// </returns>
        public BatchGetExpressionFieldsResponse BatchGetExpressionFieldsWithOptions(BatchGetExpressionFieldsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchGetExpressionFieldsShrinkRequest request = new BatchGetExpressionFieldsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Expressions))
            {
                request.ExpressionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Expressions, "Expressions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpressionsShrink))
            {
                body["Expressions"] = request.ExpressionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetExpressionFields",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetExpressionFieldsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Get Expression Matches</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchGetExpressionFieldsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchGetExpressionFieldsResponse
        /// </returns>
        public async Task<BatchGetExpressionFieldsResponse> BatchGetExpressionFieldsWithOptionsAsync(BatchGetExpressionFieldsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchGetExpressionFieldsShrinkRequest request = new BatchGetExpressionFieldsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Expressions))
            {
                request.ExpressionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Expressions, "Expressions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpressionsShrink))
            {
                body["Expressions"] = request.ExpressionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetExpressionFields",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetExpressionFieldsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Get Expression Matches</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchGetExpressionFieldsRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchGetExpressionFieldsResponse
        /// </returns>
        public BatchGetExpressionFieldsResponse BatchGetExpressionFields(BatchGetExpressionFieldsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetExpressionFieldsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Batch Get Expression Matches</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchGetExpressionFieldsRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchGetExpressionFieldsResponse
        /// </returns>
        public async Task<BatchGetExpressionFieldsResponse> BatchGetExpressionFieldsAsync(BatchGetExpressionFieldsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetExpressionFieldsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchPutKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvResponse
        /// </returns>
        public BatchPutKvResponse BatchPutKvWithOptions(BatchPutKvRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchPutKvShrinkRequest request = new BatchPutKvShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KvList))
            {
                request.KvListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KvList, "KvList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KvListShrink))
            {
                body["KvList"] = request.KvListShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPutKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPutKvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchPutKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvResponse
        /// </returns>
        public async Task<BatchPutKvResponse> BatchPutKvWithOptionsAsync(BatchPutKvRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchPutKvShrinkRequest request = new BatchPutKvShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KvList))
            {
                request.KvListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KvList, "KvList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KvListShrink))
            {
                body["KvList"] = request.KvListShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPutKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPutKvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchPutKvRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvResponse
        /// </returns>
        public BatchPutKvResponse BatchPutKv(BatchPutKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchPutKvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchPutKvRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvResponse
        /// </returns>
        public async Task<BatchPutKvResponse> BatchPutKvAsync(BatchPutKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchPutKvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchPutKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchPutKvWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         numKv := 10000
        ///         kvList := make([]<em>BatchPutKvRequestKvList, numKv)
        ///         test_value := strings.Repeat(&quot;a&quot;, 10</em>1024)
        ///         for i := 0; i &lt; numKv; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             value := test_value
        ///             kvList[i] = &amp;BatchPutKvRequestKvList{
        ///                 Key:   &amp;key,
        ///                 Value: &amp;value,
        ///             }
        ///         }
        ///         rawReq := BatchPutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             KvList:    kvList,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchPutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := BatchPutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchPutKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchPutKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvWithHighCapacityResponse
        /// </returns>
        public BatchPutKvWithHighCapacityResponse BatchPutKvWithHighCapacityWithOptions(BatchPutKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPutKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPutKvWithHighCapacityResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchPutKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchPutKvWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         numKv := 10000
        ///         kvList := make([]<em>BatchPutKvRequestKvList, numKv)
        ///         test_value := strings.Repeat(&quot;a&quot;, 10</em>1024)
        ///         for i := 0; i &lt; numKv; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             value := test_value
        ///             kvList[i] = &amp;BatchPutKvRequestKvList{
        ///                 Key:   &amp;key,
        ///                 Value: &amp;value,
        ///             }
        ///         }
        ///         rawReq := BatchPutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             KvList:    kvList,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchPutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := BatchPutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchPutKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchPutKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvWithHighCapacityResponse
        /// </returns>
        public async Task<BatchPutKvWithHighCapacityResponse> BatchPutKvWithHighCapacityWithOptionsAsync(BatchPutKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPutKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPutKvWithHighCapacityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchPutKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchPutKvWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         numKv := 10000
        ///         kvList := make([]<em>BatchPutKvRequestKvList, numKv)
        ///         test_value := strings.Repeat(&quot;a&quot;, 10</em>1024)
        ///         for i := 0; i &lt; numKv; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             value := test_value
        ///             kvList[i] = &amp;BatchPutKvRequestKvList{
        ///                 Key:   &amp;key,
        ///                 Value: &amp;value,
        ///             }
        ///         }
        ///         rawReq := BatchPutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             KvList:    kvList,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchPutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := BatchPutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchPutKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchPutKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvWithHighCapacityResponse
        /// </returns>
        public BatchPutKvWithHighCapacityResponse BatchPutKvWithHighCapacity(BatchPutKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchPutKvWithHighCapacityWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures key-value pairs for a namespace at a time based on specified keys. The request body can be up to 100 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a>. For small request bodies, we recommend that you use <a href="https://help.aliyun.com/document_detail/2850203.html">BatchPutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and BatchPutKvWithHighCapacityAdvance to call the operation.
        ///     func TestBatchPutKvWithHighCapacity() error {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs at a time.
        ///         namespace := &quot;test_batch_put&quot;
        ///         numKv := 10000
        ///         kvList := make([]<em>BatchPutKvRequestKvList, numKv)
        ///         test_value := strings.Repeat(&quot;a&quot;, 10</em>1024)
        ///         for i := 0; i &lt; numKv; i++ {
        ///             key := fmt.Sprintf(&quot;test_key_%d&quot;, i)
        ///             value := test_value
        ///             kvList[i] = &amp;BatchPutKvRequestKvList{
        ///                 Key:   &amp;key,
        ///                 Value: &amp;value,
        ///             }
        ///         }
        ///         rawReq := BatchPutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             KvList:    kvList,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the BatchPutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := BatchPutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             UrlObject: bytes.NewReader(payload),
        ///         }
        ///         resp, err := cli.BatchPutKvWithHighCapacityAdvance(&amp;reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// BatchPutKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchPutKvWithHighCapacityResponse
        /// </returns>
        public async Task<BatchPutKvWithHighCapacityResponse> BatchPutKvWithHighCapacityAsync(BatchPutKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchPutKvWithHighCapacityWithOptionsAsync(request, runtime);
        }

        public BatchPutKvWithHighCapacityResponse BatchPutKvWithHighCapacityAdvance(BatchPutKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = this._credential.GetAccessKeyId();
            string accessKeySecret = this._credential.GetAccessKeySecret();
            string securityToken = this._credential.GetSecurityToken();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            BatchPutKvWithHighCapacityRequest batchPutKvWithHighCapacityReq = new BatchPutKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, batchPutKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = authClient.AuthorizeFileUploadWithOptions(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                ossClient.PostObject(uploadRequest, ossRuntime);
                batchPutKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            BatchPutKvWithHighCapacityResponse batchPutKvWithHighCapacityResp = BatchPutKvWithHighCapacityWithOptions(batchPutKvWithHighCapacityReq, runtime);
            return batchPutKvWithHighCapacityResp;
        }

        public async Task<BatchPutKvWithHighCapacityResponse> BatchPutKvWithHighCapacityAdvanceAsync(BatchPutKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = await this._credential.GetAccessKeyIdAsync();
            string accessKeySecret = await this._credential.GetAccessKeySecretAsync();
            string securityToken = await this._credential.GetSecurityTokenAsync();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            BatchPutKvWithHighCapacityRequest batchPutKvWithHighCapacityReq = new BatchPutKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, batchPutKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = await authClient.AuthorizeFileUploadWithOptionsAsync(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                await ossClient.PostObjectAsync(uploadRequest, ossRuntime);
                batchPutKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            BatchPutKvWithHighCapacityResponse batchPutKvWithHighCapacityResp = await BatchPutKvWithHighCapacityWithOptionsAsync(batchPutKvWithHighCapacityReq, runtime);
            return batchPutKvWithHighCapacityResp;
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies multiple rules in a specific Web Application Firewall (WAF) ruleset at a time.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchUpdateWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchUpdateWafRulesResponse
        /// </returns>
        public BatchUpdateWafRulesResponse BatchUpdateWafRulesWithOptions(BatchUpdateWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchUpdateWafRulesShrinkRequest request = new BatchUpdateWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Configs))
            {
                request.ConfigsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Configs, "Configs", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Shared))
            {
                request.SharedShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Shared, "Shared", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigsShrink))
            {
                body["Configs"] = request.ConfigsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharedShrink))
            {
                body["Shared"] = request.SharedShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateWafRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies multiple rules in a specific Web Application Firewall (WAF) ruleset at a time.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BatchUpdateWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BatchUpdateWafRulesResponse
        /// </returns>
        public async Task<BatchUpdateWafRulesResponse> BatchUpdateWafRulesWithOptionsAsync(BatchUpdateWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BatchUpdateWafRulesShrinkRequest request = new BatchUpdateWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Configs))
            {
                request.ConfigsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Configs, "Configs", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Shared))
            {
                request.SharedShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Shared, "Shared", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigsShrink))
            {
                body["Configs"] = request.ConfigsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharedShrink))
            {
                body["Shared"] = request.SharedShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateWafRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies multiple rules in a specific Web Application Firewall (WAF) ruleset at a time.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchUpdateWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchUpdateWafRulesResponse
        /// </returns>
        public BatchUpdateWafRulesResponse BatchUpdateWafRules(BatchUpdateWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUpdateWafRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies multiple rules in a specific Web Application Firewall (WAF) ruleset at a time.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BatchUpdateWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// BatchUpdateWafRulesResponse
        /// </returns>
        public async Task<BatchUpdateWafRulesResponse> BatchUpdateWafRulesAsync(BatchUpdateWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUpdateWafRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Blocks URLs.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BlockObjectRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BlockObjectResponse
        /// </returns>
        public BlockObjectResponse BlockObjectWithOptions(BlockObjectRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BlockObjectShrinkRequest request = new BlockObjectShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extension))
            {
                query["Extension"] = request.Extension;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Maxage))
            {
                query["Maxage"] = request.Maxage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BlockObject",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BlockObjectResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Blocks URLs.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// BlockObjectRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// BlockObjectResponse
        /// </returns>
        public async Task<BlockObjectResponse> BlockObjectWithOptionsAsync(BlockObjectRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            BlockObjectShrinkRequest request = new BlockObjectShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extension))
            {
                query["Extension"] = request.Extension;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Maxage))
            {
                query["Maxage"] = request.Maxage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BlockObject",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BlockObjectResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Blocks URLs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BlockObjectRequest
        /// </param>
        /// 
        /// <returns>
        /// BlockObjectResponse
        /// </returns>
        public BlockObjectResponse BlockObject(BlockObjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BlockObjectWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Blocks URLs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// BlockObjectRequest
        /// </param>
        /// 
        /// <returns>
        /// BlockObjectResponse
        /// </returns>
        public async Task<BlockObjectResponse> BlockObjectAsync(BlockObjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BlockObjectWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>检查实时日志slr角色是否已创建</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckAssumeSlrRoleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckAssumeSlrRoleResponse
        /// </returns>
        public CheckAssumeSlrRoleResponse CheckAssumeSlrRoleWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckAssumeSlrRole",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckAssumeSlrRoleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>检查实时日志slr角色是否已创建</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckAssumeSlrRoleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckAssumeSlrRoleResponse
        /// </returns>
        public async Task<CheckAssumeSlrRoleResponse> CheckAssumeSlrRoleWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckAssumeSlrRole",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckAssumeSlrRoleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>检查实时日志slr角色是否已创建</para>
        /// </summary>
        /// 
        /// <returns>
        /// CheckAssumeSlrRoleResponse
        /// </returns>
        public CheckAssumeSlrRoleResponse CheckAssumeSlrRole()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckAssumeSlrRoleWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>检查实时日志slr角色是否已创建</para>
        /// </summary>
        /// 
        /// <returns>
        /// CheckAssumeSlrRoleResponse
        /// </returns>
        public async Task<CheckAssumeSlrRoleResponse> CheckAssumeSlrRoleAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckAssumeSlrRoleWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks whether a specified website name is available.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteNameResponse
        /// </returns>
        public CheckSiteNameResponse CheckSiteNameWithOptions(CheckSiteNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSiteName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSiteNameResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks whether a specified website name is available.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteNameResponse
        /// </returns>
        public async Task<CheckSiteNameResponse> CheckSiteNameWithOptionsAsync(CheckSiteNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSiteName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSiteNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks whether a specified website name is available.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteNameResponse
        /// </returns>
        public CheckSiteNameResponse CheckSiteName(CheckSiteNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckSiteNameWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks whether a specified website name is available.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteNameResponse
        /// </returns>
        public async Task<CheckSiteNameResponse> CheckSiteNameAsync(CheckSiteNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckSiteNameWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteProjectNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteProjectNameResponse
        /// </returns>
        public CheckSiteProjectNameResponse CheckSiteProjectNameWithOptions(CheckSiteProjectNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSiteProjectName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSiteProjectNameResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteProjectNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteProjectNameResponse
        /// </returns>
        public async Task<CheckSiteProjectNameResponse> CheckSiteProjectNameWithOptionsAsync(CheckSiteProjectNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSiteProjectName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSiteProjectNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteProjectNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteProjectNameResponse
        /// </returns>
        public CheckSiteProjectNameResponse CheckSiteProjectName(CheckSiteProjectNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckSiteProjectNameWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckSiteProjectNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckSiteProjectNameResponse
        /// </returns>
        public async Task<CheckSiteProjectNameResponse> CheckSiteProjectNameAsync(CheckSiteProjectNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckSiteProjectNameWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task by account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckUserProjectNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckUserProjectNameResponse
        /// </returns>
        public CheckUserProjectNameResponse CheckUserProjectNameWithOptions(CheckUserProjectNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckUserProjectName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckUserProjectNameResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task by account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckUserProjectNameRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CheckUserProjectNameResponse
        /// </returns>
        public async Task<CheckUserProjectNameResponse> CheckUserProjectNameWithOptionsAsync(CheckUserProjectNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckUserProjectName",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckUserProjectNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task by account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckUserProjectNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckUserProjectNameResponse
        /// </returns>
        public CheckUserProjectNameResponse CheckUserProjectName(CheckUserProjectNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckUserProjectNameWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the name of a real-time log delivery task by account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CheckUserProjectNameRequest
        /// </param>
        /// 
        /// <returns>
        /// CheckUserProjectNameResponse
        /// </returns>
        public async Task<CheckUserProjectNameResponse> CheckUserProjectNameAsync(CheckUserProjectNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckUserProjectNameWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Commits the unstable code in the staging environment to generate an official code version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CommitRoutineStagingCodeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CommitRoutineStagingCodeResponse
        /// </returns>
        public CommitRoutineStagingCodeResponse CommitRoutineStagingCodeWithOptions(CommitRoutineStagingCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeDescription))
            {
                body["CodeDescription"] = request.CodeDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CommitRoutineStagingCode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CommitRoutineStagingCodeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Commits the unstable code in the staging environment to generate an official code version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CommitRoutineStagingCodeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CommitRoutineStagingCodeResponse
        /// </returns>
        public async Task<CommitRoutineStagingCodeResponse> CommitRoutineStagingCodeWithOptionsAsync(CommitRoutineStagingCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeDescription))
            {
                body["CodeDescription"] = request.CodeDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CommitRoutineStagingCode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CommitRoutineStagingCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Commits the unstable code in the staging environment to generate an official code version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CommitRoutineStagingCodeRequest
        /// </param>
        /// 
        /// <returns>
        /// CommitRoutineStagingCodeResponse
        /// </returns>
        public CommitRoutineStagingCodeResponse CommitRoutineStagingCode(CommitRoutineStagingCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CommitRoutineStagingCodeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Commits the unstable code in the staging environment to generate an official code version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CommitRoutineStagingCodeRequest
        /// </param>
        /// 
        /// <returns>
        /// CommitRoutineStagingCodeResponse
        /// </returns>
        public async Task<CommitRoutineStagingCodeResponse> CommitRoutineStagingCodeAsync(CommitRoutineStagingCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CommitRoutineStagingCodeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCacheRuleResponse
        /// </returns>
        public CreateCacheRuleResponse CreateCacheRuleWithOptions(CreateCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdditionalCacheablePorts))
            {
                query["AdditionalCacheablePorts"] = request.AdditionalCacheablePorts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheMode))
            {
                query["BrowserCacheMode"] = request.BrowserCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheTtl))
            {
                query["BrowserCacheTtl"] = request.BrowserCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BypassCache))
            {
                query["BypassCache"] = request.BypassCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheDeceptionArmor))
            {
                query["CacheDeceptionArmor"] = request.CacheDeceptionArmor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheReserveEligibility))
            {
                query["CacheReserveEligibility"] = request.CacheReserveEligibility;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceCookie))
            {
                query["CheckPresenceCookie"] = request.CheckPresenceCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceHeader))
            {
                query["CheckPresenceHeader"] = request.CheckPresenceHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheMode))
            {
                query["EdgeCacheMode"] = request.EdgeCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheTtl))
            {
                query["EdgeCacheTtl"] = request.EdgeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeStatusCodeCacheTtl))
            {
                query["EdgeStatusCodeCacheTtl"] = request.EdgeStatusCodeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeCookie))
            {
                query["IncludeCookie"] = request.IncludeCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeHeader))
            {
                query["IncludeHeader"] = request.IncludeHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryStringMode))
            {
                query["QueryStringMode"] = request.QueryStringMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServeStale))
            {
                query["ServeStale"] = request.ServeStale;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortQueryStringForCache))
            {
                query["SortQueryStringForCache"] = request.SortQueryStringForCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserDeviceType))
            {
                query["UserDeviceType"] = request.UserDeviceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserGeo))
            {
                query["UserGeo"] = request.UserGeo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLanguage))
            {
                query["UserLanguage"] = request.UserLanguage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCacheRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCacheRuleResponse
        /// </returns>
        public async Task<CreateCacheRuleResponse> CreateCacheRuleWithOptionsAsync(CreateCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdditionalCacheablePorts))
            {
                query["AdditionalCacheablePorts"] = request.AdditionalCacheablePorts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheMode))
            {
                query["BrowserCacheMode"] = request.BrowserCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheTtl))
            {
                query["BrowserCacheTtl"] = request.BrowserCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BypassCache))
            {
                query["BypassCache"] = request.BypassCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheDeceptionArmor))
            {
                query["CacheDeceptionArmor"] = request.CacheDeceptionArmor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheReserveEligibility))
            {
                query["CacheReserveEligibility"] = request.CacheReserveEligibility;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceCookie))
            {
                query["CheckPresenceCookie"] = request.CheckPresenceCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceHeader))
            {
                query["CheckPresenceHeader"] = request.CheckPresenceHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheMode))
            {
                query["EdgeCacheMode"] = request.EdgeCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheTtl))
            {
                query["EdgeCacheTtl"] = request.EdgeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeStatusCodeCacheTtl))
            {
                query["EdgeStatusCodeCacheTtl"] = request.EdgeStatusCodeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeCookie))
            {
                query["IncludeCookie"] = request.IncludeCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeHeader))
            {
                query["IncludeHeader"] = request.IncludeHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryStringMode))
            {
                query["QueryStringMode"] = request.QueryStringMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServeStale))
            {
                query["ServeStale"] = request.ServeStale;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortQueryStringForCache))
            {
                query["SortQueryStringForCache"] = request.SortQueryStringForCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserDeviceType))
            {
                query["UserDeviceType"] = request.UserDeviceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserGeo))
            {
                query["UserGeo"] = request.UserGeo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLanguage))
            {
                query["UserLanguage"] = request.UserLanguage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCacheRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCacheRuleResponse
        /// </returns>
        public CreateCacheRuleResponse CreateCacheRule(CreateCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCacheRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCacheRuleResponse
        /// </returns>
        public async Task<CreateCacheRuleResponse> CreateCacheRuleAsync(CreateCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCacheRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uses the ESA-managed certificate authority (CA) to issue client certificates.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateClientCertificateResponse
        /// </returns>
        public CreateClientCertificateResponse CreateClientCertificateWithOptions(CreateClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CSR))
            {
                body["CSR"] = request.CSR;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PkeyType))
            {
                body["PkeyType"] = request.PkeyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ValidityDays))
            {
                body["ValidityDays"] = request.ValidityDays;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uses the ESA-managed certificate authority (CA) to issue client certificates.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateClientCertificateResponse
        /// </returns>
        public async Task<CreateClientCertificateResponse> CreateClientCertificateWithOptionsAsync(CreateClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CSR))
            {
                body["CSR"] = request.CSR;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PkeyType))
            {
                body["PkeyType"] = request.PkeyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ValidityDays))
            {
                body["ValidityDays"] = request.ValidityDays;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uses the ESA-managed certificate authority (CA) to issue client certificates.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateClientCertificateResponse
        /// </returns>
        public CreateClientCertificateResponse CreateClientCertificate(CreateClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uses the ESA-managed certificate authority (CA) to issue client certificates.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateClientCertificateResponse
        /// </returns>
        public async Task<CreateClientCertificateResponse> CreateClientCertificateAsync(CreateClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCompressionRuleResponse
        /// </returns>
        public CreateCompressionRuleResponse CreateCompressionRuleWithOptions(CreateCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Brotli))
            {
                query["Brotli"] = request.Brotli;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Gzip))
            {
                query["Gzip"] = request.Gzip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zstd))
            {
                query["Zstd"] = request.Zstd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCompressionRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCompressionRuleResponse
        /// </returns>
        public async Task<CreateCompressionRuleResponse> CreateCompressionRuleWithOptionsAsync(CreateCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Brotli))
            {
                query["Brotli"] = request.Brotli;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Gzip))
            {
                query["Gzip"] = request.Gzip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zstd))
            {
                query["Zstd"] = request.Zstd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCompressionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCompressionRuleResponse
        /// </returns>
        public CreateCompressionRuleResponse CreateCompressionRule(CreateCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCompressionRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCompressionRuleResponse
        /// </returns>
        public async Task<CreateCompressionRuleResponse> CreateCompressionRuleAsync(CreateCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCompressionRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an account-level custom scenario policy. You can execute a policy after you associate the policy with a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCustomScenePolicyResponse
        /// </returns>
        public CreateCustomScenePolicyResponse CreateCustomScenePolicyWithOptions(CreateCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Objects))
            {
                query["Objects"] = request.Objects;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteIds))
            {
                query["SiteIds"] = request.SiteIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Template))
            {
                query["Template"] = request.Template;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCustomScenePolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an account-level custom scenario policy. You can execute a policy after you associate the policy with a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateCustomScenePolicyResponse
        /// </returns>
        public async Task<CreateCustomScenePolicyResponse> CreateCustomScenePolicyWithOptionsAsync(CreateCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Objects))
            {
                query["Objects"] = request.Objects;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteIds))
            {
                query["SiteIds"] = request.SiteIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Template))
            {
                query["Template"] = request.Template;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCustomScenePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an account-level custom scenario policy. You can execute a policy after you associate the policy with a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCustomScenePolicyResponse
        /// </returns>
        public CreateCustomScenePolicyResponse CreateCustomScenePolicy(CreateCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCustomScenePolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates an account-level custom scenario policy. You can execute a policy after you associate the policy with a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateCustomScenePolicyResponse
        /// </returns>
        public async Task<CreateCustomScenePolicyResponse> CreateCustomScenePolicyAsync(CreateCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCustomScenePolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a containerized application. You can deploy and release a version of the application across points of presence (POPs).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppResponse
        /// </returns>
        public CreateEdgeContainerAppResponse CreateEdgeContainerAppWithOptions(CreateEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckFailTimes))
            {
                body["HealthCheckFailTimes"] = request.HealthCheckFailTimes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckHost))
            {
                body["HealthCheckHost"] = request.HealthCheckHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckHttpCode))
            {
                body["HealthCheckHttpCode"] = request.HealthCheckHttpCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckInterval))
            {
                body["HealthCheckInterval"] = request.HealthCheckInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckMethod))
            {
                body["HealthCheckMethod"] = request.HealthCheckMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckPort))
            {
                body["HealthCheckPort"] = request.HealthCheckPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckSuccTimes))
            {
                body["HealthCheckSuccTimes"] = request.HealthCheckSuccTimes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckTimeout))
            {
                body["HealthCheckTimeout"] = request.HealthCheckTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckType))
            {
                body["HealthCheckType"] = request.HealthCheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckURI))
            {
                body["HealthCheckURI"] = request.HealthCheckURI;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServicePort))
            {
                body["ServicePort"] = request.ServicePort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPort))
            {
                body["TargetPort"] = request.TargetPort;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a containerized application. You can deploy and release a version of the application across points of presence (POPs).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppResponse> CreateEdgeContainerAppWithOptionsAsync(CreateEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckFailTimes))
            {
                body["HealthCheckFailTimes"] = request.HealthCheckFailTimes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckHost))
            {
                body["HealthCheckHost"] = request.HealthCheckHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckHttpCode))
            {
                body["HealthCheckHttpCode"] = request.HealthCheckHttpCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckInterval))
            {
                body["HealthCheckInterval"] = request.HealthCheckInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckMethod))
            {
                body["HealthCheckMethod"] = request.HealthCheckMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckPort))
            {
                body["HealthCheckPort"] = request.HealthCheckPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckSuccTimes))
            {
                body["HealthCheckSuccTimes"] = request.HealthCheckSuccTimes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckTimeout))
            {
                body["HealthCheckTimeout"] = request.HealthCheckTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckType))
            {
                body["HealthCheckType"] = request.HealthCheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthCheckURI))
            {
                body["HealthCheckURI"] = request.HealthCheckURI;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServicePort))
            {
                body["ServicePort"] = request.ServicePort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPort))
            {
                body["TargetPort"] = request.TargetPort;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a containerized application. You can deploy and release a version of the application across points of presence (POPs).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppResponse
        /// </returns>
        public CreateEdgeContainerAppResponse CreateEdgeContainerApp(CreateEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeContainerAppWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a containerized application. You can deploy and release a version of the application across points of presence (POPs).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppResponse> CreateEdgeContainerAppAsync(CreateEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeContainerAppWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a domain name with a containerized application. This way, requests destined for the associated domain name are forwarded to the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppRecordResponse
        /// </returns>
        public CreateEdgeContainerAppRecordResponse CreateEdgeContainerAppRecordWithOptions(CreateEdgeContainerAppRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerAppRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a domain name with a containerized application. This way, requests destined for the associated domain name are forwarded to the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppRecordResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppRecordResponse> CreateEdgeContainerAppRecordWithOptionsAsync(CreateEdgeContainerAppRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerAppRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a domain name with a containerized application. This way, requests destined for the associated domain name are forwarded to the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppRecordResponse
        /// </returns>
        public CreateEdgeContainerAppRecordResponse CreateEdgeContainerAppRecord(CreateEdgeContainerAppRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeContainerAppRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates a domain name with a containerized application. This way, requests destined for the associated domain name are forwarded to the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppRecordResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppRecordResponse> CreateEdgeContainerAppRecordAsync(CreateEdgeContainerAppRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeContainerAppRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a version for a containerized application. You can iterate the application based on the version.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppVersionResponse
        /// </returns>
        public CreateEdgeContainerAppVersionResponse CreateEdgeContainerAppVersionWithOptions(CreateEdgeContainerAppVersionRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateEdgeContainerAppVersionShrinkRequest request = new CreateEdgeContainerAppVersionShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Containers))
            {
                request.ContainersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Containers, "Containers", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainersShrink))
            {
                body["Containers"] = request.ContainersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a version for a containerized application. You can iterate the application based on the version.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppVersionResponse> CreateEdgeContainerAppVersionWithOptionsAsync(CreateEdgeContainerAppVersionRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateEdgeContainerAppVersionShrinkRequest request = new CreateEdgeContainerAppVersionShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Containers))
            {
                request.ContainersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Containers, "Containers", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainersShrink))
            {
                body["Containers"] = request.ContainersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeContainerAppVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a version for a containerized application. You can iterate the application based on the version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppVersionResponse
        /// </returns>
        public CreateEdgeContainerAppVersionResponse CreateEdgeContainerAppVersion(CreateEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeContainerAppVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a version for a containerized application. You can iterate the application based on the version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<CreateEdgeContainerAppVersionResponse> CreateEdgeContainerAppVersionAsync(CreateEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeContainerAppVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Request Header Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public CreateHttpRequestHeaderModificationRuleResponse CreateHttpRequestHeaderModificationRuleWithOptions(CreateHttpRequestHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateHttpRequestHeaderModificationRuleShrinkRequest request = new CreateHttpRequestHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaderModification))
            {
                request.RequestHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaderModification, "RequestHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeaderModificationShrink))
            {
                query["RequestHeaderModification"] = request.RequestHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpRequestHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Request Header Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<CreateHttpRequestHeaderModificationRuleResponse> CreateHttpRequestHeaderModificationRuleWithOptionsAsync(CreateHttpRequestHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateHttpRequestHeaderModificationRuleShrinkRequest request = new CreateHttpRequestHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaderModification))
            {
                request.RequestHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaderModification, "RequestHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeaderModificationShrink))
            {
                query["RequestHeaderModification"] = request.RequestHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpRequestHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Request Header Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public CreateHttpRequestHeaderModificationRuleResponse CreateHttpRequestHeaderModificationRule(CreateHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHttpRequestHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Request Header Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<CreateHttpRequestHeaderModificationRuleResponse> CreateHttpRequestHeaderModificationRuleAsync(CreateHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHttpRequestHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Response Header Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public CreateHttpResponseHeaderModificationRuleResponse CreateHttpResponseHeaderModificationRuleWithOptions(CreateHttpResponseHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateHttpResponseHeaderModificationRuleShrinkRequest request = new CreateHttpResponseHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaderModification))
            {
                request.ResponseHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaderModification, "ResponseHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeaderModificationShrink))
            {
                query["ResponseHeaderModification"] = request.ResponseHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpResponseHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Response Header Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<CreateHttpResponseHeaderModificationRuleResponse> CreateHttpResponseHeaderModificationRuleWithOptionsAsync(CreateHttpResponseHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateHttpResponseHeaderModificationRuleShrinkRequest request = new CreateHttpResponseHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaderModification))
            {
                request.ResponseHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaderModification, "ResponseHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeaderModificationShrink))
            {
                query["ResponseHeaderModification"] = request.ResponseHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpResponseHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Response Header Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public CreateHttpResponseHeaderModificationRuleResponse CreateHttpResponseHeaderModificationRule(CreateHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHttpResponseHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add HTTP Response Header Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<CreateHttpResponseHeaderModificationRuleResponse> CreateHttpResponseHeaderModificationRuleAsync(CreateHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHttpResponseHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS application configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsApplicationConfigurationResponse
        /// </returns>
        public CreateHttpsApplicationConfigurationResponse CreateHttpsApplicationConfigurationWithOptions(CreateHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvc))
            {
                query["AltSvc"] = request.AltSvc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcClear))
            {
                query["AltSvcClear"] = request.AltSvcClear;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcMa))
            {
                query["AltSvcMa"] = request.AltSvcMa;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcPersist))
            {
                query["AltSvcPersist"] = request.AltSvcPersist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Hsts))
            {
                query["Hsts"] = request.Hsts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsIncludeSubdomains))
            {
                query["HstsIncludeSubdomains"] = request.HstsIncludeSubdomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsMaxAge))
            {
                query["HstsMaxAge"] = request.HstsMaxAge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsPreload))
            {
                query["HstsPreload"] = request.HstsPreload;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForce))
            {
                query["HttpsForce"] = request.HttpsForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForceCode))
            {
                query["HttpsForceCode"] = request.HttpsForceCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsNoSniDeny))
            {
                query["HttpsNoSniDeny"] = request.HttpsNoSniDeny;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniVerify))
            {
                query["HttpsSniVerify"] = request.HttpsSniVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniWhitelist))
            {
                query["HttpsSniWhitelist"] = request.HttpsSniWhitelist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpsApplicationConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS application configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<CreateHttpsApplicationConfigurationResponse> CreateHttpsApplicationConfigurationWithOptionsAsync(CreateHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvc))
            {
                query["AltSvc"] = request.AltSvc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcClear))
            {
                query["AltSvcClear"] = request.AltSvcClear;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcMa))
            {
                query["AltSvcMa"] = request.AltSvcMa;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcPersist))
            {
                query["AltSvcPersist"] = request.AltSvcPersist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Hsts))
            {
                query["Hsts"] = request.Hsts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsIncludeSubdomains))
            {
                query["HstsIncludeSubdomains"] = request.HstsIncludeSubdomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsMaxAge))
            {
                query["HstsMaxAge"] = request.HstsMaxAge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsPreload))
            {
                query["HstsPreload"] = request.HstsPreload;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForce))
            {
                query["HttpsForce"] = request.HttpsForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForceCode))
            {
                query["HttpsForceCode"] = request.HttpsForceCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsNoSniDeny))
            {
                query["HttpsNoSniDeny"] = request.HttpsNoSniDeny;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniVerify))
            {
                query["HttpsSniVerify"] = request.HttpsSniVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniWhitelist))
            {
                query["HttpsSniWhitelist"] = request.HttpsSniWhitelist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpsApplicationConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS application configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsApplicationConfigurationResponse
        /// </returns>
        public CreateHttpsApplicationConfigurationResponse CreateHttpsApplicationConfiguration(CreateHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHttpsApplicationConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS application configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<CreateHttpsApplicationConfigurationResponse> CreateHttpsApplicationConfigurationAsync(CreateHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHttpsApplicationConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS basic configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsBasicConfigurationResponse
        /// </returns>
        public CreateHttpsBasicConfigurationResponse CreateHttpsBasicConfigurationWithOptions(CreateHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ciphersuite))
            {
                query["Ciphersuite"] = request.Ciphersuite;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CiphersuiteGroup))
            {
                query["CiphersuiteGroup"] = request.CiphersuiteGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2))
            {
                query["Http2"] = request.Http2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http3))
            {
                query["Http3"] = request.Http3;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Https))
            {
                query["Https"] = request.Https;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OcspStapling))
            {
                query["OcspStapling"] = request.OcspStapling;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls10))
            {
                query["Tls10"] = request.Tls10;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls11))
            {
                query["Tls11"] = request.Tls11;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls12))
            {
                query["Tls12"] = request.Tls12;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls13))
            {
                query["Tls13"] = request.Tls13;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpsBasicConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS basic configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<CreateHttpsBasicConfigurationResponse> CreateHttpsBasicConfigurationWithOptionsAsync(CreateHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ciphersuite))
            {
                query["Ciphersuite"] = request.Ciphersuite;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CiphersuiteGroup))
            {
                query["CiphersuiteGroup"] = request.CiphersuiteGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2))
            {
                query["Http2"] = request.Http2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http3))
            {
                query["Http3"] = request.Http3;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Https))
            {
                query["Https"] = request.Https;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OcspStapling))
            {
                query["OcspStapling"] = request.OcspStapling;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls10))
            {
                query["Tls10"] = request.Tls10;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls11))
            {
                query["Tls11"] = request.Tls11;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls12))
            {
                query["Tls12"] = request.Tls12;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls13))
            {
                query["Tls13"] = request.Tls13;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHttpsBasicConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS basic configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsBasicConfigurationResponse
        /// </returns>
        public CreateHttpsBasicConfigurationResponse CreateHttpsBasicConfiguration(CreateHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHttpsBasicConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site HTTPS basic configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<CreateHttpsBasicConfigurationResponse> CreateHttpsBasicConfigurationAsync(CreateHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHttpsBasicConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateImageTransformResponse
        /// </returns>
        public CreateImageTransformResponse CreateImageTransformWithOptions(CreateImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateImageTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateImageTransformResponse
        /// </returns>
        public async Task<CreateImageTransformResponse> CreateImageTransformWithOptionsAsync(CreateImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateImageTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateImageTransformResponse
        /// </returns>
        public CreateImageTransformResponse CreateImageTransform(CreateImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateImageTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateImageTransformResponse
        /// </returns>
        public async Task<CreateImageTransformResponse> CreateImageTransformAsync(CreateImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateImageTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateKvNamespaceResponse
        /// </returns>
        public CreateKvNamespaceResponse CreateKvNamespaceWithOptions(CreateKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                body["Namespace"] = request.Namespace;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateKvNamespaceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateKvNamespaceResponse
        /// </returns>
        public async Task<CreateKvNamespaceResponse> CreateKvNamespaceWithOptionsAsync(CreateKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                body["Namespace"] = request.Namespace;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateKvNamespaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateKvNamespaceResponse
        /// </returns>
        public CreateKvNamespaceResponse CreateKvNamespace(CreateKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateKvNamespaceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateKvNamespaceResponse
        /// </returns>
        public async Task<CreateKvNamespaceResponse> CreateKvNamespaceAsync(CreateKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateKvNamespaceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a list. Lists are used for the referencing of values in the rules engine to implement complex logic and control in security policies.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateListResponse
        /// </returns>
        public CreateListResponse CreateListWithOptions(CreateListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateListShrinkRequest request = new CreateListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Items))
            {
                request.ItemsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Items, "Items", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemsShrink))
            {
                body["Items"] = request.ItemsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Kind))
            {
                body["Kind"] = request.Kind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a list. Lists are used for the referencing of values in the rules engine to implement complex logic and control in security policies.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateListResponse
        /// </returns>
        public async Task<CreateListResponse> CreateListWithOptionsAsync(CreateListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateListShrinkRequest request = new CreateListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Items))
            {
                request.ItemsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Items, "Items", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemsShrink))
            {
                body["Items"] = request.ItemsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Kind))
            {
                body["Kind"] = request.Kind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a list. Lists are used for the referencing of values in the rules engine to implement complex logic and control in security policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateListRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateListResponse
        /// </returns>
        public CreateListResponse CreateList(CreateListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a list. Lists are used for the referencing of values in the rules engine to implement complex logic and control in security policies.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateListRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateListResponse
        /// </returns>
        public async Task<CreateListResponse> CreateListAsync(CreateListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a New Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this API, users can configure load balancing services according to their business needs, including but not limited to adaptive routing, weighted round-robin, rule matching, health checks, and other settings, to achieve effective traffic management and optimization.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateLoadBalancerResponse
        /// </returns>
        public CreateLoadBalancerResponse CreateLoadBalancerWithOptions(CreateLoadBalancerRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateLoadBalancerShrinkRequest request = new CreateLoadBalancerShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdaptiveRouting))
            {
                request.AdaptiveRoutingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdaptiveRouting, "AdaptiveRouting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DefaultPools))
            {
                request.DefaultPoolsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultPools, "DefaultPools", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitor))
            {
                request.MonitorShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitor, "Monitor", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RandomSteering))
            {
                request.RandomSteeringShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RandomSteering, "RandomSteering", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Rules))
            {
                request.RulesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Rules, "Rules", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdaptiveRoutingShrink))
            {
                query["AdaptiveRouting"] = request.AdaptiveRoutingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultPoolsShrink))
            {
                query["DefaultPools"] = request.DefaultPoolsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FallbackPool))
            {
                query["FallbackPool"] = request.FallbackPool;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorShrink))
            {
                query["Monitor"] = request.MonitorShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomSteeringShrink))
            {
                query["RandomSteering"] = request.RandomSteeringShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionPools))
            {
                query["RegionPools"] = request.RegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesShrink))
            {
                query["Rules"] = request.RulesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionAffinity))
            {
                query["SessionAffinity"] = request.SessionAffinity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SteeringPolicy))
            {
                query["SteeringPolicy"] = request.SteeringPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubRegionPools))
            {
                query["SubRegionPools"] = request.SubRegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateLoadBalancerResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a New Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this API, users can configure load balancing services according to their business needs, including but not limited to adaptive routing, weighted round-robin, rule matching, health checks, and other settings, to achieve effective traffic management and optimization.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateLoadBalancerResponse
        /// </returns>
        public async Task<CreateLoadBalancerResponse> CreateLoadBalancerWithOptionsAsync(CreateLoadBalancerRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateLoadBalancerShrinkRequest request = new CreateLoadBalancerShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdaptiveRouting))
            {
                request.AdaptiveRoutingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdaptiveRouting, "AdaptiveRouting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DefaultPools))
            {
                request.DefaultPoolsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultPools, "DefaultPools", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitor))
            {
                request.MonitorShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitor, "Monitor", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RandomSteering))
            {
                request.RandomSteeringShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RandomSteering, "RandomSteering", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Rules))
            {
                request.RulesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Rules, "Rules", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdaptiveRoutingShrink))
            {
                query["AdaptiveRouting"] = request.AdaptiveRoutingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultPoolsShrink))
            {
                query["DefaultPools"] = request.DefaultPoolsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FallbackPool))
            {
                query["FallbackPool"] = request.FallbackPool;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorShrink))
            {
                query["Monitor"] = request.MonitorShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomSteeringShrink))
            {
                query["RandomSteering"] = request.RandomSteeringShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionPools))
            {
                query["RegionPools"] = request.RegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesShrink))
            {
                query["Rules"] = request.RulesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionAffinity))
            {
                query["SessionAffinity"] = request.SessionAffinity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SteeringPolicy))
            {
                query["SteeringPolicy"] = request.SteeringPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubRegionPools))
            {
                query["SubRegionPools"] = request.SubRegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateLoadBalancerResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a New Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this API, users can configure load balancing services according to their business needs, including but not limited to adaptive routing, weighted round-robin, rule matching, health checks, and other settings, to achieve effective traffic management and optimization.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateLoadBalancerResponse
        /// </returns>
        public CreateLoadBalancerResponse CreateLoadBalancer(CreateLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateLoadBalancerWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a New Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this API, users can configure load balancing services according to their business needs, including but not limited to adaptive routing, weighted round-robin, rule matching, health checks, and other settings, to achieve effective traffic management and optimization.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateLoadBalancerResponse
        /// </returns>
        public async Task<CreateLoadBalancerResponse> CreateLoadBalancerAsync(CreateLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateLoadBalancerWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateNetworkOptimizationResponse
        /// </returns>
        public CreateNetworkOptimizationResponse CreateNetworkOptimizationWithOptions(CreateNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Grpc))
            {
                query["Grpc"] = request.Grpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2Origin))
            {
                query["Http2Origin"] = request.Http2Origin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SmartRouting))
            {
                query["SmartRouting"] = request.SmartRouting;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadMaxFilesize))
            {
                query["UploadMaxFilesize"] = request.UploadMaxFilesize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Websocket))
            {
                query["Websocket"] = request.Websocket;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateNetworkOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateNetworkOptimizationResponse
        /// </returns>
        public async Task<CreateNetworkOptimizationResponse> CreateNetworkOptimizationWithOptionsAsync(CreateNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Grpc))
            {
                query["Grpc"] = request.Grpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2Origin))
            {
                query["Http2Origin"] = request.Http2Origin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SmartRouting))
            {
                query["SmartRouting"] = request.SmartRouting;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadMaxFilesize))
            {
                query["UploadMaxFilesize"] = request.UploadMaxFilesize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Websocket))
            {
                query["Websocket"] = request.Websocket;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateNetworkOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateNetworkOptimizationResponse
        /// </returns>
        public CreateNetworkOptimizationResponse CreateNetworkOptimization(CreateNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateNetworkOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new site network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateNetworkOptimizationResponse
        /// </returns>
        public async Task<CreateNetworkOptimizationResponse> CreateNetworkOptimizationAsync(CreateNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateNetworkOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a new origin address pool</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Multiple origins can be added under the origin address, supporting domain names, IPs, OSS, S3, and other types of origins. It supports authentication for OSS and S3 type origins.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginPoolResponse
        /// </returns>
        public CreateOriginPoolResponse CreateOriginPoolWithOptions(CreateOriginPoolRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateOriginPoolShrinkRequest request = new CreateOriginPoolShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Origins))
            {
                request.OriginsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Origins, "Origins", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginsShrink))
            {
                query["Origins"] = request.OriginsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginPoolResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a new origin address pool</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Multiple origins can be added under the origin address, supporting domain names, IPs, OSS, S3, and other types of origins. It supports authentication for OSS and S3 type origins.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginPoolResponse
        /// </returns>
        public async Task<CreateOriginPoolResponse> CreateOriginPoolWithOptionsAsync(CreateOriginPoolRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateOriginPoolShrinkRequest request = new CreateOriginPoolShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Origins))
            {
                request.OriginsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Origins, "Origins", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginsShrink))
            {
                query["Origins"] = request.OriginsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginPoolResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a new origin address pool</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Multiple origins can be added under the origin address, supporting domain names, IPs, OSS, S3, and other types of origins. It supports authentication for OSS and S3 type origins.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginPoolResponse
        /// </returns>
        public CreateOriginPoolResponse CreateOriginPool(CreateOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOriginPoolWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a new origin address pool</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Multiple origins can be added under the origin address, supporting domain names, IPs, OSS, S3, and other types of origins. It supports authentication for OSS and S3 type origins.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginPoolResponse
        /// </returns>
        public async Task<CreateOriginPoolResponse> CreateOriginPoolAsync(CreateOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOriginPoolWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginProtectionResponse
        /// </returns>
        public CreateOriginProtectionResponse CreateOriginProtectionWithOptions(CreateOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginProtectionResponse
        /// </returns>
        public async Task<CreateOriginProtectionResponse> CreateOriginProtectionWithOptionsAsync(CreateOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginProtectionResponse
        /// </returns>
        public CreateOriginProtectionResponse CreateOriginProtection(CreateOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOriginProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginProtectionResponse
        /// </returns>
        public async Task<CreateOriginProtectionResponse> CreateOriginProtectionAsync(CreateOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOriginProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new origin rule configuration for the site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginRuleResponse
        /// </returns>
        public CreateOriginRuleResponse CreateOriginRuleWithOptions(CreateOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnsRecord))
            {
                query["DnsRecord"] = request.DnsRecord;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302Enable))
            {
                query["Follow302Enable"] = request.Follow302Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302MaxTries))
            {
                query["Follow302MaxTries"] = request.Follow302MaxTries;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainArgs))
            {
                query["Follow302RetainArgs"] = request.Follow302RetainArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainHeader))
            {
                query["Follow302RetainHeader"] = request.Follow302RetainHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302TargetHost))
            {
                query["Follow302TargetHost"] = request.Follow302TargetHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHost))
            {
                query["OriginHost"] = request.OriginHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpPort))
            {
                query["OriginHttpPort"] = request.OriginHttpPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpsPort))
            {
                query["OriginHttpsPort"] = request.OriginHttpsPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginMtls))
            {
                query["OriginMtls"] = request.OriginMtls;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginReadTimeout))
            {
                query["OriginReadTimeout"] = request.OriginReadTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginScheme))
            {
                query["OriginScheme"] = request.OriginScheme;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSni))
            {
                query["OriginSni"] = request.OriginSni;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginVerify))
            {
                query["OriginVerify"] = request.OriginVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Range))
            {
                query["Range"] = request.Range;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RangeChunkSize))
            {
                query["RangeChunkSize"] = request.RangeChunkSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new origin rule configuration for the site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginRuleResponse
        /// </returns>
        public async Task<CreateOriginRuleResponse> CreateOriginRuleWithOptionsAsync(CreateOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnsRecord))
            {
                query["DnsRecord"] = request.DnsRecord;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302Enable))
            {
                query["Follow302Enable"] = request.Follow302Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302MaxTries))
            {
                query["Follow302MaxTries"] = request.Follow302MaxTries;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainArgs))
            {
                query["Follow302RetainArgs"] = request.Follow302RetainArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainHeader))
            {
                query["Follow302RetainHeader"] = request.Follow302RetainHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302TargetHost))
            {
                query["Follow302TargetHost"] = request.Follow302TargetHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHost))
            {
                query["OriginHost"] = request.OriginHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpPort))
            {
                query["OriginHttpPort"] = request.OriginHttpPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpsPort))
            {
                query["OriginHttpsPort"] = request.OriginHttpsPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginMtls))
            {
                query["OriginMtls"] = request.OriginMtls;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginReadTimeout))
            {
                query["OriginReadTimeout"] = request.OriginReadTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginScheme))
            {
                query["OriginScheme"] = request.OriginScheme;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSni))
            {
                query["OriginSni"] = request.OriginSni;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginVerify))
            {
                query["OriginVerify"] = request.OriginVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Range))
            {
                query["Range"] = request.Range;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RangeChunkSize))
            {
                query["RangeChunkSize"] = request.RangeChunkSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOriginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new origin rule configuration for the site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginRuleResponse
        /// </returns>
        public CreateOriginRuleResponse CreateOriginRule(CreateOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOriginRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create a new origin rule configuration for the site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateOriginRuleResponse
        /// </returns>
        public async Task<CreateOriginRuleResponse> CreateOriginRuleAsync(CreateOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOriginRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom error page, which is displayed when a request is blocked by Web Application Firewall (WAF). You can configure the HTML content, page type, and description, and submit the Base64-encoded page content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreatePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreatePageResponse
        /// </returns>
        public CreatePageResponse CreatePageWithOptions(CreatePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                body["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                body["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom error page, which is displayed when a request is blocked by Web Application Firewall (WAF). You can configure the HTML content, page type, and description, and submit the Base64-encoded page content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreatePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreatePageResponse
        /// </returns>
        public async Task<CreatePageResponse> CreatePageWithOptionsAsync(CreatePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                body["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                body["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom error page, which is displayed when a request is blocked by Web Application Firewall (WAF). You can configure the HTML content, page type, and description, and submit the Base64-encoded page content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreatePageRequest
        /// </param>
        /// 
        /// <returns>
        /// CreatePageResponse
        /// </returns>
        public CreatePageResponse CreatePage(CreatePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreatePageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a custom error page, which is displayed when a request is blocked by Web Application Firewall (WAF). You can configure the HTML content, page type, and description, and submit the Base64-encoded page content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreatePageRequest
        /// </param>
        /// 
        /// <returns>
        /// CreatePageResponse
        /// </returns>
        public async Task<CreatePageResponse> CreatePageAsync(CreatePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreatePageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a DNS record for a specific website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRecordResponse
        /// </returns>
        public CreateRecordResponse CreateRecordWithOptions(CreateRecordRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateRecordShrinkRequest request = new CreateRecordShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AuthConf))
            {
                request.AuthConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AuthConf, "AuthConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Data))
            {
                request.DataShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Data, "Data", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthConfShrink))
            {
                query["AuthConf"] = request.AuthConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizName))
            {
                query["BizName"] = request.BizName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Comment))
            {
                query["Comment"] = request.Comment;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataShrink))
            {
                query["Data"] = request.DataShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostPolicy))
            {
                query["HostPolicy"] = request.HostPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Proxied))
            {
                query["Proxied"] = request.Proxied;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                query["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a DNS record for a specific website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRecordResponse
        /// </returns>
        public async Task<CreateRecordResponse> CreateRecordWithOptionsAsync(CreateRecordRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateRecordShrinkRequest request = new CreateRecordShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AuthConf))
            {
                request.AuthConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AuthConf, "AuthConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Data))
            {
                request.DataShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Data, "Data", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthConfShrink))
            {
                query["AuthConf"] = request.AuthConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizName))
            {
                query["BizName"] = request.BizName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Comment))
            {
                query["Comment"] = request.Comment;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataShrink))
            {
                query["Data"] = request.DataShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostPolicy))
            {
                query["HostPolicy"] = request.HostPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Proxied))
            {
                query["Proxied"] = request.Proxied;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                query["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a DNS record for a specific website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRecordResponse
        /// </returns>
        public CreateRecordResponse CreateRecord(CreateRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a DNS record for a specific website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRecordResponse
        /// </returns>
        public async Task<CreateRecordResponse> CreateRecordAsync(CreateRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRedirectRuleResponse
        /// </returns>
        public CreateRedirectRuleResponse CreateRedirectRuleWithOptions(CreateRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveQueryString))
            {
                query["ReserveQueryString"] = request.ReserveQueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusCode))
            {
                query["StatusCode"] = request.StatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUrl))
            {
                query["TargetUrl"] = request.TargetUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRedirectRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRedirectRuleResponse
        /// </returns>
        public async Task<CreateRedirectRuleResponse> CreateRedirectRuleWithOptionsAsync(CreateRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveQueryString))
            {
                query["ReserveQueryString"] = request.ReserveQueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusCode))
            {
                query["StatusCode"] = request.StatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUrl))
            {
                query["TargetUrl"] = request.TargetUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRedirectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRedirectRuleResponse
        /// </returns>
        public CreateRedirectRuleResponse CreateRedirectRule(CreateRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRedirectRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add a Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRedirectRuleResponse
        /// </returns>
        public async Task<CreateRedirectRuleResponse> CreateRedirectRuleAsync(CreateRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRedirectRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRewriteUrlRuleResponse
        /// </returns>
        public CreateRewriteUrlRuleResponse CreateRewriteUrlRuleWithOptions(CreateRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteQueryStringType))
            {
                query["RewriteQueryStringType"] = request.RewriteQueryStringType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteUriType))
            {
                query["RewriteUriType"] = request.RewriteUriType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uri))
            {
                query["Uri"] = request.Uri;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRewriteUrlRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRewriteUrlRuleResponse
        /// </returns>
        public async Task<CreateRewriteUrlRuleResponse> CreateRewriteUrlRuleWithOptionsAsync(CreateRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteQueryStringType))
            {
                query["RewriteQueryStringType"] = request.RewriteQueryStringType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteUriType))
            {
                query["RewriteUriType"] = request.RewriteUriType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uri))
            {
                query["Uri"] = request.Uri;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRewriteUrlRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRewriteUrlRuleResponse
        /// </returns>
        public CreateRewriteUrlRuleResponse CreateRewriteUrlRule(CreateRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRewriteUrlRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Add Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRewriteUrlRuleResponse
        /// </returns>
        public async Task<CreateRewriteUrlRuleResponse> CreateRewriteUrlRuleAsync(CreateRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRewriteUrlRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineResponse
        /// </returns>
        public CreateRoutineResponse CreateRoutineWithOptions(CreateRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineResponse
        /// </returns>
        public async Task<CreateRoutineResponse> CreateRoutineWithOptionsAsync(CreateRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineResponse
        /// </returns>
        public CreateRoutineResponse CreateRoutine(CreateRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRoutineWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineResponse
        /// </returns>
        public async Task<CreateRoutineResponse> CreateRoutineAsync(CreateRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRoutineWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a record to map a domain that is associated with a routine. This record is used to trigger the associated routine code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRelatedRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRelatedRecordResponse
        /// </returns>
        public CreateRoutineRelatedRecordResponse CreateRoutineRelatedRecordWithOptions(CreateRoutineRelatedRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutineRelatedRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineRelatedRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a record to map a domain that is associated with a routine. This record is used to trigger the associated routine code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRelatedRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRelatedRecordResponse
        /// </returns>
        public async Task<CreateRoutineRelatedRecordResponse> CreateRoutineRelatedRecordWithOptionsAsync(CreateRoutineRelatedRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutineRelatedRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineRelatedRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a record to map a domain that is associated with a routine. This record is used to trigger the associated routine code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRelatedRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRelatedRecordResponse
        /// </returns>
        public CreateRoutineRelatedRecordResponse CreateRoutineRelatedRecord(CreateRoutineRelatedRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRoutineRelatedRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a record to map a domain that is associated with a routine. This record is used to trigger the associated routine code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRelatedRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRelatedRecordResponse
        /// </returns>
        public async Task<CreateRoutineRelatedRecordResponse> CreateRoutineRelatedRecordAsync(CreateRoutineRelatedRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRoutineRelatedRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRouteResponse
        /// </returns>
        public CreateRoutineRouteResponse CreateRoutineRouteWithOptions(CreateRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bypass))
            {
                query["Bypass"] = request.Bypass;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteEnable))
            {
                query["RouteEnable"] = request.RouteEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineRouteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRouteResponse
        /// </returns>
        public async Task<CreateRoutineRouteResponse> CreateRoutineRouteWithOptionsAsync(CreateRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bypass))
            {
                query["Bypass"] = request.Bypass;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteEnable))
            {
                query["RouteEnable"] = request.RouteEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRoutineRouteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRouteResponse
        /// </returns>
        public CreateRoutineRouteResponse CreateRoutineRoute(CreateRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRoutineRouteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateRoutineRouteResponse
        /// </returns>
        public async Task<CreateRoutineRouteResponse> CreateRoutineRouteAsync(CreateRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRoutineRouteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates scheduled prefetch plans.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateScheduledPreloadExecutionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadExecutionsResponse
        /// </returns>
        public CreateScheduledPreloadExecutionsResponse CreateScheduledPreloadExecutionsWithOptions(CreateScheduledPreloadExecutionsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateScheduledPreloadExecutionsShrinkRequest request = new CreateScheduledPreloadExecutionsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Executions))
            {
                request.ExecutionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Executions, "Executions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExecutionsShrink))
            {
                body["Executions"] = request.ExecutionsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateScheduledPreloadExecutions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateScheduledPreloadExecutionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates scheduled prefetch plans.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateScheduledPreloadExecutionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadExecutionsResponse
        /// </returns>
        public async Task<CreateScheduledPreloadExecutionsResponse> CreateScheduledPreloadExecutionsWithOptionsAsync(CreateScheduledPreloadExecutionsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateScheduledPreloadExecutionsShrinkRequest request = new CreateScheduledPreloadExecutionsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Executions))
            {
                request.ExecutionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Executions, "Executions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExecutionsShrink))
            {
                body["Executions"] = request.ExecutionsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateScheduledPreloadExecutions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateScheduledPreloadExecutionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates scheduled prefetch plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadExecutionsRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadExecutionsResponse
        /// </returns>
        public CreateScheduledPreloadExecutionsResponse CreateScheduledPreloadExecutions(CreateScheduledPreloadExecutionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateScheduledPreloadExecutionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates scheduled prefetch plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadExecutionsRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadExecutionsResponse
        /// </returns>
        public async Task<CreateScheduledPreloadExecutionsResponse> CreateScheduledPreloadExecutionsAsync(CreateScheduledPreloadExecutionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateScheduledPreloadExecutionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a scheduled prefetch task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadJobResponse
        /// </returns>
        public CreateScheduledPreloadJobResponse CreateScheduledPreloadJobWithOptions(CreateScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsertWay))
            {
                body["InsertWay"] = request.InsertWay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssUrl))
            {
                body["OssUrl"] = request.OssUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlList))
            {
                body["UrlList"] = request.UrlList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateScheduledPreloadJobResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a scheduled prefetch task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadJobResponse
        /// </returns>
        public async Task<CreateScheduledPreloadJobResponse> CreateScheduledPreloadJobWithOptionsAsync(CreateScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsertWay))
            {
                body["InsertWay"] = request.InsertWay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssUrl))
            {
                body["OssUrl"] = request.OssUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlList))
            {
                body["UrlList"] = request.UrlList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateScheduledPreloadJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a scheduled prefetch task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadJobResponse
        /// </returns>
        public CreateScheduledPreloadJobResponse CreateScheduledPreloadJob(CreateScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateScheduledPreloadJobWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a scheduled prefetch task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateScheduledPreloadJobResponse
        /// </returns>
        public async Task<CreateScheduledPreloadJobResponse> CreateScheduledPreloadJobAsync(CreateScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateScheduledPreloadJobWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Make sure that you have an available plan before you add a website.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that your website domain name has an ICP filing if the location you want to specify covers the Chinese mainland.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteResponse
        /// </returns>
        public CreateSiteResponse CreateSiteWithOptions(CreateSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessType))
            {
                query["AccessType"] = request.AccessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Make sure that you have an available plan before you add a website.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that your website domain name has an ICP filing if the location you want to specify covers the Chinese mainland.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteResponse
        /// </returns>
        public async Task<CreateSiteResponse> CreateSiteWithOptionsAsync(CreateSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessType))
            {
                query["AccessType"] = request.AccessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Make sure that you have an available plan before you add a website.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that your website domain name has an ICP filing if the location you want to specify covers the Chinese mainland.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteResponse
        /// </returns>
        public CreateSiteResponse CreateSite(CreateSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSiteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Make sure that you have an available plan before you add a website.</para>
        /// <list type="bullet">
        /// <item><description>Make sure that your website domain name has an ICP filing if the location you want to specify covers the Chinese mainland.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteResponse
        /// </returns>
        public async Task<CreateSiteResponse> CreateSiteAsync(CreateSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSiteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Custom field limits</b>: The key name of a custom field can contain only letters, digits, underscores (_), and spaces. The key name cannot contain other characters. Otherwise, errors may occur.</para>
        /// <list type="bullet">
        /// <item><description><b>Parameter passing</b>: Submit <c>SiteId</c>, <c>RequestHeaders</c>, <c>ResponseHeaders</c>, and <c>Cookies</c> by using <c>formData</c>. Each array element matches a custom field name.</description></item>
        /// <item><description><b>(Required) SiteId</b>: Although <c>SiteId</c> is not marked as required in the Required column, you must specify a website ID by using this parameter when you can call this API operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteCustomLogResponse
        /// </returns>
        public CreateSiteCustomLogResponse CreateSiteCustomLogWithOptions(CreateSiteCustomLogRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSiteCustomLogShrinkRequest request = new CreateSiteCustomLogShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Cookies))
            {
                request.CookiesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Cookies, "Cookies", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaders))
            {
                request.RequestHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaders, "RequestHeaders", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaders))
            {
                request.ResponseHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaders, "ResponseHeaders", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookiesShrink))
            {
                body["Cookies"] = request.CookiesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeadersShrink))
            {
                body["RequestHeaders"] = request.RequestHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeadersShrink))
            {
                body["ResponseHeaders"] = request.ResponseHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteCustomLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Custom field limits</b>: The key name of a custom field can contain only letters, digits, underscores (_), and spaces. The key name cannot contain other characters. Otherwise, errors may occur.</para>
        /// <list type="bullet">
        /// <item><description><b>Parameter passing</b>: Submit <c>SiteId</c>, <c>RequestHeaders</c>, <c>ResponseHeaders</c>, and <c>Cookies</c> by using <c>formData</c>. Each array element matches a custom field name.</description></item>
        /// <item><description><b>(Required) SiteId</b>: Although <c>SiteId</c> is not marked as required in the Required column, you must specify a website ID by using this parameter when you can call this API operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteCustomLogResponse
        /// </returns>
        public async Task<CreateSiteCustomLogResponse> CreateSiteCustomLogWithOptionsAsync(CreateSiteCustomLogRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSiteCustomLogShrinkRequest request = new CreateSiteCustomLogShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Cookies))
            {
                request.CookiesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Cookies, "Cookies", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaders))
            {
                request.RequestHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaders, "RequestHeaders", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaders))
            {
                request.ResponseHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaders, "ResponseHeaders", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookiesShrink))
            {
                body["Cookies"] = request.CookiesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeadersShrink))
            {
                body["RequestHeaders"] = request.RequestHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeadersShrink))
            {
                body["ResponseHeaders"] = request.ResponseHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteCustomLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Custom field limits</b>: The key name of a custom field can contain only letters, digits, underscores (_), and spaces. The key name cannot contain other characters. Otherwise, errors may occur.</para>
        /// <list type="bullet">
        /// <item><description><b>Parameter passing</b>: Submit <c>SiteId</c>, <c>RequestHeaders</c>, <c>ResponseHeaders</c>, and <c>Cookies</c> by using <c>formData</c>. Each array element matches a custom field name.</description></item>
        /// <item><description><b>(Required) SiteId</b>: Although <c>SiteId</c> is not marked as required in the Required column, you must specify a website ID by using this parameter when you can call this API operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteCustomLogResponse
        /// </returns>
        public CreateSiteCustomLogResponse CreateSiteCustomLog(CreateSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSiteCustomLogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Adds the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Custom field limits</b>: The key name of a custom field can contain only letters, digits, underscores (_), and spaces. The key name cannot contain other characters. Otherwise, errors may occur.</para>
        /// <list type="bullet">
        /// <item><description><b>Parameter passing</b>: Submit <c>SiteId</c>, <c>RequestHeaders</c>, <c>ResponseHeaders</c>, and <c>Cookies</c> by using <c>formData</c>. Each array element matches a custom field name.</description></item>
        /// <item><description><b>(Required) SiteId</b>: Although <c>SiteId</c> is not marked as required in the Required column, you must specify a website ID by using this parameter when you can call this API operation.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteCustomLogResponse
        /// </returns>
        public async Task<CreateSiteCustomLogResponse> CreateSiteCustomLogAsync(CreateSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSiteCustomLogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteDeliveryTaskResponse
        /// </returns>
        public CreateSiteDeliveryTaskResponse CreateSiteDeliveryTaskWithOptions(CreateSiteDeliveryTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSiteDeliveryTaskShrinkRequest request = new CreateSiteDeliveryTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HttpDelivery))
            {
                request.HttpDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HttpDelivery, "HttpDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KafkaDelivery))
            {
                request.KafkaDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KafkaDelivery, "KafkaDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.OssDelivery))
            {
                request.OssDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.OssDelivery, "OssDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.S3Delivery))
            {
                request.S3DeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.S3Delivery, "S3Delivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SlsDelivery))
            {
                request.SlsDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SlsDelivery, "SlsDelivery", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataCenter))
            {
                body["DataCenter"] = request.DataCenter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeliveryType))
            {
                body["DeliveryType"] = request.DeliveryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpDeliveryShrink))
            {
                body["HttpDelivery"] = request.HttpDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KafkaDeliveryShrink))
            {
                body["KafkaDelivery"] = request.KafkaDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssDeliveryShrink))
            {
                body["OssDelivery"] = request.OssDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.S3DeliveryShrink))
            {
                body["S3Delivery"] = request.S3DeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SlsDeliveryShrink))
            {
                body["SlsDelivery"] = request.SlsDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteDeliveryTaskResponse
        /// </returns>
        public async Task<CreateSiteDeliveryTaskResponse> CreateSiteDeliveryTaskWithOptionsAsync(CreateSiteDeliveryTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSiteDeliveryTaskShrinkRequest request = new CreateSiteDeliveryTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HttpDelivery))
            {
                request.HttpDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HttpDelivery, "HttpDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KafkaDelivery))
            {
                request.KafkaDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KafkaDelivery, "KafkaDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.OssDelivery))
            {
                request.OssDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.OssDelivery, "OssDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.S3Delivery))
            {
                request.S3DeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.S3Delivery, "S3Delivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SlsDelivery))
            {
                request.SlsDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SlsDelivery, "SlsDelivery", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataCenter))
            {
                body["DataCenter"] = request.DataCenter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeliveryType))
            {
                body["DeliveryType"] = request.DeliveryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpDeliveryShrink))
            {
                body["HttpDelivery"] = request.HttpDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KafkaDeliveryShrink))
            {
                body["KafkaDelivery"] = request.KafkaDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssDeliveryShrink))
            {
                body["OssDelivery"] = request.OssDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.S3DeliveryShrink))
            {
                body["S3Delivery"] = request.S3DeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SlsDeliveryShrink))
            {
                body["SlsDelivery"] = request.SlsDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSiteDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteDeliveryTaskResponse
        /// </returns>
        public CreateSiteDeliveryTaskResponse CreateSiteDeliveryTask(CreateSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSiteDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateSiteDeliveryTaskResponse
        /// </returns>
        public async Task<CreateSiteDeliveryTaskResponse> CreateSiteDeliveryTaskAsync(CreateSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSiteDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>创建一个实时日志slr角色</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateSlrRoleForRealtimeLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSlrRoleForRealtimeLogResponse
        /// </returns>
        public CreateSlrRoleForRealtimeLogResponse CreateSlrRoleForRealtimeLogWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSlrRoleForRealtimeLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSlrRoleForRealtimeLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>创建一个实时日志slr角色</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateSlrRoleForRealtimeLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateSlrRoleForRealtimeLogResponse
        /// </returns>
        public async Task<CreateSlrRoleForRealtimeLogResponse> CreateSlrRoleForRealtimeLogWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSlrRoleForRealtimeLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSlrRoleForRealtimeLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>创建一个实时日志slr角色</para>
        /// </summary>
        /// 
        /// <returns>
        /// CreateSlrRoleForRealtimeLogResponse
        /// </returns>
        public CreateSlrRoleForRealtimeLogResponse CreateSlrRoleForRealtimeLog()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSlrRoleForRealtimeLogWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>创建一个实时日志slr角色</para>
        /// </summary>
        /// 
        /// <returns>
        /// CreateSlrRoleForRealtimeLogResponse
        /// </returns>
        public async Task<CreateSlrRoleForRealtimeLogResponse> CreateSlrRoleForRealtimeLogAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSlrRoleForRealtimeLogWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a log delivery task to ship logs to the specified destination.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API operation allows you to deliver logs to destinations such as Simple Log Service (SLS), HTTP servers, Object Storage Service (OSS), Amazon Simple Storage Service (S3), and Kafka. You can specify the task name, log fields to deliver, data center, discard rate, delivery type, and delivery details.</para>
        /// <list type="bullet">
        /// <item><description><b>Field filtering</b>: Use the <c>FieldName</c> parameter to specify log fields to deliver.</description></item>
        /// <item><description><b>Filtering rules</b>: Use the <c>FilterRules</c> parameter to pre-process and filter log data.</description></item>
        /// <item><description><b>Diverse delivery destinations</b>: Logs can be delivered to different destinations. Configuration parameters vary with delivery destinations.</description></item>
        /// </list>
        /// <h2><a href="#"></a>Precautions</h2>
        /// <list type="bullet">
        /// <item><description>Make sure that you have sufficient permissions to perform delivery tasks.</description></item>
        /// <item><description>If you enable encryption or authentication, properly configure corresponding parameters.</description></item>
        /// <item><description>Verify the syntax of <c>FilterRules</c> to make sure that filtering logic works as expected.</description></item>
        /// <item><description>Specify advanced settings such as the number of retries and timeout period based on your needs to have optimal delivery efficiency and stability.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateUserDeliveryTaskResponse
        /// </returns>
        public CreateUserDeliveryTaskResponse CreateUserDeliveryTaskWithOptions(CreateUserDeliveryTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateUserDeliveryTaskShrinkRequest request = new CreateUserDeliveryTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HttpDelivery))
            {
                request.HttpDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HttpDelivery, "HttpDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KafkaDelivery))
            {
                request.KafkaDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KafkaDelivery, "KafkaDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.OssDelivery))
            {
                request.OssDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.OssDelivery, "OssDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.S3Delivery))
            {
                request.S3DeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.S3Delivery, "S3Delivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SlsDelivery))
            {
                request.SlsDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SlsDelivery, "SlsDelivery", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataCenter))
            {
                body["DataCenter"] = request.DataCenter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeliveryType))
            {
                body["DeliveryType"] = request.DeliveryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Details))
            {
                body["Details"] = request.Details;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpDeliveryShrink))
            {
                body["HttpDelivery"] = request.HttpDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KafkaDeliveryShrink))
            {
                body["KafkaDelivery"] = request.KafkaDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssDeliveryShrink))
            {
                body["OssDelivery"] = request.OssDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.S3DeliveryShrink))
            {
                body["S3Delivery"] = request.S3DeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SlsDeliveryShrink))
            {
                body["SlsDelivery"] = request.SlsDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUserDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a log delivery task to ship logs to the specified destination.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API operation allows you to deliver logs to destinations such as Simple Log Service (SLS), HTTP servers, Object Storage Service (OSS), Amazon Simple Storage Service (S3), and Kafka. You can specify the task name, log fields to deliver, data center, discard rate, delivery type, and delivery details.</para>
        /// <list type="bullet">
        /// <item><description><b>Field filtering</b>: Use the <c>FieldName</c> parameter to specify log fields to deliver.</description></item>
        /// <item><description><b>Filtering rules</b>: Use the <c>FilterRules</c> parameter to pre-process and filter log data.</description></item>
        /// <item><description><b>Diverse delivery destinations</b>: Logs can be delivered to different destinations. Configuration parameters vary with delivery destinations.</description></item>
        /// </list>
        /// <h2><a href="#"></a>Precautions</h2>
        /// <list type="bullet">
        /// <item><description>Make sure that you have sufficient permissions to perform delivery tasks.</description></item>
        /// <item><description>If you enable encryption or authentication, properly configure corresponding parameters.</description></item>
        /// <item><description>Verify the syntax of <c>FilterRules</c> to make sure that filtering logic works as expected.</description></item>
        /// <item><description>Specify advanced settings such as the number of retries and timeout period based on your needs to have optimal delivery efficiency and stability.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// CreateUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateUserDeliveryTaskResponse
        /// </returns>
        public async Task<CreateUserDeliveryTaskResponse> CreateUserDeliveryTaskWithOptionsAsync(CreateUserDeliveryTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateUserDeliveryTaskShrinkRequest request = new CreateUserDeliveryTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HttpDelivery))
            {
                request.HttpDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HttpDelivery, "HttpDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.KafkaDelivery))
            {
                request.KafkaDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.KafkaDelivery, "KafkaDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.OssDelivery))
            {
                request.OssDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.OssDelivery, "OssDelivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.S3Delivery))
            {
                request.S3DeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.S3Delivery, "S3Delivery", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SlsDelivery))
            {
                request.SlsDeliveryShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SlsDelivery, "SlsDelivery", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataCenter))
            {
                body["DataCenter"] = request.DataCenter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeliveryType))
            {
                body["DeliveryType"] = request.DeliveryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Details))
            {
                body["Details"] = request.Details;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpDeliveryShrink))
            {
                body["HttpDelivery"] = request.HttpDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KafkaDeliveryShrink))
            {
                body["KafkaDelivery"] = request.KafkaDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssDeliveryShrink))
            {
                body["OssDelivery"] = request.OssDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.S3DeliveryShrink))
            {
                body["S3Delivery"] = request.S3DeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SlsDeliveryShrink))
            {
                body["SlsDelivery"] = request.SlsDeliveryShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUserDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a log delivery task to ship logs to the specified destination.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API operation allows you to deliver logs to destinations such as Simple Log Service (SLS), HTTP servers, Object Storage Service (OSS), Amazon Simple Storage Service (S3), and Kafka. You can specify the task name, log fields to deliver, data center, discard rate, delivery type, and delivery details.</para>
        /// <list type="bullet">
        /// <item><description><b>Field filtering</b>: Use the <c>FieldName</c> parameter to specify log fields to deliver.</description></item>
        /// <item><description><b>Filtering rules</b>: Use the <c>FilterRules</c> parameter to pre-process and filter log data.</description></item>
        /// <item><description><b>Diverse delivery destinations</b>: Logs can be delivered to different destinations. Configuration parameters vary with delivery destinations.</description></item>
        /// </list>
        /// <h2><a href="#"></a>Precautions</h2>
        /// <list type="bullet">
        /// <item><description>Make sure that you have sufficient permissions to perform delivery tasks.</description></item>
        /// <item><description>If you enable encryption or authentication, properly configure corresponding parameters.</description></item>
        /// <item><description>Verify the syntax of <c>FilterRules</c> to make sure that filtering logic works as expected.</description></item>
        /// <item><description>Specify advanced settings such as the number of retries and timeout period based on your needs to have optimal delivery efficiency and stability.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateUserDeliveryTaskResponse
        /// </returns>
        public CreateUserDeliveryTaskResponse CreateUserDeliveryTask(CreateUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateUserDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a log delivery task to ship logs to the specified destination.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API operation allows you to deliver logs to destinations such as Simple Log Service (SLS), HTTP servers, Object Storage Service (OSS), Amazon Simple Storage Service (S3), and Kafka. You can specify the task name, log fields to deliver, data center, discard rate, delivery type, and delivery details.</para>
        /// <list type="bullet">
        /// <item><description><b>Field filtering</b>: Use the <c>FieldName</c> parameter to specify log fields to deliver.</description></item>
        /// <item><description><b>Filtering rules</b>: Use the <c>FilterRules</c> parameter to pre-process and filter log data.</description></item>
        /// <item><description><b>Diverse delivery destinations</b>: Logs can be delivered to different destinations. Configuration parameters vary with delivery destinations.</description></item>
        /// </list>
        /// <h2><a href="#"></a>Precautions</h2>
        /// <list type="bullet">
        /// <item><description>Make sure that you have sufficient permissions to perform delivery tasks.</description></item>
        /// <item><description>If you enable encryption or authentication, properly configure corresponding parameters.</description></item>
        /// <item><description>Verify the syntax of <c>FilterRules</c> to make sure that filtering logic works as expected.</description></item>
        /// <item><description>Specify advanced settings such as the number of retries and timeout period based on your needs to have optimal delivery efficiency and stability.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// CreateUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateUserDeliveryTaskResponse
        /// </returns>
        public async Task<CreateUserDeliveryTaskResponse> CreateUserDeliveryTaskAsync(CreateUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateUserDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateVideoProcessingResponse
        /// </returns>
        public CreateVideoProcessingResponse CreateVideoProcessingWithOptions(CreateVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekEnd))
            {
                query["FlvSeekEnd"] = request.FlvSeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekStart))
            {
                query["FlvSeekStart"] = request.FlvSeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvVideoSeekMode))
            {
                query["FlvVideoSeekMode"] = request.FlvVideoSeekMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekEnd))
            {
                query["Mp4SeekEnd"] = request.Mp4SeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekStart))
            {
                query["Mp4SeekStart"] = request.Mp4SeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VideoSeekEnable))
            {
                query["VideoSeekEnable"] = request.VideoSeekEnable;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVideoProcessingResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateVideoProcessingResponse
        /// </returns>
        public async Task<CreateVideoProcessingResponse> CreateVideoProcessingWithOptionsAsync(CreateVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekEnd))
            {
                query["FlvSeekEnd"] = request.FlvSeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekStart))
            {
                query["FlvSeekStart"] = request.FlvSeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvVideoSeekMode))
            {
                query["FlvVideoSeekMode"] = request.FlvVideoSeekMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekEnd))
            {
                query["Mp4SeekEnd"] = request.Mp4SeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekStart))
            {
                query["Mp4SeekStart"] = request.Mp4SeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VideoSeekEnable))
            {
                query["VideoSeekEnable"] = request.VideoSeekEnable;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVideoProcessingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateVideoProcessingResponse
        /// </returns>
        public CreateVideoProcessingResponse CreateVideoProcessing(CreateVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateVideoProcessingWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>新增站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateVideoProcessingResponse
        /// </returns>
        public async Task<CreateVideoProcessingResponse> CreateVideoProcessingAsync(CreateVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateVideoProcessingWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRuleResponse
        /// </returns>
        public CreateWafRuleResponse CreateWafRuleWithOptions(CreateWafRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateWafRuleShrinkRequest request = new CreateWafRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                body["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWafRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRuleResponse
        /// </returns>
        public async Task<CreateWafRuleResponse> CreateWafRuleWithOptionsAsync(CreateWafRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateWafRuleShrinkRequest request = new CreateWafRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                body["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                body["RulesetId"] = request.RulesetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWafRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRuleResponse
        /// </returns>
        public CreateWafRuleResponse CreateWafRule(CreateWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWafRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRuleResponse
        /// </returns>
        public async Task<CreateWafRuleResponse> CreateWafRuleAsync(CreateWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWafRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRulesetResponse
        /// </returns>
        public CreateWafRulesetResponse CreateWafRulesetWithOptions(CreateWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWafRulesetResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRulesetResponse
        /// </returns>
        public async Task<CreateWafRulesetResponse> CreateWafRulesetWithOptionsAsync(CreateWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                body["Phase"] = request.Phase;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWafRulesetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRulesetResponse
        /// </returns>
        public CreateWafRulesetResponse CreateWafRuleset(CreateWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWafRulesetWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWafRulesetResponse
        /// </returns>
        public async Task<CreateWafRulesetResponse> CreateWafRulesetAsync(CreateWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWafRulesetWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room for a website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomResponse
        /// </returns>
        public CreateWaitingRoomResponse CreateWaitingRoomWithOptions(CreateWaitingRoomRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateWaitingRoomShrinkRequest request = new CreateWaitingRoomShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HostNameAndPath))
            {
                request.HostNameAndPathShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HostNameAndPath, "HostNameAndPath", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookieName))
            {
                query["CookieName"] = request.CookieName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostNameAndPathShrink))
            {
                query["HostNameAndPath"] = request.HostNameAndPathShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueueAllEnable))
            {
                query["QueueAllEnable"] = request.QueueAllEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room for a website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// CreateWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomResponse
        /// </returns>
        public async Task<CreateWaitingRoomResponse> CreateWaitingRoomWithOptionsAsync(CreateWaitingRoomRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateWaitingRoomShrinkRequest request = new CreateWaitingRoomShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HostNameAndPath))
            {
                request.HostNameAndPathShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HostNameAndPath, "HostNameAndPath", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookieName))
            {
                query["CookieName"] = request.CookieName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostNameAndPathShrink))
            {
                query["HostNameAndPath"] = request.HostNameAndPathShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueueAllEnable))
            {
                query["QueueAllEnable"] = request.QueueAllEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomResponse
        /// </returns>
        public CreateWaitingRoomResponse CreateWaitingRoom(CreateWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWaitingRoomWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomResponse
        /// </returns>
        public async Task<CreateWaitingRoomResponse> CreateWaitingRoomAsync(CreateWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWaitingRoomWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomEventResponse
        /// </returns>
        public CreateWaitingRoomEventResponse CreateWaitingRoomEventWithOptions(CreateWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueEnable))
            {
                query["PreQueueEnable"] = request.PreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueStartTime))
            {
                query["PreQueueStartTime"] = request.PreQueueStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomPreQueueEnable))
            {
                query["RandomPreQueueEnable"] = request.RandomPreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomEventResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomEventResponse
        /// </returns>
        public async Task<CreateWaitingRoomEventResponse> CreateWaitingRoomEventWithOptionsAsync(CreateWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueEnable))
            {
                query["PreQueueEnable"] = request.PreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueStartTime))
            {
                query["PreQueueStartTime"] = request.PreQueueStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomPreQueueEnable))
            {
                query["RandomPreQueueEnable"] = request.RandomPreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomEventResponse
        /// </returns>
        public CreateWaitingRoomEventResponse CreateWaitingRoomEvent(CreateWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWaitingRoomEventWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Creates a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomEventResponse
        /// </returns>
        public async Task<CreateWaitingRoomEventResponse> CreateWaitingRoomEventAsync(CreateWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWaitingRoomEventWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomRuleResponse
        /// </returns>
        public CreateWaitingRoomRuleResponse CreateWaitingRoomRuleWithOptions(CreateWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomRuleResponse
        /// </returns>
        public async Task<CreateWaitingRoomRuleResponse> CreateWaitingRoomRuleWithOptionsAsync(CreateWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWaitingRoomRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomRuleResponse
        /// </returns>
        public CreateWaitingRoomRuleResponse CreateWaitingRoomRule(CreateWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWaitingRoomRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Create Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// CreateWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// CreateWaitingRoomRuleResponse
        /// </returns>
        public async Task<CreateWaitingRoomRuleResponse> CreateWaitingRoomRuleAsync(CreateWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWaitingRoomRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables version management for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can disable version management only when the default environment and version 0 exist.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactivateVersionManagementRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeactivateVersionManagementResponse
        /// </returns>
        public DeactivateVersionManagementResponse DeactivateVersionManagementWithOptions(DeactivateVersionManagementRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeactivateVersionManagement",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeactivateVersionManagementResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables version management for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can disable version management only when the default environment and version 0 exist.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactivateVersionManagementRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeactivateVersionManagementResponse
        /// </returns>
        public async Task<DeactivateVersionManagementResponse> DeactivateVersionManagementWithOptionsAsync(DeactivateVersionManagementRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeactivateVersionManagement",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeactivateVersionManagementResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables version management for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can disable version management only when the default environment and version 0 exist.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactivateVersionManagementRequest
        /// </param>
        /// 
        /// <returns>
        /// DeactivateVersionManagementResponse
        /// </returns>
        public DeactivateVersionManagementResponse DeactivateVersionManagement(DeactivateVersionManagementRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeactivateVersionManagementWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables version management for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can disable version management only when the default environment and version 0 exist.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeactivateVersionManagementRequest
        /// </param>
        /// 
        /// <returns>
        /// DeactivateVersionManagementResponse
        /// </returns>
        public async Task<DeactivateVersionManagementResponse> DeactivateVersionManagementAsync(DeactivateVersionManagementRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeactivateVersionManagementWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Cache Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCacheRuleResponse
        /// </returns>
        public DeleteCacheRuleResponse DeleteCacheRuleWithOptions(DeleteCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCacheRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Cache Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCacheRuleResponse
        /// </returns>
        public async Task<DeleteCacheRuleResponse> DeleteCacheRuleWithOptionsAsync(DeleteCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCacheRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Cache Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCacheRuleResponse
        /// </returns>
        public DeleteCacheRuleResponse DeleteCacheRule(DeleteCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCacheRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Cache Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCacheRuleResponse
        /// </returns>
        public async Task<DeleteCacheRuleResponse> DeleteCacheRuleAsync(DeleteCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCacheRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a certificate for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCertificateResponse
        /// </returns>
        public DeleteCertificateResponse DeleteCertificateWithOptions(DeleteCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a certificate for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCertificateResponse
        /// </returns>
        public async Task<DeleteCertificateResponse> DeleteCertificateWithOptionsAsync(DeleteCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a certificate for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCertificateResponse
        /// </returns>
        public DeleteCertificateResponse DeleteCertificate(DeleteCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a certificate for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCertificateResponse
        /// </returns>
        public async Task<DeleteCertificateResponse> DeleteCertificateAsync(DeleteCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCaCertificateResponse
        /// </returns>
        public DeleteClientCaCertificateResponse DeleteClientCaCertificateWithOptions(DeleteClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCaCertificateResponse
        /// </returns>
        public async Task<DeleteClientCaCertificateResponse> DeleteClientCaCertificateWithOptionsAsync(DeleteClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCaCertificateResponse
        /// </returns>
        public DeleteClientCaCertificateResponse DeleteClientCaCertificate(DeleteClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteClientCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCaCertificateResponse
        /// </returns>
        public async Task<DeleteClientCaCertificateResponse> DeleteClientCaCertificateAsync(DeleteClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteClientCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a revoked client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCertificateResponse
        /// </returns>
        public DeleteClientCertificateResponse DeleteClientCertificateWithOptions(DeleteClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a revoked client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCertificateResponse
        /// </returns>
        public async Task<DeleteClientCertificateResponse> DeleteClientCertificateWithOptionsAsync(DeleteClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a revoked client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCertificateResponse
        /// </returns>
        public DeleteClientCertificateResponse DeleteClientCertificate(DeleteClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a revoked client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteClientCertificateResponse
        /// </returns>
        public async Task<DeleteClientCertificateResponse> DeleteClientCertificateAsync(DeleteClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCompressionRuleResponse
        /// </returns>
        public DeleteCompressionRuleResponse DeleteCompressionRuleWithOptions(DeleteCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCompressionRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCompressionRuleResponse
        /// </returns>
        public async Task<DeleteCompressionRuleResponse> DeleteCompressionRuleWithOptionsAsync(DeleteCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCompressionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCompressionRuleResponse
        /// </returns>
        public DeleteCompressionRuleResponse DeleteCompressionRule(DeleteCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCompressionRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCompressionRuleResponse
        /// </returns>
        public async Task<DeleteCompressionRuleResponse> DeleteCompressionRuleAsync(DeleteCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCompressionRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scenario-specific custom policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCustomScenePolicyResponse
        /// </returns>
        public DeleteCustomScenePolicyResponse DeleteCustomScenePolicyWithOptions(DeleteCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCustomScenePolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scenario-specific custom policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteCustomScenePolicyResponse
        /// </returns>
        public async Task<DeleteCustomScenePolicyResponse> DeleteCustomScenePolicyWithOptionsAsync(DeleteCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCustomScenePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scenario-specific custom policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCustomScenePolicyResponse
        /// </returns>
        public DeleteCustomScenePolicyResponse DeleteCustomScenePolicy(DeleteCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCustomScenePolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scenario-specific custom policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteCustomScenePolicyResponse
        /// </returns>
        public async Task<DeleteCustomScenePolicyResponse> DeleteCustomScenePolicyAsync(DeleteCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCustomScenePolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppResponse
        /// </returns>
        public DeleteEdgeContainerAppResponse DeleteEdgeContainerAppWithOptions(DeleteEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppResponse> DeleteEdgeContainerAppWithOptionsAsync(DeleteEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppResponse
        /// </returns>
        public DeleteEdgeContainerAppResponse DeleteEdgeContainerApp(DeleteEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeContainerAppWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppResponse> DeleteEdgeContainerAppAsync(DeleteEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeContainerAppWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a domain name from a containerized application. After the dissociation, you can no longer use the domain name to access the containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppRecordResponse
        /// </returns>
        public DeleteEdgeContainerAppRecordResponse DeleteEdgeContainerAppRecordWithOptions(DeleteEdgeContainerAppRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerAppRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a domain name from a containerized application. After the dissociation, you can no longer use the domain name to access the containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppRecordResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppRecordResponse> DeleteEdgeContainerAppRecordWithOptionsAsync(DeleteEdgeContainerAppRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerAppRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a domain name from a containerized application. After the dissociation, you can no longer use the domain name to access the containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppRecordResponse
        /// </returns>
        public DeleteEdgeContainerAppRecordResponse DeleteEdgeContainerAppRecord(DeleteEdgeContainerAppRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeContainerAppRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disassociates a domain name from a containerized application. After the dissociation, you can no longer use the domain name to access the containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppRecordResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppRecordResponse> DeleteEdgeContainerAppRecordAsync(DeleteEdgeContainerAppRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeContainerAppRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppVersionResponse
        /// </returns>
        public DeleteEdgeContainerAppVersionResponse DeleteEdgeContainerAppVersionWithOptions(DeleteEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppVersionResponse> DeleteEdgeContainerAppVersionWithOptionsAsync(DeleteEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeContainerAppVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppVersionResponse
        /// </returns>
        public DeleteEdgeContainerAppVersionResponse DeleteEdgeContainerAppVersion(DeleteEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeContainerAppVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<DeleteEdgeContainerAppVersionResponse> DeleteEdgeContainerAppVersionAsync(DeleteEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeContainerAppVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP request headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public DeleteHttpRequestHeaderModificationRuleResponse DeleteHttpRequestHeaderModificationRuleWithOptions(DeleteHttpRequestHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpRequestHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP request headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<DeleteHttpRequestHeaderModificationRuleResponse> DeleteHttpRequestHeaderModificationRuleWithOptionsAsync(DeleteHttpRequestHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpRequestHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP request headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public DeleteHttpRequestHeaderModificationRuleResponse DeleteHttpRequestHeaderModificationRule(DeleteHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHttpRequestHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP request headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<DeleteHttpRequestHeaderModificationRuleResponse> DeleteHttpRequestHeaderModificationRuleAsync(DeleteHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHttpRequestHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP response headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public DeleteHttpResponseHeaderModificationRuleResponse DeleteHttpResponseHeaderModificationRuleWithOptions(DeleteHttpResponseHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpResponseHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP response headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<DeleteHttpResponseHeaderModificationRuleResponse> DeleteHttpResponseHeaderModificationRuleWithOptionsAsync(DeleteHttpResponseHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpResponseHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP response headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public DeleteHttpResponseHeaderModificationRuleResponse DeleteHttpResponseHeaderModificationRule(DeleteHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHttpResponseHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes the configuration of modifying HTTP response headers for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<DeleteHttpResponseHeaderModificationRuleResponse> DeleteHttpResponseHeaderModificationRuleAsync(DeleteHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHttpResponseHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsApplicationConfigurationResponse
        /// </returns>
        public DeleteHttpsApplicationConfigurationResponse DeleteHttpsApplicationConfigurationWithOptions(DeleteHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpsApplicationConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<DeleteHttpsApplicationConfigurationResponse> DeleteHttpsApplicationConfigurationWithOptionsAsync(DeleteHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpsApplicationConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsApplicationConfigurationResponse
        /// </returns>
        public DeleteHttpsApplicationConfigurationResponse DeleteHttpsApplicationConfiguration(DeleteHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHttpsApplicationConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<DeleteHttpsApplicationConfigurationResponse> DeleteHttpsApplicationConfigurationAsync(DeleteHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHttpsApplicationConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsBasicConfigurationResponse
        /// </returns>
        public DeleteHttpsBasicConfigurationResponse DeleteHttpsBasicConfigurationWithOptions(DeleteHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpsBasicConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<DeleteHttpsBasicConfigurationResponse> DeleteHttpsBasicConfigurationWithOptionsAsync(DeleteHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHttpsBasicConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsBasicConfigurationResponse
        /// </returns>
        public DeleteHttpsBasicConfigurationResponse DeleteHttpsBasicConfiguration(DeleteHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHttpsBasicConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<DeleteHttpsBasicConfigurationResponse> DeleteHttpsBasicConfigurationAsync(DeleteHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHttpsBasicConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteImageTransformResponse
        /// </returns>
        public DeleteImageTransformResponse DeleteImageTransformWithOptions(DeleteImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteImageTransformResponse
        /// </returns>
        public async Task<DeleteImageTransformResponse> DeleteImageTransformWithOptionsAsync(DeleteImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteImageTransformResponse
        /// </returns>
        public DeleteImageTransformResponse DeleteImageTransform(DeleteImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteImageTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteImageTransformResponse
        /// </returns>
        public async Task<DeleteImageTransformResponse> DeleteImageTransformAsync(DeleteImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteImageTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a key-value pair from a namespace.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvResponse
        /// </returns>
        public DeleteKvResponse DeleteKvWithOptions(DeleteKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteKvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a key-value pair from a namespace.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvResponse
        /// </returns>
        public async Task<DeleteKvResponse> DeleteKvWithOptionsAsync(DeleteKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteKvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a key-value pair from a namespace.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvResponse
        /// </returns>
        public DeleteKvResponse DeleteKv(DeleteKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteKvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a key-value pair from a namespace.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvResponse
        /// </returns>
        public async Task<DeleteKvResponse> DeleteKvAsync(DeleteKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteKvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a namespace from an Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvNamespaceResponse
        /// </returns>
        public DeleteKvNamespaceResponse DeleteKvNamespaceWithOptions(DeleteKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteKvNamespaceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a namespace from an Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvNamespaceResponse
        /// </returns>
        public async Task<DeleteKvNamespaceResponse> DeleteKvNamespaceWithOptionsAsync(DeleteKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteKvNamespaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a namespace from an Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvNamespaceResponse
        /// </returns>
        public DeleteKvNamespaceResponse DeleteKvNamespace(DeleteKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteKvNamespaceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a namespace from an Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteKvNamespaceResponse
        /// </returns>
        public async Task<DeleteKvNamespaceResponse> DeleteKvNamespaceAsync(DeleteKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteKvNamespaceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom list that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteListResponse
        /// </returns>
        public DeleteListResponse DeleteListWithOptions(DeleteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom list that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteListResponse
        /// </returns>
        public async Task<DeleteListResponse> DeleteListWithOptionsAsync(DeleteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom list that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteListRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteListResponse
        /// </returns>
        public DeleteListResponse DeleteList(DeleteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom list that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteListRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteListResponse
        /// </returns>
        public async Task<DeleteListResponse> DeleteListAsync(DeleteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Delete a load balancer by its ID, only one can be deleted at a time.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteLoadBalancerResponse
        /// </returns>
        public DeleteLoadBalancerResponse DeleteLoadBalancerWithOptions(DeleteLoadBalancerRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteLoadBalancerResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Delete a load balancer by its ID, only one can be deleted at a time.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteLoadBalancerResponse
        /// </returns>
        public async Task<DeleteLoadBalancerResponse> DeleteLoadBalancerWithOptionsAsync(DeleteLoadBalancerRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteLoadBalancerResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Delete a load balancer by its ID, only one can be deleted at a time.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteLoadBalancerResponse
        /// </returns>
        public DeleteLoadBalancerResponse DeleteLoadBalancer(DeleteLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteLoadBalancerWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Delete a load balancer by its ID, only one can be deleted at a time.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteLoadBalancerResponse
        /// </returns>
        public async Task<DeleteLoadBalancerResponse> DeleteLoadBalancerAsync(DeleteLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteLoadBalancerWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Network Optimization Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteNetworkOptimizationResponse
        /// </returns>
        public DeleteNetworkOptimizationResponse DeleteNetworkOptimizationWithOptions(DeleteNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteNetworkOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Network Optimization Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteNetworkOptimizationResponse
        /// </returns>
        public async Task<DeleteNetworkOptimizationResponse> DeleteNetworkOptimizationWithOptionsAsync(DeleteNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteNetworkOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Network Optimization Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteNetworkOptimizationResponse
        /// </returns>
        public DeleteNetworkOptimizationResponse DeleteNetworkOptimization(DeleteNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteNetworkOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Network Optimization Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteNetworkOptimizationResponse
        /// </returns>
        public async Task<DeleteNetworkOptimizationResponse> DeleteNetworkOptimizationAsync(DeleteNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteNetworkOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginCaCertificateResponse
        /// </returns>
        public DeleteOriginCaCertificateResponse DeleteOriginCaCertificateWithOptions(DeleteOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginCaCertificateResponse
        /// </returns>
        public async Task<DeleteOriginCaCertificateResponse> DeleteOriginCaCertificateWithOptionsAsync(DeleteOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginCaCertificateResponse
        /// </returns>
        public DeleteOriginCaCertificateResponse DeleteOriginCaCertificate(DeleteOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOriginCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginCaCertificateResponse
        /// </returns>
        public async Task<DeleteOriginCaCertificateResponse> DeleteOriginCaCertificateAsync(DeleteOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOriginCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginClientCertificateResponse
        /// </returns>
        public DeleteOriginClientCertificateResponse DeleteOriginClientCertificateWithOptions(DeleteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginClientCertificateResponse
        /// </returns>
        public async Task<DeleteOriginClientCertificateResponse> DeleteOriginClientCertificateWithOptionsAsync(DeleteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginClientCertificateResponse
        /// </returns>
        public DeleteOriginClientCertificateResponse DeleteOriginClientCertificate(DeleteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginClientCertificateResponse
        /// </returns>
        public async Task<DeleteOriginClientCertificateResponse> DeleteOriginClientCertificateAsync(DeleteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Address Pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginPoolResponse
        /// </returns>
        public DeleteOriginPoolResponse DeleteOriginPoolWithOptions(DeleteOriginPoolRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginPoolResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Address Pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginPoolResponse
        /// </returns>
        public async Task<DeleteOriginPoolResponse> DeleteOriginPoolWithOptionsAsync(DeleteOriginPoolRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginPoolResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Address Pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginPoolResponse
        /// </returns>
        public DeleteOriginPoolResponse DeleteOriginPool(DeleteOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOriginPoolWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Address Pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginPoolResponse
        /// </returns>
        public async Task<DeleteOriginPoolResponse> DeleteOriginPoolAsync(DeleteOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOriginPoolWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginProtectionResponse
        /// </returns>
        public DeleteOriginProtectionResponse DeleteOriginProtectionWithOptions(DeleteOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginProtectionResponse
        /// </returns>
        public async Task<DeleteOriginProtectionResponse> DeleteOriginProtectionWithOptionsAsync(DeleteOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginProtectionResponse
        /// </returns>
        public DeleteOriginProtectionResponse DeleteOriginProtection(DeleteOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOriginProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables origin protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginProtectionResponse
        /// </returns>
        public async Task<DeleteOriginProtectionResponse> DeleteOriginProtectionAsync(DeleteOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOriginProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginRuleResponse
        /// </returns>
        public DeleteOriginRuleResponse DeleteOriginRuleWithOptions(DeleteOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginRuleResponse
        /// </returns>
        public async Task<DeleteOriginRuleResponse> DeleteOriginRuleWithOptionsAsync(DeleteOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOriginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginRuleResponse
        /// </returns>
        public DeleteOriginRuleResponse DeleteOriginRule(DeleteOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOriginRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteOriginRuleResponse
        /// </returns>
        public async Task<DeleteOriginRuleResponse> DeleteOriginRuleAsync(DeleteOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOriginRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom error page that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeletePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeletePageResponse
        /// </returns>
        public DeletePageResponse DeletePageWithOptions(DeletePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom error page that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeletePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeletePageResponse
        /// </returns>
        public async Task<DeletePageResponse> DeletePageWithOptionsAsync(DeletePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom error page that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeletePageRequest
        /// </param>
        /// 
        /// <returns>
        /// DeletePageResponse
        /// </returns>
        public DeletePageResponse DeletePage(DeletePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a custom error page that is no longer needed.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeletePageRequest
        /// </param>
        /// 
        /// <returns>
        /// DeletePageResponse
        /// </returns>
        public async Task<DeletePageResponse> DeletePageAsync(DeletePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a DNS record of a website based on the specified RecordId.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRecordResponse
        /// </returns>
        public DeleteRecordResponse DeleteRecordWithOptions(DeleteRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a DNS record of a website based on the specified RecordId.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRecordResponse
        /// </returns>
        public async Task<DeleteRecordResponse> DeleteRecordWithOptionsAsync(DeleteRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a DNS record of a website based on the specified RecordId.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRecordResponse
        /// </returns>
        public DeleteRecordResponse DeleteRecord(DeleteRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a DNS record of a website based on the specified RecordId.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRecordResponse
        /// </returns>
        public async Task<DeleteRecordResponse> DeleteRecordAsync(DeleteRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL redirect rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRedirectRuleResponse
        /// </returns>
        public DeleteRedirectRuleResponse DeleteRedirectRuleWithOptions(DeleteRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRedirectRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL redirect rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRedirectRuleResponse
        /// </returns>
        public async Task<DeleteRedirectRuleResponse> DeleteRedirectRuleWithOptionsAsync(DeleteRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRedirectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL redirect rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRedirectRuleResponse
        /// </returns>
        public DeleteRedirectRuleResponse DeleteRedirectRule(DeleteRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRedirectRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL redirect rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRedirectRuleResponse
        /// </returns>
        public async Task<DeleteRedirectRuleResponse> DeleteRedirectRuleAsync(DeleteRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRedirectRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL rewrite rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRewriteUrlRuleResponse
        /// </returns>
        public DeleteRewriteUrlRuleResponse DeleteRewriteUrlRuleWithOptions(DeleteRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRewriteUrlRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL rewrite rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRewriteUrlRuleResponse
        /// </returns>
        public async Task<DeleteRewriteUrlRuleResponse> DeleteRewriteUrlRuleWithOptionsAsync(DeleteRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRewriteUrlRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL rewrite rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRewriteUrlRuleResponse
        /// </returns>
        public DeleteRewriteUrlRuleResponse DeleteRewriteUrlRule(DeleteRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRewriteUrlRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a URL rewrite rule for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRewriteUrlRuleResponse
        /// </returns>
        public async Task<DeleteRewriteUrlRuleResponse> DeleteRewriteUrlRuleAsync(DeleteRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRewriteUrlRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routine in Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineResponse
        /// </returns>
        public DeleteRoutineResponse DeleteRoutineWithOptions(DeleteRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routine in Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineResponse
        /// </returns>
        public async Task<DeleteRoutineResponse> DeleteRoutineWithOptionsAsync(DeleteRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routine in Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineResponse
        /// </returns>
        public DeleteRoutineResponse DeleteRoutine(DeleteRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRoutineWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a routine in Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineResponse
        /// </returns>
        public async Task<DeleteRoutineResponse> DeleteRoutineAsync(DeleteRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRoutineWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a code version of a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineCodeVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineCodeVersionResponse
        /// </returns>
        public DeleteRoutineCodeVersionResponse DeleteRoutineCodeVersionWithOptions(DeleteRoutineCodeVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeVersion))
            {
                body["CodeVersion"] = request.CodeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineCodeVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineCodeVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a code version of a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineCodeVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineCodeVersionResponse
        /// </returns>
        public async Task<DeleteRoutineCodeVersionResponse> DeleteRoutineCodeVersionWithOptionsAsync(DeleteRoutineCodeVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeVersion))
            {
                body["CodeVersion"] = request.CodeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineCodeVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineCodeVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a code version of a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineCodeVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineCodeVersionResponse
        /// </returns>
        public DeleteRoutineCodeVersionResponse DeleteRoutineCodeVersion(DeleteRoutineCodeVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRoutineCodeVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a code version of a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineCodeVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineCodeVersionResponse
        /// </returns>
        public async Task<DeleteRoutineCodeVersionResponse> DeleteRoutineCodeVersionAsync(DeleteRoutineCodeVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRoutineCodeVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a record that is associated with a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRelatedRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRelatedRecordResponse
        /// </returns>
        public DeleteRoutineRelatedRecordResponse DeleteRoutineRelatedRecordWithOptions(DeleteRoutineRelatedRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                body["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineRelatedRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineRelatedRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a record that is associated with a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRelatedRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRelatedRecordResponse
        /// </returns>
        public async Task<DeleteRoutineRelatedRecordResponse> DeleteRoutineRelatedRecordWithOptionsAsync(DeleteRoutineRelatedRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                body["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordName))
            {
                body["RecordName"] = request.RecordName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineRelatedRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineRelatedRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a record that is associated with a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRelatedRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRelatedRecordResponse
        /// </returns>
        public DeleteRoutineRelatedRecordResponse DeleteRoutineRelatedRecord(DeleteRoutineRelatedRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRoutineRelatedRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a record that is associated with a routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRelatedRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRelatedRecordResponse
        /// </returns>
        public async Task<DeleteRoutineRelatedRecordResponse> DeleteRoutineRelatedRecordAsync(DeleteRoutineRelatedRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRoutineRelatedRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRouteResponse
        /// </returns>
        public DeleteRoutineRouteResponse DeleteRoutineRouteWithOptions(DeleteRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineRouteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRouteResponse
        /// </returns>
        public async Task<DeleteRoutineRouteResponse> DeleteRoutineRouteWithOptionsAsync(DeleteRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRoutineRouteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRouteResponse
        /// </returns>
        public DeleteRoutineRouteResponse DeleteRoutineRoute(DeleteRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRoutineRouteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteRoutineRouteResponse
        /// </returns>
        public async Task<DeleteRoutineRouteResponse> DeleteRoutineRouteAsync(DeleteRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRoutineRouteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadExecutionResponse
        /// </returns>
        public DeleteScheduledPreloadExecutionResponse DeleteScheduledPreloadExecutionWithOptions(DeleteScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScheduledPreloadExecutionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<DeleteScheduledPreloadExecutionResponse> DeleteScheduledPreloadExecutionWithOptionsAsync(DeleteScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScheduledPreloadExecutionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadExecutionResponse
        /// </returns>
        public DeleteScheduledPreloadExecutionResponse DeleteScheduledPreloadExecution(DeleteScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteScheduledPreloadExecutionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<DeleteScheduledPreloadExecutionResponse> DeleteScheduledPreloadExecutionAsync(DeleteScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteScheduledPreloadExecutionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadJobResponse
        /// </returns>
        public DeleteScheduledPreloadJobResponse DeleteScheduledPreloadJobWithOptions(DeleteScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScheduledPreloadJobResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadJobResponse
        /// </returns>
        public async Task<DeleteScheduledPreloadJobResponse> DeleteScheduledPreloadJobWithOptionsAsync(DeleteScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScheduledPreloadJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadJobResponse
        /// </returns>
        public DeleteScheduledPreloadJobResponse DeleteScheduledPreloadJob(DeleteScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteScheduledPreloadJobWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteScheduledPreloadJobResponse
        /// </returns>
        public async Task<DeleteScheduledPreloadJobResponse> DeleteScheduledPreloadJobAsync(DeleteScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteScheduledPreloadJobWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a website based on the specified website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteResponse
        /// </returns>
        public DeleteSiteResponse DeleteSiteWithOptions(DeleteSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a website based on the specified website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteResponse
        /// </returns>
        public async Task<DeleteSiteResponse> DeleteSiteWithOptionsAsync(DeleteSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a website based on the specified website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteResponse
        /// </returns>
        public DeleteSiteResponse DeleteSite(DeleteSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSiteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a website based on the specified website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteResponse
        /// </returns>
        public async Task<DeleteSiteResponse> DeleteSiteAsync(DeleteSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSiteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteDeliveryTaskResponse
        /// </returns>
        public DeleteSiteDeliveryTaskResponse DeleteSiteDeliveryTaskWithOptions(DeleteSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteDeliveryTaskResponse
        /// </returns>
        public async Task<DeleteSiteDeliveryTaskResponse> DeleteSiteDeliveryTaskWithOptionsAsync(DeleteSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteDeliveryTaskResponse
        /// </returns>
        public DeleteSiteDeliveryTaskResponse DeleteSiteDeliveryTask(DeleteSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSiteDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteDeliveryTaskResponse
        /// </returns>
        public async Task<DeleteSiteDeliveryTaskResponse> DeleteSiteDeliveryTaskAsync(DeleteSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSiteDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteOriginClientCertificateResponse
        /// </returns>
        public DeleteSiteOriginClientCertificateResponse DeleteSiteOriginClientCertificateWithOptions(DeleteSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<DeleteSiteOriginClientCertificateResponse> DeleteSiteOriginClientCertificateWithOptionsAsync(DeleteSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSiteOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteOriginClientCertificateResponse
        /// </returns>
        public DeleteSiteOriginClientCertificateResponse DeleteSiteOriginClientCertificate(DeleteSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSiteOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<DeleteSiteOriginClientCertificateResponse> DeleteSiteOriginClientCertificateAsync(DeleteSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSiteOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a log delivery task from your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>*****&gt; </para>
        /// <list type="bullet">
        /// <item><description>Deleted tasks cannot be restored. Proceed with caution.</description></item>
        /// <item><description>To call this operation, you must have an account that has the required permissions.</description></item>
        /// <item><description>The returned <c>RequestId</c> value can be used to track the request processing progress and troubleshoot issues.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteUserDeliveryTaskResponse
        /// </returns>
        public DeleteUserDeliveryTaskResponse DeleteUserDeliveryTaskWithOptions(DeleteUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteUserDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a log delivery task from your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>*****&gt; </para>
        /// <list type="bullet">
        /// <item><description>Deleted tasks cannot be restored. Proceed with caution.</description></item>
        /// <item><description>To call this operation, you must have an account that has the required permissions.</description></item>
        /// <item><description>The returned <c>RequestId</c> value can be used to track the request processing progress and troubleshoot issues.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteUserDeliveryTaskResponse
        /// </returns>
        public async Task<DeleteUserDeliveryTaskResponse> DeleteUserDeliveryTaskWithOptionsAsync(DeleteUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteUserDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a log delivery task from your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>*****&gt; </para>
        /// <list type="bullet">
        /// <item><description>Deleted tasks cannot be restored. Proceed with caution.</description></item>
        /// <item><description>To call this operation, you must have an account that has the required permissions.</description></item>
        /// <item><description>The returned <c>RequestId</c> value can be used to track the request processing progress and troubleshoot issues.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteUserDeliveryTaskResponse
        /// </returns>
        public DeleteUserDeliveryTaskResponse DeleteUserDeliveryTask(DeleteUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteUserDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a log delivery task from your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>*****&gt; </para>
        /// <list type="bullet">
        /// <item><description>Deleted tasks cannot be restored. Proceed with caution.</description></item>
        /// <item><description>To call this operation, you must have an account that has the required permissions.</description></item>
        /// <item><description>The returned <c>RequestId</c> value can be used to track the request processing progress and troubleshoot issues.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// DeleteUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteUserDeliveryTaskResponse
        /// </returns>
        public async Task<DeleteUserDeliveryTaskResponse> DeleteUserDeliveryTaskAsync(DeleteUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteUserDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteVideoProcessingResponse
        /// </returns>
        public DeleteVideoProcessingResponse DeleteVideoProcessingWithOptions(DeleteVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVideoProcessingResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteVideoProcessingResponse
        /// </returns>
        public async Task<DeleteVideoProcessingResponse> DeleteVideoProcessingWithOptionsAsync(DeleteVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVideoProcessingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteVideoProcessingResponse
        /// </returns>
        public DeleteVideoProcessingResponse DeleteVideoProcessing(DeleteVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteVideoProcessingWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>删除站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteVideoProcessingResponse
        /// </returns>
        public async Task<DeleteVideoProcessingResponse> DeleteVideoProcessingAsync(DeleteVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteVideoProcessingWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRuleResponse
        /// </returns>
        public DeleteWafRuleResponse DeleteWafRuleWithOptions(DeleteWafRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWafRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRuleResponse
        /// </returns>
        public async Task<DeleteWafRuleResponse> DeleteWafRuleWithOptionsAsync(DeleteWafRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWafRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRuleResponse
        /// </returns>
        public DeleteWafRuleResponse DeleteWafRule(DeleteWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWafRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRuleResponse
        /// </returns>
        public async Task<DeleteWafRuleResponse> DeleteWafRuleAsync(DeleteWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWafRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRulesetResponse
        /// </returns>
        public DeleteWafRulesetResponse DeleteWafRulesetWithOptions(DeleteWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWafRulesetResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRulesetResponse
        /// </returns>
        public async Task<DeleteWafRulesetResponse> DeleteWafRulesetWithOptionsAsync(DeleteWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWafRulesetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRulesetResponse
        /// </returns>
        public DeleteWafRulesetResponse DeleteWafRuleset(DeleteWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWafRulesetWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Delete WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWafRulesetResponse
        /// </returns>
        public async Task<DeleteWafRulesetResponse> DeleteWafRulesetAsync(DeleteWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWafRulesetWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomResponse
        /// </returns>
        public DeleteWaitingRoomResponse DeleteWaitingRoomWithOptions(DeleteWaitingRoomRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomResponse
        /// </returns>
        public async Task<DeleteWaitingRoomResponse> DeleteWaitingRoomWithOptionsAsync(DeleteWaitingRoomRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomResponse
        /// </returns>
        public DeleteWaitingRoomResponse DeleteWaitingRoom(DeleteWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWaitingRoomWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomResponse
        /// </returns>
        public async Task<DeleteWaitingRoomResponse> DeleteWaitingRoomAsync(DeleteWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWaitingRoomWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomEventResponse
        /// </returns>
        public DeleteWaitingRoomEventResponse DeleteWaitingRoomEventWithOptions(DeleteWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomEventId))
            {
                query["WaitingRoomEventId"] = request.WaitingRoomEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomEventResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomEventResponse
        /// </returns>
        public async Task<DeleteWaitingRoomEventResponse> DeleteWaitingRoomEventWithOptionsAsync(DeleteWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomEventId))
            {
                query["WaitingRoomEventId"] = request.WaitingRoomEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomEventResponse
        /// </returns>
        public DeleteWaitingRoomEventResponse DeleteWaitingRoomEvent(DeleteWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWaitingRoomEventWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomEventResponse
        /// </returns>
        public async Task<DeleteWaitingRoomEventResponse> DeleteWaitingRoomEventAsync(DeleteWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWaitingRoomEventWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room bypass rule.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomRuleResponse
        /// </returns>
        public DeleteWaitingRoomRuleResponse DeleteWaitingRoomRuleWithOptions(DeleteWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomRuleId))
            {
                query["WaitingRoomRuleId"] = request.WaitingRoomRuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room bypass rule.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomRuleResponse
        /// </returns>
        public async Task<DeleteWaitingRoomRuleResponse> DeleteWaitingRoomRuleWithOptionsAsync(DeleteWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomRuleId))
            {
                query["WaitingRoomRuleId"] = request.WaitingRoomRuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWaitingRoomRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room bypass rule.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomRuleResponse
        /// </returns>
        public DeleteWaitingRoomRuleResponse DeleteWaitingRoomRule(DeleteWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWaitingRoomRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a waiting room bypass rule.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DeleteWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// DeleteWaitingRoomRuleResponse
        /// </returns>
        public async Task<DeleteWaitingRoomRuleResponse> DeleteWaitingRoomRuleAsync(DeleteWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWaitingRoomRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCustomScenePoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCustomScenePoliciesResponse
        /// </returns>
        public DescribeCustomScenePoliciesResponse DescribeCustomScenePoliciesWithOptions(DescribeCustomScenePoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomScenePolicies",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomScenePoliciesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCustomScenePoliciesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeCustomScenePoliciesResponse
        /// </returns>
        public async Task<DescribeCustomScenePoliciesResponse> DescribeCustomScenePoliciesWithOptionsAsync(DescribeCustomScenePoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomScenePolicies",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomScenePoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCustomScenePoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCustomScenePoliciesResponse
        /// </returns>
        public DescribeCustomScenePoliciesResponse DescribeCustomScenePolicies(DescribeCustomScenePoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCustomScenePoliciesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeCustomScenePoliciesRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeCustomScenePoliciesResponse
        /// </returns>
        public async Task<DescribeCustomScenePoliciesResponse> DescribeCustomScenePoliciesAsync(DescribeCustomScenePoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCustomScenePoliciesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries DDoS attack events.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSAllEventListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSAllEventListResponse
        /// </returns>
        public DescribeDDoSAllEventListResponse DescribeDDoSAllEventListWithOptions(DescribeDDoSAllEventListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSAllEventList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSAllEventListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries DDoS attack events.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSAllEventListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSAllEventListResponse
        /// </returns>
        public async Task<DescribeDDoSAllEventListResponse> DescribeDDoSAllEventListWithOptionsAsync(DescribeDDoSAllEventListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSAllEventList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSAllEventListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries DDoS attack events.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSAllEventListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSAllEventListResponse
        /// </returns>
        public DescribeDDoSAllEventListResponse DescribeDDoSAllEventList(DescribeDDoSAllEventListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDDoSAllEventListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries DDoS attack events.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSAllEventListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSAllEventListResponse
        /// </returns>
        public async Task<DescribeDDoSAllEventListResponse> DescribeDDoSAllEventListAsync(DescribeDDoSAllEventListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDDoSAllEventListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query DCDN DDoS user bps and pps data</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSBpsListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSBpsListResponse
        /// </returns>
        public DescribeDDoSBpsListResponse DescribeDDoSBpsListWithOptions(DescribeDDoSBpsListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSBpsList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSBpsListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query DCDN DDoS user bps and pps data</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSBpsListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSBpsListResponse
        /// </returns>
        public async Task<DescribeDDoSBpsListResponse> DescribeDDoSBpsListWithOptionsAsync(DescribeDDoSBpsListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSBpsList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSBpsListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query DCDN DDoS user bps and pps data</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSBpsListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSBpsListResponse
        /// </returns>
        public DescribeDDoSBpsListResponse DescribeDDoSBpsList(DescribeDDoSBpsListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDDoSBpsListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query DCDN DDoS user bps and pps data</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSBpsListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSBpsListResponse
        /// </returns>
        public async Task<DescribeDDoSBpsListResponse> DescribeDDoSBpsListAsync(DescribeDDoSBpsListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDDoSBpsListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>DDoS Analysis Layer 7 QPS Trend Chart API</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSL7QpsListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSL7QpsListResponse
        /// </returns>
        public DescribeDDoSL7QpsListResponse DescribeDDoSL7QpsListWithOptions(DescribeDDoSL7QpsListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSL7QpsList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSL7QpsListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>DDoS Analysis Layer 7 QPS Trend Chart API</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSL7QpsListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSL7QpsListResponse
        /// </returns>
        public async Task<DescribeDDoSL7QpsListResponse> DescribeDDoSL7QpsListWithOptionsAsync(DescribeDDoSL7QpsListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDDoSL7QpsList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDDoSL7QpsListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>DDoS Analysis Layer 7 QPS Trend Chart API</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSL7QpsListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSL7QpsListResponse
        /// </returns>
        public DescribeDDoSL7QpsListResponse DescribeDDoSL7QpsList(DescribeDDoSL7QpsListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDDoSL7QpsListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>DDoS Analysis Layer 7 QPS Trend Chart API</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeDDoSL7QpsListRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeDDoSL7QpsListResponse
        /// </returns>
        public async Task<DescribeDDoSL7QpsListResponse> DescribeDDoSL7QpsListAsync(DescribeDDoSL7QpsListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDDoSL7QpsListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>将天眼提供给XCDN边缘容器的监控OpenAPI适配成青蓝的OpenAPI</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeEdgeContainerAppStatsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeEdgeContainerAppStatsResponse
        /// </returns>
        public DescribeEdgeContainerAppStatsResponse DescribeEdgeContainerAppStatsWithOptions(DescribeEdgeContainerAppStatsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEdgeContainerAppStats",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEdgeContainerAppStatsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>将天眼提供给XCDN边缘容器的监控OpenAPI适配成青蓝的OpenAPI</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeEdgeContainerAppStatsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeEdgeContainerAppStatsResponse
        /// </returns>
        public async Task<DescribeEdgeContainerAppStatsResponse> DescribeEdgeContainerAppStatsWithOptionsAsync(DescribeEdgeContainerAppStatsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEdgeContainerAppStats",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEdgeContainerAppStatsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>将天眼提供给XCDN边缘容器的监控OpenAPI适配成青蓝的OpenAPI</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeEdgeContainerAppStatsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeEdgeContainerAppStatsResponse
        /// </returns>
        public DescribeEdgeContainerAppStatsResponse DescribeEdgeContainerAppStats(DescribeEdgeContainerAppStatsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEdgeContainerAppStatsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>将天眼提供给XCDN边缘容器的监控OpenAPI适配成青蓝的OpenAPI</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeEdgeContainerAppStatsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeEdgeContainerAppStatsResponse
        /// </returns>
        public async Task<DescribeEdgeContainerAppStatsResponse> DescribeEdgeContainerAppStatsAsync(DescribeEdgeContainerAppStatsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEdgeContainerAppStatsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of smart HTTP DDoS protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public DescribeHttpDDoSAttackIntelligentProtectionResponse DescribeHttpDDoSAttackIntelligentProtectionWithOptions(DescribeHttpDDoSAttackIntelligentProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHttpDDoSAttackIntelligentProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHttpDDoSAttackIntelligentProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of smart HTTP DDoS protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public async Task<DescribeHttpDDoSAttackIntelligentProtectionResponse> DescribeHttpDDoSAttackIntelligentProtectionWithOptionsAsync(DescribeHttpDDoSAttackIntelligentProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHttpDDoSAttackIntelligentProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHttpDDoSAttackIntelligentProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of smart HTTP DDoS protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public DescribeHttpDDoSAttackIntelligentProtectionResponse DescribeHttpDDoSAttackIntelligentProtection(DescribeHttpDDoSAttackIntelligentProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeHttpDDoSAttackIntelligentProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of smart HTTP DDoS protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public async Task<DescribeHttpDDoSAttackIntelligentProtectionResponse> DescribeHttpDDoSAttackIntelligentProtectionAsync(DescribeHttpDDoSAttackIntelligentProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeHttpDDoSAttackIntelligentProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of HTTP DDoS attack protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackProtectionResponse
        /// </returns>
        public DescribeHttpDDoSAttackProtectionResponse DescribeHttpDDoSAttackProtectionWithOptions(DescribeHttpDDoSAttackProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHttpDDoSAttackProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHttpDDoSAttackProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of HTTP DDoS attack protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackProtectionResponse
        /// </returns>
        public async Task<DescribeHttpDDoSAttackProtectionResponse> DescribeHttpDDoSAttackProtectionWithOptionsAsync(DescribeHttpDDoSAttackProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHttpDDoSAttackProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHttpDDoSAttackProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of HTTP DDoS attack protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackProtectionResponse
        /// </returns>
        public DescribeHttpDDoSAttackProtectionResponse DescribeHttpDDoSAttackProtection(DescribeHttpDDoSAttackProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeHttpDDoSAttackProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of HTTP DDoS attack protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeHttpDDoSAttackProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeHttpDDoSAttackProtectionResponse
        /// </returns>
        public async Task<DescribeHttpDDoSAttackProtectionResponse> DescribeHttpDDoSAttackProtectionAsync(DescribeHttpDDoSAttackProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeHttpDDoSAttackProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether Edge KV is activated in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeKvAccountStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeKvAccountStatusResponse
        /// </returns>
        public DescribeKvAccountStatusResponse DescribeKvAccountStatusWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeKvAccountStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeKvAccountStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether Edge KV is activated in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeKvAccountStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeKvAccountStatusResponse
        /// </returns>
        public async Task<DescribeKvAccountStatusResponse> DescribeKvAccountStatusWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeKvAccountStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeKvAccountStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether Edge KV is activated in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <returns>
        /// DescribeKvAccountStatusResponse
        /// </returns>
        public DescribeKvAccountStatusResponse DescribeKvAccountStatus()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeKvAccountStatusWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries whether Edge KV is activated in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <returns>
        /// DescribeKvAccountStatusResponse
        /// </returns>
        public async Task<DescribeKvAccountStatusResponse> DescribeKvAccountStatusAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeKvAccountStatusWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of prefetch tasks by time, task status, or prefetch URL.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePreloadTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePreloadTasksResponse
        /// </returns>
        public DescribePreloadTasksResponse DescribePreloadTasksWithOptions(DescribePreloadTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePreloadTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePreloadTasksResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of prefetch tasks by time, task status, or prefetch URL.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePreloadTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePreloadTasksResponse
        /// </returns>
        public async Task<DescribePreloadTasksResponse> DescribePreloadTasksWithOptionsAsync(DescribePreloadTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePreloadTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePreloadTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of prefetch tasks by time, task status, or prefetch URL.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePreloadTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePreloadTasksResponse
        /// </returns>
        public DescribePreloadTasksResponse DescribePreloadTasks(DescribePreloadTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePreloadTasksWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of prefetch tasks by time, task status, or prefetch URL.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePreloadTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePreloadTasksResponse
        /// </returns>
        public async Task<DescribePreloadTasksResponse> DescribePreloadTasksAsync(DescribePreloadTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePreloadTasksWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of purge tasks.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePurgeTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePurgeTasksResponse
        /// </returns>
        public DescribePurgeTasksResponse DescribePurgeTasksWithOptions(DescribePurgeTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePurgeTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePurgeTasksResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of purge tasks.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePurgeTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribePurgeTasksResponse
        /// </returns>
        public async Task<DescribePurgeTasksResponse> DescribePurgeTasksWithOptionsAsync(DescribePurgeTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePurgeTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePurgeTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of purge tasks.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePurgeTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePurgeTasksResponse
        /// </returns>
        public DescribePurgeTasksResponse DescribePurgeTasks(DescribePurgeTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePurgeTasksWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of purge tasks.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribePurgeTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribePurgeTasksResponse
        /// </returns>
        public async Task<DescribePurgeTasksResponse> DescribePurgeTasksAsync(DescribePurgeTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePurgeTasksWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status of an instance that uses a plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can query the status of an instance after you purchase a plan for the instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeRatePlanInstanceStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRatePlanInstanceStatusResponse
        /// </returns>
        public DescribeRatePlanInstanceStatusResponse DescribeRatePlanInstanceStatusWithOptions(DescribeRatePlanInstanceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRatePlanInstanceStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRatePlanInstanceStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status of an instance that uses a plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can query the status of an instance after you purchase a plan for the instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeRatePlanInstanceStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeRatePlanInstanceStatusResponse
        /// </returns>
        public async Task<DescribeRatePlanInstanceStatusResponse> DescribeRatePlanInstanceStatusWithOptionsAsync(DescribeRatePlanInstanceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRatePlanInstanceStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRatePlanInstanceStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status of an instance that uses a plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can query the status of an instance after you purchase a plan for the instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeRatePlanInstanceStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRatePlanInstanceStatusResponse
        /// </returns>
        public DescribeRatePlanInstanceStatusResponse DescribeRatePlanInstanceStatus(DescribeRatePlanInstanceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRatePlanInstanceStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status of an instance that uses a plan.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can query the status of an instance after you purchase a plan for the instance.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// DescribeRatePlanInstanceStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeRatePlanInstanceStatusResponse
        /// </returns>
        public async Task<DescribeRatePlanInstanceStatusResponse> DescribeRatePlanInstanceStatusAsync(DescribeRatePlanInstanceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRatePlanInstanceStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点离线日志</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteLogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteLogsResponse
        /// </returns>
        public DescribeSiteLogsResponse DescribeSiteLogsWithOptions(DescribeSiteLogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteLogs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteLogsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点离线日志</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteLogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteLogsResponse
        /// </returns>
        public async Task<DescribeSiteLogsResponse> DescribeSiteLogsWithOptionsAsync(DescribeSiteLogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteLogs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteLogsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点离线日志</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteLogsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteLogsResponse
        /// </returns>
        public DescribeSiteLogsResponse DescribeSiteLogs(DescribeSiteLogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSiteLogsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点离线日志</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteLogsRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteLogsResponse
        /// </returns>
        public async Task<DescribeSiteLogsResponse> DescribeSiteLogsAsync(DescribeSiteLogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSiteLogsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取时序数据</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// DescribeSiteTimeSeriesDataRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTimeSeriesDataResponse
        /// </returns>
        public DescribeSiteTimeSeriesDataResponse DescribeSiteTimeSeriesDataWithOptions(DescribeSiteTimeSeriesDataRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeSiteTimeSeriesDataShrinkRequest request = new DescribeSiteTimeSeriesDataShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Fields))
            {
                request.FieldsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Fields, "Fields", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldsShrink))
            {
                query["Fields"] = request.FieldsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteTimeSeriesData",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteTimeSeriesDataResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取时序数据</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// DescribeSiteTimeSeriesDataRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTimeSeriesDataResponse
        /// </returns>
        public async Task<DescribeSiteTimeSeriesDataResponse> DescribeSiteTimeSeriesDataWithOptionsAsync(DescribeSiteTimeSeriesDataRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeSiteTimeSeriesDataShrinkRequest request = new DescribeSiteTimeSeriesDataShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Fields))
            {
                request.FieldsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Fields, "Fields", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldsShrink))
            {
                query["Fields"] = request.FieldsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteTimeSeriesData",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteTimeSeriesDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取时序数据</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteTimeSeriesDataRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTimeSeriesDataResponse
        /// </returns>
        public DescribeSiteTimeSeriesDataResponse DescribeSiteTimeSeriesData(DescribeSiteTimeSeriesDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSiteTimeSeriesDataWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取时序数据</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteTimeSeriesDataRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTimeSeriesDataResponse
        /// </returns>
        public async Task<DescribeSiteTimeSeriesDataResponse> DescribeSiteTimeSeriesDataAsync(DescribeSiteTimeSeriesDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSiteTimeSeriesDataWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取Top数据</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// DescribeSiteTopDataRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTopDataResponse
        /// </returns>
        public DescribeSiteTopDataResponse DescribeSiteTopDataWithOptions(DescribeSiteTopDataRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeSiteTopDataShrinkRequest request = new DescribeSiteTopDataShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Fields))
            {
                request.FieldsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Fields, "Fields", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldsShrink))
            {
                query["Fields"] = request.FieldsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteTopData",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteTopDataResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取Top数据</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// DescribeSiteTopDataRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTopDataResponse
        /// </returns>
        public async Task<DescribeSiteTopDataResponse> DescribeSiteTopDataWithOptionsAsync(DescribeSiteTopDataRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeSiteTopDataShrinkRequest request = new DescribeSiteTopDataShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Fields))
            {
                request.FieldsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Fields, "Fields", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldsShrink))
            {
                query["Fields"] = request.FieldsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                query["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSiteTopData",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSiteTopDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取Top数据</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteTopDataRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTopDataResponse
        /// </returns>
        public DescribeSiteTopDataResponse DescribeSiteTopData(DescribeSiteTopDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSiteTopDataWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取Top数据</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DescribeSiteTopDataRequest
        /// </param>
        /// 
        /// <returns>
        /// DescribeSiteTopDataResponse
        /// </returns>
        public async Task<DescribeSiteTopDataResponse> DescribeSiteTopDataAsync(DescribeSiteTopDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSiteTopDataWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DisableCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableCustomScenePolicyResponse
        /// </returns>
        public DisableCustomScenePolicyResponse DisableCustomScenePolicyWithOptions(DisableCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCustomScenePolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DisableCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// DisableCustomScenePolicyResponse
        /// </returns>
        public async Task<DisableCustomScenePolicyResponse> DisableCustomScenePolicyWithOptionsAsync(DisableCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCustomScenePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DisableCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableCustomScenePolicyResponse
        /// </returns>
        public DisableCustomScenePolicyResponse DisableCustomScenePolicy(DisableCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableCustomScenePolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Disables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// DisableCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// DisableCustomScenePolicyResponse
        /// </returns>
        public async Task<DisableCustomScenePolicyResponse> DisableCustomScenePolicyAsync(DisableCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableCustomScenePolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Edit WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// EditSiteWafSettingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EditSiteWafSettingsResponse
        /// </returns>
        public EditSiteWafSettingsResponse EditSiteWafSettingsWithOptions(EditSiteWafSettingsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            EditSiteWafSettingsShrinkRequest request = new EditSiteWafSettingsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Settings))
            {
                request.SettingsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Settings, "Settings", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SettingsShrink))
            {
                body["Settings"] = request.SettingsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EditSiteWafSettings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EditSiteWafSettingsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Edit WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// EditSiteWafSettingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EditSiteWafSettingsResponse
        /// </returns>
        public async Task<EditSiteWafSettingsResponse> EditSiteWafSettingsWithOptionsAsync(EditSiteWafSettingsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            EditSiteWafSettingsShrinkRequest request = new EditSiteWafSettingsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Settings))
            {
                request.SettingsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Settings, "Settings", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SettingsShrink))
            {
                body["Settings"] = request.SettingsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EditSiteWafSettings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EditSiteWafSettingsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Edit WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EditSiteWafSettingsRequest
        /// </param>
        /// 
        /// <returns>
        /// EditSiteWafSettingsResponse
        /// </returns>
        public EditSiteWafSettingsResponse EditSiteWafSettings(EditSiteWafSettingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EditSiteWafSettingsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Edit WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EditSiteWafSettingsRequest
        /// </param>
        /// 
        /// <returns>
        /// EditSiteWafSettingsResponse
        /// </returns>
        public async Task<EditSiteWafSettingsResponse> EditSiteWafSettingsAsync(EditSiteWafSettingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EditSiteWafSettingsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EnableCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableCustomScenePolicyResponse
        /// </returns>
        public EnableCustomScenePolicyResponse EnableCustomScenePolicyWithOptions(EnableCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomScenePolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EnableCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// EnableCustomScenePolicyResponse
        /// </returns>
        public async Task<EnableCustomScenePolicyResponse> EnableCustomScenePolicyWithOptionsAsync(EnableCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomScenePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EnableCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableCustomScenePolicyResponse
        /// </returns>
        public EnableCustomScenePolicyResponse EnableCustomScenePolicy(EnableCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableCustomScenePolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables a scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// EnableCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// EnableCustomScenePolicyResponse
        /// </returns>
        public async Task<EnableCustomScenePolicyResponse> EnableCustomScenePolicyAsync(EnableCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableCustomScenePolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Exports all DNS records of a website domain as a TXT file.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ExportRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ExportRecordsResponse
        /// </returns>
        public ExportRecordsResponse ExportRecordsWithOptions(ExportRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Exports all DNS records of a website domain as a TXT file.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ExportRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ExportRecordsResponse
        /// </returns>
        public async Task<ExportRecordsResponse> ExportRecordsWithOptionsAsync(ExportRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Exports all DNS records of a website domain as a TXT file.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ExportRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ExportRecordsResponse
        /// </returns>
        public ExportRecordsResponse ExportRecords(ExportRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExportRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Exports all DNS records of a website domain as a TXT file.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ExportRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ExportRecordsResponse
        /// </returns>
        public async Task<ExportRecordsResponse> ExportRecordsAsync(ExportRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExportRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the available specifications of cache reserve instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheReserveSpecificationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheReserveSpecificationResponse
        /// </returns>
        public GetCacheReserveSpecificationResponse GetCacheReserveSpecificationWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheReserveSpecification",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheReserveSpecificationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the available specifications of cache reserve instances.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheReserveSpecificationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheReserveSpecificationResponse
        /// </returns>
        public async Task<GetCacheReserveSpecificationResponse> GetCacheReserveSpecificationWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheReserveSpecification",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheReserveSpecificationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the available specifications of cache reserve instances.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetCacheReserveSpecificationResponse
        /// </returns>
        public GetCacheReserveSpecificationResponse GetCacheReserveSpecification()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCacheReserveSpecificationWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the available specifications of cache reserve instances.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetCacheReserveSpecificationResponse
        /// </returns>
        public async Task<GetCacheReserveSpecificationResponse> GetCacheReserveSpecificationAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCacheReserveSpecificationWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheRuleResponse
        /// </returns>
        public GetCacheRuleResponse GetCacheRuleWithOptions(GetCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheRuleResponse
        /// </returns>
        public async Task<GetCacheRuleResponse> GetCacheRuleWithOptionsAsync(GetCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCacheRuleResponse
        /// </returns>
        public GetCacheRuleResponse GetCacheRule(GetCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCacheRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCacheRuleResponse
        /// </returns>
        public async Task<GetCacheRuleResponse> GetCacheRuleAsync(GetCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCacheRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Cache Tag Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheTagRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheTagResponse
        /// </returns>
        public GetCacheTagResponse GetCacheTagWithOptions(GetCacheTagRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheTag",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheTagResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Cache Tag Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheTagRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCacheTagResponse
        /// </returns>
        public async Task<GetCacheTagResponse> GetCacheTagWithOptionsAsync(GetCacheTagRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCacheTag",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCacheTagResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Cache Tag Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheTagRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCacheTagResponse
        /// </returns>
        public GetCacheTagResponse GetCacheTag(GetCacheTagRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCacheTagWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Cache Tag Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCacheTagRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCacheTagResponse
        /// </returns>
        public async Task<GetCacheTagResponse> GetCacheTagAsync(GetCacheTagRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCacheTagWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Retrieve the certificate, private key, and certificate information</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateResponse
        /// </returns>
        public GetCertificateResponse GetCertificateWithOptions(GetCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Retrieve the certificate, private key, and certificate information</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateResponse
        /// </returns>
        public async Task<GetCertificateResponse> GetCertificateWithOptionsAsync(GetCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Retrieve the certificate, private key, and certificate information</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateResponse
        /// </returns>
        public GetCertificateResponse GetCertificate(GetCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Retrieve the certificate, private key, and certificate information</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateResponse
        /// </returns>
        public async Task<GetCertificateResponse> GetCertificateAsync(GetCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query certificate quota and usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateQuotaResponse
        /// </returns>
        public GetCertificateQuotaResponse GetCertificateQuotaWithOptions(GetCertificateQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCertificateQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCertificateQuotaResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query certificate quota and usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateQuotaResponse
        /// </returns>
        public async Task<GetCertificateQuotaResponse> GetCertificateQuotaWithOptionsAsync(GetCertificateQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCertificateQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCertificateQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query certificate quota and usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateQuotaResponse
        /// </returns>
        public GetCertificateQuotaResponse GetCertificateQuota(GetCertificateQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCertificateQuotaWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query certificate quota and usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCertificateQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCertificateQuotaResponse
        /// </returns>
        public async Task<GetCertificateQuotaResponse> GetCertificateQuotaAsync(GetCertificateQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCertificateQuotaWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCaCertificateResponse
        /// </returns>
        public GetClientCaCertificateResponse GetClientCaCertificateWithOptions(GetClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCaCertificateResponse
        /// </returns>
        public async Task<GetClientCaCertificateResponse> GetClientCaCertificateWithOptionsAsync(GetClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCaCertificateResponse
        /// </returns>
        public GetClientCaCertificateResponse GetClientCaCertificate(GetClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a client CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCaCertificateResponse
        /// </returns>
        public async Task<GetClientCaCertificateResponse> GetClientCaCertificateAsync(GetClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateResponse
        /// </returns>
        public GetClientCertificateResponse GetClientCertificateWithOptions(GetClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateResponse
        /// </returns>
        public async Task<GetClientCertificateResponse> GetClientCertificateWithOptionsAsync(GetClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateResponse
        /// </returns>
        public GetClientCertificateResponse GetClientCertificate(GetClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateResponse
        /// </returns>
        public async Task<GetClientCertificateResponse> GetClientCertificateAsync(GetClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries domain names associated with a client CA certificate. If no certificate is specified, domain names associated with an Edge Security Acceleration(ESA)-managed CA certificate are returned.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateHostnamesResponse
        /// </returns>
        public GetClientCertificateHostnamesResponse GetClientCertificateHostnamesWithOptions(GetClientCertificateHostnamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCertificateHostnamesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries domain names associated with a client CA certificate. If no certificate is specified, domain names associated with an Edge Security Acceleration(ESA)-managed CA certificate are returned.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateHostnamesResponse
        /// </returns>
        public async Task<GetClientCertificateHostnamesResponse> GetClientCertificateHostnamesWithOptionsAsync(GetClientCertificateHostnamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientCertificateHostnamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries domain names associated with a client CA certificate. If no certificate is specified, domain names associated with an Edge Security Acceleration(ESA)-managed CA certificate are returned.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateHostnamesResponse
        /// </returns>
        public GetClientCertificateHostnamesResponse GetClientCertificateHostnames(GetClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientCertificateHostnamesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries domain names associated with a client CA certificate. If no certificate is specified, domain names associated with an Edge Security Acceleration(ESA)-managed CA certificate are returned.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// GetClientCertificateHostnamesResponse
        /// </returns>
        public async Task<GetClientCertificateHostnamesResponse> GetClientCertificateHostnamesAsync(GetClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientCertificateHostnamesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CNAME flattening configuration of a website</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCnameFlatteningRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCnameFlatteningResponse
        /// </returns>
        public GetCnameFlatteningResponse GetCnameFlatteningWithOptions(GetCnameFlatteningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCnameFlattening",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCnameFlatteningResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CNAME flattening configuration of a website</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCnameFlatteningRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCnameFlatteningResponse
        /// </returns>
        public async Task<GetCnameFlatteningResponse> GetCnameFlatteningWithOptionsAsync(GetCnameFlatteningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCnameFlattening",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCnameFlatteningResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CNAME flattening configuration of a website</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCnameFlatteningRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCnameFlatteningResponse
        /// </returns>
        public GetCnameFlatteningResponse GetCnameFlattening(GetCnameFlatteningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCnameFlatteningWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the CNAME flattening configuration of a website</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCnameFlatteningRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCnameFlatteningResponse
        /// </returns>
        public async Task<GetCnameFlatteningResponse> GetCnameFlatteningAsync(GetCnameFlatteningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCnameFlatteningWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Compression Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCompressionRuleResponse
        /// </returns>
        public GetCompressionRuleResponse GetCompressionRuleWithOptions(GetCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCompressionRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Compression Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCompressionRuleResponse
        /// </returns>
        public async Task<GetCompressionRuleResponse> GetCompressionRuleWithOptionsAsync(GetCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCompressionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Compression Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCompressionRuleResponse
        /// </returns>
        public GetCompressionRuleResponse GetCompressionRule(GetCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCompressionRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Compression Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCompressionRuleResponse
        /// </returns>
        public async Task<GetCompressionRuleResponse> GetCompressionRuleAsync(GetCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCompressionRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCrossBorderOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCrossBorderOptimizationResponse
        /// </returns>
        public GetCrossBorderOptimizationResponse GetCrossBorderOptimizationWithOptions(GetCrossBorderOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCrossBorderOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCrossBorderOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCrossBorderOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetCrossBorderOptimizationResponse
        /// </returns>
        public async Task<GetCrossBorderOptimizationResponse> GetCrossBorderOptimizationWithOptionsAsync(GetCrossBorderOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCrossBorderOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCrossBorderOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCrossBorderOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCrossBorderOptimizationResponse
        /// </returns>
        public GetCrossBorderOptimizationResponse GetCrossBorderOptimization(GetCrossBorderOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCrossBorderOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetCrossBorderOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetCrossBorderOptimizationResponse
        /// </returns>
        public async Task<GetCrossBorderOptimizationResponse> GetCrossBorderOptimizationAsync(GetCrossBorderOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCrossBorderOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Developer Mode Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetDevelopmentModeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetDevelopmentModeResponse
        /// </returns>
        public GetDevelopmentModeResponse GetDevelopmentModeWithOptions(GetDevelopmentModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDevelopmentMode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDevelopmentModeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Developer Mode Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetDevelopmentModeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetDevelopmentModeResponse
        /// </returns>
        public async Task<GetDevelopmentModeResponse> GetDevelopmentModeWithOptionsAsync(GetDevelopmentModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDevelopmentMode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDevelopmentModeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Developer Mode Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetDevelopmentModeRequest
        /// </param>
        /// 
        /// <returns>
        /// GetDevelopmentModeResponse
        /// </returns>
        public GetDevelopmentModeResponse GetDevelopmentMode(GetDevelopmentModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDevelopmentModeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Site Developer Mode Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetDevelopmentModeRequest
        /// </param>
        /// 
        /// <returns>
        /// GetDevelopmentModeResponse
        /// </returns>
        public async Task<GetDevelopmentModeResponse> GetDevelopmentModeAsync(GetDevelopmentModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDevelopmentModeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a containerized application, including basic application configurations and health check configurations.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResponse
        /// </returns>
        public GetEdgeContainerAppResponse GetEdgeContainerAppWithOptions(GetEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a containerized application, including basic application configurations and health check configurations.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResponse> GetEdgeContainerAppWithOptionsAsync(GetEdgeContainerAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerApp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a containerized application, including basic application configurations and health check configurations.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResponse
        /// </returns>
        public GetEdgeContainerAppResponse GetEdgeContainerApp(GetEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a containerized application, including basic application configurations and health check configurations.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResponse> GetEdgeContainerAppAsync(GetEdgeContainerAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppLogRiverRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppLogRiverResponse
        /// </returns>
        public GetEdgeContainerAppLogRiverResponse GetEdgeContainerAppLogRiverWithOptions(GetEdgeContainerAppLogRiverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppLogRiver",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppLogRiverResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppLogRiverRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppLogRiverResponse
        /// </returns>
        public async Task<GetEdgeContainerAppLogRiverResponse> GetEdgeContainerAppLogRiverWithOptionsAsync(GetEdgeContainerAppLogRiverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppLogRiver",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppLogRiverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppLogRiverRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppLogRiverResponse
        /// </returns>
        public GetEdgeContainerAppLogRiverResponse GetEdgeContainerAppLogRiver(GetEdgeContainerAppLogRiverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppLogRiverWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppLogRiverRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppLogRiverResponse
        /// </returns>
        public async Task<GetEdgeContainerAppLogRiverResponse> GetEdgeContainerAppLogRiverAsync(GetEdgeContainerAppLogRiverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppLogRiverWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceReserveResponse
        /// </returns>
        public GetEdgeContainerAppResourceReserveResponse GetEdgeContainerAppResourceReserveWithOptions(GetEdgeContainerAppResourceReserveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppResourceReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResourceReserveResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceReserveResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResourceReserveResponse> GetEdgeContainerAppResourceReserveWithOptionsAsync(GetEdgeContainerAppResourceReserveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppResourceReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResourceReserveResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceReserveResponse
        /// </returns>
        public GetEdgeContainerAppResourceReserveResponse GetEdgeContainerAppResourceReserve(GetEdgeContainerAppResourceReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppResourceReserveWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceReserveResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResourceReserveResponse> GetEdgeContainerAppResourceReserveAsync(GetEdgeContainerAppResourceReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppResourceReserveWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器应用资源分布</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceStatusResponse
        /// </returns>
        public GetEdgeContainerAppResourceStatusResponse GetEdgeContainerAppResourceStatusWithOptions(GetEdgeContainerAppResourceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppResourceStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResourceStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器应用资源分布</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResourceStatusResponse> GetEdgeContainerAppResourceStatusWithOptionsAsync(GetEdgeContainerAppResourceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppResourceStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppResourceStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器应用资源分布</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceStatusResponse
        /// </returns>
        public GetEdgeContainerAppResourceStatusResponse GetEdgeContainerAppResourceStatus(GetEdgeContainerAppResourceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppResourceStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取边缘容器应用资源分布</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppResourceStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppResourceStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerAppResourceStatusResponse> GetEdgeContainerAppResourceStatusAsync(GetEdgeContainerAppResourceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppResourceStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status information about a containerized application, including the deployment, release, and rollback of the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppStatusResponse
        /// </returns>
        public GetEdgeContainerAppStatusResponse GetEdgeContainerAppStatusWithOptions(GetEdgeContainerAppStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishEnv))
            {
                query["PublishEnv"] = request.PublishEnv;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status information about a containerized application, including the deployment, release, and rollback of the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerAppStatusResponse> GetEdgeContainerAppStatusWithOptionsAsync(GetEdgeContainerAppStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishEnv))
            {
                query["PublishEnv"] = request.PublishEnv;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status information about a containerized application, including the deployment, release, and rollback of the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppStatusResponse
        /// </returns>
        public GetEdgeContainerAppStatusResponse GetEdgeContainerAppStatus(GetEdgeContainerAppStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the status information about a containerized application, including the deployment, release, and rollback of the application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerAppStatusResponse> GetEdgeContainerAppStatusAsync(GetEdgeContainerAppStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a version of a containerized application. You can select an application version to release based on the version information.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppVersionResponse
        /// </returns>
        public GetEdgeContainerAppVersionResponse GetEdgeContainerAppVersionWithOptions(GetEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a version of a containerized application. You can select an application version to release based on the version information.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<GetEdgeContainerAppVersionResponse> GetEdgeContainerAppVersionWithOptionsAsync(GetEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerAppVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a version of a containerized application. You can select an application version to release based on the version information.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppVersionResponse
        /// </returns>
        public GetEdgeContainerAppVersionResponse GetEdgeContainerAppVersion(GetEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerAppVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a version of a containerized application. You can select an application version to release based on the version information.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<GetEdgeContainerAppVersionResponse> GetEdgeContainerAppVersionAsync(GetEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerAppVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries regions where a containerized application is deployed based on the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerDeployRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerDeployRegionsResponse
        /// </returns>
        public GetEdgeContainerDeployRegionsResponse GetEdgeContainerDeployRegionsWithOptions(GetEdgeContainerDeployRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerDeployRegions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerDeployRegionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries regions where a containerized application is deployed based on the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerDeployRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerDeployRegionsResponse
        /// </returns>
        public async Task<GetEdgeContainerDeployRegionsResponse> GetEdgeContainerDeployRegionsWithOptionsAsync(GetEdgeContainerDeployRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerDeployRegions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerDeployRegionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries regions where a containerized application is deployed based on the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerDeployRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerDeployRegionsResponse
        /// </returns>
        public GetEdgeContainerDeployRegionsResponse GetEdgeContainerDeployRegions(GetEdgeContainerDeployRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerDeployRegionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries regions where a containerized application is deployed based on the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerDeployRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerDeployRegionsResponse
        /// </returns>
        public async Task<GetEdgeContainerDeployRegionsResponse> GetEdgeContainerDeployRegionsAsync(GetEdgeContainerDeployRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerDeployRegionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Container logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerLogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerLogsResponse
        /// </returns>
        public GetEdgeContainerLogsResponse GetEdgeContainerLogsWithOptions(GetEdgeContainerLogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerLogs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerLogsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Container logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerLogsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerLogsResponse
        /// </returns>
        public async Task<GetEdgeContainerLogsResponse> GetEdgeContainerLogsWithOptionsAsync(GetEdgeContainerLogsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerLogs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerLogsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Container logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerLogsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerLogsResponse
        /// </returns>
        public GetEdgeContainerLogsResponse GetEdgeContainerLogs(GetEdgeContainerLogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerLogsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Container logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerLogsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerLogsResponse
        /// </returns>
        public async Task<GetEdgeContainerLogsResponse> GetEdgeContainerLogsAsync(GetEdgeContainerLogsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerLogsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the deployment status of an application in the staging environment by using the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerStagingDeployStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerStagingDeployStatusResponse
        /// </returns>
        public GetEdgeContainerStagingDeployStatusResponse GetEdgeContainerStagingDeployStatusWithOptions(GetEdgeContainerStagingDeployStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerStagingDeployStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerStagingDeployStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the deployment status of an application in the staging environment by using the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerStagingDeployStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerStagingDeployStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerStagingDeployStatusResponse> GetEdgeContainerStagingDeployStatusWithOptionsAsync(GetEdgeContainerStagingDeployStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerStagingDeployStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerStagingDeployStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the deployment status of an application in the staging environment by using the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerStagingDeployStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerStagingDeployStatusResponse
        /// </returns>
        public GetEdgeContainerStagingDeployStatusResponse GetEdgeContainerStagingDeployStatus(GetEdgeContainerStagingDeployStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerStagingDeployStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the deployment status of an application in the staging environment by using the application ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerStagingDeployStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerStagingDeployStatusResponse
        /// </returns>
        public async Task<GetEdgeContainerStagingDeployStatusResponse> GetEdgeContainerStagingDeployStatusAsync(GetEdgeContainerStagingDeployStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerStagingDeployStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the terminal information of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerTerminalRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerTerminalResponse
        /// </returns>
        public GetEdgeContainerTerminalResponse GetEdgeContainerTerminalWithOptions(GetEdgeContainerTerminalRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerTerminal",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerTerminalResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the terminal information of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerTerminalRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerTerminalResponse
        /// </returns>
        public async Task<GetEdgeContainerTerminalResponse> GetEdgeContainerTerminalWithOptionsAsync(GetEdgeContainerTerminalRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeContainerTerminal",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeContainerTerminalResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the terminal information of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerTerminalRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerTerminalResponse
        /// </returns>
        public GetEdgeContainerTerminalResponse GetEdgeContainerTerminal(GetEdgeContainerTerminalRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeContainerTerminalWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the terminal information of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetEdgeContainerTerminalRequest
        /// </param>
        /// 
        /// <returns>
        /// GetEdgeContainerTerminalResponse
        /// </returns>
        public async Task<GetEdgeContainerTerminalResponse> GetEdgeContainerTerminalAsync(GetEdgeContainerTerminalRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeContainerTerminalWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the status of Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetErServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetErServiceResponse
        /// </returns>
        public GetErServiceResponse GetErServiceWithOptions(GetErServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetErService",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetErServiceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the status of Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetErServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetErServiceResponse
        /// </returns>
        public async Task<GetErServiceResponse> GetErServiceWithOptionsAsync(GetErServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetErService",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetErServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the status of Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetErServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// GetErServiceResponse
        /// </returns>
        public GetErServiceResponse GetErService(GetErServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetErServiceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Checks the status of Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetErServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// GetErServiceResponse
        /// </returns>
        public async Task<GetErServiceResponse> GetErServiceAsync(GetErServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetErServiceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Request Header Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public GetHttpRequestHeaderModificationRuleResponse GetHttpRequestHeaderModificationRuleWithOptions(GetHttpRequestHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpRequestHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Request Header Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<GetHttpRequestHeaderModificationRuleResponse> GetHttpRequestHeaderModificationRuleWithOptionsAsync(GetHttpRequestHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpRequestHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Request Header Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public GetHttpRequestHeaderModificationRuleResponse GetHttpRequestHeaderModificationRule(GetHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHttpRequestHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Request Header Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<GetHttpRequestHeaderModificationRuleResponse> GetHttpRequestHeaderModificationRuleAsync(GetHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHttpRequestHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public GetHttpResponseHeaderModificationRuleResponse GetHttpResponseHeaderModificationRuleWithOptions(GetHttpResponseHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpResponseHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<GetHttpResponseHeaderModificationRuleResponse> GetHttpResponseHeaderModificationRuleWithOptionsAsync(GetHttpResponseHeaderModificationRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpResponseHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public GetHttpResponseHeaderModificationRuleResponse GetHttpResponseHeaderModificationRule(GetHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHttpResponseHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<GetHttpResponseHeaderModificationRuleResponse> GetHttpResponseHeaderModificationRuleAsync(GetHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHttpResponseHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsApplicationConfigurationResponse
        /// </returns>
        public GetHttpsApplicationConfigurationResponse GetHttpsApplicationConfigurationWithOptions(GetHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpsApplicationConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<GetHttpsApplicationConfigurationResponse> GetHttpsApplicationConfigurationWithOptionsAsync(GetHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpsApplicationConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsApplicationConfigurationResponse
        /// </returns>
        public GetHttpsApplicationConfigurationResponse GetHttpsApplicationConfiguration(GetHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHttpsApplicationConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<GetHttpsApplicationConfigurationResponse> GetHttpsApplicationConfigurationAsync(GetHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHttpsApplicationConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsBasicConfigurationResponse
        /// </returns>
        public GetHttpsBasicConfigurationResponse GetHttpsBasicConfigurationWithOptions(GetHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpsBasicConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<GetHttpsBasicConfigurationResponse> GetHttpsBasicConfigurationWithOptionsAsync(GetHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHttpsBasicConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsBasicConfigurationResponse
        /// </returns>
        public GetHttpsBasicConfigurationResponse GetHttpsBasicConfiguration(GetHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHttpsBasicConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<GetHttpsBasicConfigurationResponse> GetHttpsBasicConfigurationAsync(GetHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHttpsBasicConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetIPv6Request
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetIPv6Response
        /// </returns>
        public GetIPv6Response GetIPv6WithOptions(GetIPv6Request request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetIPv6",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetIPv6Response>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetIPv6Request
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetIPv6Response
        /// </returns>
        public async Task<GetIPv6Response> GetIPv6WithOptionsAsync(GetIPv6Request request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetIPv6",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetIPv6Response>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetIPv6Request
        /// </param>
        /// 
        /// <returns>
        /// GetIPv6Response
        /// </returns>
        public GetIPv6Response GetIPv6(GetIPv6Request request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetIPv6WithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetIPv6Request
        /// </param>
        /// 
        /// <returns>
        /// GetIPv6Response
        /// </returns>
        public async Task<GetIPv6Response> GetIPv6Async(GetIPv6Request request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetIPv6WithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Single Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetImageTransformResponse
        /// </returns>
        public GetImageTransformResponse GetImageTransformWithOptions(GetImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Single Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetImageTransformResponse
        /// </returns>
        public async Task<GetImageTransformResponse> GetImageTransformWithOptionsAsync(GetImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Single Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// GetImageTransformResponse
        /// </returns>
        public GetImageTransformResponse GetImageTransform(GetImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetImageTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Single Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// GetImageTransformResponse
        /// </returns>
        public async Task<GetImageTransformResponse> GetImageTransformAsync(GetImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetImageTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the value of a key in a key-value pair.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvResponse
        /// </returns>
        public GetKvResponse GetKvWithOptions(GetKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the value of a key in a key-value pair.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvResponse
        /// </returns>
        public async Task<GetKvResponse> GetKvWithOptionsAsync(GetKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the value of a key in a key-value pair.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvRequest
        /// </param>
        /// 
        /// <returns>
        /// GetKvResponse
        /// </returns>
        public GetKvResponse GetKv(GetKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetKvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the value of a key in a key-value pair.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvRequest
        /// </param>
        /// 
        /// <returns>
        /// GetKvResponse
        /// </returns>
        public async Task<GetKvResponse> GetKvAsync(GetKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetKvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge KV usage in your Alibaba Cloud account, including the information about all namespaces.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvAccountRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvAccountResponse
        /// </returns>
        public GetKvAccountResponse GetKvAccountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKvAccount",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvAccountResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge KV usage in your Alibaba Cloud account, including the information about all namespaces.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvAccountRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvAccountResponse
        /// </returns>
        public async Task<GetKvAccountResponse> GetKvAccountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKvAccount",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvAccountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge KV usage in your Alibaba Cloud account, including the information about all namespaces.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetKvAccountResponse
        /// </returns>
        public GetKvAccountResponse GetKvAccount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetKvAccountWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge KV usage in your Alibaba Cloud account, including the information about all namespaces.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetKvAccountResponse
        /// </returns>
        public async Task<GetKvAccountResponse> GetKvAccountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetKvAccountWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvNamespaceResponse
        /// </returns>
        public GetKvNamespaceResponse GetKvNamespaceWithOptions(GetKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvNamespaceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvNamespaceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetKvNamespaceResponse
        /// </returns>
        public async Task<GetKvNamespaceResponse> GetKvNamespaceWithOptionsAsync(GetKvNamespaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetKvNamespace",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetKvNamespaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// GetKvNamespaceResponse
        /// </returns>
        public GetKvNamespaceResponse GetKvNamespace(GetKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetKvNamespaceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetKvNamespaceRequest
        /// </param>
        /// 
        /// <returns>
        /// GetKvNamespaceResponse
        /// </returns>
        public async Task<GetKvNamespaceResponse> GetKvNamespaceAsync(GetKvNamespaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetKvNamespaceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom list, such as the name, description, type, and content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetListResponse
        /// </returns>
        public GetListResponse GetListWithOptions(GetListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom list, such as the name, description, type, and content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetListResponse
        /// </returns>
        public async Task<GetListResponse> GetListWithOptionsAsync(GetListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom list, such as the name, description, type, and content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetListRequest
        /// </param>
        /// 
        /// <returns>
        /// GetListResponse
        /// </returns>
        public GetListResponse GetList(GetListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom list, such as the name, description, type, and content.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetListRequest
        /// </param>
        /// 
        /// <returns>
        /// GetListResponse
        /// </returns>
        public async Task<GetListResponse> GetListAsync(GetListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Specific Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the configuration details of a specific load balancer by providing necessary authentication information and resource identifiers, including but not limited to name, session persistence strategy, routing policy, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetLoadBalancerResponse
        /// </returns>
        public GetLoadBalancerResponse GetLoadBalancerWithOptions(GetLoadBalancerRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLoadBalancerResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Specific Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the configuration details of a specific load balancer by providing necessary authentication information and resource identifiers, including but not limited to name, session persistence strategy, routing policy, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetLoadBalancerResponse
        /// </returns>
        public async Task<GetLoadBalancerResponse> GetLoadBalancerWithOptionsAsync(GetLoadBalancerRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLoadBalancerResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Specific Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the configuration details of a specific load balancer by providing necessary authentication information and resource identifiers, including but not limited to name, session persistence strategy, routing policy, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// GetLoadBalancerResponse
        /// </returns>
        public GetLoadBalancerResponse GetLoadBalancer(GetLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetLoadBalancerWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Specific Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the configuration details of a specific load balancer by providing necessary authentication information and resource identifiers, including but not limited to name, session persistence strategy, routing policy, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// GetLoadBalancerResponse
        /// </returns>
        public async Task<GetLoadBalancerResponse> GetLoadBalancerAsync(GetLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetLoadBalancerWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Managed Transform Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetManagedTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetManagedTransformResponse
        /// </returns>
        public GetManagedTransformResponse GetManagedTransformWithOptions(GetManagedTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetManagedTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetManagedTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Managed Transform Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetManagedTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetManagedTransformResponse
        /// </returns>
        public async Task<GetManagedTransformResponse> GetManagedTransformWithOptionsAsync(GetManagedTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetManagedTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetManagedTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Managed Transform Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetManagedTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// GetManagedTransformResponse
        /// </returns>
        public GetManagedTransformResponse GetManagedTransform(GetManagedTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetManagedTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Managed Transform Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetManagedTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// GetManagedTransformResponse
        /// </returns>
        public async Task<GetManagedTransformResponse> GetManagedTransformAsync(GetManagedTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetManagedTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetNetworkOptimizationResponse
        /// </returns>
        public GetNetworkOptimizationResponse GetNetworkOptimizationWithOptions(GetNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetNetworkOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetNetworkOptimizationResponse
        /// </returns>
        public async Task<GetNetworkOptimizationResponse> GetNetworkOptimizationWithOptionsAsync(GetNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetNetworkOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetNetworkOptimizationResponse
        /// </returns>
        public GetNetworkOptimizationResponse GetNetworkOptimization(GetNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetNetworkOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a single network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// GetNetworkOptimizationResponse
        /// </returns>
        public async Task<GetNetworkOptimizationResponse> GetNetworkOptimizationAsync(GetNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetNetworkOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取源服务器CA证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginCaCertificateResponse
        /// </returns>
        public GetOriginCaCertificateResponse GetOriginCaCertificateWithOptions(GetOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取源服务器CA证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginCaCertificateResponse
        /// </returns>
        public async Task<GetOriginCaCertificateResponse> GetOriginCaCertificateWithOptionsAsync(GetOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取源服务器CA证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginCaCertificateResponse
        /// </returns>
        public GetOriginCaCertificateResponse GetOriginCaCertificate(GetOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取源服务器CA证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginCaCertificateResponse
        /// </returns>
        public async Task<GetOriginCaCertificateResponse> GetOriginCaCertificateAsync(GetOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateResponse
        /// </returns>
        public GetOriginClientCertificateResponse GetOriginClientCertificateWithOptions(GetOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateResponse
        /// </returns>
        public async Task<GetOriginClientCertificateResponse> GetOriginClientCertificateWithOptionsAsync(GetOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateResponse
        /// </returns>
        public GetOriginClientCertificateResponse GetOriginClientCertificate(GetOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateResponse
        /// </returns>
        public async Task<GetOriginClientCertificateResponse> GetOriginClientCertificateAsync(GetOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书绑定的域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateHostnamesResponse
        /// </returns>
        public GetOriginClientCertificateHostnamesResponse GetOriginClientCertificateHostnamesWithOptions(GetOriginClientCertificateHostnamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginClientCertificateHostnamesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书绑定的域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateHostnamesResponse
        /// </returns>
        public async Task<GetOriginClientCertificateHostnamesResponse> GetOriginClientCertificateHostnamesWithOptionsAsync(GetOriginClientCertificateHostnamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginClientCertificateHostnamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书绑定的域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateHostnamesResponse
        /// </returns>
        public GetOriginClientCertificateHostnamesResponse GetOriginClientCertificateHostnames(GetOriginClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginClientCertificateHostnamesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取域名回源客户端证书绑定的域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginClientCertificateHostnamesResponse
        /// </returns>
        public async Task<GetOriginClientCertificateHostnamesResponse> GetOriginClientCertificateHostnamesAsync(GetOriginClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginClientCertificateHostnamesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a specific origin pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginPoolResponse
        /// </returns>
        public GetOriginPoolResponse GetOriginPoolWithOptions(GetOriginPoolRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginPoolResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a specific origin pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginPoolResponse
        /// </returns>
        public async Task<GetOriginPoolResponse> GetOriginPoolWithOptionsAsync(GetOriginPoolRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginPoolResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a specific origin pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginPoolResponse
        /// </returns>
        public GetOriginPoolResponse GetOriginPool(GetOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginPoolWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a specific origin pool</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginPoolResponse
        /// </returns>
        public async Task<GetOriginPoolResponse> GetOriginPoolAsync(GetOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginPoolWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the origin protection configurations of a website, including the origin protection, IP convergence, and the status and details of the IP whitelist for origin protection. The details includes the IP whitelist used by the website, the latest IP whitelist, and the differences between them.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginProtectionResponse
        /// </returns>
        public GetOriginProtectionResponse GetOriginProtectionWithOptions(GetOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the origin protection configurations of a website, including the origin protection, IP convergence, and the status and details of the IP whitelist for origin protection. The details includes the IP whitelist used by the website, the latest IP whitelist, and the differences between them.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginProtectionResponse
        /// </returns>
        public async Task<GetOriginProtectionResponse> GetOriginProtectionWithOptionsAsync(GetOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the origin protection configurations of a website, including the origin protection, IP convergence, and the status and details of the IP whitelist for origin protection. The details includes the IP whitelist used by the website, the latest IP whitelist, and the differences between them.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginProtectionResponse
        /// </returns>
        public GetOriginProtectionResponse GetOriginProtection(GetOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the origin protection configurations of a website, including the origin protection, IP convergence, and the status and details of the IP whitelist for origin protection. The details includes the IP whitelist used by the website, the latest IP whitelist, and the differences between them.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginProtectionResponse
        /// </returns>
        public async Task<GetOriginProtectionResponse> GetOriginProtectionAsync(GetOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginRuleResponse
        /// </returns>
        public GetOriginRuleResponse GetOriginRuleWithOptions(GetOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetOriginRuleResponse
        /// </returns>
        public async Task<GetOriginRuleResponse> GetOriginRuleWithOptionsAsync(GetOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOriginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginRuleResponse
        /// </returns>
        public GetOriginRuleResponse GetOriginRule(GetOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOriginRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query a Single Origin Rule Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetOriginRuleResponse
        /// </returns>
        public async Task<GetOriginRuleResponse> GetOriginRuleAsync(GetOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOriginRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom error page based on the error page ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetPageResponse
        /// </returns>
        public GetPageResponse GetPageWithOptions(GetPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom error page based on the error page ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetPageResponse
        /// </returns>
        public async Task<GetPageResponse> GetPageWithOptionsAsync(GetPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom error page based on the error page ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPageRequest
        /// </param>
        /// 
        /// <returns>
        /// GetPageResponse
        /// </returns>
        public GetPageResponse GetPage(GetPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the details of a custom error page based on the error page ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPageRequest
        /// </param>
        /// 
        /// <returns>
        /// GetPageResponse
        /// </returns>
        public async Task<GetPageResponse> GetPageAsync(GetPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quotas and quota usage for different cache purge options.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPurgeQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetPurgeQuotaResponse
        /// </returns>
        public GetPurgeQuotaResponse GetPurgeQuotaWithOptions(GetPurgeQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPurgeQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPurgeQuotaResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quotas and quota usage for different cache purge options.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPurgeQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetPurgeQuotaResponse
        /// </returns>
        public async Task<GetPurgeQuotaResponse> GetPurgeQuotaWithOptionsAsync(GetPurgeQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPurgeQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPurgeQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quotas and quota usage for different cache purge options.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPurgeQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetPurgeQuotaResponse
        /// </returns>
        public GetPurgeQuotaResponse GetPurgeQuota(GetPurgeQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPurgeQuotaWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quotas and quota usage for different cache purge options.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetPurgeQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetPurgeQuotaResponse
        /// </returns>
        public async Task<GetPurgeQuotaResponse> GetPurgeQuotaAsync(GetPurgeQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPurgeQuotaWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the fields in real-time logs based on the log category.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRealtimeDeliveryFieldRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRealtimeDeliveryFieldResponse
        /// </returns>
        public GetRealtimeDeliveryFieldResponse GetRealtimeDeliveryFieldWithOptions(GetRealtimeDeliveryFieldRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRealtimeDeliveryField",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRealtimeDeliveryFieldResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the fields in real-time logs based on the log category.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRealtimeDeliveryFieldRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRealtimeDeliveryFieldResponse
        /// </returns>
        public async Task<GetRealtimeDeliveryFieldResponse> GetRealtimeDeliveryFieldWithOptionsAsync(GetRealtimeDeliveryFieldRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRealtimeDeliveryField",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRealtimeDeliveryFieldResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the fields in real-time logs based on the log category.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRealtimeDeliveryFieldRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRealtimeDeliveryFieldResponse
        /// </returns>
        public GetRealtimeDeliveryFieldResponse GetRealtimeDeliveryField(GetRealtimeDeliveryFieldRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRealtimeDeliveryFieldWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the fields in real-time logs based on the log category.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRealtimeDeliveryFieldRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRealtimeDeliveryFieldResponse
        /// </returns>
        public async Task<GetRealtimeDeliveryFieldResponse> GetRealtimeDeliveryFieldAsync(GetRealtimeDeliveryFieldRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRealtimeDeliveryFieldWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of a single DNS record, such as the record value, priority, and origin authentication setting (exclusive to CNAME records).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRecordResponse
        /// </returns>
        public GetRecordResponse GetRecordWithOptions(GetRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of a single DNS record, such as the record value, priority, and origin authentication setting (exclusive to CNAME records).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRecordResponse
        /// </returns>
        public async Task<GetRecordResponse> GetRecordWithOptionsAsync(GetRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of a single DNS record, such as the record value, priority, and origin authentication setting (exclusive to CNAME records).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRecordResponse
        /// </returns>
        public GetRecordResponse GetRecord(GetRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of a single DNS record, such as the record value, priority, and origin authentication setting (exclusive to CNAME records).</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRecordResponse
        /// </returns>
        public async Task<GetRecordResponse> GetRecordAsync(GetRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRedirectRuleResponse
        /// </returns>
        public GetRedirectRuleResponse GetRedirectRuleWithOptions(GetRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRedirectRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRedirectRuleResponse
        /// </returns>
        public async Task<GetRedirectRuleResponse> GetRedirectRuleWithOptionsAsync(GetRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRedirectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRedirectRuleResponse
        /// </returns>
        public GetRedirectRuleResponse GetRedirectRule(GetRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRedirectRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRedirectRuleResponse
        /// </returns>
        public async Task<GetRedirectRuleResponse> GetRedirectRuleAsync(GetRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRedirectRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query details of the rewrite URL rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRewriteUrlRuleResponse
        /// </returns>
        public GetRewriteUrlRuleResponse GetRewriteUrlRuleWithOptions(GetRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRewriteUrlRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query details of the rewrite URL rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRewriteUrlRuleResponse
        /// </returns>
        public async Task<GetRewriteUrlRuleResponse> GetRewriteUrlRuleWithOptionsAsync(GetRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRewriteUrlRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query details of the rewrite URL rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRewriteUrlRuleResponse
        /// </returns>
        public GetRewriteUrlRuleResponse GetRewriteUrlRule(GetRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRewriteUrlRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query details of the rewrite URL rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRewriteUrlRuleResponse
        /// </returns>
        public async Task<GetRewriteUrlRuleResponse> GetRewriteUrlRuleAsync(GetRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRewriteUrlRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a routine, including the code versions and the configurations of the environments, associated domain names, and associated routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineResponse
        /// </returns>
        public GetRoutineResponse GetRoutineWithOptions(GetRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a routine, including the code versions and the configurations of the environments, associated domain names, and associated routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineResponse
        /// </returns>
        public async Task<GetRoutineResponse> GetRoutineWithOptionsAsync(GetRoutineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutine",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a routine, including the code versions and the configurations of the environments, associated domain names, and associated routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineResponse
        /// </returns>
        public GetRoutineResponse GetRoutine(GetRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRoutineWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configurations of a routine, including the code versions and the configurations of the environments, associated domain names, and associated routes.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineResponse
        /// </returns>
        public async Task<GetRoutineResponse> GetRoutineAsync(GetRoutineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRoutineWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询单条边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineRouteResponse
        /// </returns>
        public GetRoutineRouteResponse GetRoutineRouteWithOptions(GetRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineRouteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询单条边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineRouteResponse
        /// </returns>
        public async Task<GetRoutineRouteResponse> GetRoutineRouteWithOptionsAsync(GetRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineRouteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询单条边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineRouteResponse
        /// </returns>
        public GetRoutineRouteResponse GetRoutineRoute(GetRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRoutineRouteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询单条边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineRouteResponse
        /// </returns>
        public async Task<GetRoutineRouteResponse> GetRoutineRouteAsync(GetRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRoutineRouteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Obtains the release information about the routine code that is released to the staging environment. This information can be used to upload the test code to Object Storage Service (OSS).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Every time the code of a routine is released to the staging environment, a version number is generated. Such code is for tests only.</para>
        /// <list type="bullet">
        /// <item><description>A routine can retain a maximum of 10 code versions. If the number of versions reaches the limit, you must call the DeleteRoutineCodeRevision operation to delete unwanted versions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetRoutineStagingCodeUploadInfoRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingCodeUploadInfoResponse
        /// </returns>
        public GetRoutineStagingCodeUploadInfoResponse GetRoutineStagingCodeUploadInfoWithOptions(GetRoutineStagingCodeUploadInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeDescription))
            {
                body["CodeDescription"] = request.CodeDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineStagingCodeUploadInfo",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineStagingCodeUploadInfoResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Obtains the release information about the routine code that is released to the staging environment. This information can be used to upload the test code to Object Storage Service (OSS).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Every time the code of a routine is released to the staging environment, a version number is generated. Such code is for tests only.</para>
        /// <list type="bullet">
        /// <item><description>A routine can retain a maximum of 10 code versions. If the number of versions reaches the limit, you must call the DeleteRoutineCodeRevision operation to delete unwanted versions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetRoutineStagingCodeUploadInfoRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingCodeUploadInfoResponse
        /// </returns>
        public async Task<GetRoutineStagingCodeUploadInfoResponse> GetRoutineStagingCodeUploadInfoWithOptionsAsync(GetRoutineStagingCodeUploadInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeDescription))
            {
                body["CodeDescription"] = request.CodeDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineStagingCodeUploadInfo",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineStagingCodeUploadInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Obtains the release information about the routine code that is released to the staging environment. This information can be used to upload the test code to Object Storage Service (OSS).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Every time the code of a routine is released to the staging environment, a version number is generated. Such code is for tests only.</para>
        /// <list type="bullet">
        /// <item><description>A routine can retain a maximum of 10 code versions. If the number of versions reaches the limit, you must call the DeleteRoutineCodeRevision operation to delete unwanted versions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetRoutineStagingCodeUploadInfoRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingCodeUploadInfoResponse
        /// </returns>
        public GetRoutineStagingCodeUploadInfoResponse GetRoutineStagingCodeUploadInfo(GetRoutineStagingCodeUploadInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRoutineStagingCodeUploadInfoWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Obtains the release information about the routine code that is released to the staging environment. This information can be used to upload the test code to Object Storage Service (OSS).</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  Every time the code of a routine is released to the staging environment, a version number is generated. Such code is for tests only.</para>
        /// <list type="bullet">
        /// <item><description>A routine can retain a maximum of 10 code versions. If the number of versions reaches the limit, you must call the DeleteRoutineCodeRevision operation to delete unwanted versions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetRoutineStagingCodeUploadInfoRequest
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingCodeUploadInfoResponse
        /// </returns>
        public async Task<GetRoutineStagingCodeUploadInfoResponse> GetRoutineStagingCodeUploadInfoAsync(GetRoutineStagingCodeUploadInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRoutineStagingCodeUploadInfoWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IP addresses of staging environments for Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineStagingEnvIpRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingEnvIpResponse
        /// </returns>
        public GetRoutineStagingEnvIpResponse GetRoutineStagingEnvIpWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineStagingEnvIp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineStagingEnvIpResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IP addresses of staging environments for Edge Routine.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineStagingEnvIpRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineStagingEnvIpResponse
        /// </returns>
        public async Task<GetRoutineStagingEnvIpResponse> GetRoutineStagingEnvIpWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineStagingEnvIp",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineStagingEnvIpResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IP addresses of staging environments for Edge Routine.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetRoutineStagingEnvIpResponse
        /// </returns>
        public GetRoutineStagingEnvIpResponse GetRoutineStagingEnvIp()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRoutineStagingEnvIpWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the IP addresses of staging environments for Edge Routine.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetRoutineStagingEnvIpResponse
        /// </returns>
        public async Task<GetRoutineStagingEnvIpResponse> GetRoutineStagingEnvIpAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRoutineStagingEnvIpWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge Routine information in your Alibaba Cloud account, including the associated subdomain and created routines.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineUserInfoRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineUserInfoResponse
        /// </returns>
        public GetRoutineUserInfoResponse GetRoutineUserInfoWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineUserInfo",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineUserInfoResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge Routine information in your Alibaba Cloud account, including the associated subdomain and created routines.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetRoutineUserInfoRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetRoutineUserInfoResponse
        /// </returns>
        public async Task<GetRoutineUserInfoResponse> GetRoutineUserInfoWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRoutineUserInfo",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRoutineUserInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge Routine information in your Alibaba Cloud account, including the associated subdomain and created routines.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetRoutineUserInfoResponse
        /// </returns>
        public GetRoutineUserInfoResponse GetRoutineUserInfo()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRoutineUserInfoWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the Edge Routine information in your Alibaba Cloud account, including the associated subdomain and created routines.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetRoutineUserInfoResponse
        /// </returns>
        public async Task<GetRoutineUserInfoResponse> GetRoutineUserInfoAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRoutineUserInfoWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetScheduledPreloadJobResponse
        /// </returns>
        public GetScheduledPreloadJobResponse GetScheduledPreloadJobWithOptions(GetScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetScheduledPreloadJobResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetScheduledPreloadJobResponse
        /// </returns>
        public async Task<GetScheduledPreloadJobResponse> GetScheduledPreloadJobWithOptionsAsync(GetScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetScheduledPreloadJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// GetScheduledPreloadJobResponse
        /// </returns>
        public GetScheduledPreloadJobResponse GetScheduledPreloadJob(GetScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetScheduledPreloadJobWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a specified scheduled prefetch task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// GetScheduledPreloadJobResponse
        /// </returns>
        public async Task<GetScheduledPreloadJobResponse> GetScheduledPreloadJobAsync(GetScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetScheduledPreloadJobWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration for search engine crawler of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSeoBypassRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSeoBypassResponse
        /// </returns>
        public GetSeoBypassResponse GetSeoBypassWithOptions(GetSeoBypassRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSeoBypass",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSeoBypassResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration for search engine crawler of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSeoBypassRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSeoBypassResponse
        /// </returns>
        public async Task<GetSeoBypassResponse> GetSeoBypassWithOptionsAsync(GetSeoBypassRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSeoBypass",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSeoBypassResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration for search engine crawler of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSeoBypassRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSeoBypassResponse
        /// </returns>
        public GetSeoBypassResponse GetSeoBypass(GetSeoBypassRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSeoBypassWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration for search engine crawler of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSeoBypassRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSeoBypassResponse
        /// </returns>
        public async Task<GetSeoBypassResponse> GetSeoBypassAsync(GetSeoBypassRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSeoBypassWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a website based on the website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteResponse
        /// </returns>
        public GetSiteResponse GetSiteWithOptions(GetSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a website based on the website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteResponse
        /// </returns>
        public async Task<GetSiteResponse> GetSiteWithOptionsAsync(GetSiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a website based on the website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteResponse
        /// </returns>
        public GetSiteResponse GetSite(GetSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries information about a website based on the website ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteResponse
        /// </returns>
        public async Task<GetSiteResponse> GetSiteAsync(GetSiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the nameservers configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteCurrentNSRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCurrentNSResponse
        /// </returns>
        public GetSiteCurrentNSResponse GetSiteCurrentNSWithOptions(GetSiteCurrentNSRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteCurrentNS",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteCurrentNSResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the nameservers configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteCurrentNSRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCurrentNSResponse
        /// </returns>
        public async Task<GetSiteCurrentNSResponse> GetSiteCurrentNSWithOptionsAsync(GetSiteCurrentNSRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteCurrentNS",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteCurrentNSResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the nameservers configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteCurrentNSRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCurrentNSResponse
        /// </returns>
        public GetSiteCurrentNSResponse GetSiteCurrentNS(GetSiteCurrentNSRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteCurrentNSWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the nameservers configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteCurrentNSRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCurrentNSResponse
        /// </returns>
        public async Task<GetSiteCurrentNSResponse> GetSiteCurrentNSAsync(GetSiteCurrentNSRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteCurrentNSWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of custom log fields for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Description</b>: You can call this operation to query the configuration of custom log fields for a website, including custom fields in request headers, response headers, and cookies.</para>
        /// <list type="bullet">
        /// <item><description><b>Scenarios</b>: You can call this operation in scenarios where you need to obtain specific HTTP headers or cookie information for log analysis.</description></item>
        /// </list>
        /// <hr>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCustomLogResponse
        /// </returns>
        public GetSiteCustomLogResponse GetSiteCustomLogWithOptions(GetSiteCustomLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteCustomLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of custom log fields for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Description</b>: You can call this operation to query the configuration of custom log fields for a website, including custom fields in request headers, response headers, and cookies.</para>
        /// <list type="bullet">
        /// <item><description><b>Scenarios</b>: You can call this operation in scenarios where you need to obtain specific HTTP headers or cookie information for log analysis.</description></item>
        /// </list>
        /// <hr>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCustomLogResponse
        /// </returns>
        public async Task<GetSiteCustomLogResponse> GetSiteCustomLogWithOptionsAsync(GetSiteCustomLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteCustomLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of custom log fields for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Description</b>: You can call this operation to query the configuration of custom log fields for a website, including custom fields in request headers, response headers, and cookies.</para>
        /// <list type="bullet">
        /// <item><description><b>Scenarios</b>: You can call this operation in scenarios where you need to obtain specific HTTP headers or cookie information for log analysis.</description></item>
        /// </list>
        /// <hr>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCustomLogResponse
        /// </returns>
        public GetSiteCustomLogResponse GetSiteCustomLog(GetSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteCustomLogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the configuration of custom log fields for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  <b>Description</b>: You can call this operation to query the configuration of custom log fields for a website, including custom fields in request headers, response headers, and cookies.</para>
        /// <list type="bullet">
        /// <item><description><b>Scenarios</b>: You can call this operation in scenarios where you need to obtain specific HTTP headers or cookie information for log analysis.</description></item>
        /// </list>
        /// <hr>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteCustomLogResponse
        /// </returns>
        public async Task<GetSiteCustomLogResponse> GetSiteCustomLogAsync(GetSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteCustomLogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteDeliveryTaskResponse
        /// </returns>
        public GetSiteDeliveryTaskResponse GetSiteDeliveryTaskWithOptions(GetSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteDeliveryTaskResponse
        /// </returns>
        public async Task<GetSiteDeliveryTaskResponse> GetSiteDeliveryTaskWithOptionsAsync(GetSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteDeliveryTaskResponse
        /// </returns>
        public GetSiteDeliveryTaskResponse GetSiteDeliveryTask(GetSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteDeliveryTaskResponse
        /// </returns>
        public async Task<GetSiteDeliveryTaskResponse> GetSiteDeliveryTaskAsync(GetSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining quota for delivering a specific category of real-time logs in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query the remaining quota for delivering a specific category of real-time logs in a website within an Alibaba Cloud account. This is essential for monitoring and managing your log delivery capacity to ensure that logs can be delivered to the destination and prevent data loss or latency caused by insufficient quota.
        /// <b>Take note of the following parameters:</b></para>
        /// <list type="bullet">
        /// <item><description>``</description></item>
        /// <item><description><c>BusinessType</c> is required. You must specify a log category to obtain the corresponding quota information.</description></item>
        /// <item><description><c>SiteId</c> specifies the ID of a website, which must be a valid integer that corresponds to a website that you configured on Alibaba Cloud.
        /// <b>Response:</b></description></item>
        /// <item><description>If a request is successful, the system returns the remaining log delivery quota (<c>FreeQuota</c>), request ID (<c>RequestId</c>), website ID (<c>SiteId</c>), and log category (<c>BusinessType</c>). You can confirm and record the returned data.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteLogDeliveryQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteLogDeliveryQuotaResponse
        /// </returns>
        public GetSiteLogDeliveryQuotaResponse GetSiteLogDeliveryQuotaWithOptions(GetSiteLogDeliveryQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteLogDeliveryQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteLogDeliveryQuotaResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining quota for delivering a specific category of real-time logs in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query the remaining quota for delivering a specific category of real-time logs in a website within an Alibaba Cloud account. This is essential for monitoring and managing your log delivery capacity to ensure that logs can be delivered to the destination and prevent data loss or latency caused by insufficient quota.
        /// <b>Take note of the following parameters:</b></para>
        /// <list type="bullet">
        /// <item><description>``</description></item>
        /// <item><description><c>BusinessType</c> is required. You must specify a log category to obtain the corresponding quota information.</description></item>
        /// <item><description><c>SiteId</c> specifies the ID of a website, which must be a valid integer that corresponds to a website that you configured on Alibaba Cloud.
        /// <b>Response:</b></description></item>
        /// <item><description>If a request is successful, the system returns the remaining log delivery quota (<c>FreeQuota</c>), request ID (<c>RequestId</c>), website ID (<c>SiteId</c>), and log category (<c>BusinessType</c>). You can confirm and record the returned data.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteLogDeliveryQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteLogDeliveryQuotaResponse
        /// </returns>
        public async Task<GetSiteLogDeliveryQuotaResponse> GetSiteLogDeliveryQuotaWithOptionsAsync(GetSiteLogDeliveryQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteLogDeliveryQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteLogDeliveryQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining quota for delivering a specific category of real-time logs in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query the remaining quota for delivering a specific category of real-time logs in a website within an Alibaba Cloud account. This is essential for monitoring and managing your log delivery capacity to ensure that logs can be delivered to the destination and prevent data loss or latency caused by insufficient quota.
        /// <b>Take note of the following parameters:</b></para>
        /// <list type="bullet">
        /// <item><description>``</description></item>
        /// <item><description><c>BusinessType</c> is required. You must specify a log category to obtain the corresponding quota information.</description></item>
        /// <item><description><c>SiteId</c> specifies the ID of a website, which must be a valid integer that corresponds to a website that you configured on Alibaba Cloud.
        /// <b>Response:</b></description></item>
        /// <item><description>If a request is successful, the system returns the remaining log delivery quota (<c>FreeQuota</c>), request ID (<c>RequestId</c>), website ID (<c>SiteId</c>), and log category (<c>BusinessType</c>). You can confirm and record the returned data.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteLogDeliveryQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteLogDeliveryQuotaResponse
        /// </returns>
        public GetSiteLogDeliveryQuotaResponse GetSiteLogDeliveryQuota(GetSiteLogDeliveryQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteLogDeliveryQuotaWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining quota for delivering a specific category of real-time logs in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query the remaining quota for delivering a specific category of real-time logs in a website within an Alibaba Cloud account. This is essential for monitoring and managing your log delivery capacity to ensure that logs can be delivered to the destination and prevent data loss or latency caused by insufficient quota.
        /// <b>Take note of the following parameters:</b></para>
        /// <list type="bullet">
        /// <item><description>``</description></item>
        /// <item><description><c>BusinessType</c> is required. You must specify a log category to obtain the corresponding quota information.</description></item>
        /// <item><description><c>SiteId</c> specifies the ID of a website, which must be a valid integer that corresponds to a website that you configured on Alibaba Cloud.
        /// <b>Response:</b></description></item>
        /// <item><description>If a request is successful, the system returns the remaining log delivery quota (<c>FreeQuota</c>), request ID (<c>RequestId</c>), website ID (<c>SiteId</c>), and log category (<c>BusinessType</c>). You can confirm and record the returned data.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetSiteLogDeliveryQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteLogDeliveryQuotaResponse
        /// </returns>
        public async Task<GetSiteLogDeliveryQuotaResponse> GetSiteLogDeliveryQuotaAsync(GetSiteLogDeliveryQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteLogDeliveryQuotaWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteNameExclusiveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteNameExclusiveResponse
        /// </returns>
        public GetSiteNameExclusiveResponse GetSiteNameExclusiveWithOptions(GetSiteNameExclusiveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteNameExclusive",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteNameExclusiveResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteNameExclusiveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteNameExclusiveResponse
        /// </returns>
        public async Task<GetSiteNameExclusiveResponse> GetSiteNameExclusiveWithOptionsAsync(GetSiteNameExclusiveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteNameExclusive",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteNameExclusiveResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteNameExclusiveRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteNameExclusiveResponse
        /// </returns>
        public GetSiteNameExclusiveResponse GetSiteNameExclusive(GetSiteNameExclusiveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteNameExclusiveWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteNameExclusiveRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteNameExclusiveResponse
        /// </returns>
        public async Task<GetSiteNameExclusiveResponse> GetSiteNameExclusiveAsync(GetSiteNameExclusiveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteNameExclusiveWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取站点回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteOriginClientCertificateResponse
        /// </returns>
        public GetSiteOriginClientCertificateResponse GetSiteOriginClientCertificateWithOptions(GetSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取站点回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<GetSiteOriginClientCertificateResponse> GetSiteOriginClientCertificateWithOptionsAsync(GetSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取站点回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteOriginClientCertificateResponse
        /// </returns>
        public GetSiteOriginClientCertificateResponse GetSiteOriginClientCertificate(GetSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>获取站点回源客户端证书信息</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<GetSiteOriginClientCertificateResponse> GetSiteOriginClientCertificateAsync(GetSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSitePauseRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSitePauseResponse
        /// </returns>
        public GetSitePauseResponse GetSitePauseWithOptions(GetSitePauseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSitePause",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSitePauseResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSitePauseRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSitePauseResponse
        /// </returns>
        public async Task<GetSitePauseResponse> GetSitePauseWithOptionsAsync(GetSitePauseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSitePause",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSitePauseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSitePauseRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSitePauseResponse
        /// </returns>
        public GetSitePauseResponse GetSitePause(GetSitePauseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSitePauseWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSitePauseRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSitePauseResponse
        /// </returns>
        public async Task<GetSitePauseResponse> GetSitePauseAsync(GetSitePauseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSitePauseWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteWafSettingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteWafSettingsResponse
        /// </returns>
        public GetSiteWafSettingsResponse GetSiteWafSettingsWithOptions(GetSiteWafSettingsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteWafSettings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteWafSettingsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteWafSettingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetSiteWafSettingsResponse
        /// </returns>
        public async Task<GetSiteWafSettingsResponse> GetSiteWafSettingsWithOptionsAsync(GetSiteWafSettingsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSiteWafSettings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSiteWafSettingsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteWafSettingsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteWafSettingsResponse
        /// </returns>
        public GetSiteWafSettingsResponse GetSiteWafSettings(GetSiteWafSettingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSiteWafSettingsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Configuration for a Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetSiteWafSettingsRequest
        /// </param>
        /// 
        /// <returns>
        /// GetSiteWafSettingsResponse
        /// </returns>
        public async Task<GetSiteWafSettingsResponse> GetSiteWafSettingsAsync(GetSiteWafSettingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSiteWafSettingsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multi-level Cache Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetTieredCacheRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetTieredCacheResponse
        /// </returns>
        public GetTieredCacheResponse GetTieredCacheWithOptions(GetTieredCacheRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTieredCache",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTieredCacheResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multi-level Cache Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetTieredCacheRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetTieredCacheResponse
        /// </returns>
        public async Task<GetTieredCacheResponse> GetTieredCacheWithOptionsAsync(GetTieredCacheRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTieredCache",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTieredCacheResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multi-level Cache Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetTieredCacheRequest
        /// </param>
        /// 
        /// <returns>
        /// GetTieredCacheResponse
        /// </returns>
        public GetTieredCacheResponse GetTieredCache(GetTieredCacheRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetTieredCacheWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multi-level Cache Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetTieredCacheRequest
        /// </param>
        /// 
        /// <returns>
        /// GetTieredCacheResponse
        /// </returns>
        public async Task<GetTieredCacheResponse> GetTieredCacheAsync(GetTieredCacheRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetTieredCacheWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of a file upload task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetUploadTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUploadTaskResponse
        /// </returns>
        public GetUploadTaskResponse GetUploadTaskWithOptions(GetUploadTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUploadTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUploadTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of a file upload task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetUploadTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUploadTaskResponse
        /// </returns>
        public async Task<GetUploadTaskResponse> GetUploadTaskWithOptionsAsync(GetUploadTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUploadTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUploadTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of a file upload task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetUploadTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUploadTaskResponse
        /// </returns>
        public GetUploadTaskResponse GetUploadTask(GetUploadTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetUploadTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of a file upload task based on the task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetUploadTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUploadTaskResponse
        /// </returns>
        public async Task<GetUploadTaskResponse> GetUploadTaskAsync(GetUploadTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetUploadTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a log delivery task by account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  This API operation queries the details of a delivery task, including the task name, discard rate, region, log category, status, delivery destination, configuration, and filtering rules.****</para>
        /// <list type="bullet">
        /// <item><description>You can call this operation to query detailed information about a log delivery task to analyze log processing efficiency or troubleshoot delivery problems.****</description></item>
        /// <item><description>****````</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUserDeliveryTaskResponse
        /// </returns>
        public GetUserDeliveryTaskResponse GetUserDeliveryTaskWithOptions(GetUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a log delivery task by account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  This API operation queries the details of a delivery task, including the task name, discard rate, region, log category, status, delivery destination, configuration, and filtering rules.****</para>
        /// <list type="bullet">
        /// <item><description>You can call this operation to query detailed information about a log delivery task to analyze log processing efficiency or troubleshoot delivery problems.****</description></item>
        /// <item><description>****````</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUserDeliveryTaskResponse
        /// </returns>
        public async Task<GetUserDeliveryTaskResponse> GetUserDeliveryTaskWithOptionsAsync(GetUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a log delivery task by account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  This API operation queries the details of a delivery task, including the task name, discard rate, region, log category, status, delivery destination, configuration, and filtering rules.****</para>
        /// <list type="bullet">
        /// <item><description>You can call this operation to query detailed information about a log delivery task to analyze log processing efficiency or troubleshoot delivery problems.****</description></item>
        /// <item><description>****````</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUserDeliveryTaskResponse
        /// </returns>
        public GetUserDeliveryTaskResponse GetUserDeliveryTask(GetUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetUserDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about a log delivery task by account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>  This API operation queries the details of a delivery task, including the task name, discard rate, region, log category, status, delivery destination, configuration, and filtering rules.****</para>
        /// <list type="bullet">
        /// <item><description>You can call this operation to query detailed information about a log delivery task to analyze log processing efficiency or troubleshoot delivery problems.****</description></item>
        /// <item><description>****````</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUserDeliveryTaskResponse
        /// </returns>
        public async Task<GetUserDeliveryTaskResponse> GetUserDeliveryTaskAsync(GetUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetUserDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining log delivery quota of each log category in your account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to query the remaining real-time log delivery quota of each log category in your Alibaba Cloud account. You must provide your Alibaba Cloud account ID (aliUid) and log category (BusinessType). The system then returns the remaining quota of the log category to help you track the usage.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserLogDeliveryQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUserLogDeliveryQuotaResponse
        /// </returns>
        public GetUserLogDeliveryQuotaResponse GetUserLogDeliveryQuotaWithOptions(GetUserLogDeliveryQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserLogDeliveryQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserLogDeliveryQuotaResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining log delivery quota of each log category in your account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to query the remaining real-time log delivery quota of each log category in your Alibaba Cloud account. You must provide your Alibaba Cloud account ID (aliUid) and log category (BusinessType). The system then returns the remaining quota of the log category to help you track the usage.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserLogDeliveryQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetUserLogDeliveryQuotaResponse
        /// </returns>
        public async Task<GetUserLogDeliveryQuotaResponse> GetUserLogDeliveryQuotaWithOptionsAsync(GetUserLogDeliveryQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserLogDeliveryQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserLogDeliveryQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining log delivery quota of each log category in your account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to query the remaining real-time log delivery quota of each log category in your Alibaba Cloud account. You must provide your Alibaba Cloud account ID (aliUid) and log category (BusinessType). The system then returns the remaining quota of the log category to help you track the usage.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserLogDeliveryQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUserLogDeliveryQuotaResponse
        /// </returns>
        public GetUserLogDeliveryQuotaResponse GetUserLogDeliveryQuota(GetUserLogDeliveryQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetUserLogDeliveryQuotaWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the remaining log delivery quota of each log category in your account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to query the remaining real-time log delivery quota of each log category in your Alibaba Cloud account. You must provide your Alibaba Cloud account ID (aliUid) and log category (BusinessType). The system then returns the remaining quota of the log category to help you track the usage.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// GetUserLogDeliveryQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetUserLogDeliveryQuotaResponse
        /// </returns>
        public async Task<GetUserLogDeliveryQuotaResponse> GetUserLogDeliveryQuotaAsync(GetUserLogDeliveryQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetUserLogDeliveryQuotaWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置详情</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetVideoProcessingResponse
        /// </returns>
        public GetVideoProcessingResponse GetVideoProcessingWithOptions(GetVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVideoProcessingResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置详情</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetVideoProcessingResponse
        /// </returns>
        public async Task<GetVideoProcessingResponse> GetVideoProcessingWithOptionsAsync(GetVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVideoProcessingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置详情</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// GetVideoProcessingResponse
        /// </returns>
        public GetVideoProcessingResponse GetVideoProcessing(GetVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetVideoProcessingWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置详情</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// GetVideoProcessingResponse
        /// </returns>
        public async Task<GetVideoProcessingResponse> GetVideoProcessingAsync(GetVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetVideoProcessingWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>This interface is used to obtain the application key (AppKey) for the BOT behavior detection feature in the site\&quot;s Web Application Firewall (WAF). The key is typically used for authentication and data exchange with the WAF service.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafBotAppKeyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafBotAppKeyResponse
        /// </returns>
        public GetWafBotAppKeyResponse GetWafBotAppKeyWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafBotAppKey",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafBotAppKeyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>This interface is used to obtain the application key (AppKey) for the BOT behavior detection feature in the site\&quot;s Web Application Firewall (WAF). The key is typically used for authentication and data exchange with the WAF service.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafBotAppKeyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafBotAppKeyResponse
        /// </returns>
        public async Task<GetWafBotAppKeyResponse> GetWafBotAppKeyWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafBotAppKey",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafBotAppKeyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>This interface is used to obtain the application key (AppKey) for the BOT behavior detection feature in the site\&quot;s Web Application Firewall (WAF). The key is typically used for authentication and data exchange with the WAF service.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetWafBotAppKeyResponse
        /// </returns>
        public GetWafBotAppKeyResponse GetWafBotAppKey()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetWafBotAppKeyWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>This interface is used to obtain the application key (AppKey) for the BOT behavior detection feature in the site\&quot;s Web Application Firewall (WAF). The key is typically used for authentication and data exchange with the WAF service.</para>
        /// </summary>
        /// 
        /// <returns>
        /// GetWafBotAppKeyResponse
        /// </returns>
        public async Task<GetWafBotAppKeyResponse> GetWafBotAppKeyAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetWafBotAppKeyWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the conditions for matching incoming requests that are configured in a WAF rule category for a website. These conditions define how WAF detects and processes different types of requests.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafFilterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafFilterResponse
        /// </returns>
        public GetWafFilterResponse GetWafFilterWithOptions(GetWafFilterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafFilter",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafFilterResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the conditions for matching incoming requests that are configured in a WAF rule category for a website. These conditions define how WAF detects and processes different types of requests.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafFilterRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafFilterResponse
        /// </returns>
        public async Task<GetWafFilterResponse> GetWafFilterWithOptionsAsync(GetWafFilterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafFilter",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafFilterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the conditions for matching incoming requests that are configured in a WAF rule category for a website. These conditions define how WAF detects and processes different types of requests.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafFilterRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafFilterResponse
        /// </returns>
        public GetWafFilterResponse GetWafFilter(GetWafFilterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetWafFilterWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the conditions for matching incoming requests that are configured in a WAF rule category for a website. These conditions define how WAF detects and processes different types of requests.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafFilterRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafFilterResponse
        /// </returns>
        public async Task<GetWafFilterResponse> GetWafFilterAsync(GetWafFilterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetWafFilterWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Quota Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafQuotaResponse
        /// </returns>
        public GetWafQuotaResponse GetWafQuotaWithOptions(GetWafQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Paths))
            {
                query["Paths"] = request.Paths;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafQuotaResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Quota Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafQuotaRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafQuotaResponse
        /// </returns>
        public async Task<GetWafQuotaResponse> GetWafQuotaWithOptionsAsync(GetWafQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Paths))
            {
                query["Paths"] = request.Paths;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafQuota",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Quota Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafQuotaResponse
        /// </returns>
        public GetWafQuotaResponse GetWafQuota(GetWafQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetWafQuotaWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Quota Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafQuotaRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafQuotaResponse
        /// </returns>
        public async Task<GetWafQuotaResponse> GetWafQuotaAsync(GetWafQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetWafQuotaWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get Details of a Single WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafRuleResponse
        /// </returns>
        public GetWafRuleResponse GetWafRuleWithOptions(GetWafRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get Details of a Single WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafRuleResponse
        /// </returns>
        public async Task<GetWafRuleResponse> GetWafRuleWithOptionsAsync(GetWafRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get Details of a Single WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafRuleResponse
        /// </returns>
        public GetWafRuleResponse GetWafRule(GetWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetWafRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get Details of a Single WAF Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafRuleResponse
        /// </returns>
        public async Task<GetWafRuleResponse> GetWafRuleAsync(GetWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetWafRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Ruleset Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafRulesetResponse
        /// </returns>
        public GetWafRulesetResponse GetWafRulesetWithOptions(GetWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafRulesetResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Ruleset Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// GetWafRulesetResponse
        /// </returns>
        public async Task<GetWafRulesetResponse> GetWafRulesetWithOptionsAsync(GetWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetWafRulesetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Ruleset Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafRulesetResponse
        /// </returns>
        public GetWafRulesetResponse GetWafRuleset(GetWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetWafRulesetWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Get WAF Ruleset Details</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// GetWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// GetWafRulesetResponse
        /// </returns>
        public async Task<GetWafRulesetResponse> GetWafRulesetAsync(GetWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetWafRulesetWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Cache Reserve Instance List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheReserveInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCacheReserveInstancesResponse
        /// </returns>
        public ListCacheReserveInstancesResponse ListCacheReserveInstancesWithOptions(ListCacheReserveInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCacheReserveInstances",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCacheReserveInstancesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Cache Reserve Instance List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheReserveInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCacheReserveInstancesResponse
        /// </returns>
        public async Task<ListCacheReserveInstancesResponse> ListCacheReserveInstancesWithOptionsAsync(ListCacheReserveInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCacheReserveInstances",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCacheReserveInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Cache Reserve Instance List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheReserveInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCacheReserveInstancesResponse
        /// </returns>
        public ListCacheReserveInstancesResponse ListCacheReserveInstances(ListCacheReserveInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCacheReserveInstancesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Cache Reserve Instance List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheReserveInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCacheReserveInstancesResponse
        /// </returns>
        public async Task<ListCacheReserveInstancesResponse> ListCacheReserveInstancesAsync(ListCacheReserveInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCacheReserveInstancesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple cache configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCacheRulesResponse
        /// </returns>
        public ListCacheRulesResponse ListCacheRulesWithOptions(ListCacheRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCacheRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCacheRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple cache configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCacheRulesResponse
        /// </returns>
        public async Task<ListCacheRulesResponse> ListCacheRulesWithOptionsAsync(ListCacheRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCacheRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCacheRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple cache configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCacheRulesResponse
        /// </returns>
        public ListCacheRulesResponse ListCacheRules(ListCacheRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCacheRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple cache configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCacheRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCacheRulesResponse
        /// </returns>
        public async Task<ListCacheRulesResponse> ListCacheRulesAsync(ListCacheRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCacheRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists certificates of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesResponse
        /// </returns>
        public ListCertificatesResponse ListCertificatesWithOptions(ListCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCertificatesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists certificates of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesResponse
        /// </returns>
        public async Task<ListCertificatesResponse> ListCertificatesWithOptionsAsync(ListCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCertificatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists certificates of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesResponse
        /// </returns>
        public ListCertificatesResponse ListCertificates(ListCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCertificatesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists certificates of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesResponse
        /// </returns>
        public async Task<ListCertificatesResponse> ListCertificatesAsync(ListCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCertificatesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询匹配记录名的站点证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesByRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesByRecordResponse
        /// </returns>
        public ListCertificatesByRecordResponse ListCertificatesByRecordWithOptions(ListCertificatesByRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCertificatesByRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCertificatesByRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询匹配记录名的站点证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesByRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesByRecordResponse
        /// </returns>
        public async Task<ListCertificatesByRecordResponse> ListCertificatesByRecordWithOptionsAsync(ListCertificatesByRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCertificatesByRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCertificatesByRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询匹配记录名的站点证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesByRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesByRecordResponse
        /// </returns>
        public ListCertificatesByRecordResponse ListCertificatesByRecord(ListCertificatesByRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCertificatesByRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询匹配记录名的站点证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCertificatesByRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCertificatesByRecordResponse
        /// </returns>
        public async Task<ListCertificatesByRecordResponse> ListCertificatesByRecordAsync(ListCertificatesByRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCertificatesByRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query TLS Cipher Suite List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCiphersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCiphersResponse
        /// </returns>
        public ListCiphersResponse ListCiphersWithOptions(ListCiphersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCiphers",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCiphersResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query TLS Cipher Suite List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCiphersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCiphersResponse
        /// </returns>
        public async Task<ListCiphersResponse> ListCiphersWithOptionsAsync(ListCiphersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCiphers",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCiphersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query TLS Cipher Suite List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCiphersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCiphersResponse
        /// </returns>
        public ListCiphersResponse ListCiphers(ListCiphersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCiphersWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query TLS Cipher Suite List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCiphersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCiphersResponse
        /// </returns>
        public async Task<ListCiphersResponse> ListCiphersAsync(ListCiphersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCiphersWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of client certificate authority (CA) certificates for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCaCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListClientCaCertificatesResponse
        /// </returns>
        public ListClientCaCertificatesResponse ListClientCaCertificatesWithOptions(ListClientCaCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientCaCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientCaCertificatesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of client certificate authority (CA) certificates for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCaCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListClientCaCertificatesResponse
        /// </returns>
        public async Task<ListClientCaCertificatesResponse> ListClientCaCertificatesWithOptionsAsync(ListClientCaCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientCaCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientCaCertificatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of client certificate authority (CA) certificates for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCaCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListClientCaCertificatesResponse
        /// </returns>
        public ListClientCaCertificatesResponse ListClientCaCertificates(ListClientCaCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClientCaCertificatesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of client certificate authority (CA) certificates for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCaCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListClientCaCertificatesResponse
        /// </returns>
        public async Task<ListClientCaCertificatesResponse> ListClientCaCertificatesAsync(ListClientCaCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClientCaCertificatesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries client certificates configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListClientCertificatesResponse
        /// </returns>
        public ListClientCertificatesResponse ListClientCertificatesWithOptions(ListClientCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientCertificatesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries client certificates configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListClientCertificatesResponse
        /// </returns>
        public async Task<ListClientCertificatesResponse> ListClientCertificatesWithOptionsAsync(ListClientCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientCertificatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries client certificates configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListClientCertificatesResponse
        /// </returns>
        public ListClientCertificatesResponse ListClientCertificates(ListClientCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClientCertificatesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries client certificates configured for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListClientCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListClientCertificatesResponse
        /// </returns>
        public async Task<ListClientCertificatesResponse> ListClientCertificatesAsync(ListClientCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClientCertificatesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of compression rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCompressionRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCompressionRulesResponse
        /// </returns>
        public ListCompressionRulesResponse ListCompressionRulesWithOptions(ListCompressionRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCompressionRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCompressionRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of compression rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCompressionRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListCompressionRulesResponse
        /// </returns>
        public async Task<ListCompressionRulesResponse> ListCompressionRulesWithOptionsAsync(ListCompressionRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCompressionRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCompressionRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of compression rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCompressionRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCompressionRulesResponse
        /// </returns>
        public ListCompressionRulesResponse ListCompressionRules(ListCompressionRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCompressionRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of compression rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListCompressionRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListCompressionRulesResponse
        /// </returns>
        public async Task<ListCompressionRulesResponse> ListCompressionRulesAsync(ListCompressionRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCompressionRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists domain names that are associated with a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppRecordsResponse
        /// </returns>
        public ListEdgeContainerAppRecordsResponse ListEdgeContainerAppRecordsWithOptions(ListEdgeContainerAppRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerAppRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists domain names that are associated with a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppRecordsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppRecordsResponse> ListEdgeContainerAppRecordsWithOptionsAsync(ListEdgeContainerAppRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerAppRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists domain names that are associated with a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppRecordsResponse
        /// </returns>
        public ListEdgeContainerAppRecordsResponse ListEdgeContainerAppRecords(ListEdgeContainerAppRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeContainerAppRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists domain names that are associated with a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppRecordsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppRecordsResponse> ListEdgeContainerAppRecordsAsync(ListEdgeContainerAppRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeContainerAppRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists versions of all containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppVersionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppVersionsResponse
        /// </returns>
        public ListEdgeContainerAppVersionsResponse ListEdgeContainerAppVersionsWithOptions(ListEdgeContainerAppVersionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerAppVersions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppVersionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists versions of all containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppVersionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppVersionsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppVersionsResponse> ListEdgeContainerAppVersionsWithOptionsAsync(ListEdgeContainerAppVersionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerAppVersions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppVersionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists versions of all containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppVersionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppVersionsResponse
        /// </returns>
        public ListEdgeContainerAppVersionsResponse ListEdgeContainerAppVersions(ListEdgeContainerAppVersionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeContainerAppVersionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists versions of all containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppVersionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppVersionsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppVersionsResponse> ListEdgeContainerAppVersionsAsync(ListEdgeContainerAppVersionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeContainerAppVersionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all containerized applications in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppsResponse
        /// </returns>
        public ListEdgeContainerAppsResponse ListEdgeContainerAppsWithOptions(ListEdgeContainerAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderKey))
            {
                query["OrderKey"] = request.OrderKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKey))
            {
                query["SearchKey"] = request.SearchKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchType))
            {
                query["SearchType"] = request.SearchType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerApps",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all containerized applications in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppsResponse> ListEdgeContainerAppsWithOptionsAsync(ListEdgeContainerAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderKey))
            {
                query["OrderKey"] = request.OrderKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKey))
            {
                query["SearchKey"] = request.SearchKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchType))
            {
                query["SearchType"] = request.SearchType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerApps",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerAppsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all containerized applications in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppsResponse
        /// </returns>
        public ListEdgeContainerAppsResponse ListEdgeContainerApps(ListEdgeContainerAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeContainerAppsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all containerized applications in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerAppsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerAppsResponse
        /// </returns>
        public async Task<ListEdgeContainerAppsResponse> ListEdgeContainerAppsAsync(ListEdgeContainerAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeContainerAppsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Container for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerRecordsResponse
        /// </returns>
        public ListEdgeContainerRecordsResponse ListEdgeContainerRecordsWithOptions(ListEdgeContainerRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Container for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerRecordsResponse
        /// </returns>
        public async Task<ListEdgeContainerRecordsResponse> ListEdgeContainerRecordsWithOptionsAsync(ListEdgeContainerRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeContainerRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeContainerRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Container for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerRecordsResponse
        /// </returns>
        public ListEdgeContainerRecordsResponse ListEdgeContainerRecords(ListEdgeContainerRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeContainerRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Container for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeContainerRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeContainerRecordsResponse
        /// </returns>
        public async Task<ListEdgeContainerRecordsResponse> ListEdgeContainerRecordsAsync(ListEdgeContainerRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeContainerRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Routine plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeRoutinePlansRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutinePlansResponse
        /// </returns>
        public ListEdgeRoutinePlansResponse ListEdgeRoutinePlansWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeRoutinePlans",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeRoutinePlansResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Routine plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListEdgeRoutinePlansRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutinePlansResponse
        /// </returns>
        public async Task<ListEdgeRoutinePlansResponse> ListEdgeRoutinePlansWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeRoutinePlans",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeRoutinePlansResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Routine plans.</para>
        /// </summary>
        /// 
        /// <returns>
        /// ListEdgeRoutinePlansResponse
        /// </returns>
        public ListEdgeRoutinePlansResponse ListEdgeRoutinePlans()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeRoutinePlansWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries Edge Routine plans.</para>
        /// </summary>
        /// 
        /// <returns>
        /// ListEdgeRoutinePlansResponse
        /// </returns>
        public async Task<ListEdgeRoutinePlansResponse> ListEdgeRoutinePlansAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeRoutinePlansWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Routine routes for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// <para> You can call this operation 100 times per second.</para>
        /// </remarks>
        /// </description>
        /// 
        /// <param name="request">
        /// ListEdgeRoutineRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutineRecordsResponse
        /// </returns>
        public ListEdgeRoutineRecordsResponse ListEdgeRoutineRecordsWithOptions(ListEdgeRoutineRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeRoutineRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeRoutineRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Routine routes for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// <para> You can call this operation 100 times per second.</para>
        /// </remarks>
        /// </description>
        /// 
        /// <param name="request">
        /// ListEdgeRoutineRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutineRecordsResponse
        /// </returns>
        public async Task<ListEdgeRoutineRecordsResponse> ListEdgeRoutineRecordsWithOptionsAsync(ListEdgeRoutineRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEdgeRoutineRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEdgeRoutineRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Routine routes for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// <para> You can call this operation 100 times per second.</para>
        /// </remarks>
        /// </description>
        /// 
        /// <param name="request">
        /// ListEdgeRoutineRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutineRecordsResponse
        /// </returns>
        public ListEdgeRoutineRecordsResponse ListEdgeRoutineRecords(ListEdgeRoutineRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEdgeRoutineRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the records that are associated with Edge Routine routes for a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// <para> You can call this operation 100 times per second.</para>
        /// </remarks>
        /// </description>
        /// 
        /// <param name="request">
        /// ListEdgeRoutineRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListEdgeRoutineRecordsResponse
        /// </returns>
        public async Task<ListEdgeRoutineRecordsResponse> ListEdgeRoutineRecordsAsync(ListEdgeRoutineRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEdgeRoutineRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpRequestHeaderModificationRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpRequestHeaderModificationRulesResponse
        /// </returns>
        public ListHttpRequestHeaderModificationRulesResponse ListHttpRequestHeaderModificationRulesWithOptions(ListHttpRequestHeaderModificationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpRequestHeaderModificationRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpRequestHeaderModificationRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpRequestHeaderModificationRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpRequestHeaderModificationRulesResponse
        /// </returns>
        public async Task<ListHttpRequestHeaderModificationRulesResponse> ListHttpRequestHeaderModificationRulesWithOptionsAsync(ListHttpRequestHeaderModificationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpRequestHeaderModificationRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpRequestHeaderModificationRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpRequestHeaderModificationRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpRequestHeaderModificationRulesResponse
        /// </returns>
        public ListHttpRequestHeaderModificationRulesResponse ListHttpRequestHeaderModificationRules(ListHttpRequestHeaderModificationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHttpRequestHeaderModificationRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpRequestHeaderModificationRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpRequestHeaderModificationRulesResponse
        /// </returns>
        public async Task<ListHttpRequestHeaderModificationRulesResponse> ListHttpRequestHeaderModificationRulesAsync(ListHttpRequestHeaderModificationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHttpRequestHeaderModificationRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpResponseHeaderModificationRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpResponseHeaderModificationRulesResponse
        /// </returns>
        public ListHttpResponseHeaderModificationRulesResponse ListHttpResponseHeaderModificationRulesWithOptions(ListHttpResponseHeaderModificationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpResponseHeaderModificationRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpResponseHeaderModificationRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpResponseHeaderModificationRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpResponseHeaderModificationRulesResponse
        /// </returns>
        public async Task<ListHttpResponseHeaderModificationRulesResponse> ListHttpResponseHeaderModificationRulesWithOptionsAsync(ListHttpResponseHeaderModificationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpResponseHeaderModificationRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpResponseHeaderModificationRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpResponseHeaderModificationRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpResponseHeaderModificationRulesResponse
        /// </returns>
        public ListHttpResponseHeaderModificationRulesResponse ListHttpResponseHeaderModificationRules(ListHttpResponseHeaderModificationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHttpResponseHeaderModificationRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of HTTP Response Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpResponseHeaderModificationRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpResponseHeaderModificationRulesResponse
        /// </returns>
        public async Task<ListHttpResponseHeaderModificationRulesResponse> ListHttpResponseHeaderModificationRulesAsync(ListHttpResponseHeaderModificationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHttpResponseHeaderModificationRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS application configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsApplicationConfigurationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsApplicationConfigurationsResponse
        /// </returns>
        public ListHttpsApplicationConfigurationsResponse ListHttpsApplicationConfigurationsWithOptions(ListHttpsApplicationConfigurationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpsApplicationConfigurations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpsApplicationConfigurationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS application configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsApplicationConfigurationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsApplicationConfigurationsResponse
        /// </returns>
        public async Task<ListHttpsApplicationConfigurationsResponse> ListHttpsApplicationConfigurationsWithOptionsAsync(ListHttpsApplicationConfigurationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpsApplicationConfigurations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpsApplicationConfigurationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS application configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsApplicationConfigurationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsApplicationConfigurationsResponse
        /// </returns>
        public ListHttpsApplicationConfigurationsResponse ListHttpsApplicationConfigurations(ListHttpsApplicationConfigurationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHttpsApplicationConfigurationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS application configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsApplicationConfigurationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsApplicationConfigurationsResponse
        /// </returns>
        public async Task<ListHttpsApplicationConfigurationsResponse> ListHttpsApplicationConfigurationsAsync(ListHttpsApplicationConfigurationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHttpsApplicationConfigurationsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS basic configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsBasicConfigurationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsBasicConfigurationsResponse
        /// </returns>
        public ListHttpsBasicConfigurationsResponse ListHttpsBasicConfigurationsWithOptions(ListHttpsBasicConfigurationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpsBasicConfigurations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpsBasicConfigurationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS basic configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsBasicConfigurationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsBasicConfigurationsResponse
        /// </returns>
        public async Task<ListHttpsBasicConfigurationsResponse> ListHttpsBasicConfigurationsWithOptionsAsync(ListHttpsBasicConfigurationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHttpsBasicConfigurations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHttpsBasicConfigurationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS basic configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsBasicConfigurationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsBasicConfigurationsResponse
        /// </returns>
        public ListHttpsBasicConfigurationsResponse ListHttpsBasicConfigurations(ListHttpsBasicConfigurationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHttpsBasicConfigurationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple HTTPS basic configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListHttpsBasicConfigurationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListHttpsBasicConfigurationsResponse
        /// </returns>
        public async Task<ListHttpsBasicConfigurationsResponse> ListHttpsBasicConfigurationsAsync(ListHttpsBasicConfigurationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHttpsBasicConfigurationsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multiple Site Image Transformation Configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListImageTransformsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListImageTransformsResponse
        /// </returns>
        public ListImageTransformsResponse ListImageTransformsWithOptions(ListImageTransformsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageTransforms",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageTransformsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multiple Site Image Transformation Configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListImageTransformsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListImageTransformsResponse
        /// </returns>
        public async Task<ListImageTransformsResponse> ListImageTransformsWithOptionsAsync(ListImageTransformsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageTransforms",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageTransformsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multiple Site Image Transformation Configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListImageTransformsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListImageTransformsResponse
        /// </returns>
        public ListImageTransformsResponse ListImageTransforms(ListImageTransformsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListImageTransformsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Multiple Site Image Transformation Configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListImageTransformsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListImageTransformsResponse
        /// </returns>
        public async Task<ListImageTransformsResponse> ListImageTransformsAsync(ListImageTransformsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListImageTransformsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quota details in a subscription plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasResponse
        /// </returns>
        public ListInstanceQuotasResponse ListInstanceQuotasWithOptions(ListInstanceQuotasRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceQuotas",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceQuotasResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quota details in a subscription plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasResponse
        /// </returns>
        public async Task<ListInstanceQuotasResponse> ListInstanceQuotasWithOptionsAsync(ListInstanceQuotasRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceQuotas",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceQuotasResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quota details in a subscription plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasRequest
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasResponse
        /// </returns>
        public ListInstanceQuotasResponse ListInstanceQuotas(ListInstanceQuotasRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInstanceQuotasWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the quota details in a subscription plan.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasRequest
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasResponse
        /// </returns>
        public async Task<ListInstanceQuotasResponse> ListInstanceQuotasAsync(ListInstanceQuotasRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInstanceQuotasWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quotas and the actual usage in a plan based on the website or plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasWithUsageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasWithUsageResponse
        /// </returns>
        public ListInstanceQuotasWithUsageResponse ListInstanceQuotasWithUsageWithOptions(ListInstanceQuotasWithUsageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceQuotasWithUsage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceQuotasWithUsageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quotas and the actual usage in a plan based on the website or plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasWithUsageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasWithUsageResponse
        /// </returns>
        public async Task<ListInstanceQuotasWithUsageResponse> ListInstanceQuotasWithUsageWithOptionsAsync(ListInstanceQuotasWithUsageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceQuotasWithUsage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceQuotasWithUsageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quotas and the actual usage in a plan based on the website or plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasWithUsageRequest
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasWithUsageResponse
        /// </returns>
        public ListInstanceQuotasWithUsageResponse ListInstanceQuotasWithUsage(ListInstanceQuotasWithUsageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInstanceQuotasWithUsageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries quotas and the actual usage in a plan based on the website or plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListInstanceQuotasWithUsageRequest
        /// </param>
        /// 
        /// <returns>
        /// ListInstanceQuotasWithUsageResponse
        /// </returns>
        public async Task<ListInstanceQuotasWithUsageResponse> ListInstanceQuotasWithUsageAsync(ListInstanceQuotasWithUsageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInstanceQuotasWithUsageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all key-value pairs in a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListKvsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListKvsResponse
        /// </returns>
        public ListKvsResponse ListKvsWithOptions(ListKvsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListKvs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListKvsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all key-value pairs in a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListKvsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListKvsResponse
        /// </returns>
        public async Task<ListKvsResponse> ListKvsWithOptionsAsync(ListKvsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListKvs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListKvsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all key-value pairs in a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListKvsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListKvsResponse
        /// </returns>
        public ListKvsResponse ListKvs(ListKvsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListKvsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all key-value pairs in a namespace in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListKvsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListKvsResponse
        /// </returns>
        public async Task<ListKvsResponse> ListKvsAsync(ListKvsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListKvsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all custom lists and their details in an Alibaba Cloud account. You can specify query arguments to filter the results and display the returned lists by page.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListListsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListListsResponse
        /// </returns>
        public ListListsResponse ListListsWithOptions(ListListsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListListsShrinkRequest request = new ListListsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLists",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListListsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all custom lists and their details in an Alibaba Cloud account. You can specify query arguments to filter the results and display the returned lists by page.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListListsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListListsResponse
        /// </returns>
        public async Task<ListListsResponse> ListListsWithOptionsAsync(ListListsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListListsShrinkRequest request = new ListListsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLists",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListListsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all custom lists and their details in an Alibaba Cloud account. You can specify query arguments to filter the results and display the returned lists by page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListListsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListListsResponse
        /// </returns>
        public ListListsResponse ListLists(ListListsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListListsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all custom lists and their details in an Alibaba Cloud account. You can specify query arguments to filter the results and display the returned lists by page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListListsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListListsResponse
        /// </returns>
        public async Task<ListListsResponse> ListListsAsync(ListListsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListListsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the status of origins in load balancers</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Query the status of origins under load balancers. You can pass multiple load balancer IDs at once, separated by commas. This is for load balancers that have monitors configured. It will probe the origins in the source address pools used by the load balancers and record the current status of each origin.</para>
        /// <list type="bullet">
        /// <item><description>Healthy(healthy): The probe result is available.</description></item>
        /// <item><description>Unhealthy(unhealthy): The probe result is unavailable.</description></item>
        /// <item><description>Unknown(unknown): Unknown, the monitor has not yet probed.</description></item>
        /// <item><description>Undetected(undetected): The load balancer to which the origin belongs is not bound to a monitor.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerOriginStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerOriginStatusResponse
        /// </returns>
        public ListLoadBalancerOriginStatusResponse ListLoadBalancerOriginStatusWithOptions(ListLoadBalancerOriginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancerOriginStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancerOriginStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the status of origins in load balancers</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Query the status of origins under load balancers. You can pass multiple load balancer IDs at once, separated by commas. This is for load balancers that have monitors configured. It will probe the origins in the source address pools used by the load balancers and record the current status of each origin.</para>
        /// <list type="bullet">
        /// <item><description>Healthy(healthy): The probe result is available.</description></item>
        /// <item><description>Unhealthy(unhealthy): The probe result is unavailable.</description></item>
        /// <item><description>Unknown(unknown): Unknown, the monitor has not yet probed.</description></item>
        /// <item><description>Undetected(undetected): The load balancer to which the origin belongs is not bound to a monitor.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerOriginStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerOriginStatusResponse
        /// </returns>
        public async Task<ListLoadBalancerOriginStatusResponse> ListLoadBalancerOriginStatusWithOptionsAsync(ListLoadBalancerOriginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancerOriginStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancerOriginStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the status of origins in load balancers</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Query the status of origins under load balancers. You can pass multiple load balancer IDs at once, separated by commas. This is for load balancers that have monitors configured. It will probe the origins in the source address pools used by the load balancers and record the current status of each origin.</para>
        /// <list type="bullet">
        /// <item><description>Healthy(healthy): The probe result is available.</description></item>
        /// <item><description>Unhealthy(unhealthy): The probe result is unavailable.</description></item>
        /// <item><description>Unknown(unknown): Unknown, the monitor has not yet probed.</description></item>
        /// <item><description>Undetected(undetected): The load balancer to which the origin belongs is not bound to a monitor.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerOriginStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerOriginStatusResponse
        /// </returns>
        public ListLoadBalancerOriginStatusResponse ListLoadBalancerOriginStatus(ListLoadBalancerOriginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListLoadBalancerOriginStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the status of origins in load balancers</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Query the status of origins under load balancers. You can pass multiple load balancer IDs at once, separated by commas. This is for load balancers that have monitors configured. It will probe the origins in the source address pools used by the load balancers and record the current status of each origin.</para>
        /// <list type="bullet">
        /// <item><description>Healthy(healthy): The probe result is available.</description></item>
        /// <item><description>Unhealthy(unhealthy): The probe result is unavailable.</description></item>
        /// <item><description>Unknown(unknown): Unknown, the monitor has not yet probed.</description></item>
        /// <item><description>Undetected(undetected): The load balancer to which the origin belongs is not bound to a monitor.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerOriginStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerOriginStatusResponse
        /// </returns>
        public async Task<ListLoadBalancerOriginStatusResponse> ListLoadBalancerOriginStatusAsync(ListLoadBalancerOriginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListLoadBalancerOriginStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Load Balancer Region List</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When creating a load balancer \&quot;based on country/region scheduling\&quot; strategy through OpenAPI, use the code of primary or secondary regions to represent traffic from this geographical area.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerRegionsResponse
        /// </returns>
        public ListLoadBalancerRegionsResponse ListLoadBalancerRegionsWithOptions(ListLoadBalancerRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancerRegions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancerRegionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Load Balancer Region List</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When creating a load balancer \&quot;based on country/region scheduling\&quot; strategy through OpenAPI, use the code of primary or secondary regions to represent traffic from this geographical area.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerRegionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerRegionsResponse
        /// </returns>
        public async Task<ListLoadBalancerRegionsResponse> ListLoadBalancerRegionsWithOptionsAsync(ListLoadBalancerRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancerRegions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancerRegionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Load Balancer Region List</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When creating a load balancer \&quot;based on country/region scheduling\&quot; strategy through OpenAPI, use the code of primary or secondary regions to represent traffic from this geographical area.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerRegionsResponse
        /// </returns>
        public ListLoadBalancerRegionsResponse ListLoadBalancerRegions(ListLoadBalancerRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListLoadBalancerRegionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Load Balancer Region List</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When creating a load balancer \&quot;based on country/region scheduling\&quot; strategy through OpenAPI, use the code of primary or secondary regions to represent traffic from this geographical area.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListLoadBalancerRegionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancerRegionsResponse
        /// </returns>
        public async Task<ListLoadBalancerRegionsResponse> ListLoadBalancerRegionsAsync(ListLoadBalancerRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListLoadBalancerRegionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of load balancers</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListLoadBalancersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancersResponse
        /// </returns>
        public ListLoadBalancersResponse ListLoadBalancersWithOptions(ListLoadBalancersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancers",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancersResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of load balancers</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListLoadBalancersRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancersResponse
        /// </returns>
        public async Task<ListLoadBalancersResponse> ListLoadBalancersWithOptionsAsync(ListLoadBalancersRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListLoadBalancers",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListLoadBalancersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of load balancers</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListLoadBalancersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancersResponse
        /// </returns>
        public ListLoadBalancersResponse ListLoadBalancers(ListLoadBalancersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListLoadBalancersWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query the list of load balancers</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListLoadBalancersRequest
        /// </param>
        /// 
        /// <returns>
        /// ListLoadBalancersResponse
        /// </returns>
        public async Task<ListLoadBalancersResponse> ListLoadBalancersAsync(ListLoadBalancersRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListLoadBalancersWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Custom Managed Rule Groups</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListManagedRulesGroupsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListManagedRulesGroupsResponse
        /// </returns>
        public ListManagedRulesGroupsResponse ListManagedRulesGroupsWithOptions(ListManagedRulesGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListManagedRulesGroups",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListManagedRulesGroupsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Custom Managed Rule Groups</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListManagedRulesGroupsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListManagedRulesGroupsResponse
        /// </returns>
        public async Task<ListManagedRulesGroupsResponse> ListManagedRulesGroupsWithOptionsAsync(ListManagedRulesGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListManagedRulesGroups",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListManagedRulesGroupsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Custom Managed Rule Groups</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListManagedRulesGroupsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListManagedRulesGroupsResponse
        /// </returns>
        public ListManagedRulesGroupsResponse ListManagedRulesGroups(ListManagedRulesGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListManagedRulesGroupsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Custom Managed Rule Groups</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListManagedRulesGroupsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListManagedRulesGroupsResponse
        /// </returns>
        public async Task<ListManagedRulesGroupsResponse> ListManagedRulesGroupsAsync(ListManagedRulesGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListManagedRulesGroupsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple network optimization configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListNetworkOptimizationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListNetworkOptimizationsResponse
        /// </returns>
        public ListNetworkOptimizationsResponse ListNetworkOptimizationsWithOptions(ListNetworkOptimizationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListNetworkOptimizations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListNetworkOptimizationsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple network optimization configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListNetworkOptimizationsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListNetworkOptimizationsResponse
        /// </returns>
        public async Task<ListNetworkOptimizationsResponse> ListNetworkOptimizationsWithOptionsAsync(ListNetworkOptimizationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListNetworkOptimizations",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListNetworkOptimizationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple network optimization configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListNetworkOptimizationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListNetworkOptimizationsResponse
        /// </returns>
        public ListNetworkOptimizationsResponse ListNetworkOptimizations(ListNetworkOptimizationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListNetworkOptimizationsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple network optimization configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListNetworkOptimizationsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListNetworkOptimizationsResponse
        /// </returns>
        public async Task<ListNetworkOptimizationsResponse> ListNetworkOptimizationsAsync(ListNetworkOptimizationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListNetworkOptimizationsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询源服务器CA证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginCaCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginCaCertificatesResponse
        /// </returns>
        public ListOriginCaCertificatesResponse ListOriginCaCertificatesWithOptions(ListOriginCaCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginCaCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginCaCertificatesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询源服务器CA证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginCaCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginCaCertificatesResponse
        /// </returns>
        public async Task<ListOriginCaCertificatesResponse> ListOriginCaCertificatesWithOptionsAsync(ListOriginCaCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginCaCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginCaCertificatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询源服务器CA证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginCaCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginCaCertificatesResponse
        /// </returns>
        public ListOriginCaCertificatesResponse ListOriginCaCertificates(ListOriginCaCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOriginCaCertificatesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询源服务器CA证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginCaCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginCaCertificatesResponse
        /// </returns>
        public async Task<ListOriginCaCertificatesResponse> ListOriginCaCertificatesAsync(ListOriginCaCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOriginCaCertificatesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询域名回源客户端证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginClientCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginClientCertificatesResponse
        /// </returns>
        public ListOriginClientCertificatesResponse ListOriginClientCertificatesWithOptions(ListOriginClientCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginClientCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginClientCertificatesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询域名回源客户端证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginClientCertificatesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginClientCertificatesResponse
        /// </returns>
        public async Task<ListOriginClientCertificatesResponse> ListOriginClientCertificatesWithOptionsAsync(ListOriginClientCertificatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginClientCertificates",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginClientCertificatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询域名回源客户端证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginClientCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginClientCertificatesResponse
        /// </returns>
        public ListOriginClientCertificatesResponse ListOriginClientCertificates(ListOriginClientCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOriginClientCertificatesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询域名回源客户端证书列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginClientCertificatesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginClientCertificatesResponse
        /// </returns>
        public async Task<ListOriginClientCertificatesResponse> ListOriginClientCertificatesAsync(ListOriginClientCertificatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOriginClientCertificatesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Origin Pools</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginPoolsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginPoolsResponse
        /// </returns>
        public ListOriginPoolsResponse ListOriginPoolsWithOptions(ListOriginPoolsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginPools",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginPoolsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Origin Pools</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginPoolsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginPoolsResponse
        /// </returns>
        public async Task<ListOriginPoolsResponse> ListOriginPoolsWithOptionsAsync(ListOriginPoolsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginPools",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginPoolsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Origin Pools</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginPoolsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginPoolsResponse
        /// </returns>
        public ListOriginPoolsResponse ListOriginPools(ListOriginPoolsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOriginPoolsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List Origin Pools</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginPoolsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginPoolsResponse
        /// </returns>
        public async Task<ListOriginPoolsResponse> ListOriginPoolsAsync(ListOriginPoolsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOriginPoolsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple origin rule configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginRulesResponse
        /// </returns>
        public ListOriginRulesResponse ListOriginRulesWithOptions(ListOriginRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple origin rule configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListOriginRulesResponse
        /// </returns>
        public async Task<ListOriginRulesResponse> ListOriginRulesWithOptionsAsync(ListOriginRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOriginRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOriginRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple origin rule configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginRulesResponse
        /// </returns>
        public ListOriginRulesResponse ListOriginRules(ListOriginRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOriginRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query multiple origin rule configurations</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListOriginRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListOriginRulesResponse
        /// </returns>
        public async Task<ListOriginRulesResponse> ListOriginRulesAsync(ListOriginRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOriginRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all custom error pages that you created. You can define the page number and the number of entries per page to display the response.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListPagesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListPagesResponse
        /// </returns>
        public ListPagesResponse ListPagesWithOptions(ListPagesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListPagesShrinkRequest request = new ListPagesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPages",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPagesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all custom error pages that you created. You can define the page number and the number of entries per page to display the response.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListPagesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListPagesResponse
        /// </returns>
        public async Task<ListPagesResponse> ListPagesWithOptionsAsync(ListPagesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListPagesShrinkRequest request = new ListPagesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPages",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPagesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all custom error pages that you created. You can define the page number and the number of entries per page to display the response.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListPagesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListPagesResponse
        /// </returns>
        public ListPagesResponse ListPages(ListPagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPagesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all custom error pages that you created. You can define the page number and the number of entries per page to display the response.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListPagesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListPagesResponse
        /// </returns>
        public async Task<ListPagesResponse> ListPagesAsync(ListPagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPagesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of Domain Name System (DNS) records of a website, including the record value, priority, and authentication configurations. Supports filtering by specifying parameters such as RecordName and RecordMatchType.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The DNS records related to Edge Container, Edge Routine, and TCP/UDP proxy are not returned in this operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRecordsResponse
        /// </returns>
        public ListRecordsResponse ListRecordsWithOptions(ListRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of Domain Name System (DNS) records of a website, including the record value, priority, and authentication configurations. Supports filtering by specifying parameters such as RecordName and RecordMatchType.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The DNS records related to Edge Container, Edge Routine, and TCP/UDP proxy are not returned in this operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRecordsResponse
        /// </returns>
        public async Task<ListRecordsResponse> ListRecordsWithOptionsAsync(ListRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of Domain Name System (DNS) records of a website, including the record value, priority, and authentication configurations. Supports filtering by specifying parameters such as RecordName and RecordMatchType.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The DNS records related to Edge Container, Edge Routine, and TCP/UDP proxy are not returned in this operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRecordsResponse
        /// </returns>
        public ListRecordsResponse ListRecords(ListRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries a list of Domain Name System (DNS) records of a website, including the record value, priority, and authentication configurations. Supports filtering by specifying parameters such as RecordName and RecordMatchType.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>The DNS records related to Edge Container, Edge Routine, and TCP/UDP proxy are not returned in this operation.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRecordsResponse
        /// </returns>
        public async Task<ListRecordsResponse> ListRecordsAsync(ListRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRedirectRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRedirectRulesResponse
        /// </returns>
        public ListRedirectRulesResponse ListRedirectRulesWithOptions(ListRedirectRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRedirectRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRedirectRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRedirectRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRedirectRulesResponse
        /// </returns>
        public async Task<ListRedirectRulesResponse> ListRedirectRulesWithOptionsAsync(ListRedirectRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRedirectRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRedirectRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRedirectRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRedirectRulesResponse
        /// </returns>
        public ListRedirectRulesResponse ListRedirectRules(ListRedirectRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRedirectRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Redirect Rule List</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRedirectRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRedirectRulesResponse
        /// </returns>
        public async Task<ListRedirectRulesResponse> ListRedirectRulesAsync(ListRedirectRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRedirectRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of Rewrite URL Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRewriteUrlRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRewriteUrlRulesResponse
        /// </returns>
        public ListRewriteUrlRulesResponse ListRewriteUrlRulesWithOptions(ListRewriteUrlRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRewriteUrlRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRewriteUrlRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of Rewrite URL Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRewriteUrlRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRewriteUrlRulesResponse
        /// </returns>
        public async Task<ListRewriteUrlRulesResponse> ListRewriteUrlRulesWithOptionsAsync(ListRewriteUrlRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRewriteUrlRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRewriteUrlRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of Rewrite URL Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRewriteUrlRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRewriteUrlRulesResponse
        /// </returns>
        public ListRewriteUrlRulesResponse ListRewriteUrlRules(ListRewriteUrlRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRewriteUrlRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List of Rewrite URL Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRewriteUrlRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRewriteUrlRulesResponse
        /// </returns>
        public async Task<ListRewriteUrlRulesResponse> ListRewriteUrlRulesAsync(ListRewriteUrlRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRewriteUrlRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the regions to which Edge Routine code can be released for canary deployment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCanaryAreasRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCanaryAreasResponse
        /// </returns>
        public ListRoutineCanaryAreasResponse ListRoutineCanaryAreasWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineCanaryAreas",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineCanaryAreasResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the regions to which Edge Routine code can be released for canary deployment.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCanaryAreasRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCanaryAreasResponse
        /// </returns>
        public async Task<ListRoutineCanaryAreasResponse> ListRoutineCanaryAreasWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineCanaryAreas",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineCanaryAreasResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the regions to which Edge Routine code can be released for canary deployment.</para>
        /// </summary>
        /// 
        /// <returns>
        /// ListRoutineCanaryAreasResponse
        /// </returns>
        public ListRoutineCanaryAreasResponse ListRoutineCanaryAreas()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRoutineCanaryAreasWithOptions(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the regions to which Edge Routine code can be released for canary deployment.</para>
        /// </summary>
        /// 
        /// <returns>
        /// ListRoutineCanaryAreasResponse
        /// </returns>
        public async Task<ListRoutineCanaryAreasResponse> ListRoutineCanaryAreasAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRoutineCanaryAreasWithOptionsAsync(runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询Routine的代码版本列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCodeVersionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCodeVersionsResponse
        /// </returns>
        public ListRoutineCodeVersionsResponse ListRoutineCodeVersionsWithOptions(ListRoutineCodeVersionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                body["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                body["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineCodeVersions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineCodeVersionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询Routine的代码版本列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCodeVersionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCodeVersionsResponse
        /// </returns>
        public async Task<ListRoutineCodeVersionsResponse> ListRoutineCodeVersionsWithOptionsAsync(ListRoutineCodeVersionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                body["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                body["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineCodeVersions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineCodeVersionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询Routine的代码版本列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCodeVersionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCodeVersionsResponse
        /// </returns>
        public ListRoutineCodeVersionsResponse ListRoutineCodeVersions(ListRoutineCodeVersionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRoutineCodeVersionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询Routine的代码版本列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineCodeVersionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineCodeVersionsResponse
        /// </returns>
        public async Task<ListRoutineCodeVersionsResponse> ListRoutineCodeVersionsAsync(ListRoutineCodeVersionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRoutineCodeVersionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询函数关联域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRelatedRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRelatedRecordsResponse
        /// </returns>
        public ListRoutineRelatedRecordsResponse ListRoutineRelatedRecordsWithOptions(ListRoutineRelatedRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                body["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                body["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineRelatedRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineRelatedRecordsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询函数关联域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRelatedRecordsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRelatedRecordsResponse
        /// </returns>
        public async Task<ListRoutineRelatedRecordsResponse> ListRoutineRelatedRecordsWithOptionsAsync(ListRoutineRelatedRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                body["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                body["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineRelatedRecords",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineRelatedRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询函数关联域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRelatedRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRelatedRecordsResponse
        /// </returns>
        public ListRoutineRelatedRecordsResponse ListRoutineRelatedRecords(ListRoutineRelatedRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRoutineRelatedRecordsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询函数关联域名列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRelatedRecordsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRelatedRecordsResponse
        /// </returns>
        public async Task<ListRoutineRelatedRecordsResponse> ListRoutineRelatedRecordsAsync(ListRoutineRelatedRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRoutineRelatedRecordsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询边缘程序的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRoutesResponse
        /// </returns>
        public ListRoutineRoutesResponse ListRoutineRoutesWithOptions(ListRoutineRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineRoutes",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineRoutesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询边缘程序的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRoutesResponse
        /// </returns>
        public async Task<ListRoutineRoutesResponse> ListRoutineRoutesWithOptionsAsync(ListRoutineRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRoutineRoutes",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRoutineRoutesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询边缘程序的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRoutesResponse
        /// </returns>
        public ListRoutineRoutesResponse ListRoutineRoutes(ListRoutineRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRoutineRoutesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询边缘程序的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListRoutineRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListRoutineRoutesResponse
        /// </returns>
        public async Task<ListRoutineRoutesResponse> ListRoutineRoutesAsync(ListRoutineRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRoutineRoutesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the plans in a scheduled prefetch task by task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadExecutionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadExecutionsResponse
        /// </returns>
        public ListScheduledPreloadExecutionsResponse ListScheduledPreloadExecutionsWithOptions(ListScheduledPreloadExecutionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScheduledPreloadExecutions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScheduledPreloadExecutionsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the plans in a scheduled prefetch task by task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadExecutionsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadExecutionsResponse
        /// </returns>
        public async Task<ListScheduledPreloadExecutionsResponse> ListScheduledPreloadExecutionsWithOptionsAsync(ListScheduledPreloadExecutionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScheduledPreloadExecutions",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScheduledPreloadExecutionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the plans in a scheduled prefetch task by task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadExecutionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadExecutionsResponse
        /// </returns>
        public ListScheduledPreloadExecutionsResponse ListScheduledPreloadExecutions(ListScheduledPreloadExecutionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListScheduledPreloadExecutionsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists the plans in a scheduled prefetch task by task ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadExecutionsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadExecutionsResponse
        /// </returns>
        public async Task<ListScheduledPreloadExecutionsResponse> ListScheduledPreloadExecutionsAsync(ListScheduledPreloadExecutionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListScheduledPreloadExecutionsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the scheduled prefetch tasks for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadJobsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadJobsResponse
        /// </returns>
        public ListScheduledPreloadJobsResponse ListScheduledPreloadJobsWithOptions(ListScheduledPreloadJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScheduledPreloadJobs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScheduledPreloadJobsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the scheduled prefetch tasks for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadJobsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadJobsResponse
        /// </returns>
        public async Task<ListScheduledPreloadJobsResponse> ListScheduledPreloadJobsWithOptionsAsync(ListScheduledPreloadJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScheduledPreloadJobs",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScheduledPreloadJobsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the scheduled prefetch tasks for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadJobsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadJobsResponse
        /// </returns>
        public ListScheduledPreloadJobsResponse ListScheduledPreloadJobs(ListScheduledPreloadJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListScheduledPreloadJobsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the scheduled prefetch tasks for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListScheduledPreloadJobsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListScheduledPreloadJobsResponse
        /// </returns>
        public async Task<ListScheduledPreloadJobsResponse> ListScheduledPreloadJobsAsync(ListScheduledPreloadJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListScheduledPreloadJobsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all log delivery tasks that are in progress.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteDeliveryTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSiteDeliveryTasksResponse
        /// </returns>
        public ListSiteDeliveryTasksResponse ListSiteDeliveryTasksWithOptions(ListSiteDeliveryTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSiteDeliveryTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSiteDeliveryTasksResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all log delivery tasks that are in progress.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteDeliveryTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSiteDeliveryTasksResponse
        /// </returns>
        public async Task<ListSiteDeliveryTasksResponse> ListSiteDeliveryTasksWithOptionsAsync(ListSiteDeliveryTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSiteDeliveryTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSiteDeliveryTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all log delivery tasks that are in progress.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteDeliveryTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSiteDeliveryTasksResponse
        /// </returns>
        public ListSiteDeliveryTasksResponse ListSiteDeliveryTasks(ListSiteDeliveryTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSiteDeliveryTasksWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Lists all log delivery tasks that are in progress.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteDeliveryTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSiteDeliveryTasksResponse
        /// </returns>
        public async Task<ListSiteDeliveryTasksResponse> ListSiteDeliveryTasksAsync(ListSiteDeliveryTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSiteDeliveryTasksWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSiteRoutesResponse
        /// </returns>
        public ListSiteRoutesResponse ListSiteRoutesWithOptions(ListSiteRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigType))
            {
                query["ConfigType"] = request.ConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSiteRoutes",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSiteRoutesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteRoutesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSiteRoutesResponse
        /// </returns>
        public async Task<ListSiteRoutesResponse> ListSiteRoutesWithOptionsAsync(ListSiteRoutesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigType))
            {
                query["ConfigType"] = request.ConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSiteRoutes",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSiteRoutesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSiteRoutesResponse
        /// </returns>
        public ListSiteRoutesResponse ListSiteRoutes(ListSiteRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSiteRoutesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点的函数路由列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSiteRoutesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSiteRoutesResponse
        /// </returns>
        public async Task<ListSiteRoutesResponse> ListSiteRoutesAsync(ListSiteRoutesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSiteRoutesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about websites in your account, such as the name, status, and configuration of each website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListSitesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSitesResponse
        /// </returns>
        public ListSitesResponse ListSitesWithOptions(ListSitesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListSitesShrinkRequest request = new ListSitesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TagFilter))
            {
                request.TagFilterShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TagFilter, "TagFilter", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSites",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSitesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about websites in your account, such as the name, status, and configuration of each website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListSitesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListSitesResponse
        /// </returns>
        public async Task<ListSitesResponse> ListSitesWithOptionsAsync(ListSitesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListSitesShrinkRequest request = new ListSitesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TagFilter))
            {
                request.TagFilterShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TagFilter, "TagFilter", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSites",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSitesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about websites in your account, such as the name, status, and configuration of each website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSitesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSitesResponse
        /// </returns>
        public ListSitesResponse ListSites(ListSitesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSitesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about websites in your account, such as the name, status, and configuration of each website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListSitesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListSitesResponse
        /// </returns>
        public async Task<ListSitesResponse> ListSitesAsync(ListSitesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSitesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries tags based on the region ID and resource type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public ListTagResourcesResponse ListTagResourcesWithOptions(ListTagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxItem))
            {
                query["MaxItem"] = request.MaxItem;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTagResources",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries tags based on the region ID and resource type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public async Task<ListTagResourcesResponse> ListTagResourcesWithOptionsAsync(ListTagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaxItem))
            {
                query["MaxItem"] = request.MaxItem;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTagResources",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries tags based on the region ID and resource type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public ListTagResourcesResponse ListTagResources(ListTagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTagResourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries tags based on the region ID and resource type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListTagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListTagResourcesResponse
        /// </returns>
        public async Task<ListTagResourcesResponse> ListTagResourcesAsync(ListTagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTagResourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of file upload tasks based on the task time and type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUploadTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUploadTasksResponse
        /// </returns>
        public ListUploadTasksResponse ListUploadTasksWithOptions(ListUploadTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUploadTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUploadTasksResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of file upload tasks based on the task time and type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUploadTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUploadTasksResponse
        /// </returns>
        public async Task<ListUploadTasksResponse> ListUploadTasksWithOptionsAsync(ListUploadTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUploadTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUploadTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of file upload tasks based on the task time and type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUploadTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUploadTasksResponse
        /// </returns>
        public ListUploadTasksResponse ListUploadTasks(ListUploadTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUploadTasksWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the execution status and running information of file upload tasks based on the task time and type.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUploadTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUploadTasksResponse
        /// </returns>
        public async Task<ListUploadTasksResponse> ListUploadTasksAsync(ListUploadTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUploadTasksWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all delivery tasks in your Alibaba Cloud account by page. You can filter the delivery tasks by the category of the delivered real-time logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserDeliveryTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserDeliveryTasksResponse
        /// </returns>
        public ListUserDeliveryTasksResponse ListUserDeliveryTasksWithOptions(ListUserDeliveryTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserDeliveryTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserDeliveryTasksResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all delivery tasks in your Alibaba Cloud account by page. You can filter the delivery tasks by the category of the delivered real-time logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserDeliveryTasksRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserDeliveryTasksResponse
        /// </returns>
        public async Task<ListUserDeliveryTasksResponse> ListUserDeliveryTasksWithOptionsAsync(ListUserDeliveryTasksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserDeliveryTasks",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserDeliveryTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all delivery tasks in your Alibaba Cloud account by page. You can filter the delivery tasks by the category of the delivered real-time logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserDeliveryTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserDeliveryTasksResponse
        /// </returns>
        public ListUserDeliveryTasksResponse ListUserDeliveryTasks(ListUserDeliveryTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUserDeliveryTasksWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries all delivery tasks in your Alibaba Cloud account by page. You can filter the delivery tasks by the category of the delivered real-time logs.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserDeliveryTasksRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserDeliveryTasksResponse
        /// </returns>
        public async Task<ListUserDeliveryTasksResponse> ListUserDeliveryTasksAsync(ListUserDeliveryTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUserDeliveryTasksWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the plans that you purchased and the details of the plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRatePlanInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserRatePlanInstancesResponse
        /// </returns>
        public ListUserRatePlanInstancesResponse ListUserRatePlanInstancesWithOptions(ListUserRatePlanInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserRatePlanInstances",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserRatePlanInstancesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the plans that you purchased and the details of the plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRatePlanInstancesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserRatePlanInstancesResponse
        /// </returns>
        public async Task<ListUserRatePlanInstancesResponse> ListUserRatePlanInstancesWithOptionsAsync(ListUserRatePlanInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserRatePlanInstances",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserRatePlanInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the plans that you purchased and the details of the plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRatePlanInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserRatePlanInstancesResponse
        /// </returns>
        public ListUserRatePlanInstancesResponse ListUserRatePlanInstances(ListUserRatePlanInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUserRatePlanInstancesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the plans that you purchased and the details of the plans.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRatePlanInstancesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserRatePlanInstancesResponse
        /// </returns>
        public async Task<ListUserRatePlanInstancesResponse> ListUserRatePlanInstancesAsync(ListUserRatePlanInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUserRatePlanInstancesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询用户的Routine列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRoutinesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserRoutinesResponse
        /// </returns>
        public ListUserRoutinesResponse ListUserRoutinesWithOptions(ListUserRoutinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                query["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserRoutines",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserRoutinesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询用户的Routine列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRoutinesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListUserRoutinesResponse
        /// </returns>
        public async Task<ListUserRoutinesResponse> ListUserRoutinesWithOptionsAsync(ListUserRoutinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchKeyWord))
            {
                query["SearchKeyWord"] = request.SearchKeyWord;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUserRoutines",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUserRoutinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询用户的Routine列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRoutinesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserRoutinesResponse
        /// </returns>
        public ListUserRoutinesResponse ListUserRoutines(ListUserRoutinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUserRoutinesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询用户的Routine列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListUserRoutinesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListUserRoutinesResponse
        /// </returns>
        public async Task<ListUserRoutinesResponse> ListUserRoutinesAsync(ListUserRoutinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUserRoutinesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListVideoProcessingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListVideoProcessingsResponse
        /// </returns>
        public ListVideoProcessingsResponse ListVideoProcessingsWithOptions(ListVideoProcessingsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigType))
            {
                query["ConfigType"] = request.ConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVideoProcessings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVideoProcessingsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListVideoProcessingsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListVideoProcessingsResponse
        /// </returns>
        public async Task<ListVideoProcessingsResponse> ListVideoProcessingsWithOptionsAsync(ListVideoProcessingsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigType))
            {
                query["ConfigType"] = request.ConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVideoProcessings",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVideoProcessingsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListVideoProcessingsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListVideoProcessingsResponse
        /// </returns>
        public ListVideoProcessingsResponse ListVideoProcessings(ListVideoProcessingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVideoProcessingsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>查询站点视频处理配置列表</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListVideoProcessingsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListVideoProcessingsResponse
        /// </returns>
        public async Task<ListVideoProcessingsResponse> ListVideoProcessingsAsync(ListVideoProcessingsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVideoProcessingsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Managed Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafManagedRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafManagedRulesResponse
        /// </returns>
        public ListWafManagedRulesResponse ListWafManagedRulesWithOptions(ListWafManagedRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafManagedRulesShrinkRequest request = new ListWafManagedRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttackType))
            {
                query["AttackType"] = request.AttackType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafManagedRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafManagedRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Managed Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafManagedRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafManagedRulesResponse
        /// </returns>
        public async Task<ListWafManagedRulesResponse> ListWafManagedRulesWithOptionsAsync(ListWafManagedRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafManagedRulesShrinkRequest request = new ListWafManagedRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttackType))
            {
                query["AttackType"] = request.AttackType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtectionLevel))
            {
                query["ProtectionLevel"] = request.ProtectionLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafManagedRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafManagedRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Managed Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafManagedRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafManagedRulesResponse
        /// </returns>
        public ListWafManagedRulesResponse ListWafManagedRules(ListWafManagedRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafManagedRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Managed Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafManagedRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafManagedRulesResponse
        /// </returns>
        public async Task<ListWafManagedRulesResponse> ListWafManagedRulesAsync(ListWafManagedRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafManagedRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Phases</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafPhasesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafPhasesResponse
        /// </returns>
        public ListWafPhasesResponse ListWafPhasesWithOptions(ListWafPhasesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafPhases",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafPhasesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Phases</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafPhasesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafPhasesResponse
        /// </returns>
        public async Task<ListWafPhasesResponse> ListWafPhasesWithOptionsAsync(ListWafPhasesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafPhases",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafPhasesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Phases</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafPhasesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafPhasesResponse
        /// </returns>
        public ListWafPhasesResponse ListWafPhases(ListWafPhasesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafPhasesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Phases</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafPhasesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafPhasesResponse
        /// </returns>
        public async Task<ListWafPhasesResponse> ListWafPhasesAsync(ListWafPhasesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafPhasesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesResponse
        /// </returns>
        public ListWafRulesResponse ListWafRulesWithOptions(ListWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafRulesShrinkRequest request = new ListWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                query["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesResponse
        /// </returns>
        public async Task<ListWafRulesResponse> ListWafRulesWithOptionsAsync(ListWafRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafRulesShrinkRequest request = new ListWafRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesetId))
            {
                query["RulesetId"] = request.RulesetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesResponse
        /// </returns>
        public ListWafRulesResponse ListWafRules(ListWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesResponse
        /// </returns>
        public async Task<ListWafRulesResponse> ListWafRulesAsync(ListWafRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Sets</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafRulesetsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesetsResponse
        /// </returns>
        public ListWafRulesetsResponse ListWafRulesetsWithOptions(ListWafRulesetsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafRulesetsShrinkRequest request = new ListWafRulesetsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafRulesets",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafRulesetsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Sets</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafRulesetsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesetsResponse
        /// </returns>
        public async Task<ListWafRulesetsResponse> ListWafRulesetsWithOptionsAsync(ListWafRulesetsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafRulesetsShrinkRequest request = new ListWafRulesetsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafRulesets",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafRulesetsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Sets</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafRulesetsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesetsResponse
        /// </returns>
        public ListWafRulesetsResponse ListWafRulesets(ListWafRulesetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafRulesetsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Sets</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafRulesetsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafRulesetsResponse
        /// </returns>
        public async Task<ListWafRulesetsResponse> ListWafRulesetsAsync(ListWafRulesetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafRulesetsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Template Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafTemplateRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafTemplateRulesResponse
        /// </returns>
        public ListWafTemplateRulesResponse ListWafTemplateRulesWithOptions(ListWafTemplateRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafTemplateRulesShrinkRequest request = new ListWafTemplateRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafTemplateRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafTemplateRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Template Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// ListWafTemplateRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafTemplateRulesResponse
        /// </returns>
        public async Task<ListWafTemplateRulesResponse> ListWafTemplateRulesWithOptionsAsync(ListWafTemplateRulesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListWafTemplateRulesShrinkRequest request = new ListWafTemplateRulesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.QueryArgs))
            {
                request.QueryArgsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.QueryArgs, "QueryArgs", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryArgsShrink))
            {
                query["QueryArgs"] = request.QueryArgsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafTemplateRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafTemplateRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Template Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafTemplateRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafTemplateRulesResponse
        /// </returns>
        public ListWafTemplateRulesResponse ListWafTemplateRules(ListWafTemplateRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafTemplateRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Template Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafTemplateRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafTemplateRulesResponse
        /// </returns>
        public async Task<ListWafTemplateRulesResponse> ListWafTemplateRulesAsync(ListWafTemplateRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafTemplateRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafUsageOfRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafUsageOfRulesResponse
        /// </returns>
        public ListWafUsageOfRulesResponse ListWafUsageOfRulesWithOptions(ListWafUsageOfRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafUsageOfRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafUsageOfRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafUsageOfRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWafUsageOfRulesResponse
        /// </returns>
        public async Task<ListWafUsageOfRulesResponse> ListWafUsageOfRulesWithOptionsAsync(ListWafUsageOfRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phase))
            {
                query["Phase"] = request.Phase;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWafUsageOfRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWafUsageOfRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafUsageOfRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafUsageOfRulesResponse
        /// </returns>
        public ListWafUsageOfRulesResponse ListWafUsageOfRules(ListWafUsageOfRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWafUsageOfRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>List WAF Rule Usage</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ListWafUsageOfRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWafUsageOfRulesResponse
        /// </returns>
        public async Task<ListWafUsageOfRulesResponse> ListWafUsageOfRulesAsync(ListWafUsageOfRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWafUsageOfRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about waiting room events for a waiting room.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query details of all waiting room events related to a waiting room in a website.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomEventsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomEventsResponse
        /// </returns>
        public ListWaitingRoomEventsResponse ListWaitingRoomEventsWithOptions(ListWaitingRoomEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRoomEvents",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomEventsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about waiting room events for a waiting room.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query details of all waiting room events related to a waiting room in a website.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomEventsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomEventsResponse
        /// </returns>
        public async Task<ListWaitingRoomEventsResponse> ListWaitingRoomEventsWithOptionsAsync(ListWaitingRoomEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRoomEvents",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about waiting room events for a waiting room.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query details of all waiting room events related to a waiting room in a website.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomEventsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomEventsResponse
        /// </returns>
        public ListWaitingRoomEventsResponse ListWaitingRoomEvents(ListWaitingRoomEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWaitingRoomEventsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about waiting room events for a waiting room.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query details of all waiting room events related to a waiting room in a website.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomEventsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomEventsResponse
        /// </returns>
        public async Task<ListWaitingRoomEventsResponse> ListWaitingRoomEventsAsync(ListWaitingRoomEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWaitingRoomEventsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Waiting Room Bypass Rules</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the list of waiting room bypass rules associated with a specific site.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomRulesResponse
        /// </returns>
        public ListWaitingRoomRulesResponse ListWaitingRoomRulesWithOptions(ListWaitingRoomRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRoomRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomRulesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Waiting Room Bypass Rules</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the list of waiting room bypass rules associated with a specific site.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomRulesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomRulesResponse
        /// </returns>
        public async Task<ListWaitingRoomRulesResponse> ListWaitingRoomRulesWithOptionsAsync(ListWaitingRoomRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRoomRules",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Waiting Room Bypass Rules</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the list of waiting room bypass rules associated with a specific site.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomRulesResponse
        /// </returns>
        public ListWaitingRoomRulesResponse ListWaitingRoomRules(ListWaitingRoomRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWaitingRoomRulesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Query Waiting Room Bypass Rules</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This API allows users to query the list of waiting room bypass rules associated with a specific site.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomRulesRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomRulesResponse
        /// </returns>
        public async Task<ListWaitingRoomRulesResponse> ListWaitingRoomRulesAsync(ListWaitingRoomRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWaitingRoomRulesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about all waiting rooms in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query detailed configurations about all waiting rooms in a website, including the status, name, and queuing rules of each waiting room.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomsResponse
        /// </returns>
        public ListWaitingRoomsResponse ListWaitingRoomsWithOptions(ListWaitingRoomsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRooms",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomsResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about all waiting rooms in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query detailed configurations about all waiting rooms in a website, including the status, name, and queuing rules of each waiting room.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomsRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomsResponse
        /// </returns>
        public async Task<ListWaitingRoomsResponse> ListWaitingRoomsWithOptionsAsync(ListWaitingRoomsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListWaitingRooms",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListWaitingRoomsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about all waiting rooms in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query detailed configurations about all waiting rooms in a website, including the status, name, and queuing rules of each waiting room.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomsResponse
        /// </returns>
        public ListWaitingRoomsResponse ListWaitingRooms(ListWaitingRoomsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListWaitingRoomsWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Queries the information about all waiting rooms in a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>You can call this operation to query detailed configurations about all waiting rooms in a website, including the status, name, and queuing rules of each waiting room.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// ListWaitingRoomsRequest
        /// </param>
        /// 
        /// <returns>
        /// ListWaitingRoomsResponse
        /// </returns>
        public async Task<ListWaitingRoomsResponse> ListWaitingRoomsAsync(ListWaitingRoomsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListWaitingRoomsWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>OpenErService</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// OpenErServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// OpenErServiceResponse
        /// </returns>
        public OpenErServiceResponse OpenErServiceWithOptions(OpenErServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenErService",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenErServiceResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>OpenErService</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// OpenErServiceRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// OpenErServiceResponse
        /// </returns>
        public async Task<OpenErServiceResponse> OpenErServiceWithOptionsAsync(OpenErServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenErService",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenErServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>OpenErService</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// OpenErServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// OpenErServiceResponse
        /// </returns>
        public OpenErServiceResponse OpenErService(OpenErServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenErServiceWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>OpenErService</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// OpenErServiceRequest
        /// </param>
        /// 
        /// <returns>
        /// OpenErServiceResponse
        /// </returns>
        public async Task<OpenErServiceResponse> OpenErServiceAsync(OpenErServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenErServiceWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Prefetches cache.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PreloadCachesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PreloadCachesResponse
        /// </returns>
        public PreloadCachesResponse PreloadCachesWithOptions(PreloadCachesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PreloadCachesShrinkRequest request = new PreloadCachesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Headers))
            {
                request.HeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Headers, "Headers", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HeadersShrink))
            {
                query["Headers"] = request.HeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PreloadCaches",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PreloadCachesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Prefetches cache.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PreloadCachesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PreloadCachesResponse
        /// </returns>
        public async Task<PreloadCachesResponse> PreloadCachesWithOptionsAsync(PreloadCachesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PreloadCachesShrinkRequest request = new PreloadCachesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Headers))
            {
                request.HeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Headers, "Headers", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HeadersShrink))
            {
                query["Headers"] = request.HeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PreloadCaches",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PreloadCachesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Prefetches cache.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PreloadCachesRequest
        /// </param>
        /// 
        /// <returns>
        /// PreloadCachesResponse
        /// </returns>
        public PreloadCachesResponse PreloadCaches(PreloadCachesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PreloadCachesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Prefetches cache.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PreloadCachesRequest
        /// </param>
        /// 
        /// <returns>
        /// PreloadCachesResponse
        /// </returns>
        public async Task<PreloadCachesResponse> PreloadCachesAsync(PreloadCachesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PreloadCachesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a specific version of a containerized application. You can call this operation to iterate an application.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PublishEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishEdgeContainerAppVersionResponse
        /// </returns>
        public PublishEdgeContainerAppVersionResponse PublishEdgeContainerAppVersionWithOptions(PublishEdgeContainerAppVersionRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PublishEdgeContainerAppVersionShrinkRequest request = new PublishEdgeContainerAppVersionShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Regions))
            {
                request.RegionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Regions, "Regions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullRelease))
            {
                query["FullRelease"] = request.FullRelease;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishType))
            {
                query["PublishType"] = request.PublishType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionsShrink))
            {
                query["Regions"] = request.RegionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Percentage))
            {
                body["Percentage"] = request.Percentage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishEnv))
            {
                body["PublishEnv"] = request.PublishEnv;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishEdgeContainerAppVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a specific version of a containerized application. You can call this operation to iterate an application.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PublishEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<PublishEdgeContainerAppVersionResponse> PublishEdgeContainerAppVersionWithOptionsAsync(PublishEdgeContainerAppVersionRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PublishEdgeContainerAppVersionShrinkRequest request = new PublishEdgeContainerAppVersionShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Regions))
            {
                request.RegionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Regions, "Regions", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullRelease))
            {
                query["FullRelease"] = request.FullRelease;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishType))
            {
                query["PublishType"] = request.PublishType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionsShrink))
            {
                query["Regions"] = request.RegionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Percentage))
            {
                body["Percentage"] = request.Percentage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishEnv))
            {
                body["PublishEnv"] = request.PublishEnv;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishEdgeContainerAppVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a specific version of a containerized application. You can call this operation to iterate an application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishEdgeContainerAppVersionResponse
        /// </returns>
        public PublishEdgeContainerAppVersionResponse PublishEdgeContainerAppVersion(PublishEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishEdgeContainerAppVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a specific version of a containerized application. You can call this operation to iterate an application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<PublishEdgeContainerAppVersionResponse> PublishEdgeContainerAppVersionAsync(PublishEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishEdgeContainerAppVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a code version of a routine to the staging, canary, or production environment. You can specify the regions where the canary environment is deployed to release your code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishRoutineCodeVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishRoutineCodeVersionResponse
        /// </returns>
        public PublishRoutineCodeVersionResponse PublishRoutineCodeVersionWithOptions(PublishRoutineCodeVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeVersion))
            {
                body["CodeVersion"] = request.CodeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Env))
            {
                body["Env"] = request.Env;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishRoutineCodeVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishRoutineCodeVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a code version of a routine to the staging, canary, or production environment. You can specify the regions where the canary environment is deployed to release your code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishRoutineCodeVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PublishRoutineCodeVersionResponse
        /// </returns>
        public async Task<PublishRoutineCodeVersionResponse> PublishRoutineCodeVersionWithOptionsAsync(PublishRoutineCodeVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CodeVersion))
            {
                body["CodeVersion"] = request.CodeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Env))
            {
                body["Env"] = request.Env;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishRoutineCodeVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishRoutineCodeVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a code version of a routine to the staging, canary, or production environment. You can specify the regions where the canary environment is deployed to release your code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishRoutineCodeVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishRoutineCodeVersionResponse
        /// </returns>
        public PublishRoutineCodeVersionResponse PublishRoutineCodeVersion(PublishRoutineCodeVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishRoutineCodeVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Releases a code version of a routine to the staging, canary, or production environment. You can specify the regions where the canary environment is deployed to release your code.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PublishRoutineCodeVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// PublishRoutineCodeVersionResponse
        /// </returns>
        public async Task<PublishRoutineCodeVersionResponse> PublishRoutineCodeVersionAsync(PublishRoutineCodeVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishRoutineCodeVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>New Purchase of Cache Retention</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurchaseCacheReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurchaseCacheReserveResponse
        /// </returns>
        public PurchaseCacheReserveResponse PurchaseCacheReserveWithOptions(PurchaseCacheReserveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CrRegion))
            {
                query["CrRegion"] = request.CrRegion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuotaGb))
            {
                query["QuotaGb"] = request.QuotaGb;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurchaseCacheReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurchaseCacheReserveResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>New Purchase of Cache Retention</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurchaseCacheReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurchaseCacheReserveResponse
        /// </returns>
        public async Task<PurchaseCacheReserveResponse> PurchaseCacheReserveWithOptionsAsync(PurchaseCacheReserveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CrRegion))
            {
                query["CrRegion"] = request.CrRegion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuotaGb))
            {
                query["QuotaGb"] = request.QuotaGb;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurchaseCacheReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurchaseCacheReserveResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>New Purchase of Cache Retention</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurchaseCacheReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// PurchaseCacheReserveResponse
        /// </returns>
        public PurchaseCacheReserveResponse PurchaseCacheReserve(PurchaseCacheReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PurchaseCacheReserveWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>New Purchase of Cache Retention</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurchaseCacheReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// PurchaseCacheReserveResponse
        /// </returns>
        public async Task<PurchaseCacheReserveResponse> PurchaseCacheReserveAsync(PurchaseCacheReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PurchaseCacheReserveWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Purchase New Package</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>The package name and code can be obtained from the DescribeRatePlanPrice interface.</description></item>
        /// <item><description>If the acceleration area is not overseas, the site must have successfully completed the filing process.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// PurchaseRatePlanRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurchaseRatePlanResponse
        /// </returns>
        public PurchaseRatePlanResponse PurchaseRatePlanWithOptions(PurchaseRatePlanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Amount))
            {
                query["Amount"] = request.Amount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PlanCode))
            {
                query["PlanCode"] = request.PlanCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PlanName))
            {
                query["PlanName"] = request.PlanName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurchaseRatePlan",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurchaseRatePlanResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Purchase New Package</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>The package name and code can be obtained from the DescribeRatePlanPrice interface.</description></item>
        /// <item><description>If the acceleration area is not overseas, the site must have successfully completed the filing process.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// PurchaseRatePlanRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurchaseRatePlanResponse
        /// </returns>
        public async Task<PurchaseRatePlanResponse> PurchaseRatePlanWithOptionsAsync(PurchaseRatePlanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Amount))
            {
                query["Amount"] = request.Amount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRenew))
            {
                query["AutoRenew"] = request.AutoRenew;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PlanCode))
            {
                query["PlanCode"] = request.PlanCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PlanName))
            {
                query["PlanName"] = request.PlanName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteName))
            {
                query["SiteName"] = request.SiteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurchaseRatePlan",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurchaseRatePlanResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Purchase New Package</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>The package name and code can be obtained from the DescribeRatePlanPrice interface.</description></item>
        /// <item><description>If the acceleration area is not overseas, the site must have successfully completed the filing process.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// PurchaseRatePlanRequest
        /// </param>
        /// 
        /// <returns>
        /// PurchaseRatePlanResponse
        /// </returns>
        public PurchaseRatePlanResponse PurchaseRatePlan(PurchaseRatePlanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PurchaseRatePlanWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Purchase New Package</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>The package name and code can be obtained from the DescribeRatePlanPrice interface.</description></item>
        /// <item><description>If the acceleration area is not overseas, the site must have successfully completed the filing process.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// PurchaseRatePlanRequest
        /// </param>
        /// 
        /// <returns>
        /// PurchaseRatePlanResponse
        /// </returns>
        public async Task<PurchaseRatePlanResponse> PurchaseRatePlanAsync(PurchaseRatePlanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PurchaseRatePlanWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cache Refresh</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PurgeCachesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurgeCachesResponse
        /// </returns>
        public PurgeCachesResponse PurgeCachesWithOptions(PurgeCachesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PurgeCachesShrinkRequest request = new PurgeCachesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeComputePurge))
            {
                query["EdgeComputePurge"] = request.EdgeComputePurge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurgeCaches",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurgeCachesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cache Refresh</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// PurgeCachesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PurgeCachesResponse
        /// </returns>
        public async Task<PurgeCachesResponse> PurgeCachesWithOptionsAsync(PurgeCachesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            PurgeCachesShrinkRequest request = new PurgeCachesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Content))
            {
                request.ContentShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Content, "Content", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentShrink))
            {
                query["Content"] = request.ContentShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeComputePurge))
            {
                query["EdgeComputePurge"] = request.EdgeComputePurge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PurgeCaches",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PurgeCachesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cache Refresh</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurgeCachesRequest
        /// </param>
        /// 
        /// <returns>
        /// PurgeCachesResponse
        /// </returns>
        public PurgeCachesResponse PurgeCaches(PurgeCachesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PurgeCachesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Cache Refresh</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PurgeCachesRequest
        /// </param>
        /// 
        /// <returns>
        /// PurgeCachesResponse
        /// </returns>
        public async Task<PurgeCachesResponse> PurgeCachesAsync(PurgeCachesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PurgeCachesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a key-value pair for a namespace. The request body can be up to 2 MB.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PutKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PutKvResponse
        /// </returns>
        public PutKvResponse PutKvWithOptions(PutKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Base64))
            {
                query["Base64"] = request.Base64;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expiration))
            {
                query["Expiration"] = request.Expiration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpirationTtl))
            {
                query["ExpirationTtl"] = request.ExpirationTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Key))
            {
                query["Key"] = request.Key;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                body["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PutKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PutKvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a key-value pair for a namespace. The request body can be up to 2 MB.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PutKvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PutKvResponse
        /// </returns>
        public async Task<PutKvResponse> PutKvWithOptionsAsync(PutKvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Base64))
            {
                query["Base64"] = request.Base64;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expiration))
            {
                query["Expiration"] = request.Expiration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpirationTtl))
            {
                query["ExpirationTtl"] = request.ExpirationTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Key))
            {
                query["Key"] = request.Key;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                body["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PutKv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PutKvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a key-value pair for a namespace. The request body can be up to 2 MB.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PutKvRequest
        /// </param>
        /// 
        /// <returns>
        /// PutKvResponse
        /// </returns>
        public PutKvResponse PutKv(PutKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PutKvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a key-value pair for a namespace. The request body can be up to 2 MB.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// PutKvRequest
        /// </param>
        /// 
        /// <returns>
        /// PutKvResponse
        /// </returns>
        public async Task<PutKvResponse> PutKvAsync(PutKvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PutKvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a large key-value pair for a namespace. The request body can be up to 25 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="~~PutKv~~">PutKv</a>. For small request bodies, we recommend that you use <a href="~~PutKv~~">PutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and PutKvWithHighCapacityAdvance to call the operation.
        ///     func TestPutKvWithHighCapacity() {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs.
        ///         namespace := &quot;test-put-kv&quot;
        ///         key := &quot;test_PutKvWithHighCapacity_0&quot;
        ///         value := strings.Repeat(&quot;t&quot;, 10<em>1024</em>1024)
        ///         rawReq := &amp;PutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             Value:     &amp;value,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the PutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := &amp;PutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             UrlObject: bytes.NewReader([]byte(payload)),
        ///         }
        ///         resp, err := cli.PutKvWithHighCapacityAdvance(reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// PutKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PutKvWithHighCapacityResponse
        /// </returns>
        public PutKvWithHighCapacityResponse PutKvWithHighCapacityWithOptions(PutKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Key))
            {
                query["Key"] = request.Key;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PutKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PutKvWithHighCapacityResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a large key-value pair for a namespace. The request body can be up to 25 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="~~PutKv~~">PutKv</a>. For small request bodies, we recommend that you use <a href="~~PutKv~~">PutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and PutKvWithHighCapacityAdvance to call the operation.
        ///     func TestPutKvWithHighCapacity() {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs.
        ///         namespace := &quot;test-put-kv&quot;
        ///         key := &quot;test_PutKvWithHighCapacity_0&quot;
        ///         value := strings.Repeat(&quot;t&quot;, 10<em>1024</em>1024)
        ///         rawReq := &amp;PutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             Value:     &amp;value,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the PutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := &amp;PutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             UrlObject: bytes.NewReader([]byte(payload)),
        ///         }
        ///         resp, err := cli.PutKvWithHighCapacityAdvance(reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// PutKvWithHighCapacityRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// PutKvWithHighCapacityResponse
        /// </returns>
        public async Task<PutKvWithHighCapacityResponse> PutKvWithHighCapacityWithOptionsAsync(PutKvWithHighCapacityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Key))
            {
                query["Key"] = request.Key;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PutKvWithHighCapacity",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PutKvWithHighCapacityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a large key-value pair for a namespace. The request body can be up to 25 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="~~PutKv~~">PutKv</a>. For small request bodies, we recommend that you use <a href="~~PutKv~~">PutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and PutKvWithHighCapacityAdvance to call the operation.
        ///     func TestPutKvWithHighCapacity() {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs.
        ///         namespace := &quot;test-put-kv&quot;
        ///         key := &quot;test_PutKvWithHighCapacity_0&quot;
        ///         value := strings.Repeat(&quot;t&quot;, 10<em>1024</em>1024)
        ///         rawReq := &amp;PutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             Value:     &amp;value,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the PutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := &amp;PutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             UrlObject: bytes.NewReader([]byte(payload)),
        ///         }
        ///         resp, err := cli.PutKvWithHighCapacityAdvance(reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// PutKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// PutKvWithHighCapacityResponse
        /// </returns>
        public PutKvWithHighCapacityResponse PutKvWithHighCapacity(PutKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PutKvWithHighCapacityWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures a large key-value pair for a namespace. The request body can be up to 25 MB.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to upload a larger request body than by using <a href="~~PutKv~~">PutKv</a>. For small request bodies, we recommend that you use <a href="~~PutKv~~">PutKv</a> to minimize the server processing time. This operation must be called by using SDKs. The following sample code uses the Golang SDK and PutKvWithHighCapacityAdvance to call the operation.
        ///     func TestPutKvWithHighCapacity() {
        ///         // Initialize the configurations.
        ///         cfg := new(openapi.Config)
        ///         cfg.SetAccessKeyId(&quot;xxxxxxxxx&quot;)
        ///         cfg.SetAccessKeySecret(&quot;xxxxxxxxxx&quot;)
        ///         cli, err := NewClient(cfg)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         runtime := &amp;util.RuntimeOptions{}
        ///         // Construct a request for uploading key-value pairs.
        ///         namespace := &quot;test-put-kv&quot;
        ///         key := &quot;test_PutKvWithHighCapacity_0&quot;
        ///         value := strings.Repeat(&quot;t&quot;, 10<em>1024</em>1024)
        ///         rawReq := &amp;PutKvRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             Value:     &amp;value,
        ///         }
        ///         payload, err := json.Marshal(rawReq)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         // If the payload is greater than 2 MB, call the PutKvWithHighCapacity operation for upload.
        ///         reqHighCapacity := &amp;PutKvWithHighCapacityAdvanceRequest{
        ///             Namespace: &amp;namespace,
        ///             Key:       &amp;key,
        ///             UrlObject: bytes.NewReader([]byte(payload)),
        ///         }
        ///         resp, err := cli.PutKvWithHighCapacityAdvance(reqHighCapacity, runtime)
        ///         if err != nil {
        ///             return err
        ///         }
        ///         return nil
        ///     }</para>
        /// </description>
        /// 
        /// <param name="request">
        /// PutKvWithHighCapacityRequest
        /// </param>
        /// 
        /// <returns>
        /// PutKvWithHighCapacityResponse
        /// </returns>
        public async Task<PutKvWithHighCapacityResponse> PutKvWithHighCapacityAsync(PutKvWithHighCapacityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PutKvWithHighCapacityWithOptionsAsync(request, runtime);
        }

        public PutKvWithHighCapacityResponse PutKvWithHighCapacityAdvance(PutKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = this._credential.GetAccessKeyId();
            string accessKeySecret = this._credential.GetAccessKeySecret();
            string securityToken = this._credential.GetSecurityToken();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            PutKvWithHighCapacityRequest putKvWithHighCapacityReq = new PutKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, putKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = authClient.AuthorizeFileUploadWithOptions(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                ossClient.PostObject(uploadRequest, ossRuntime);
                putKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            PutKvWithHighCapacityResponse putKvWithHighCapacityResp = PutKvWithHighCapacityWithOptions(putKvWithHighCapacityReq, runtime);
            return putKvWithHighCapacityResp;
        }

        public async Task<PutKvWithHighCapacityResponse> PutKvWithHighCapacityAdvanceAsync(PutKvWithHighCapacityAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = await this._credential.GetAccessKeyIdAsync();
            string accessKeySecret = await this._credential.GetAccessKeySecretAsync();
            string securityToken = await this._credential.GetSecurityTokenAsync();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            PutKvWithHighCapacityRequest putKvWithHighCapacityReq = new PutKvWithHighCapacityRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, putKvWithHighCapacityReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = await authClient.AuthorizeFileUploadWithOptionsAsync(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                await ossClient.PostObjectAsync(uploadRequest, ossRuntime);
                putKvWithHighCapacityReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            PutKvWithHighCapacityResponse putKvWithHighCapacityResp = await PutKvWithHighCapacityWithOptionsAsync(putKvWithHighCapacityReq, runtime);
            return putKvWithHighCapacityResp;
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rebuilds the staging environment for containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RebuildEdgeContainerAppStagingEnvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RebuildEdgeContainerAppStagingEnvResponse
        /// </returns>
        public RebuildEdgeContainerAppStagingEnvResponse RebuildEdgeContainerAppStagingEnvWithOptions(RebuildEdgeContainerAppStagingEnvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RebuildEdgeContainerAppStagingEnv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RebuildEdgeContainerAppStagingEnvResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rebuilds the staging environment for containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RebuildEdgeContainerAppStagingEnvRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RebuildEdgeContainerAppStagingEnvResponse
        /// </returns>
        public async Task<RebuildEdgeContainerAppStagingEnvResponse> RebuildEdgeContainerAppStagingEnvWithOptionsAsync(RebuildEdgeContainerAppStagingEnvRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RebuildEdgeContainerAppStagingEnv",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RebuildEdgeContainerAppStagingEnvResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rebuilds the staging environment for containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RebuildEdgeContainerAppStagingEnvRequest
        /// </param>
        /// 
        /// <returns>
        /// RebuildEdgeContainerAppStagingEnvResponse
        /// </returns>
        public RebuildEdgeContainerAppStagingEnvResponse RebuildEdgeContainerAppStagingEnv(RebuildEdgeContainerAppStagingEnvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RebuildEdgeContainerAppStagingEnvWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rebuilds the staging environment for containerized applications.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RebuildEdgeContainerAppStagingEnvRequest
        /// </param>
        /// 
        /// <returns>
        /// RebuildEdgeContainerAppStagingEnvResponse
        /// </returns>
        public async Task<RebuildEdgeContainerAppStagingEnvResponse> RebuildEdgeContainerAppStagingEnvAsync(RebuildEdgeContainerAppStagingEnvRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RebuildEdgeContainerAppStagingEnvWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Resets the progress of a scheduled prefetch task and starts the prefetch from the beginning.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ResetScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ResetScheduledPreloadJobResponse
        /// </returns>
        public ResetScheduledPreloadJobResponse ResetScheduledPreloadJobWithOptions(ResetScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetScheduledPreloadJobResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Resets the progress of a scheduled prefetch task and starts the prefetch from the beginning.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ResetScheduledPreloadJobRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// ResetScheduledPreloadJobResponse
        /// </returns>
        public async Task<ResetScheduledPreloadJobResponse> ResetScheduledPreloadJobWithOptionsAsync(ResetScheduledPreloadJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetScheduledPreloadJob",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetScheduledPreloadJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Resets the progress of a scheduled prefetch task and starts the prefetch from the beginning.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ResetScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// ResetScheduledPreloadJobResponse
        /// </returns>
        public ResetScheduledPreloadJobResponse ResetScheduledPreloadJob(ResetScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResetScheduledPreloadJobWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Resets the progress of a scheduled prefetch task and starts the prefetch from the beginning.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// ResetScheduledPreloadJobRequest
        /// </param>
        /// 
        /// <returns>
        /// ResetScheduledPreloadJobResponse
        /// </returns>
        public async Task<ResetScheduledPreloadJobResponse> ResetScheduledPreloadJobAsync(ResetScheduledPreloadJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResetScheduledPreloadJobWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes an activated client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RevokeClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RevokeClientCertificateResponse
        /// </returns>
        public RevokeClientCertificateResponse RevokeClientCertificateWithOptions(RevokeClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RevokeClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RevokeClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes an activated client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RevokeClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RevokeClientCertificateResponse
        /// </returns>
        public async Task<RevokeClientCertificateResponse> RevokeClientCertificateWithOptionsAsync(RevokeClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RevokeClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RevokeClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes an activated client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RevokeClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// RevokeClientCertificateResponse
        /// </returns>
        public RevokeClientCertificateResponse RevokeClientCertificate(RevokeClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RevokeClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Revokes an activated client certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RevokeClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// RevokeClientCertificateResponse
        /// </returns>
        public async Task<RevokeClientCertificateResponse> RevokeClientCertificateAsync(RevokeClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RevokeClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rolls back a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RollbackEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RollbackEdgeContainerAppVersionResponse
        /// </returns>
        public RollbackEdgeContainerAppVersionResponse RollbackEdgeContainerAppVersionWithOptions(RollbackEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Percentage))
            {
                query["Percentage"] = request.Percentage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UsedPercent))
            {
                query["UsedPercent"] = request.UsedPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RollbackEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RollbackEdgeContainerAppVersionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rolls back a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RollbackEdgeContainerAppVersionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// RollbackEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<RollbackEdgeContainerAppVersionResponse> RollbackEdgeContainerAppVersionWithOptionsAsync(RollbackEdgeContainerAppVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Percentage))
            {
                query["Percentage"] = request.Percentage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UsedPercent))
            {
                query["UsedPercent"] = request.UsedPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remarks))
            {
                body["Remarks"] = request.Remarks;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RollbackEdgeContainerAppVersion",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RollbackEdgeContainerAppVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rolls back a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RollbackEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// RollbackEdgeContainerAppVersionResponse
        /// </returns>
        public RollbackEdgeContainerAppVersionResponse RollbackEdgeContainerAppVersion(RollbackEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RollbackEdgeContainerAppVersionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Rolls back a version of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// RollbackEdgeContainerAppVersionRequest
        /// </param>
        /// 
        /// <returns>
        /// RollbackEdgeContainerAppVersionResponse
        /// </returns>
        public async Task<RollbackEdgeContainerAppVersionResponse> RollbackEdgeContainerAppVersionAsync(RollbackEdgeContainerAppVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RollbackEdgeContainerAppVersionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures whether to enable certificates and update certificate information for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetCertificateResponse
        /// </returns>
        public SetCertificateResponse SetCertificateWithOptions(SetCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CasId))
            {
                body["CasId"] = request.CasId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                body["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                body["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures whether to enable certificates and update certificate information for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetCertificateResponse
        /// </returns>
        public async Task<SetCertificateResponse> SetCertificateWithOptionsAsync(SetCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CasId))
            {
                body["CasId"] = request.CasId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                body["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                body["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures whether to enable certificates and update certificate information for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// SetCertificateResponse
        /// </returns>
        public SetCertificateResponse SetCertificate(SetCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures whether to enable certificates and update certificate information for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// SetCertificateResponse
        /// </returns>
        public async Task<SetCertificateResponse> SetCertificateAsync(SetCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates domain names with a client CA certificate. If no certificate is specified, domain names are associated with an Edge Security Acceleration (ESA)-managed CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// SetClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetClientCertificateHostnamesResponse
        /// </returns>
        public SetClientCertificateHostnamesResponse SetClientCertificateHostnamesWithOptions(SetClientCertificateHostnamesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            SetClientCertificateHostnamesShrinkRequest request = new SetClientCertificateHostnamesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Hostnames))
            {
                request.HostnamesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Hostnames, "Hostnames", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostnamesShrink))
            {
                body["Hostnames"] = request.HostnamesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetClientCertificateHostnamesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates domain names with a client CA certificate. If no certificate is specified, domain names are associated with an Edge Security Acceleration (ESA)-managed CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// SetClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetClientCertificateHostnamesResponse
        /// </returns>
        public async Task<SetClientCertificateHostnamesResponse> SetClientCertificateHostnamesWithOptionsAsync(SetClientCertificateHostnamesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            SetClientCertificateHostnamesShrinkRequest request = new SetClientCertificateHostnamesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Hostnames))
            {
                request.HostnamesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Hostnames, "Hostnames", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostnamesShrink))
            {
                body["Hostnames"] = request.HostnamesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetClientCertificateHostnamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates domain names with a client CA certificate. If no certificate is specified, domain names are associated with an Edge Security Acceleration (ESA)-managed CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// SetClientCertificateHostnamesResponse
        /// </returns>
        public SetClientCertificateHostnamesResponse SetClientCertificateHostnames(SetClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetClientCertificateHostnamesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Associates domain names with a client CA certificate. If no certificate is specified, domain names are associated with an Edge Security Acceleration (ESA)-managed CA certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// SetClientCertificateHostnamesResponse
        /// </returns>
        public async Task<SetClientCertificateHostnamesResponse> SetClientCertificateHostnamesAsync(SetClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetClientCertificateHostnamesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures smart HTTP DDoS protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public SetHttpDDoSAttackIntelligentProtectionResponse SetHttpDDoSAttackIntelligentProtectionWithOptions(SetHttpDDoSAttackIntelligentProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AiMode))
            {
                query["AiMode"] = request.AiMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AiTemplate))
            {
                query["AiTemplate"] = request.AiTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetHttpDDoSAttackIntelligentProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetHttpDDoSAttackIntelligentProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures smart HTTP DDoS protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public async Task<SetHttpDDoSAttackIntelligentProtectionResponse> SetHttpDDoSAttackIntelligentProtectionWithOptionsAsync(SetHttpDDoSAttackIntelligentProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AiMode))
            {
                query["AiMode"] = request.AiMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AiTemplate))
            {
                query["AiTemplate"] = request.AiTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetHttpDDoSAttackIntelligentProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetHttpDDoSAttackIntelligentProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures smart HTTP DDoS protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public SetHttpDDoSAttackIntelligentProtectionResponse SetHttpDDoSAttackIntelligentProtection(SetHttpDDoSAttackIntelligentProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetHttpDDoSAttackIntelligentProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures smart HTTP DDoS protection.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackIntelligentProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackIntelligentProtectionResponse
        /// </returns>
        public async Task<SetHttpDDoSAttackIntelligentProtectionResponse> SetHttpDDoSAttackIntelligentProtectionAsync(SetHttpDDoSAttackIntelligentProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetHttpDDoSAttackIntelligentProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures HTTP DDoS attack protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackProtectionResponse
        /// </returns>
        public SetHttpDDoSAttackProtectionResponse SetHttpDDoSAttackProtectionWithOptions(SetHttpDDoSAttackProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalMode))
            {
                query["GlobalMode"] = request.GlobalMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetHttpDDoSAttackProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetHttpDDoSAttackProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures HTTP DDoS attack protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackProtectionResponse
        /// </returns>
        public async Task<SetHttpDDoSAttackProtectionResponse> SetHttpDDoSAttackProtectionWithOptionsAsync(SetHttpDDoSAttackProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalMode))
            {
                query["GlobalMode"] = request.GlobalMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetHttpDDoSAttackProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetHttpDDoSAttackProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures HTTP DDoS attack protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackProtectionResponse
        /// </returns>
        public SetHttpDDoSAttackProtectionResponse SetHttpDDoSAttackProtection(SetHttpDDoSAttackProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetHttpDDoSAttackProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Configures HTTP DDoS attack protection for a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetHttpDDoSAttackProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// SetHttpDDoSAttackProtectionResponse
        /// </returns>
        public async Task<SetHttpDDoSAttackProtectionResponse> SetHttpDDoSAttackProtectionAsync(SetHttpDDoSAttackProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetHttpDDoSAttackProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>为域名回源客户端证书绑定域名</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// SetOriginClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetOriginClientCertificateHostnamesResponse
        /// </returns>
        public SetOriginClientCertificateHostnamesResponse SetOriginClientCertificateHostnamesWithOptions(SetOriginClientCertificateHostnamesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            SetOriginClientCertificateHostnamesShrinkRequest request = new SetOriginClientCertificateHostnamesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Hostnames))
            {
                request.HostnamesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Hostnames, "Hostnames", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostnamesShrink))
            {
                body["Hostnames"] = request.HostnamesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetOriginClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetOriginClientCertificateHostnamesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>为域名回源客户端证书绑定域名</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// SetOriginClientCertificateHostnamesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// SetOriginClientCertificateHostnamesResponse
        /// </returns>
        public async Task<SetOriginClientCertificateHostnamesResponse> SetOriginClientCertificateHostnamesWithOptionsAsync(SetOriginClientCertificateHostnamesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            SetOriginClientCertificateHostnamesShrinkRequest request = new SetOriginClientCertificateHostnamesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Hostnames))
            {
                request.HostnamesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Hostnames, "Hostnames", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostnamesShrink))
            {
                body["Hostnames"] = request.HostnamesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetOriginClientCertificateHostnames",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetOriginClientCertificateHostnamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>为域名回源客户端证书绑定域名</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetOriginClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// SetOriginClientCertificateHostnamesResponse
        /// </returns>
        public SetOriginClientCertificateHostnamesResponse SetOriginClientCertificateHostnames(SetOriginClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetOriginClientCertificateHostnamesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>为域名回源客户端证书绑定域名</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// SetOriginClientCertificateHostnamesRequest
        /// </param>
        /// 
        /// <returns>
        /// SetOriginClientCertificateHostnamesResponse
        /// </returns>
        public async Task<SetOriginClientCertificateHostnamesResponse> SetOriginClientCertificateHostnamesAsync(SetOriginClientCertificateHostnamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetOriginClientCertificateHostnamesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Starts a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StartScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// StartScheduledPreloadExecutionResponse
        /// </returns>
        public StartScheduledPreloadExecutionResponse StartScheduledPreloadExecutionWithOptions(StartScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartScheduledPreloadExecutionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Starts a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StartScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// StartScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<StartScheduledPreloadExecutionResponse> StartScheduledPreloadExecutionWithOptionsAsync(StartScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartScheduledPreloadExecutionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Starts a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StartScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// StartScheduledPreloadExecutionResponse
        /// </returns>
        public StartScheduledPreloadExecutionResponse StartScheduledPreloadExecution(StartScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartScheduledPreloadExecutionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Starts a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StartScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// StartScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<StartScheduledPreloadExecutionResponse> StartScheduledPreloadExecutionAsync(StartScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartScheduledPreloadExecutionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Stops a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StopScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// StopScheduledPreloadExecutionResponse
        /// </returns>
        public StopScheduledPreloadExecutionResponse StopScheduledPreloadExecutionWithOptions(StopScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopScheduledPreloadExecutionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Stops a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StopScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// StopScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<StopScheduledPreloadExecutionResponse> StopScheduledPreloadExecutionWithOptionsAsync(StopScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopScheduledPreloadExecutionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Stops a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StopScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// StopScheduledPreloadExecutionResponse
        /// </returns>
        public StopScheduledPreloadExecutionResponse StopScheduledPreloadExecution(StopScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopScheduledPreloadExecutionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Stops a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// StopScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// StopScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<StopScheduledPreloadExecutionResponse> StopScheduledPreloadExecutionAsync(StopScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopScheduledPreloadExecutionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a resource tag based on a specified resource ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public UntagResourcesResponse UntagResourcesWithOptions(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a resource tag based on a specified resource ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public async Task<UntagResourcesResponse> UntagResourcesWithOptionsAsync(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityToken))
            {
                query["SecurityToken"] = request.SecurityToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a resource tag based on a specified resource ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public UntagResourcesResponse UntagResources(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UntagResourcesWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Deletes a resource tag based on a specified resource ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UntagResourcesRequest
        /// </param>
        /// 
        /// <returns>
        /// UntagResourcesResponse
        /// </returns>
        public async Task<UntagResourcesResponse> UntagResourcesAsync(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UntagResourcesWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>缓存保持变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheReserveSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheReserveSpecResponse
        /// </returns>
        public UpdateCacheReserveSpecResponse UpdateCacheReserveSpecWithOptions(UpdateCacheReserveSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetQuotaGb))
            {
                query["TargetQuotaGb"] = request.TargetQuotaGb;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheReserveSpec",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheReserveSpecResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>缓存保持变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheReserveSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheReserveSpecResponse
        /// </returns>
        public async Task<UpdateCacheReserveSpecResponse> UpdateCacheReserveSpecWithOptionsAsync(UpdateCacheReserveSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetQuotaGb))
            {
                query["TargetQuotaGb"] = request.TargetQuotaGb;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheReserveSpec",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheReserveSpecResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>缓存保持变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheReserveSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheReserveSpecResponse
        /// </returns>
        public UpdateCacheReserveSpecResponse UpdateCacheReserveSpec(UpdateCacheReserveSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCacheReserveSpecWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>缓存保持变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheReserveSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheReserveSpecResponse
        /// </returns>
        public async Task<UpdateCacheReserveSpecResponse> UpdateCacheReserveSpecAsync(UpdateCacheReserveSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCacheReserveSpecWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheRuleResponse
        /// </returns>
        public UpdateCacheRuleResponse UpdateCacheRuleWithOptions(UpdateCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdditionalCacheablePorts))
            {
                query["AdditionalCacheablePorts"] = request.AdditionalCacheablePorts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheMode))
            {
                query["BrowserCacheMode"] = request.BrowserCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheTtl))
            {
                query["BrowserCacheTtl"] = request.BrowserCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BypassCache))
            {
                query["BypassCache"] = request.BypassCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheDeceptionArmor))
            {
                query["CacheDeceptionArmor"] = request.CacheDeceptionArmor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheReserveEligibility))
            {
                query["CacheReserveEligibility"] = request.CacheReserveEligibility;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceCookie))
            {
                query["CheckPresenceCookie"] = request.CheckPresenceCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceHeader))
            {
                query["CheckPresenceHeader"] = request.CheckPresenceHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheMode))
            {
                query["EdgeCacheMode"] = request.EdgeCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheTtl))
            {
                query["EdgeCacheTtl"] = request.EdgeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeStatusCodeCacheTtl))
            {
                query["EdgeStatusCodeCacheTtl"] = request.EdgeStatusCodeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeCookie))
            {
                query["IncludeCookie"] = request.IncludeCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeHeader))
            {
                query["IncludeHeader"] = request.IncludeHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryStringMode))
            {
                query["QueryStringMode"] = request.QueryStringMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServeStale))
            {
                query["ServeStale"] = request.ServeStale;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortQueryStringForCache))
            {
                query["SortQueryStringForCache"] = request.SortQueryStringForCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserDeviceType))
            {
                query["UserDeviceType"] = request.UserDeviceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserGeo))
            {
                query["UserGeo"] = request.UserGeo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLanguage))
            {
                query["UserLanguage"] = request.UserLanguage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheRuleResponse
        /// </returns>
        public async Task<UpdateCacheRuleResponse> UpdateCacheRuleWithOptionsAsync(UpdateCacheRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdditionalCacheablePorts))
            {
                query["AdditionalCacheablePorts"] = request.AdditionalCacheablePorts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheMode))
            {
                query["BrowserCacheMode"] = request.BrowserCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BrowserCacheTtl))
            {
                query["BrowserCacheTtl"] = request.BrowserCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BypassCache))
            {
                query["BypassCache"] = request.BypassCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheDeceptionArmor))
            {
                query["CacheDeceptionArmor"] = request.CacheDeceptionArmor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheReserveEligibility))
            {
                query["CacheReserveEligibility"] = request.CacheReserveEligibility;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceCookie))
            {
                query["CheckPresenceCookie"] = request.CheckPresenceCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckPresenceHeader))
            {
                query["CheckPresenceHeader"] = request.CheckPresenceHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheMode))
            {
                query["EdgeCacheMode"] = request.EdgeCacheMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeCacheTtl))
            {
                query["EdgeCacheTtl"] = request.EdgeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeStatusCodeCacheTtl))
            {
                query["EdgeStatusCodeCacheTtl"] = request.EdgeStatusCodeCacheTtl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeCookie))
            {
                query["IncludeCookie"] = request.IncludeCookie;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncludeHeader))
            {
                query["IncludeHeader"] = request.IncludeHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryStringMode))
            {
                query["QueryStringMode"] = request.QueryStringMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServeStale))
            {
                query["ServeStale"] = request.ServeStale;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortQueryStringForCache))
            {
                query["SortQueryStringForCache"] = request.SortQueryStringForCache;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserDeviceType))
            {
                query["UserDeviceType"] = request.UserDeviceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserGeo))
            {
                query["UserGeo"] = request.UserGeo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLanguage))
            {
                query["UserLanguage"] = request.UserLanguage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheRuleResponse
        /// </returns>
        public UpdateCacheRuleResponse UpdateCacheRule(UpdateCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCacheRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify cache configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheRuleResponse
        /// </returns>
        public async Task<UpdateCacheRuleResponse> UpdateCacheRuleAsync(UpdateCacheRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCacheRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the cache tag configuration of your website. You can call this operation when you need to specify tags in the Cache-Tag response header to use the purge by cache tag feature.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheTagRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheTagResponse
        /// </returns>
        public UpdateCacheTagResponse UpdateCacheTagWithOptions(UpdateCacheTagRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CaseInsensitive))
            {
                query["CaseInsensitive"] = request.CaseInsensitive;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheTag",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheTagResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the cache tag configuration of your website. You can call this operation when you need to specify tags in the Cache-Tag response header to use the purge by cache tag feature.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheTagRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheTagResponse
        /// </returns>
        public async Task<UpdateCacheTagResponse> UpdateCacheTagWithOptionsAsync(UpdateCacheTagRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CaseInsensitive))
            {
                query["CaseInsensitive"] = request.CaseInsensitive;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCacheTag",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCacheTagResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the cache tag configuration of your website. You can call this operation when you need to specify tags in the Cache-Tag response header to use the purge by cache tag feature.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheTagRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheTagResponse
        /// </returns>
        public UpdateCacheTagResponse UpdateCacheTag(UpdateCacheTagRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCacheTagWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the cache tag configuration of your website. You can call this operation when you need to specify tags in the Cache-Tag response header to use the purge by cache tag feature.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCacheTagRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCacheTagResponse
        /// </returns>
        public async Task<UpdateCacheTagResponse> UpdateCacheTagAsync(UpdateCacheTagRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCacheTagWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CNAME flattening configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCnameFlatteningRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCnameFlatteningResponse
        /// </returns>
        public UpdateCnameFlatteningResponse UpdateCnameFlatteningWithOptions(UpdateCnameFlatteningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlattenMode))
            {
                query["FlattenMode"] = request.FlattenMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCnameFlattening",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCnameFlatteningResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CNAME flattening configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCnameFlatteningRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCnameFlatteningResponse
        /// </returns>
        public async Task<UpdateCnameFlatteningResponse> UpdateCnameFlatteningWithOptionsAsync(UpdateCnameFlatteningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlattenMode))
            {
                query["FlattenMode"] = request.FlattenMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCnameFlattening",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCnameFlatteningResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CNAME flattening configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCnameFlatteningRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCnameFlatteningResponse
        /// </returns>
        public UpdateCnameFlatteningResponse UpdateCnameFlattening(UpdateCnameFlatteningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCnameFlatteningWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the CNAME flattening configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCnameFlatteningRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCnameFlatteningResponse
        /// </returns>
        public async Task<UpdateCnameFlatteningResponse> UpdateCnameFlatteningAsync(UpdateCnameFlatteningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCnameFlatteningWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCompressionRuleResponse
        /// </returns>
        public UpdateCompressionRuleResponse UpdateCompressionRuleWithOptions(UpdateCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Brotli))
            {
                query["Brotli"] = request.Brotli;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Gzip))
            {
                query["Gzip"] = request.Gzip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zstd))
            {
                query["Zstd"] = request.Zstd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCompressionRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCompressionRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCompressionRuleResponse
        /// </returns>
        public async Task<UpdateCompressionRuleResponse> UpdateCompressionRuleWithOptionsAsync(UpdateCompressionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Brotli))
            {
                query["Brotli"] = request.Brotli;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Gzip))
            {
                query["Gzip"] = request.Gzip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Zstd))
            {
                query["Zstd"] = request.Zstd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCompressionRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCompressionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCompressionRuleResponse
        /// </returns>
        public UpdateCompressionRuleResponse UpdateCompressionRule(UpdateCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCompressionRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify compression rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCompressionRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCompressionRuleResponse
        /// </returns>
        public async Task<UpdateCompressionRuleResponse> UpdateCompressionRuleAsync(UpdateCompressionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCompressionRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCrossBorderOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCrossBorderOptimizationResponse
        /// </returns>
        public UpdateCrossBorderOptimizationResponse UpdateCrossBorderOptimizationWithOptions(UpdateCrossBorderOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCrossBorderOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCrossBorderOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCrossBorderOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCrossBorderOptimizationResponse
        /// </returns>
        public async Task<UpdateCrossBorderOptimizationResponse> UpdateCrossBorderOptimizationWithOptionsAsync(UpdateCrossBorderOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCrossBorderOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCrossBorderOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCrossBorderOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCrossBorderOptimizationResponse
        /// </returns>
        public UpdateCrossBorderOptimizationResponse UpdateCrossBorderOptimization(UpdateCrossBorderOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCrossBorderOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点中国大陆网络接入优化配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCrossBorderOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCrossBorderOptimizationResponse
        /// </returns>
        public async Task<UpdateCrossBorderOptimizationResponse> UpdateCrossBorderOptimizationAsync(UpdateCrossBorderOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCrossBorderOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCustomScenePolicyResponse
        /// </returns>
        public UpdateCustomScenePolicyResponse UpdateCustomScenePolicyWithOptions(UpdateCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Objects))
            {
                query["Objects"] = request.Objects;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteIds))
            {
                query["SiteIds"] = request.SiteIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Template))
            {
                query["Template"] = request.Template;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCustomScenePolicyResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCustomScenePolicyRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateCustomScenePolicyResponse
        /// </returns>
        public async Task<UpdateCustomScenePolicyResponse> UpdateCustomScenePolicyWithOptionsAsync(UpdateCustomScenePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Objects))
            {
                query["Objects"] = request.Objects;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteIds))
            {
                query["SiteIds"] = request.SiteIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Template))
            {
                query["Template"] = request.Template;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCustomScenePolicy",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCustomScenePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCustomScenePolicyResponse
        /// </returns>
        public UpdateCustomScenePolicyResponse UpdateCustomScenePolicy(UpdateCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCustomScenePolicyWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom scenario-specific policy.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateCustomScenePolicyRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateCustomScenePolicyResponse
        /// </returns>
        public async Task<UpdateCustomScenePolicyResponse> UpdateCustomScenePolicyAsync(UpdateCustomScenePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCustomScenePolicyWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the development mode configuration of your website. If you enable Development Mode, all requests bypass caching components on POPs and are redirected to the origin server. This allows clients to retrieve the most recent resources on the origin server.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateDevelopmentModeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateDevelopmentModeResponse
        /// </returns>
        public UpdateDevelopmentModeResponse UpdateDevelopmentModeWithOptions(UpdateDevelopmentModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDevelopmentMode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDevelopmentModeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the development mode configuration of your website. If you enable Development Mode, all requests bypass caching components on POPs and are redirected to the origin server. This allows clients to retrieve the most recent resources on the origin server.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateDevelopmentModeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateDevelopmentModeResponse
        /// </returns>
        public async Task<UpdateDevelopmentModeResponse> UpdateDevelopmentModeWithOptionsAsync(UpdateDevelopmentModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDevelopmentMode",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDevelopmentModeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the development mode configuration of your website. If you enable Development Mode, all requests bypass caching components on POPs and are redirected to the origin server. This allows clients to retrieve the most recent resources on the origin server.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateDevelopmentModeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateDevelopmentModeResponse
        /// </returns>
        public UpdateDevelopmentModeResponse UpdateDevelopmentMode(UpdateDevelopmentModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateDevelopmentModeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the development mode configuration of your website. If you enable Development Mode, all requests bypass caching components on POPs and are redirected to the origin server. This allows clients to retrieve the most recent resources on the origin server.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateDevelopmentModeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateDevelopmentModeResponse
        /// </returns>
        public async Task<UpdateDevelopmentModeResponse> UpdateDevelopmentModeAsync(UpdateDevelopmentModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateDevelopmentModeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppLogRiverRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppLogRiverResponse
        /// </returns>
        public UpdateEdgeContainerAppLogRiverResponse UpdateEdgeContainerAppLogRiverWithOptions(UpdateEdgeContainerAppLogRiverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stdout))
            {
                query["Stdout"] = request.Stdout;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeContainerAppLogRiver",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeContainerAppLogRiverResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppLogRiverRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppLogRiverResponse
        /// </returns>
        public async Task<UpdateEdgeContainerAppLogRiverResponse> UpdateEdgeContainerAppLogRiverWithOptionsAsync(UpdateEdgeContainerAppLogRiverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stdout))
            {
                query["Stdout"] = request.Stdout;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeContainerAppLogRiver",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeContainerAppLogRiverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppLogRiverRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppLogRiverResponse
        /// </returns>
        public UpdateEdgeContainerAppLogRiverResponse UpdateEdgeContainerAppLogRiver(UpdateEdgeContainerAppLogRiverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeContainerAppLogRiverWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the log collection configuration of a containerized application.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppLogRiverRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppLogRiverResponse
        /// </returns>
        public async Task<UpdateEdgeContainerAppLogRiverResponse> UpdateEdgeContainerAppLogRiverAsync(UpdateEdgeContainerAppLogRiverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeContainerAppLogRiverWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>更新边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateEdgeContainerAppResourceReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppResourceReserveResponse
        /// </returns>
        public UpdateEdgeContainerAppResourceReserveResponse UpdateEdgeContainerAppResourceReserveWithOptions(UpdateEdgeContainerAppResourceReserveRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateEdgeContainerAppResourceReserveShrinkRequest request = new UpdateEdgeContainerAppResourceReserveShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ReserveSet))
            {
                request.ReserveSetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ReserveSet, "ReserveSet", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DurationTime))
            {
                query["DurationTime"] = request.DurationTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Forever))
            {
                query["Forever"] = request.Forever;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveSetShrink))
            {
                query["ReserveSet"] = request.ReserveSetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeContainerAppResourceReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeContainerAppResourceReserveResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>更新边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateEdgeContainerAppResourceReserveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppResourceReserveResponse
        /// </returns>
        public async Task<UpdateEdgeContainerAppResourceReserveResponse> UpdateEdgeContainerAppResourceReserveWithOptionsAsync(UpdateEdgeContainerAppResourceReserveRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateEdgeContainerAppResourceReserveShrinkRequest request = new UpdateEdgeContainerAppResourceReserveShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ReserveSet))
            {
                request.ReserveSetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ReserveSet, "ReserveSet", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DurationTime))
            {
                query["DurationTime"] = request.DurationTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Forever))
            {
                query["Forever"] = request.Forever;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveSetShrink))
            {
                query["ReserveSet"] = request.ReserveSetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeContainerAppResourceReserve",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeContainerAppResourceReserveResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>更新边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppResourceReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppResourceReserveResponse
        /// </returns>
        public UpdateEdgeContainerAppResourceReserveResponse UpdateEdgeContainerAppResourceReserve(UpdateEdgeContainerAppResourceReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeContainerAppResourceReserveWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>更新边缘容器资源预留配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateEdgeContainerAppResourceReserveRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateEdgeContainerAppResourceReserveResponse
        /// </returns>
        public async Task<UpdateEdgeContainerAppResourceReserveResponse> UpdateEdgeContainerAppResourceReserveAsync(UpdateEdgeContainerAppResourceReserveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeContainerAppResourceReserveWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public UpdateHttpRequestHeaderModificationRuleResponse UpdateHttpRequestHeaderModificationRuleWithOptions(UpdateHttpRequestHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateHttpRequestHeaderModificationRuleShrinkRequest request = new UpdateHttpRequestHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaderModification))
            {
                request.RequestHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaderModification, "RequestHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeaderModificationShrink))
            {
                query["RequestHeaderModification"] = request.RequestHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpRequestHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<UpdateHttpRequestHeaderModificationRuleResponse> UpdateHttpRequestHeaderModificationRuleWithOptionsAsync(UpdateHttpRequestHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateHttpRequestHeaderModificationRuleShrinkRequest request = new UpdateHttpRequestHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaderModification))
            {
                request.RequestHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaderModification, "RequestHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeaderModificationShrink))
            {
                query["RequestHeaderModification"] = request.RequestHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpRequestHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpRequestHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public UpdateHttpRequestHeaderModificationRuleResponse UpdateHttpRequestHeaderModificationRule(UpdateHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHttpRequestHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP Request Header Rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpRequestHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpRequestHeaderModificationRuleResponse
        /// </returns>
        public async Task<UpdateHttpRequestHeaderModificationRuleResponse> UpdateHttpRequestHeaderModificationRuleAsync(UpdateHttpRequestHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHttpRequestHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP response header rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public UpdateHttpResponseHeaderModificationRuleResponse UpdateHttpResponseHeaderModificationRuleWithOptions(UpdateHttpResponseHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateHttpResponseHeaderModificationRuleShrinkRequest request = new UpdateHttpResponseHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaderModification))
            {
                request.ResponseHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaderModification, "ResponseHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeaderModificationShrink))
            {
                query["ResponseHeaderModification"] = request.ResponseHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpResponseHeaderModificationRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP response header rules</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<UpdateHttpResponseHeaderModificationRuleResponse> UpdateHttpResponseHeaderModificationRuleWithOptionsAsync(UpdateHttpResponseHeaderModificationRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateHttpResponseHeaderModificationRuleShrinkRequest request = new UpdateHttpResponseHeaderModificationRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaderModification))
            {
                request.ResponseHeaderModificationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaderModification, "ResponseHeaderModification", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeaderModificationShrink))
            {
                query["ResponseHeaderModification"] = request.ResponseHeaderModificationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpResponseHeaderModificationRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpResponseHeaderModificationRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP response header rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public UpdateHttpResponseHeaderModificationRuleResponse UpdateHttpResponseHeaderModificationRule(UpdateHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHttpResponseHeaderModificationRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTP response header rules</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpResponseHeaderModificationRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpResponseHeaderModificationRuleResponse
        /// </returns>
        public async Task<UpdateHttpResponseHeaderModificationRuleResponse> UpdateHttpResponseHeaderModificationRuleAsync(UpdateHttpResponseHeaderModificationRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHttpResponseHeaderModificationRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsApplicationConfigurationResponse
        /// </returns>
        public UpdateHttpsApplicationConfigurationResponse UpdateHttpsApplicationConfigurationWithOptions(UpdateHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvc))
            {
                query["AltSvc"] = request.AltSvc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcClear))
            {
                query["AltSvcClear"] = request.AltSvcClear;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcMa))
            {
                query["AltSvcMa"] = request.AltSvcMa;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcPersist))
            {
                query["AltSvcPersist"] = request.AltSvcPersist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Hsts))
            {
                query["Hsts"] = request.Hsts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsIncludeSubdomains))
            {
                query["HstsIncludeSubdomains"] = request.HstsIncludeSubdomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsMaxAge))
            {
                query["HstsMaxAge"] = request.HstsMaxAge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsPreload))
            {
                query["HstsPreload"] = request.HstsPreload;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForce))
            {
                query["HttpsForce"] = request.HttpsForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForceCode))
            {
                query["HttpsForceCode"] = request.HttpsForceCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsNoSniDeny))
            {
                query["HttpsNoSniDeny"] = request.HttpsNoSniDeny;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniVerify))
            {
                query["HttpsSniVerify"] = request.HttpsSniVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniWhitelist))
            {
                query["HttpsSniWhitelist"] = request.HttpsSniWhitelist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpsApplicationConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsApplicationConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<UpdateHttpsApplicationConfigurationResponse> UpdateHttpsApplicationConfigurationWithOptionsAsync(UpdateHttpsApplicationConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvc))
            {
                query["AltSvc"] = request.AltSvc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcClear))
            {
                query["AltSvcClear"] = request.AltSvcClear;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcMa))
            {
                query["AltSvcMa"] = request.AltSvcMa;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AltSvcPersist))
            {
                query["AltSvcPersist"] = request.AltSvcPersist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Hsts))
            {
                query["Hsts"] = request.Hsts;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsIncludeSubdomains))
            {
                query["HstsIncludeSubdomains"] = request.HstsIncludeSubdomains;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsMaxAge))
            {
                query["HstsMaxAge"] = request.HstsMaxAge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HstsPreload))
            {
                query["HstsPreload"] = request.HstsPreload;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForce))
            {
                query["HttpsForce"] = request.HttpsForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsForceCode))
            {
                query["HttpsForceCode"] = request.HttpsForceCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsNoSniDeny))
            {
                query["HttpsNoSniDeny"] = request.HttpsNoSniDeny;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniVerify))
            {
                query["HttpsSniVerify"] = request.HttpsSniVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpsSniWhitelist))
            {
                query["HttpsSniWhitelist"] = request.HttpsSniWhitelist;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpsApplicationConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpsApplicationConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsApplicationConfigurationResponse
        /// </returns>
        public UpdateHttpsApplicationConfigurationResponse UpdateHttpsApplicationConfiguration(UpdateHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHttpsApplicationConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Application Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsApplicationConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsApplicationConfigurationResponse
        /// </returns>
        public async Task<UpdateHttpsApplicationConfigurationResponse> UpdateHttpsApplicationConfigurationAsync(UpdateHttpsApplicationConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHttpsApplicationConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsBasicConfigurationResponse
        /// </returns>
        public UpdateHttpsBasicConfigurationResponse UpdateHttpsBasicConfigurationWithOptions(UpdateHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ciphersuite))
            {
                query["Ciphersuite"] = request.Ciphersuite;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CiphersuiteGroup))
            {
                query["CiphersuiteGroup"] = request.CiphersuiteGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2))
            {
                query["Http2"] = request.Http2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http3))
            {
                query["Http3"] = request.Http3;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Https))
            {
                query["Https"] = request.Https;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OcspStapling))
            {
                query["OcspStapling"] = request.OcspStapling;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls10))
            {
                query["Tls10"] = request.Tls10;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls11))
            {
                query["Tls11"] = request.Tls11;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls12))
            {
                query["Tls12"] = request.Tls12;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls13))
            {
                query["Tls13"] = request.Tls13;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpsBasicConfigurationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsBasicConfigurationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<UpdateHttpsBasicConfigurationResponse> UpdateHttpsBasicConfigurationWithOptionsAsync(UpdateHttpsBasicConfigurationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ciphersuite))
            {
                query["Ciphersuite"] = request.Ciphersuite;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CiphersuiteGroup))
            {
                query["CiphersuiteGroup"] = request.CiphersuiteGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2))
            {
                query["Http2"] = request.Http2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http3))
            {
                query["Http3"] = request.Http3;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Https))
            {
                query["Https"] = request.Https;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OcspStapling))
            {
                query["OcspStapling"] = request.OcspStapling;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls10))
            {
                query["Tls10"] = request.Tls10;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls11))
            {
                query["Tls11"] = request.Tls11;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls12))
            {
                query["Tls12"] = request.Tls12;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tls13))
            {
                query["Tls13"] = request.Tls13;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHttpsBasicConfiguration",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHttpsBasicConfigurationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsBasicConfigurationResponse
        /// </returns>
        public UpdateHttpsBasicConfigurationResponse UpdateHttpsBasicConfiguration(UpdateHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHttpsBasicConfigurationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify HTTPS Basic Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateHttpsBasicConfigurationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateHttpsBasicConfigurationResponse
        /// </returns>
        public async Task<UpdateHttpsBasicConfigurationResponse> UpdateHttpsBasicConfigurationAsync(UpdateHttpsBasicConfigurationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHttpsBasicConfigurationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateIPv6Request
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateIPv6Response
        /// </returns>
        public UpdateIPv6Response UpdateIPv6WithOptions(UpdateIPv6Request request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateIPv6",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateIPv6Response>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateIPv6Request
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateIPv6Response
        /// </returns>
        public async Task<UpdateIPv6Response> UpdateIPv6WithOptionsAsync(UpdateIPv6Request request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateIPv6",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateIPv6Response>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateIPv6Request
        /// </param>
        /// 
        /// <returns>
        /// UpdateIPv6Response
        /// </returns>
        public UpdateIPv6Response UpdateIPv6(UpdateIPv6Request request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateIPv6WithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the IPv6 configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateIPv6Request
        /// </param>
        /// 
        /// <returns>
        /// UpdateIPv6Response
        /// </returns>
        public async Task<UpdateIPv6Response> UpdateIPv6Async(UpdateIPv6Request request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateIPv6WithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateImageTransformResponse
        /// </returns>
        public UpdateImageTransformResponse UpdateImageTransformWithOptions(UpdateImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateImageTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateImageTransformResponse
        /// </returns>
        public async Task<UpdateImageTransformResponse> UpdateImageTransformWithOptionsAsync(UpdateImageTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateImageTransformResponse
        /// </returns>
        public UpdateImageTransformResponse UpdateImageTransform(UpdateImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateImageTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Site Image Transformation Configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateImageTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateImageTransformResponse
        /// </returns>
        public async Task<UpdateImageTransformResponse> UpdateImageTransformAsync(UpdateImageTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateImageTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a custom list.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateListResponse
        /// </returns>
        public UpdateListResponse UpdateListWithOptions(UpdateListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateListShrinkRequest request = new UpdateListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Items))
            {
                request.ItemsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Items, "Items", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemsShrink))
            {
                body["Items"] = request.ItemsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a custom list.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateListResponse
        /// </returns>
        public async Task<UpdateListResponse> UpdateListWithOptionsAsync(UpdateListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateListShrinkRequest request = new UpdateListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Items))
            {
                request.ItemsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Items, "Items", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemsShrink))
            {
                body["Items"] = request.ItemsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a custom list.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateListRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateListResponse
        /// </returns>
        public UpdateListResponse UpdateList(UpdateListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a custom list.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateListRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateListResponse
        /// </returns>
        public async Task<UpdateListResponse> UpdateListAsync(UpdateListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this interface, you can modify multiple configurations of the load balancer, including but not limited to the name of the load balancer, whether to enable acceleration, session persistence strategy, and various advanced settings related to traffic routing.&gt;Notice: Changes to certain parameters may affect the stability of existing services, please operate with caution.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateLoadBalancerResponse
        /// </returns>
        public UpdateLoadBalancerResponse UpdateLoadBalancerWithOptions(UpdateLoadBalancerRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateLoadBalancerShrinkRequest request = new UpdateLoadBalancerShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdaptiveRouting))
            {
                request.AdaptiveRoutingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdaptiveRouting, "AdaptiveRouting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DefaultPools))
            {
                request.DefaultPoolsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultPools, "DefaultPools", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitor))
            {
                request.MonitorShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitor, "Monitor", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RandomSteering))
            {
                request.RandomSteeringShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RandomSteering, "RandomSteering", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Rules))
            {
                request.RulesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Rules, "Rules", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdaptiveRoutingShrink))
            {
                query["AdaptiveRouting"] = request.AdaptiveRoutingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultPoolsShrink))
            {
                query["DefaultPools"] = request.DefaultPoolsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FallbackPool))
            {
                query["FallbackPool"] = request.FallbackPool;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorShrink))
            {
                query["Monitor"] = request.MonitorShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomSteeringShrink))
            {
                query["RandomSteering"] = request.RandomSteeringShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionPools))
            {
                query["RegionPools"] = request.RegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesShrink))
            {
                query["Rules"] = request.RulesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionAffinity))
            {
                query["SessionAffinity"] = request.SessionAffinity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SteeringPolicy))
            {
                query["SteeringPolicy"] = request.SteeringPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubRegionPools))
            {
                query["SubRegionPools"] = request.SubRegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateLoadBalancerResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this interface, you can modify multiple configurations of the load balancer, including but not limited to the name of the load balancer, whether to enable acceleration, session persistence strategy, and various advanced settings related to traffic routing.&gt;Notice: Changes to certain parameters may affect the stability of existing services, please operate with caution.</para>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateLoadBalancerRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateLoadBalancerResponse
        /// </returns>
        public async Task<UpdateLoadBalancerResponse> UpdateLoadBalancerWithOptionsAsync(UpdateLoadBalancerRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateLoadBalancerShrinkRequest request = new UpdateLoadBalancerShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdaptiveRouting))
            {
                request.AdaptiveRoutingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdaptiveRouting, "AdaptiveRouting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DefaultPools))
            {
                request.DefaultPoolsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DefaultPools, "DefaultPools", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitor))
            {
                request.MonitorShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitor, "Monitor", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RandomSteering))
            {
                request.RandomSteeringShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RandomSteering, "RandomSteering", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Rules))
            {
                request.RulesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Rules, "Rules", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdaptiveRoutingShrink))
            {
                query["AdaptiveRouting"] = request.AdaptiveRoutingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultPoolsShrink))
            {
                query["DefaultPools"] = request.DefaultPoolsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FallbackPool))
            {
                query["FallbackPool"] = request.FallbackPool;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorShrink))
            {
                query["Monitor"] = request.MonitorShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomSteeringShrink))
            {
                query["RandomSteering"] = request.RandomSteeringShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionPools))
            {
                query["RegionPools"] = request.RegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RulesShrink))
            {
                query["Rules"] = request.RulesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionAffinity))
            {
                query["SessionAffinity"] = request.SessionAffinity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SteeringPolicy))
            {
                query["SteeringPolicy"] = request.SteeringPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubRegionPools))
            {
                query["SubRegionPools"] = request.SubRegionPools;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateLoadBalancer",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateLoadBalancerResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this interface, you can modify multiple configurations of the load balancer, including but not limited to the name of the load balancer, whether to enable acceleration, session persistence strategy, and various advanced settings related to traffic routing.&gt;Notice: Changes to certain parameters may affect the stability of existing services, please operate with caution.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateLoadBalancerResponse
        /// </returns>
        public UpdateLoadBalancerResponse UpdateLoadBalancer(UpdateLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateLoadBalancerWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Load Balancer</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>Through this interface, you can modify multiple configurations of the load balancer, including but not limited to the name of the load balancer, whether to enable acceleration, session persistence strategy, and various advanced settings related to traffic routing.&gt;Notice: Changes to certain parameters may affect the stability of existing services, please operate with caution.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateLoadBalancerRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateLoadBalancerResponse
        /// </returns>
        public async Task<UpdateLoadBalancerResponse> UpdateLoadBalancerAsync(UpdateLoadBalancerRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateLoadBalancerWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of managed transforms for your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateManagedTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateManagedTransformResponse
        /// </returns>
        public UpdateManagedTransformResponse UpdateManagedTransformWithOptions(UpdateManagedTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddClientGeolocationHeader))
            {
                query["AddClientGeolocationHeader"] = request.AddClientGeolocationHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddRealClientIpHeader))
            {
                query["AddRealClientIpHeader"] = request.AddRealClientIpHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RealClientIpHeaderName))
            {
                query["RealClientIpHeaderName"] = request.RealClientIpHeaderName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateManagedTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateManagedTransformResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of managed transforms for your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateManagedTransformRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateManagedTransformResponse
        /// </returns>
        public async Task<UpdateManagedTransformResponse> UpdateManagedTransformWithOptionsAsync(UpdateManagedTransformRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddClientGeolocationHeader))
            {
                query["AddClientGeolocationHeader"] = request.AddClientGeolocationHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddRealClientIpHeader))
            {
                query["AddRealClientIpHeader"] = request.AddRealClientIpHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RealClientIpHeaderName))
            {
                query["RealClientIpHeaderName"] = request.RealClientIpHeaderName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateManagedTransform",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateManagedTransformResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of managed transforms for your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateManagedTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateManagedTransformResponse
        /// </returns>
        public UpdateManagedTransformResponse UpdateManagedTransform(UpdateManagedTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateManagedTransformWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of managed transforms for your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateManagedTransformRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateManagedTransformResponse
        /// </returns>
        public async Task<UpdateManagedTransformResponse> UpdateManagedTransformAsync(UpdateManagedTransformRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateManagedTransformWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateNetworkOptimizationResponse
        /// </returns>
        public UpdateNetworkOptimizationResponse UpdateNetworkOptimizationWithOptions(UpdateNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Grpc))
            {
                query["Grpc"] = request.Grpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2Origin))
            {
                query["Http2Origin"] = request.Http2Origin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SmartRouting))
            {
                query["SmartRouting"] = request.SmartRouting;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadMaxFilesize))
            {
                query["UploadMaxFilesize"] = request.UploadMaxFilesize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Websocket))
            {
                query["Websocket"] = request.Websocket;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateNetworkOptimizationResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateNetworkOptimizationRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateNetworkOptimizationResponse
        /// </returns>
        public async Task<UpdateNetworkOptimizationResponse> UpdateNetworkOptimizationWithOptionsAsync(UpdateNetworkOptimizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Grpc))
            {
                query["Grpc"] = request.Grpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Http2Origin))
            {
                query["Http2Origin"] = request.Http2Origin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SmartRouting))
            {
                query["SmartRouting"] = request.SmartRouting;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadMaxFilesize))
            {
                query["UploadMaxFilesize"] = request.UploadMaxFilesize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Websocket))
            {
                query["Websocket"] = request.Websocket;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateNetworkOptimization",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateNetworkOptimizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateNetworkOptimizationResponse
        /// </returns>
        public UpdateNetworkOptimizationResponse UpdateNetworkOptimization(UpdateNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateNetworkOptimizationWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify network optimization configuration</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateNetworkOptimizationRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateNetworkOptimizationResponse
        /// </returns>
        public async Task<UpdateNetworkOptimizationResponse> UpdateNetworkOptimizationAsync(UpdateNetworkOptimizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateNetworkOptimizationWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify the Monitor</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginPoolResponse
        /// </returns>
        public UpdateOriginPoolResponse UpdateOriginPoolWithOptions(UpdateOriginPoolRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateOriginPoolShrinkRequest request = new UpdateOriginPoolShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Origins))
            {
                request.OriginsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Origins, "Origins", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginsShrink))
            {
                query["Origins"] = request.OriginsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginPoolResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify the Monitor</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateOriginPoolRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginPoolResponse
        /// </returns>
        public async Task<UpdateOriginPoolResponse> UpdateOriginPoolWithOptionsAsync(UpdateOriginPoolRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateOriginPoolShrinkRequest request = new UpdateOriginPoolShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Origins))
            {
                request.OriginsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Origins, "Origins", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enabled))
            {
                query["Enabled"] = request.Enabled;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginsShrink))
            {
                query["Origins"] = request.OriginsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginPool",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginPoolResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify the Monitor</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginPoolResponse
        /// </returns>
        public UpdateOriginPoolResponse UpdateOriginPool(UpdateOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOriginPoolWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify the Monitor</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginPoolRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginPoolResponse
        /// </returns>
        public async Task<UpdateOriginPoolResponse> UpdateOriginPoolAsync(UpdateOriginPoolRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOriginPoolWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables or disables IP convergence.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionResponse
        /// </returns>
        public UpdateOriginProtectionResponse UpdateOriginProtectionWithOptions(UpdateOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginConverge))
            {
                query["OriginConverge"] = request.OriginConverge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginProtectionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables or disables IP convergence.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionResponse
        /// </returns>
        public async Task<UpdateOriginProtectionResponse> UpdateOriginProtectionWithOptionsAsync(UpdateOriginProtectionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginConverge))
            {
                query["OriginConverge"] = request.OriginConverge;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginProtection",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginProtectionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables or disables IP convergence.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionResponse
        /// </returns>
        public UpdateOriginProtectionResponse UpdateOriginProtection(UpdateOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOriginProtectionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Enables or disables IP convergence.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionResponse
        /// </returns>
        public async Task<UpdateOriginProtectionResponse> UpdateOriginProtectionAsync(UpdateOriginProtectionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOriginProtectionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the IP whitelist for origin protection used by a website to the latest version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionIpWhiteListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionIpWhiteListResponse
        /// </returns>
        public UpdateOriginProtectionIpWhiteListResponse UpdateOriginProtectionIpWhiteListWithOptions(UpdateOriginProtectionIpWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginProtectionIpWhiteList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginProtectionIpWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the IP whitelist for origin protection used by a website to the latest version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionIpWhiteListRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionIpWhiteListResponse
        /// </returns>
        public async Task<UpdateOriginProtectionIpWhiteListResponse> UpdateOriginProtectionIpWhiteListWithOptionsAsync(UpdateOriginProtectionIpWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginProtectionIpWhiteList",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginProtectionIpWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the IP whitelist for origin protection used by a website to the latest version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionIpWhiteListRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionIpWhiteListResponse
        /// </returns>
        public UpdateOriginProtectionIpWhiteListResponse UpdateOriginProtectionIpWhiteList(UpdateOriginProtectionIpWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOriginProtectionIpWhiteListWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the IP whitelist for origin protection used by a website to the latest version.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginProtectionIpWhiteListRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginProtectionIpWhiteListResponse
        /// </returns>
        public async Task<UpdateOriginProtectionIpWhiteListResponse> UpdateOriginProtectionIpWhiteListAsync(UpdateOriginProtectionIpWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOriginProtectionIpWhiteListWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Origin Rule Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginRuleResponse
        /// </returns>
        public UpdateOriginRuleResponse UpdateOriginRuleWithOptions(UpdateOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnsRecord))
            {
                query["DnsRecord"] = request.DnsRecord;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302Enable))
            {
                query["Follow302Enable"] = request.Follow302Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302MaxTries))
            {
                query["Follow302MaxTries"] = request.Follow302MaxTries;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainArgs))
            {
                query["Follow302RetainArgs"] = request.Follow302RetainArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainHeader))
            {
                query["Follow302RetainHeader"] = request.Follow302RetainHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302TargetHost))
            {
                query["Follow302TargetHost"] = request.Follow302TargetHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHost))
            {
                query["OriginHost"] = request.OriginHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpPort))
            {
                query["OriginHttpPort"] = request.OriginHttpPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpsPort))
            {
                query["OriginHttpsPort"] = request.OriginHttpsPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginMtls))
            {
                query["OriginMtls"] = request.OriginMtls;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginReadTimeout))
            {
                query["OriginReadTimeout"] = request.OriginReadTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginScheme))
            {
                query["OriginScheme"] = request.OriginScheme;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSni))
            {
                query["OriginSni"] = request.OriginSni;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginVerify))
            {
                query["OriginVerify"] = request.OriginVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Range))
            {
                query["Range"] = request.Range;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RangeChunkSize))
            {
                query["RangeChunkSize"] = request.RangeChunkSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Origin Rule Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginRuleResponse
        /// </returns>
        public async Task<UpdateOriginRuleResponse> UpdateOriginRuleWithOptionsAsync(UpdateOriginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnsRecord))
            {
                query["DnsRecord"] = request.DnsRecord;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302Enable))
            {
                query["Follow302Enable"] = request.Follow302Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302MaxTries))
            {
                query["Follow302MaxTries"] = request.Follow302MaxTries;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainArgs))
            {
                query["Follow302RetainArgs"] = request.Follow302RetainArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302RetainHeader))
            {
                query["Follow302RetainHeader"] = request.Follow302RetainHeader;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Follow302TargetHost))
            {
                query["Follow302TargetHost"] = request.Follow302TargetHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHost))
            {
                query["OriginHost"] = request.OriginHost;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpPort))
            {
                query["OriginHttpPort"] = request.OriginHttpPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginHttpsPort))
            {
                query["OriginHttpsPort"] = request.OriginHttpsPort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginMtls))
            {
                query["OriginMtls"] = request.OriginMtls;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginReadTimeout))
            {
                query["OriginReadTimeout"] = request.OriginReadTimeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginScheme))
            {
                query["OriginScheme"] = request.OriginScheme;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSni))
            {
                query["OriginSni"] = request.OriginSni;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginVerify))
            {
                query["OriginVerify"] = request.OriginVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Range))
            {
                query["Range"] = request.Range;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RangeChunkSize))
            {
                query["RangeChunkSize"] = request.RangeChunkSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOriginRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOriginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Origin Rule Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginRuleResponse
        /// </returns>
        public UpdateOriginRuleResponse UpdateOriginRule(UpdateOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOriginRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Origin Rule Configuration for Site</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateOriginRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateOriginRuleResponse
        /// </returns>
        public async Task<UpdateOriginRuleResponse> UpdateOriginRuleAsync(UpdateOriginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOriginRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom error page, such as the name, description, content type, and content of the page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdatePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdatePageResponse
        /// </returns>
        public UpdatePageResponse UpdatePageWithOptions(UpdatePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                body["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                body["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom error page, such as the name, description, content type, and content of the page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdatePageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdatePageResponse
        /// </returns>
        public async Task<UpdatePageResponse> UpdatePageWithOptionsAsync(UpdatePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                body["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                body["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom error page, such as the name, description, content type, and content of the page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdatePageRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdatePageResponse
        /// </returns>
        public UpdatePageResponse UpdatePage(UpdatePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a custom error page, such as the name, description, content type, and content of the page.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdatePageRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdatePageResponse
        /// </returns>
        public async Task<UpdatePageResponse> UpdatePageAsync(UpdatePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>套餐变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRatePlanSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRatePlanSpecResponse
        /// </returns>
        public UpdateRatePlanSpecResponse UpdateRatePlanSpecWithOptions(UpdateRatePlanSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPlanCode))
            {
                query["TargetPlanCode"] = request.TargetPlanCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPlanName))
            {
                query["TargetPlanName"] = request.TargetPlanName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRatePlanSpec",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRatePlanSpecResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>套餐变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRatePlanSpecRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRatePlanSpecResponse
        /// </returns>
        public async Task<UpdateRatePlanSpecResponse> UpdateRatePlanSpecWithOptionsAsync(UpdateRatePlanSpecRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoPay))
            {
                query["AutoPay"] = request.AutoPay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                query["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderType))
            {
                query["OrderType"] = request.OrderType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPlanCode))
            {
                query["TargetPlanCode"] = request.TargetPlanCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetPlanName))
            {
                query["TargetPlanName"] = request.TargetPlanName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRatePlanSpec",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRatePlanSpecResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>套餐变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRatePlanSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRatePlanSpecResponse
        /// </returns>
        public UpdateRatePlanSpecResponse UpdateRatePlanSpec(UpdateRatePlanSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRatePlanSpecWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>套餐变配</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRatePlanSpecRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRatePlanSpecResponse
        /// </returns>
        public async Task<UpdateRatePlanSpecResponse> UpdateRatePlanSpecAsync(UpdateRatePlanSpecRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRatePlanSpecWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates multiple types of DNS records and origin authentication configurations.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to update multiple types of DNS records, including but not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. You can modify the record content by providing the necessary fields such as Value, Priority, and Flag. For origins added in CNAME records such as OSS and S3, the API enables you to configure authentication details to ensure secure access.</para>
        /// <h3><a href="#"></a>Usage notes</h3>
        /// <list type="bullet">
        /// <item><description>The record value (Value) must match the record type. For example, the CNAME record should correspond to the target domain name.</description></item>
        /// <item><description>You must specify a priority (Priority) for some record types, such as MX and SRV.</description></item>
        /// <item><description>You must specify specific fields such as Flag and Tag for CAA records.</description></item>
        /// <item><description>When you update security records such as CERT and SSHFP, you must accurately set fields such as Type and Algorithm.</description></item>
        /// <item><description>If your origin type is OSS or S3, configure the authentication details in AuthConf based on the permissions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRecordResponse
        /// </returns>
        public UpdateRecordResponse UpdateRecordWithOptions(UpdateRecordRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateRecordShrinkRequest request = new UpdateRecordShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AuthConf))
            {
                request.AuthConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AuthConf, "AuthConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Data))
            {
                request.DataShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Data, "Data", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthConfShrink))
            {
                query["AuthConf"] = request.AuthConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizName))
            {
                query["BizName"] = request.BizName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Comment))
            {
                query["Comment"] = request.Comment;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataShrink))
            {
                query["Data"] = request.DataShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostPolicy))
            {
                query["HostPolicy"] = request.HostPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Proxied))
            {
                query["Proxied"] = request.Proxied;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRecordResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates multiple types of DNS records and origin authentication configurations.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to update multiple types of DNS records, including but not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. You can modify the record content by providing the necessary fields such as Value, Priority, and Flag. For origins added in CNAME records such as OSS and S3, the API enables you to configure authentication details to ensure secure access.</para>
        /// <h3><a href="#"></a>Usage notes</h3>
        /// <list type="bullet">
        /// <item><description>The record value (Value) must match the record type. For example, the CNAME record should correspond to the target domain name.</description></item>
        /// <item><description>You must specify a priority (Priority) for some record types, such as MX and SRV.</description></item>
        /// <item><description>You must specify specific fields such as Flag and Tag for CAA records.</description></item>
        /// <item><description>When you update security records such as CERT and SSHFP, you must accurately set fields such as Type and Algorithm.</description></item>
        /// <item><description>If your origin type is OSS or S3, configure the authentication details in AuthConf based on the permissions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="tmpReq">
        /// UpdateRecordRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRecordResponse
        /// </returns>
        public async Task<UpdateRecordResponse> UpdateRecordWithOptionsAsync(UpdateRecordRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateRecordShrinkRequest request = new UpdateRecordShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AuthConf))
            {
                request.AuthConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AuthConf, "AuthConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Data))
            {
                request.DataShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Data, "Data", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthConfShrink))
            {
                query["AuthConf"] = request.AuthConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizName))
            {
                query["BizName"] = request.BizName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Comment))
            {
                query["Comment"] = request.Comment;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataShrink))
            {
                query["Data"] = request.DataShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostPolicy))
            {
                query["HostPolicy"] = request.HostPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Proxied))
            {
                query["Proxied"] = request.Proxied;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecordId))
            {
                query["RecordId"] = request.RecordId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ttl))
            {
                query["Ttl"] = request.Ttl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRecord",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates multiple types of DNS records and origin authentication configurations.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to update multiple types of DNS records, including but not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. You can modify the record content by providing the necessary fields such as Value, Priority, and Flag. For origins added in CNAME records such as OSS and S3, the API enables you to configure authentication details to ensure secure access.</para>
        /// <h3><a href="#"></a>Usage notes</h3>
        /// <list type="bullet">
        /// <item><description>The record value (Value) must match the record type. For example, the CNAME record should correspond to the target domain name.</description></item>
        /// <item><description>You must specify a priority (Priority) for some record types, such as MX and SRV.</description></item>
        /// <item><description>You must specify specific fields such as Flag and Tag for CAA records.</description></item>
        /// <item><description>When you update security records such as CERT and SSHFP, you must accurately set fields such as Type and Algorithm.</description></item>
        /// <item><description>If your origin type is OSS or S3, configure the authentication details in AuthConf based on the permissions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRecordResponse
        /// </returns>
        public UpdateRecordResponse UpdateRecord(UpdateRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRecordWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates multiple types of DNS records and origin authentication configurations.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This operation allows you to update multiple types of DNS records, including but not limited to A/AAAA, CNAME, NS, MX, TXT, CAA, SRV, and URI. You can modify the record content by providing the necessary fields such as Value, Priority, and Flag. For origins added in CNAME records such as OSS and S3, the API enables you to configure authentication details to ensure secure access.</para>
        /// <h3><a href="#"></a>Usage notes</h3>
        /// <list type="bullet">
        /// <item><description>The record value (Value) must match the record type. For example, the CNAME record should correspond to the target domain name.</description></item>
        /// <item><description>You must specify a priority (Priority) for some record types, such as MX and SRV.</description></item>
        /// <item><description>You must specify specific fields such as Flag and Tag for CAA records.</description></item>
        /// <item><description>When you update security records such as CERT and SSHFP, you must accurately set fields such as Type and Algorithm.</description></item>
        /// <item><description>If your origin type is OSS or S3, configure the authentication details in AuthConf based on the permissions.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateRecordRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRecordResponse
        /// </returns>
        public async Task<UpdateRecordResponse> UpdateRecordAsync(UpdateRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRecordWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRedirectRuleResponse
        /// </returns>
        public UpdateRedirectRuleResponse UpdateRedirectRuleWithOptions(UpdateRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveQueryString))
            {
                query["ReserveQueryString"] = request.ReserveQueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusCode))
            {
                query["StatusCode"] = request.StatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUrl))
            {
                query["TargetUrl"] = request.TargetUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRedirectRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRedirectRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRedirectRuleResponse
        /// </returns>
        public async Task<UpdateRedirectRuleResponse> UpdateRedirectRuleWithOptionsAsync(UpdateRedirectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReserveQueryString))
            {
                query["ReserveQueryString"] = request.ReserveQueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusCode))
            {
                query["StatusCode"] = request.StatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUrl))
            {
                query["TargetUrl"] = request.TargetUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRedirectRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRedirectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRedirectRuleResponse
        /// </returns>
        public UpdateRedirectRuleResponse UpdateRedirectRule(UpdateRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRedirectRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update Redirect Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRedirectRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRedirectRuleResponse
        /// </returns>
        public async Task<UpdateRedirectRuleResponse> UpdateRedirectRuleAsync(UpdateRedirectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRedirectRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRewriteUrlRuleResponse
        /// </returns>
        public UpdateRewriteUrlRuleResponse UpdateRewriteUrlRuleWithOptions(UpdateRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteQueryStringType))
            {
                query["RewriteQueryStringType"] = request.RewriteQueryStringType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteUriType))
            {
                query["RewriteUriType"] = request.RewriteUriType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uri))
            {
                query["Uri"] = request.Uri;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRewriteUrlRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRewriteUrlRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRewriteUrlRuleResponse
        /// </returns>
        public async Task<UpdateRewriteUrlRuleResponse> UpdateRewriteUrlRuleWithOptionsAsync(UpdateRewriteUrlRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryString))
            {
                query["QueryString"] = request.QueryString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteQueryStringType))
            {
                query["RewriteQueryStringType"] = request.RewriteQueryStringType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RewriteUriType))
            {
                query["RewriteUriType"] = request.RewriteUriType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uri))
            {
                query["Uri"] = request.Uri;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRewriteUrlRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRewriteUrlRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRewriteUrlRuleResponse
        /// </returns>
        public UpdateRewriteUrlRuleResponse UpdateRewriteUrlRule(UpdateRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRewriteUrlRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Rewrite URL Rule</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRewriteUrlRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRewriteUrlRuleResponse
        /// </returns>
        public async Task<UpdateRewriteUrlRuleResponse> UpdateRewriteUrlRuleAsync(UpdateRewriteUrlRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRewriteUrlRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRoutineRouteResponse
        /// </returns>
        public UpdateRoutineRouteResponse UpdateRoutineRouteWithOptions(UpdateRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bypass))
            {
                query["Bypass"] = request.Bypass;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteEnable))
            {
                query["RouteEnable"] = request.RouteEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRoutineRouteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRoutineRouteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateRoutineRouteResponse
        /// </returns>
        public async Task<UpdateRoutineRouteResponse> UpdateRoutineRouteWithOptionsAsync(UpdateRoutineRouteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bypass))
            {
                query["Bypass"] = request.Bypass;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteEnable))
            {
                query["RouteEnable"] = request.RouteEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteName))
            {
                query["RouteName"] = request.RouteName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoutineName))
            {
                query["RoutineName"] = request.RoutineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRoutineRoute",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRoutineRouteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRoutineRouteResponse
        /// </returns>
        public UpdateRoutineRouteResponse UpdateRoutineRoute(UpdateRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRoutineRouteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改边缘函数路由配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateRoutineRouteRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateRoutineRouteResponse
        /// </returns>
        public async Task<UpdateRoutineRouteResponse> UpdateRoutineRouteAsync(UpdateRoutineRouteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRoutineRouteWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateScheduledPreloadExecutionResponse
        /// </returns>
        public UpdateScheduledPreloadExecutionResponse UpdateScheduledPreloadExecutionWithOptions(UpdateScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                body["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SliceLen))
            {
                body["SliceLen"] = request.SliceLen;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateScheduledPreloadExecutionResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateScheduledPreloadExecutionRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<UpdateScheduledPreloadExecutionResponse> UpdateScheduledPreloadExecutionWithOptionsAsync(UpdateScheduledPreloadExecutionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Interval))
            {
                body["Interval"] = request.Interval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SliceLen))
            {
                body["SliceLen"] = request.SliceLen;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateScheduledPreloadExecution",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateScheduledPreloadExecutionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateScheduledPreloadExecutionResponse
        /// </returns>
        public UpdateScheduledPreloadExecutionResponse UpdateScheduledPreloadExecution(UpdateScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateScheduledPreloadExecutionWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates a scheduled prefetch plan based on the plan ID.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateScheduledPreloadExecutionRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateScheduledPreloadExecutionResponse
        /// </returns>
        public async Task<UpdateScheduledPreloadExecutionResponse> UpdateScheduledPreloadExecutionAsync(UpdateScheduledPreloadExecutionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateScheduledPreloadExecutionWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点放行搜索引擎爬虫配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSeoBypassRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSeoBypassResponse
        /// </returns>
        public UpdateSeoBypassResponse UpdateSeoBypassWithOptions(UpdateSeoBypassRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSeoBypass",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSeoBypassResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点放行搜索引擎爬虫配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSeoBypassRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSeoBypassResponse
        /// </returns>
        public async Task<UpdateSeoBypassResponse> UpdateSeoBypassWithOptionsAsync(UpdateSeoBypassRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSeoBypass",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSeoBypassResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点放行搜索引擎爬虫配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSeoBypassRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSeoBypassResponse
        /// </returns>
        public UpdateSeoBypassResponse UpdateSeoBypass(UpdateSeoBypassRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSeoBypassWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点放行搜索引擎爬虫配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSeoBypassRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSeoBypassResponse
        /// </returns>
        public async Task<UpdateSeoBypassResponse> UpdateSeoBypassAsync(UpdateSeoBypassRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSeoBypassWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Converts the DNS setup option of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you change the DNS setup of a website from NS to CNAME, note the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>The website only has proxied A/AAAA and CNAME records.</description></item>
        /// <item><description>The DNS passthrough mode and custom nameserver features are not enabled for the website.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateSiteAccessTypeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteAccessTypeResponse
        /// </returns>
        public UpdateSiteAccessTypeResponse UpdateSiteAccessTypeWithOptions(UpdateSiteAccessTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessType))
            {
                query["AccessType"] = request.AccessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteAccessType",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteAccessTypeResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Converts the DNS setup option of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you change the DNS setup of a website from NS to CNAME, note the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>The website only has proxied A/AAAA and CNAME records.</description></item>
        /// <item><description>The DNS passthrough mode and custom nameserver features are not enabled for the website.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateSiteAccessTypeRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteAccessTypeResponse
        /// </returns>
        public async Task<UpdateSiteAccessTypeResponse> UpdateSiteAccessTypeWithOptionsAsync(UpdateSiteAccessTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessType))
            {
                query["AccessType"] = request.AccessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteAccessType",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteAccessTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Converts the DNS setup option of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you change the DNS setup of a website from NS to CNAME, note the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>The website only has proxied A/AAAA and CNAME records.</description></item>
        /// <item><description>The DNS passthrough mode and custom nameserver features are not enabled for the website.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateSiteAccessTypeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteAccessTypeResponse
        /// </returns>
        public UpdateSiteAccessTypeResponse UpdateSiteAccessType(UpdateSiteAccessTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteAccessTypeWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Converts the DNS setup option of a website.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>When you change the DNS setup of a website from NS to CNAME, note the following prerequisites:</para>
        /// <list type="bullet">
        /// <item><description>The website only has proxied A/AAAA and CNAME records.</description></item>
        /// <item><description>The DNS passthrough mode and custom nameserver features are not enabled for the website.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateSiteAccessTypeRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteAccessTypeResponse
        /// </returns>
        public async Task<UpdateSiteAccessTypeResponse> UpdateSiteAccessTypeAsync(UpdateSiteAccessTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteAccessTypeWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the service location for a single website. This updates the acceleration configuration of the website to adapt to changes in traffic distribution, and improve user experience in specific regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCoverageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCoverageResponse
        /// </returns>
        public UpdateSiteCoverageResponse UpdateSiteCoverageWithOptions(UpdateSiteCoverageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteCoverage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteCoverageResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the service location for a single website. This updates the acceleration configuration of the website to adapt to changes in traffic distribution, and improve user experience in specific regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCoverageRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCoverageResponse
        /// </returns>
        public async Task<UpdateSiteCoverageResponse> UpdateSiteCoverageWithOptionsAsync(UpdateSiteCoverageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Coverage))
            {
                query["Coverage"] = request.Coverage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteCoverage",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteCoverageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the service location for a single website. This updates the acceleration configuration of the website to adapt to changes in traffic distribution, and improve user experience in specific regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCoverageRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCoverageResponse
        /// </returns>
        public UpdateSiteCoverageResponse UpdateSiteCoverage(UpdateSiteCoverageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteCoverageWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the service location for a single website. This updates the acceleration configuration of the website to adapt to changes in traffic distribution, and improve user experience in specific regions.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCoverageRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCoverageResponse
        /// </returns>
        public async Task<UpdateSiteCoverageResponse> UpdateSiteCoverageAsync(UpdateSiteCoverageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteCoverageWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCustomLogResponse
        /// </returns>
        public UpdateSiteCustomLogResponse UpdateSiteCustomLogWithOptions(UpdateSiteCustomLogRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateSiteCustomLogShrinkRequest request = new UpdateSiteCustomLogShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Cookies))
            {
                request.CookiesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Cookies, "Cookies", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaders))
            {
                request.RequestHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaders, "RequestHeaders", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaders))
            {
                request.ResponseHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaders, "ResponseHeaders", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookiesShrink))
            {
                body["Cookies"] = request.CookiesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeadersShrink))
            {
                body["RequestHeaders"] = request.RequestHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeadersShrink))
            {
                body["ResponseHeaders"] = request.ResponseHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteCustomLogResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateSiteCustomLogRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCustomLogResponse
        /// </returns>
        public async Task<UpdateSiteCustomLogResponse> UpdateSiteCustomLogWithOptionsAsync(UpdateSiteCustomLogRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateSiteCustomLogShrinkRequest request = new UpdateSiteCustomLogShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Cookies))
            {
                request.CookiesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Cookies, "Cookies", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RequestHeaders))
            {
                request.RequestHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RequestHeaders, "RequestHeaders", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ResponseHeaders))
            {
                request.ResponseHeadersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ResponseHeaders, "ResponseHeaders", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookiesShrink))
            {
                body["Cookies"] = request.CookiesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestHeadersShrink))
            {
                body["RequestHeaders"] = request.RequestHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseHeadersShrink))
            {
                body["ResponseHeaders"] = request.ResponseHeadersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteCustomLog",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteCustomLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCustomLogResponse
        /// </returns>
        public UpdateSiteCustomLogResponse UpdateSiteCustomLog(UpdateSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteCustomLogWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configuration of custom request header, response header, and cookie fields that are used to capture logs of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteCustomLogRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteCustomLogResponse
        /// </returns>
        public async Task<UpdateSiteCustomLogResponse> UpdateSiteCustomLogAsync(UpdateSiteCustomLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteCustomLogWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskResponse
        /// </returns>
        public UpdateSiteDeliveryTaskResponse UpdateSiteDeliveryTaskWithOptions(UpdateSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskResponse
        /// </returns>
        public async Task<UpdateSiteDeliveryTaskResponse> UpdateSiteDeliveryTaskWithOptionsAsync(UpdateSiteDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskResponse
        /// </returns>
        public UpdateSiteDeliveryTaskResponse UpdateSiteDeliveryTask(UpdateSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskResponse
        /// </returns>
        public async Task<UpdateSiteDeliveryTaskResponse> UpdateSiteDeliveryTaskAsync(UpdateSiteDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskStatusResponse
        /// </returns>
        public UpdateSiteDeliveryTaskStatusResponse UpdateSiteDeliveryTaskStatusWithOptions(UpdateSiteDeliveryTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteDeliveryTaskStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteDeliveryTaskStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskStatusResponse
        /// </returns>
        public async Task<UpdateSiteDeliveryTaskStatusResponse> UpdateSiteDeliveryTaskStatusWithOptionsAsync(UpdateSiteDeliveryTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteDeliveryTaskStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteDeliveryTaskStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskStatusResponse
        /// </returns>
        public UpdateSiteDeliveryTaskStatusResponse UpdateSiteDeliveryTaskStatus(UpdateSiteDeliveryTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteDeliveryTaskStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a real-time log delivery task.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteDeliveryTaskStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteDeliveryTaskStatusResponse
        /// </returns>
        public async Task<UpdateSiteDeliveryTaskStatusResponse> UpdateSiteDeliveryTaskStatusAsync(UpdateSiteDeliveryTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteDeliveryTaskStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteNameExclusiveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteNameExclusiveResponse
        /// </returns>
        public UpdateSiteNameExclusiveResponse UpdateSiteNameExclusiveWithOptions(UpdateSiteNameExclusiveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteNameExclusive",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteNameExclusiveResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteNameExclusiveRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteNameExclusiveResponse
        /// </returns>
        public async Task<UpdateSiteNameExclusiveResponse> UpdateSiteNameExclusiveWithOptionsAsync(UpdateSiteNameExclusiveRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteNameExclusive",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteNameExclusiveResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteNameExclusiveRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteNameExclusiveResponse
        /// </returns>
        public UpdateSiteNameExclusiveResponse UpdateSiteNameExclusive(UpdateSiteNameExclusiveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteNameExclusiveWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the site hold configuration of a website. After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteNameExclusiveRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteNameExclusiveResponse
        /// </returns>
        public async Task<UpdateSiteNameExclusiveResponse> UpdateSiteNameExclusiveAsync(UpdateSiteNameExclusiveRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteNameExclusiveWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSitePauseRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSitePauseResponse
        /// </returns>
        public UpdateSitePauseResponse UpdateSitePauseWithOptions(UpdateSitePauseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Paused))
            {
                query["Paused"] = request.Paused;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSitePause",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSitePauseResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSitePauseRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSitePauseResponse
        /// </returns>
        public async Task<UpdateSitePauseResponse> UpdateSitePauseWithOptionsAsync(UpdateSitePauseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Paused))
            {
                query["Paused"] = request.Paused;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSitePause",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSitePauseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSitePauseRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSitePauseResponse
        /// </returns>
        public UpdateSitePauseResponse UpdateSitePause(UpdateSitePauseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSitePauseWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the ESA proxy configuration of a website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSitePauseRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSitePauseResponse
        /// </returns>
        public async Task<UpdateSitePauseResponse> UpdateSitePauseAsync(UpdateSitePauseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSitePauseWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the custom nameserver names for a single website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteVanityNSRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteVanityNSResponse
        /// </returns>
        public UpdateSiteVanityNSResponse UpdateSiteVanityNSWithOptions(UpdateSiteVanityNSRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VanityNSList))
            {
                query["VanityNSList"] = request.VanityNSList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteVanityNS",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteVanityNSResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the custom nameserver names for a single website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteVanityNSRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteVanityNSResponse
        /// </returns>
        public async Task<UpdateSiteVanityNSResponse> UpdateSiteVanityNSWithOptionsAsync(UpdateSiteVanityNSRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VanityNSList))
            {
                query["VanityNSList"] = request.VanityNSList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSiteVanityNS",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSiteVanityNSResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the custom nameserver names for a single website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteVanityNSRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteVanityNSResponse
        /// </returns>
        public UpdateSiteVanityNSResponse UpdateSiteVanityNS(UpdateSiteVanityNSRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSiteVanityNSWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Updates the custom nameserver names for a single website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateSiteVanityNSRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateSiteVanityNSResponse
        /// </returns>
        public async Task<UpdateSiteVanityNSResponse> UpdateSiteVanityNSAsync(UpdateSiteVanityNSRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSiteVanityNSWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the tiered cache configuration of your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTieredCacheRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTieredCacheResponse
        /// </returns>
        public UpdateTieredCacheResponse UpdateTieredCacheWithOptions(UpdateTieredCacheRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheArchitectureMode))
            {
                query["CacheArchitectureMode"] = request.CacheArchitectureMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTieredCache",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTieredCacheResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the tiered cache configuration of your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTieredCacheRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateTieredCacheResponse
        /// </returns>
        public async Task<UpdateTieredCacheResponse> UpdateTieredCacheWithOptionsAsync(UpdateTieredCacheRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CacheArchitectureMode))
            {
                query["CacheArchitectureMode"] = request.CacheArchitectureMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTieredCache",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTieredCacheResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the tiered cache configuration of your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTieredCacheRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTieredCacheResponse
        /// </returns>
        public UpdateTieredCacheResponse UpdateTieredCache(UpdateTieredCacheRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTieredCacheWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the tiered cache configuration of your website.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateTieredCacheRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateTieredCacheResponse
        /// </returns>
        public async Task<UpdateTieredCacheResponse> UpdateTieredCacheAsync(UpdateTieredCacheRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTieredCacheWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a delivery task, including the task name, log field, log category, and discard rate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskResponse
        /// </returns>
        public UpdateUserDeliveryTaskResponse UpdateUserDeliveryTaskWithOptions(UpdateUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Details))
            {
                body["Details"] = request.Details;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateUserDeliveryTaskResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a delivery task, including the task name, log field, log category, and discard rate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskResponse
        /// </returns>
        public async Task<UpdateUserDeliveryTaskResponse> UpdateUserDeliveryTaskWithOptionsAsync(UpdateUserDeliveryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                body["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Details))
            {
                body["Details"] = request.Details;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DiscardRate))
            {
                body["DiscardRate"] = request.DiscardRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                body["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                body["TaskName"] = request.TaskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateUserDeliveryTask",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateUserDeliveryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a delivery task, including the task name, log field, log category, and discard rate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskResponse
        /// </returns>
        public UpdateUserDeliveryTaskResponse UpdateUserDeliveryTask(UpdateUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateUserDeliveryTaskWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a delivery task, including the task name, log field, log category, and discard rate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskResponse
        /// </returns>
        public async Task<UpdateUserDeliveryTaskResponse> UpdateUserDeliveryTaskAsync(UpdateUserDeliveryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateUserDeliveryTaskWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a delivery task in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2><a href="#"></a></h2>
        /// <para>You can call this operation to enable or disable a delivery task by using TaskName and Method. The response includes the most recent status and operation result details of the task.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskStatusResponse
        /// </returns>
        public UpdateUserDeliveryTaskStatusResponse UpdateUserDeliveryTaskStatusWithOptions(UpdateUserDeliveryTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateUserDeliveryTaskStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateUserDeliveryTaskStatusResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a delivery task in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2><a href="#"></a></h2>
        /// <para>You can call this operation to enable or disable a delivery task by using TaskName and Method. The response includes the most recent status and operation result details of the task.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskStatusRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskStatusResponse
        /// </returns>
        public async Task<UpdateUserDeliveryTaskStatusResponse> UpdateUserDeliveryTaskStatusWithOptionsAsync(UpdateUserDeliveryTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateUserDeliveryTaskStatus",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateUserDeliveryTaskStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a delivery task in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2><a href="#"></a></h2>
        /// <para>You can call this operation to enable or disable a delivery task by using TaskName and Method. The response includes the most recent status and operation result details of the task.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskStatusResponse
        /// </returns>
        public UpdateUserDeliveryTaskStatusResponse UpdateUserDeliveryTaskStatus(UpdateUserDeliveryTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateUserDeliveryTaskStatusWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Changes the status of a delivery task in your Alibaba Cloud account.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <h2><a href="#"></a></h2>
        /// <para>You can call this operation to enable or disable a delivery task by using TaskName and Method. The response includes the most recent status and operation result details of the task.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateUserDeliveryTaskStatusRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateUserDeliveryTaskStatusResponse
        /// </returns>
        public async Task<UpdateUserDeliveryTaskStatusResponse> UpdateUserDeliveryTaskStatusAsync(UpdateUserDeliveryTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateUserDeliveryTaskStatusWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateVideoProcessingResponse
        /// </returns>
        public UpdateVideoProcessingResponse UpdateVideoProcessingWithOptions(UpdateVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekEnd))
            {
                query["FlvSeekEnd"] = request.FlvSeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekStart))
            {
                query["FlvSeekStart"] = request.FlvSeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvVideoSeekMode))
            {
                query["FlvVideoSeekMode"] = request.FlvVideoSeekMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekEnd))
            {
                query["Mp4SeekEnd"] = request.Mp4SeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekStart))
            {
                query["Mp4SeekStart"] = request.Mp4SeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VideoSeekEnable))
            {
                query["VideoSeekEnable"] = request.VideoSeekEnable;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateVideoProcessingResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateVideoProcessingRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateVideoProcessingResponse
        /// </returns>
        public async Task<UpdateVideoProcessingResponse> UpdateVideoProcessingWithOptionsAsync(UpdateVideoProcessingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekEnd))
            {
                query["FlvSeekEnd"] = request.FlvSeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvSeekStart))
            {
                query["FlvSeekStart"] = request.FlvSeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlvVideoSeekMode))
            {
                query["FlvVideoSeekMode"] = request.FlvVideoSeekMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekEnd))
            {
                query["Mp4SeekEnd"] = request.Mp4SeekEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mp4SeekStart))
            {
                query["Mp4SeekStart"] = request.Mp4SeekStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sequence))
            {
                query["Sequence"] = request.Sequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VideoSeekEnable))
            {
                query["VideoSeekEnable"] = request.VideoSeekEnable;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateVideoProcessing",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateVideoProcessingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateVideoProcessingResponse
        /// </returns>
        public UpdateVideoProcessingResponse UpdateVideoProcessing(UpdateVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateVideoProcessingWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>修改站点视频处理配置</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateVideoProcessingRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateVideoProcessingResponse
        /// </returns>
        public async Task<UpdateVideoProcessingResponse> UpdateVideoProcessingAsync(UpdateVideoProcessingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateVideoProcessingWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Rule Page</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRuleResponse
        /// </returns>
        public UpdateWafRuleResponse UpdateWafRuleWithOptions(UpdateWafRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateWafRuleShrinkRequest request = new UpdateWafRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                body["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Position))
            {
                body["Position"] = request.Position;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWafRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Rule Page</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateWafRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRuleResponse
        /// </returns>
        public async Task<UpdateWafRuleResponse> UpdateWafRuleWithOptionsAsync(UpdateWafRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateWafRuleShrinkRequest request = new UpdateWafRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                body["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Position))
            {
                body["Position"] = request.Position;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWafRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWafRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Rule Page</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRuleResponse
        /// </returns>
        public UpdateWafRuleResponse UpdateWafRule(UpdateWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWafRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Rule Page</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRuleResponse
        /// </returns>
        public async Task<UpdateWafRuleResponse> UpdateWafRuleAsync(UpdateWafRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWafRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRulesetResponse
        /// </returns>
        public UpdateWafRulesetResponse UpdateWafRulesetWithOptions(UpdateWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWafRulesetResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRulesetRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRulesetResponse
        /// </returns>
        public async Task<UpdateWafRulesetResponse> UpdateWafRulesetWithOptionsAsync(UpdateWafRulesetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteVersion))
            {
                query["SiteVersion"] = request.SiteVersion;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWafRuleset",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWafRulesetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRulesetResponse
        /// </returns>
        public UpdateWafRulesetResponse UpdateWafRuleset(UpdateWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWafRulesetWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Update WAF Ruleset</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWafRulesetRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWafRulesetResponse
        /// </returns>
        public async Task<UpdateWafRulesetResponse> UpdateWafRulesetAsync(UpdateWafRulesetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWafRulesetWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomResponse
        /// </returns>
        public UpdateWaitingRoomResponse UpdateWaitingRoomWithOptions(UpdateWaitingRoomRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateWaitingRoomShrinkRequest request = new UpdateWaitingRoomShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HostNameAndPath))
            {
                request.HostNameAndPathShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HostNameAndPath, "HostNameAndPath", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookieName))
            {
                query["CookieName"] = request.CookieName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostNameAndPathShrink))
            {
                query["HostNameAndPath"] = request.HostNameAndPathShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueueAllEnable))
            {
                query["QueueAllEnable"] = request.QueueAllEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="tmpReq">
        /// UpdateWaitingRoomRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomResponse
        /// </returns>
        public async Task<UpdateWaitingRoomResponse> UpdateWaitingRoomWithOptionsAsync(UpdateWaitingRoomRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateWaitingRoomShrinkRequest request = new UpdateWaitingRoomShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.HostNameAndPath))
            {
                request.HostNameAndPathShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.HostNameAndPath, "HostNameAndPath", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CookieName))
            {
                query["CookieName"] = request.CookieName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HostNameAndPathShrink))
            {
                query["HostNameAndPath"] = request.HostNameAndPathShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueueAllEnable))
            {
                query["QueueAllEnable"] = request.QueueAllEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomId))
            {
                query["WaitingRoomId"] = request.WaitingRoomId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoom",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomResponse
        /// </returns>
        public UpdateWaitingRoomResponse UpdateWaitingRoom(UpdateWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWaitingRoomWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomResponse
        /// </returns>
        public async Task<UpdateWaitingRoomResponse> UpdateWaitingRoomAsync(UpdateWaitingRoomRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWaitingRoomWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomEventResponse
        /// </returns>
        public UpdateWaitingRoomEventResponse UpdateWaitingRoomEventWithOptions(UpdateWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueEnable))
            {
                query["PreQueueEnable"] = request.PreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueStartTime))
            {
                query["PreQueueStartTime"] = request.PreQueueStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomPreQueueEnable))
            {
                query["RandomPreQueueEnable"] = request.RandomPreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomEventId))
            {
                query["WaitingRoomEventId"] = request.WaitingRoomEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomEventResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomEventRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomEventResponse
        /// </returns>
        public async Task<UpdateWaitingRoomEventResponse> UpdateWaitingRoomEventWithOptionsAsync(UpdateWaitingRoomEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPageHtml))
            {
                query["CustomPageHtml"] = request.CustomPageHtml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisableSessionRenewalEnable))
            {
                query["DisableSessionRenewalEnable"] = request.DisableSessionRenewalEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JsonResponseEnable))
            {
                query["JsonResponseEnable"] = request.JsonResponseEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewUsersPerMinute))
            {
                query["NewUsersPerMinute"] = request.NewUsersPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueEnable))
            {
                query["PreQueueEnable"] = request.PreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreQueueStartTime))
            {
                query["PreQueueStartTime"] = request.PreQueueStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingMethod))
            {
                query["QueuingMethod"] = request.QueuingMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueuingStatusCode))
            {
                query["QueuingStatusCode"] = request.QueuingStatusCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RandomPreQueueEnable))
            {
                query["RandomPreQueueEnable"] = request.RandomPreQueueEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SessionDuration))
            {
                query["SessionDuration"] = request.SessionDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TotalActiveUsers))
            {
                query["TotalActiveUsers"] = request.TotalActiveUsers;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomEventId))
            {
                query["WaitingRoomEventId"] = request.WaitingRoomEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomType))
            {
                query["WaitingRoomType"] = request.WaitingRoomType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoomEvent",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomEventResponse
        /// </returns>
        public UpdateWaitingRoomEventResponse UpdateWaitingRoomEvent(UpdateWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWaitingRoomEventWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modifies the configurations of a waiting room event.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomEventRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomEventResponse
        /// </returns>
        public async Task<UpdateWaitingRoomEventResponse> UpdateWaitingRoomEventAsync(UpdateWaitingRoomEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWaitingRoomEventWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This interface allows you to modify the rule settings of a specific waiting room in a site, including the rule name, enable status, and rule content, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomRuleResponse
        /// </returns>
        public UpdateWaitingRoomRuleResponse UpdateWaitingRoomRuleWithOptions(UpdateWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomRuleId))
            {
                query["WaitingRoomRuleId"] = request.WaitingRoomRuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomRuleResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This interface allows you to modify the rule settings of a specific waiting room in a site, including the rule name, enable status, and rule content, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRuleRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomRuleResponse
        /// </returns>
        public async Task<UpdateWaitingRoomRuleResponse> UpdateWaitingRoomRuleWithOptionsAsync(UpdateWaitingRoomRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rule))
            {
                query["Rule"] = request.Rule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleEnable))
            {
                query["RuleEnable"] = request.RuleEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WaitingRoomRuleId))
            {
                query["WaitingRoomRuleId"] = request.WaitingRoomRuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWaitingRoomRule",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWaitingRoomRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This interface allows you to modify the rule settings of a specific waiting room in a site, including the rule name, enable status, and rule content, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomRuleResponse
        /// </returns>
        public UpdateWaitingRoomRuleResponse UpdateWaitingRoomRule(UpdateWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWaitingRoomRuleWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Modify Waiting Room Rule</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <para>This interface allows you to modify the rule settings of a specific waiting room in a site, including the rule name, enable status, and rule content, etc.</para>
        /// </description>
        /// 
        /// <param name="request">
        /// UpdateWaitingRoomRuleRequest
        /// </param>
        /// 
        /// <returns>
        /// UpdateWaitingRoomRuleResponse
        /// </returns>
        public async Task<UpdateWaitingRoomRuleResponse> UpdateWaitingRoomRuleAsync(UpdateWaitingRoomRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWaitingRoomRuleWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads a client certificate authority (CA) certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadClientCaCertificateResponse
        /// </returns>
        public UploadClientCaCertificateResponse UploadClientCaCertificateWithOptions(UploadClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadClientCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads a client certificate authority (CA) certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadClientCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadClientCaCertificateResponse
        /// </returns>
        public async Task<UploadClientCaCertificateResponse> UploadClientCaCertificateWithOptionsAsync(UploadClientCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadClientCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadClientCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads a client certificate authority (CA) certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadClientCaCertificateResponse
        /// </returns>
        public UploadClientCaCertificateResponse UploadClientCaCertificate(UploadClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadClientCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads a client certificate authority (CA) certificate.</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadClientCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadClientCaCertificateResponse
        /// </returns>
        public async Task<UploadClientCaCertificateResponse> UploadClientCaCertificateAsync(UploadClientCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadClientCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads the file that contains resources to be purged or prefetched.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// </remarks>
        /// <list type="bullet">
        /// <item><description>The file can be up to 10 MB in size.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UploadFileRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadFileResponse
        /// </returns>
        public UploadFileResponse UploadFileWithOptions(UploadFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadTaskName))
            {
                query["UploadTaskName"] = request.UploadTaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadFile",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadFileResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads the file that contains resources to be purged or prefetched.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// </remarks>
        /// <list type="bullet">
        /// <item><description>The file can be up to 10 MB in size.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UploadFileRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadFileResponse
        /// </returns>
        public async Task<UploadFileResponse> UploadFileWithOptionsAsync(UploadFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UploadTaskName))
            {
                query["UploadTaskName"] = request.UploadTaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadFile",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads the file that contains resources to be purged or prefetched.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// </remarks>
        /// <list type="bullet">
        /// <item><description>The file can be up to 10 MB in size.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UploadFileRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadFileResponse
        /// </returns>
        public UploadFileResponse UploadFile(UploadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadFileWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Uploads the file that contains resources to be purged or prefetched.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <remarks>
        /// </remarks>
        /// <list type="bullet">
        /// <item><description>The file can be up to 10 MB in size.</description></item>
        /// </list>
        /// </description>
        /// 
        /// <param name="request">
        /// UploadFileRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadFileResponse
        /// </returns>
        public async Task<UploadFileResponse> UploadFileAsync(UploadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadFileWithOptionsAsync(request, runtime);
        }

        public UploadFileResponse UploadFileAdvance(UploadFileAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = this._credential.GetAccessKeyId();
            string accessKeySecret = this._credential.GetAccessKeySecret();
            string securityToken = this._credential.GetSecurityToken();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            UploadFileRequest uploadFileReq = new UploadFileRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, uploadFileReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = authClient.AuthorizeFileUploadWithOptions(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                ossClient.PostObject(uploadRequest, ossRuntime);
                uploadFileReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            UploadFileResponse uploadFileResp = UploadFileWithOptions(uploadFileReq, runtime);
            return uploadFileResp;
        }

        public async Task<UploadFileResponse> UploadFileAdvanceAsync(UploadFileAdvanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            // Step 0: init client
            string accessKeyId = await this._credential.GetAccessKeyIdAsync();
            string accessKeySecret = await this._credential.GetAccessKeySecretAsync();
            string securityToken = await this._credential.GetSecurityTokenAsync();
            string credentialType = this._credential.GetType();
            string openPlatformEndpoint = _openPlatformEndpoint;
            if (AlibabaCloud.TeaUtil.Common.Empty(openPlatformEndpoint))
            {
                openPlatformEndpoint = "openplatform.aliyuncs.com";
            }
            if (AlibabaCloud.TeaUtil.Common.IsUnset(credentialType))
            {
                credentialType = "access_key";
            }
            AlibabaCloud.OpenApiClient.Models.Config authConfig = new AlibabaCloud.OpenApiClient.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                SecurityToken = securityToken,
                Type = credentialType,
                Endpoint = openPlatformEndpoint,
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Client authClient = new AlibabaCloud.SDK.OpenPlatform20191219.Client(authConfig);
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest authRequest = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadRequest
            {
                Product = "ESA",
                RegionId = _regionId,
            };
            AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse authResponse = new AlibabaCloud.SDK.OpenPlatform20191219.Models.AuthorizeFileUploadResponse();
            AlibabaCloud.OSS.Models.Config ossConfig = new AlibabaCloud.OSS.Models.Config
            {
                AccessKeyId = accessKeyId,
                AccessKeySecret = accessKeySecret,
                Type = "access_key",
                Protocol = _protocol,
                RegionId = _regionId,
            };
            AlibabaCloud.OSS.Client ossClient = new AlibabaCloud.OSS.Client(ossConfig);
            AlibabaCloud.SDK.TeaFileform.Models.FileField fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField();
            AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader();
            AlibabaCloud.OSS.Models.PostObjectRequest uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest();
            AlibabaCloud.OSSUtil.Models.RuntimeOptions ossRuntime = new AlibabaCloud.OSSUtil.Models.RuntimeOptions();
            AlibabaCloud.OpenApiUtil.Client.Convert(runtime, ossRuntime);
            UploadFileRequest uploadFileReq = new UploadFileRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(request, uploadFileReq);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UrlObject))
            {
                authResponse = await authClient.AuthorizeFileUploadWithOptionsAsync(authRequest, runtime);
                ossConfig.AccessKeyId = authResponse.Body.AccessKeyId;
                ossConfig.Endpoint = AlibabaCloud.OpenApiUtil.Client.GetEndpoint(authResponse.Body.Endpoint, authResponse.Body.UseAccelerate, _endpointType);
                ossClient = new AlibabaCloud.OSS.Client(ossConfig);
                fileObj = new AlibabaCloud.SDK.TeaFileform.Models.FileField
                {
                    Filename = authResponse.Body.ObjectKey,
                    Content = request.UrlObject,
                    ContentType = "",
                };
                ossHeader = new AlibabaCloud.OSS.Models.PostObjectRequest.PostObjectRequestHeader
                {
                    AccessKeyId = authResponse.Body.AccessKeyId,
                    Policy = authResponse.Body.EncodedPolicy,
                    Signature = authResponse.Body.Signature,
                    Key = authResponse.Body.ObjectKey,
                    File = fileObj,
                    SuccessActionStatus = "201",
                };
                uploadRequest = new AlibabaCloud.OSS.Models.PostObjectRequest
                {
                    BucketName = authResponse.Body.Bucket,
                    Header = ossHeader,
                };
                await ossClient.PostObjectAsync(uploadRequest, ossRuntime);
                uploadFileReq.Url = "http://" + authResponse.Body.Bucket + "." + authResponse.Body.Endpoint + "/" + authResponse.Body.ObjectKey;
            }
            UploadFileResponse uploadFileResp = await UploadFileWithOptionsAsync(uploadFileReq, runtime);
            return uploadFileResp;
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginCaCertificateResponse
        /// </returns>
        public UploadOriginCaCertificateResponse UploadOriginCaCertificateWithOptions(UploadOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadOriginCaCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginCaCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginCaCertificateResponse
        /// </returns>
        public async Task<UploadOriginCaCertificateResponse> UploadOriginCaCertificateWithOptionsAsync(UploadOriginCaCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                body["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadOriginCaCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadOriginCaCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginCaCertificateResponse
        /// </returns>
        public UploadOriginCaCertificateResponse UploadOriginCaCertificate(UploadOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadOriginCaCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传源服务器CA证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginCaCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginCaCertificateResponse
        /// </returns>
        public async Task<UploadOriginCaCertificateResponse> UploadOriginCaCertificateAsync(UploadOriginCaCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadOriginCaCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginClientCertificateResponse
        /// </returns>
        public UploadOriginClientCertificateResponse UploadOriginClientCertificateWithOptions(UploadOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginClientCertificateResponse
        /// </returns>
        public async Task<UploadOriginClientCertificateResponse> UploadOriginClientCertificateWithOptionsAsync(UploadOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginClientCertificateResponse
        /// </returns>
        public UploadOriginClientCertificateResponse UploadOriginClientCertificate(UploadOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>上传域名回源客户端证书</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadOriginClientCertificateResponse
        /// </returns>
        public async Task<UploadOriginClientCertificateResponse> UploadOriginClientCertificateAsync(UploadOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Upload site origin client certificate</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadSiteOriginClientCertificateResponse
        /// </returns>
        public UploadSiteOriginClientCertificateResponse UploadSiteOriginClientCertificateWithOptions(UploadSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadSiteOriginClientCertificateResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Upload site origin client certificate</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadSiteOriginClientCertificateRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// UploadSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<UploadSiteOriginClientCertificateResponse> UploadSiteOriginClientCertificateWithOptionsAsync(UploadSiteOriginClientCertificateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Certificate))
            {
                body["Certificate"] = request.Certificate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrivateKey))
            {
                body["PrivateKey"] = request.PrivateKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadSiteOriginClientCertificate",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadSiteOriginClientCertificateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Upload site origin client certificate</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadSiteOriginClientCertificateResponse
        /// </returns>
        public UploadSiteOriginClientCertificateResponse UploadSiteOriginClientCertificate(UploadSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadSiteOriginClientCertificateWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Upload site origin client certificate</para>
        /// </summary>
        /// 
        /// <param name="request">
        /// UploadSiteOriginClientCertificateRequest
        /// </param>
        /// 
        /// <returns>
        /// UploadSiteOriginClientCertificateResponse
        /// </returns>
        public async Task<UploadSiteOriginClientCertificateResponse> UploadSiteOriginClientCertificateAsync(UploadSiteOriginClientCertificateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadSiteOriginClientCertificateWithOptionsAsync(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Verifies the ownership of a website domain. Websites that pass the verification are automatically activated.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>For a website connected by using NS setup, this operation verifies whether the nameservers of the website are the nameservers assigned by Alibaba Cloud.</description></item>
        /// <item><description>For a website connected by using CNAME setup, this operation verifies whether the website has a TXT record whose hostname is  _esaauth.[websiteDomainName] and record value is the value of VerifyCode to the DNS records of your domain. You can see the VerifyCode field in the site information.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// VerifySiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// VerifySiteResponse
        /// </returns>
        public VerifySiteResponse VerifySiteWithOptions(VerifySiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifySite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifySiteResponse>(CallApi(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Verifies the ownership of a website domain. Websites that pass the verification are automatically activated.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>For a website connected by using NS setup, this operation verifies whether the nameservers of the website are the nameservers assigned by Alibaba Cloud.</description></item>
        /// <item><description>For a website connected by using CNAME setup, this operation verifies whether the website has a TXT record whose hostname is  _esaauth.[websiteDomainName] and record value is the value of VerifyCode to the DNS records of your domain. You can see the VerifyCode field in the site information.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// VerifySiteRequest
        /// </param>
        /// <param name="runtime">
        /// runtime options for this request RuntimeOptions
        /// </param>
        /// 
        /// <returns>
        /// VerifySiteResponse
        /// </returns>
        public async Task<VerifySiteResponse> VerifySiteWithOptionsAsync(VerifySiteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteId))
            {
                query["SiteId"] = request.SiteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifySite",
                Version = "2024-09-10",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifySiteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Verifies the ownership of a website domain. Websites that pass the verification are automatically activated.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>For a website connected by using NS setup, this operation verifies whether the nameservers of the website are the nameservers assigned by Alibaba Cloud.</description></item>
        /// <item><description>For a website connected by using CNAME setup, this operation verifies whether the website has a TXT record whose hostname is  _esaauth.[websiteDomainName] and record value is the value of VerifyCode to the DNS records of your domain. You can see the VerifyCode field in the site information.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// VerifySiteRequest
        /// </param>
        /// 
        /// <returns>
        /// VerifySiteResponse
        /// </returns>
        public VerifySiteResponse VerifySite(VerifySiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return VerifySiteWithOptions(request, runtime);
        }

        /// <term><b>Summary:</b></term>
        /// <summary>
        /// <para>Verifies the ownership of a website domain. Websites that pass the verification are automatically activated.</para>
        /// </summary>
        /// 
        /// <term><b>Description:</b></term>
        /// <description>
        /// <ol>
        /// <item><description>For a website connected by using NS setup, this operation verifies whether the nameservers of the website are the nameservers assigned by Alibaba Cloud.</description></item>
        /// <item><description>For a website connected by using CNAME setup, this operation verifies whether the website has a TXT record whose hostname is  _esaauth.[websiteDomainName] and record value is the value of VerifyCode to the DNS records of your domain. You can see the VerifyCode field in the site information.</description></item>
        /// </ol>
        /// </description>
        /// 
        /// <param name="request">
        /// VerifySiteRequest
        /// </param>
        /// 
        /// <returns>
        /// VerifySiteResponse
        /// </returns>
        public async Task<VerifySiteResponse> VerifySiteAsync(VerifySiteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await VerifySiteWithOptionsAsync(request, runtime);
        }

    }
}
