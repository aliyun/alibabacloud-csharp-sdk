// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Dataworks_public20200518.Models
{
    public class ListDataServicePublishedApisResponseBody : TeaModel {
        /// <summary>
        /// <para>The data returned.</para>
        /// </summary>
        [NameInMap("Data")]
        [Validation(Required=false)]
        public ListDataServicePublishedApisResponseBodyData Data { get; set; }
        public class ListDataServicePublishedApisResponseBodyData : TeaModel {
            /// <summary>
            /// <para>The information about the APIs in the published state.</para>
            /// </summary>
            [NameInMap("Apis")]
            [Validation(Required=false)]
            public List<ListDataServicePublishedApisResponseBodyDataApis> Apis { get; set; }
            public class ListDataServicePublishedApisResponseBodyDataApis : TeaModel {
                /// <summary>
                /// <para>The API ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10002</para>
                /// </summary>
                [NameInMap("ApiId")]
                [Validation(Required=false)]
                public long? ApiId { get; set; }

                /// <summary>
                /// <para>The type of the API. Valid values: 0, 1, and 2. The value 0 indicates that the API is generated in wizard mode. The value 1 indicates that the API is generated in script mode. The value 2 indicates that the API is generated by registration.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("ApiMode")]
                [Validation(Required=false)]
                public int? ApiMode { get; set; }

                /// <summary>
                /// <para>The name of the API.</para>
                /// 
                /// <b>Example:</b>
                /// <para>My API name</para>
                /// </summary>
                [NameInMap("ApiName")]
                [Validation(Required=false)]
                public string ApiName { get; set; }

                /// <summary>
                /// <para>The path of the API.</para>
                /// 
                /// <b>Example:</b>
                /// <para>/test/1</para>
                /// </summary>
                [NameInMap("ApiPath")]
                [Validation(Required=false)]
                public string ApiPath { get; set; }

                /// <summary>
                /// <para>The time when the API was created.</para>
                /// 
                /// <b>Example:</b>
                /// <para>2020-06-23T00:21:01+0800</para>
                /// </summary>
                [NameInMap("CreatedTime")]
                [Validation(Required=false)]
                public string CreatedTime { get; set; }

                /// <summary>
                /// <para>The ID of the Alibaba Cloud account used by the creator of the API.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1234567</para>
                /// </summary>
                [NameInMap("CreatorId")]
                [Validation(Required=false)]
                public string CreatorId { get; set; }

                /// <summary>
                /// <para>The description.</para>
                /// 
                /// <b>Example:</b>
                /// <para>Test API description</para>
                /// </summary>
                [NameInMap("Description")]
                [Validation(Required=false)]
                public string Description { get; set; }

                /// <summary>
                /// <para>The group ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>ab123</para>
                /// </summary>
                [NameInMap("GroupId")]
                [Validation(Required=false)]
                public string GroupId { get; set; }

                /// <summary>
                /// <para>The time when the API was last modified.</para>
                /// 
                /// <b>Example:</b>
                /// <para>2020-06-23T00:21:01+0800</para>
                /// </summary>
                [NameInMap("ModifiedTime")]
                [Validation(Required=false)]
                public string ModifiedTime { get; set; }

                /// <summary>
                /// <para>The ID of the Alibaba Cloud account used by the user who last modified the API.</para>
                /// 
                /// <b>Example:</b>
                /// <para>2345678</para>
                /// </summary>
                [NameInMap("OperatorId")]
                [Validation(Required=false)]
                public string OperatorId { get; set; }

                /// <summary>
                /// <para>The workspace ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10000</para>
                /// </summary>
                [NameInMap("ProjectId")]
                [Validation(Required=false)]
                public long? ProjectId { get; set; }

                /// <summary>
                /// <para>The protocol used by the API. Valid values: 0 and 1. The value 0 indicates HTTP. The value 1 indicates HTTPS.</para>
                /// </summary>
                [NameInMap("Protocols")]
                [Validation(Required=false)]
                public List<int?> Protocols { get; set; }

                /// <summary>
                /// <para>The details of the API generated by registration. This parameter is returned only if the API is generated by registration.</para>
                /// </summary>
                [NameInMap("RegistrationDetails")]
                [Validation(Required=false)]
                public ListDataServicePublishedApisResponseBodyDataApisRegistrationDetails RegistrationDetails { get; set; }
                public class ListDataServicePublishedApisResponseBodyDataApisRegistrationDetails : TeaModel {
                    /// <summary>
                    /// <para>The sample error response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: false}</para>
                    /// </summary>
                    [NameInMap("FailedResultSample")]
                    [Validation(Required=false)]
                    public string FailedResultSample { get; set; }

                    /// <summary>
                    /// <para>The error codes returned for the API generated by registration.</para>
                    /// </summary>
                    [NameInMap("RegistrationErrorCodes")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisRegistrationDetailsRegistrationErrorCodes> RegistrationErrorCodes { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisRegistrationDetailsRegistrationErrorCodes : TeaModel {
                        /// <summary>
                        /// <para>The error code.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>1001</para>
                        /// </summary>
                        [NameInMap("ErrorCode")]
                        [Validation(Required=false)]
                        public string ErrorCode { get; set; }

                        /// <summary>
                        /// <para>The error message.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>fail to call</para>
                        /// </summary>
                        [NameInMap("ErrorMessage")]
                        [Validation(Required=false)]
                        public string ErrorMessage { get; set; }

                        /// <summary>
                        /// <para>The solution used to fix the error.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>retry</para>
                        /// </summary>
                        [NameInMap("ErrorSolution")]
                        [Validation(Required=false)]
                        public string ErrorSolution { get; set; }

                    }

                    /// <summary>
                    /// <para>The request parameters of the API generated by registration.</para>
                    /// </summary>
                    [NameInMap("RegistrationRequestParameters")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisRegistrationDetailsRegistrationRequestParameters> RegistrationRequestParameters { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisRegistrationDetailsRegistrationRequestParameters : TeaModel {
                        /// <summary>
                        /// <para>The default value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>default1</para>
                        /// </summary>
                        [NameInMap("DefaultValue")]
                        [Validation(Required=false)]
                        public string DefaultValue { get; set; }

                        /// <summary>
                        /// <para>The sample value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>example1</para>
                        /// </summary>
                        [NameInMap("ExampleValue")]
                        [Validation(Required=false)]
                        public string ExampleValue { get; set; }

                        /// <summary>
                        /// <para>Indicates whether the request parameter is required.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>true</para>
                        /// </summary>
                        [NameInMap("IsRequiredParameter")]
                        [Validation(Required=false)]
                        public bool? IsRequiredParameter { get; set; }

                        /// <summary>
                        /// <para>The data type of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: String</description></item>
                        /// <item><description>1: Int</description></item>
                        /// <item><description>2: Long</description></item>
                        /// <item><description>3: Float</description></item>
                        /// <item><description>4: Double</description></item>
                        /// <item><description>5: Boolean</description></item>
                        /// <item><description>6: StringList</description></item>
                        /// <item><description>7: IntList</description></item>
                        /// <item><description>8: LongList</description></item>
                        /// <item><description>9: FloatList</description></item>
                        /// <item><description>10: DoubleList</description></item>
                        /// <item><description>11: BooleanList</description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterDataType")]
                        [Validation(Required=false)]
                        public int? ParameterDataType { get; set; }

                        /// <summary>
                        /// <para>The description.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>description1</para>
                        /// </summary>
                        [NameInMap("ParameterDescription")]
                        [Validation(Required=false)]
                        public string ParameterDescription { get; set; }

                        /// <summary>
                        /// <para>The name of the parameter.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>name1</para>
                        /// </summary>
                        [NameInMap("ParameterName")]
                        [Validation(Required=false)]
                        public string ParameterName { get; set; }

                        /// <summary>
                        /// <para>The operator used for the value of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: Equal</description></item>
                        /// <item><description>1: Like</description></item>
                        /// <item><description>2: Const</description></item>
                        /// <item><description>3: In</description></item>
                        /// </list>
                        /// <para>APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterOperator")]
                        [Validation(Required=false)]
                        public int? ParameterOperator { get; set; }

                        /// <summary>
                        /// <para>The position of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: indicates that the parameter is in the URL path of the request.</description></item>
                        /// <item><description>1: indicates that the parameter is in the Query parameter of the request URL.</description></item>
                        /// <item><description>2: indicates that the parameter is in the request header.</description></item>
                        /// <item><description>3: indicates that the parameter is in the request body.</description></item>
                        /// </list>
                        /// <para>APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterPosition")]
                        [Validation(Required=false)]
                        public int? ParameterPosition { get; set; }

                    }

                    /// <summary>
                    /// <para>The format in which the response of the API request is returned. Valid values: 0 and 1. The value 0 indicates the JSON format. The value 1 indicates the XML format. APIs generated in wizard or script mode support the JSON format. APIs generated by registration support the JSON and XML formats.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>0</para>
                    /// </summary>
                    [NameInMap("ServiceContentType")]
                    [Validation(Required=false)]
                    public int? ServiceContentType { get; set; }

                    /// <summary>
                    /// <para>The URL of the backend service.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para><a href="http://example.aliyundoc.com">http://example.aliyundoc.com</a></para>
                    /// </summary>
                    [NameInMap("ServiceHost")]
                    [Validation(Required=false)]
                    public string ServiceHost { get; set; }

                    /// <summary>
                    /// <para>The path of the backend service.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>/index</para>
                    /// </summary>
                    [NameInMap("ServicePath")]
                    [Validation(Required=false)]
                    public string ServicePath { get; set; }

                    /// <summary>
                    /// <para>The description of the request body initiated to call the backend service.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;abc&quot;:1}</para>
                    /// </summary>
                    [NameInMap("ServiceRequestBodyDescription")]
                    [Validation(Required=false)]
                    public string ServiceRequestBodyDescription { get; set; }

                    /// <summary>
                    /// <para>The sample success response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: true}</para>
                    /// </summary>
                    [NameInMap("SuccessfulResultSample")]
                    [Validation(Required=false)]
                    public string SuccessfulResultSample { get; set; }

                }

                /// <summary>
                /// <para>The request method of the API. Valid values: 0, 1, 2, and 3. The value 0 indicates the GET method. The value 1 indicates the POST method. The value 2 indicates the PUT method. The value 3 indicates the DELETE method. APIs generated in wizard or script mode support the GET and POST methods. APIs generated by registration support the GET, POST, PUT, and DELETE methods.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("RequestMethod")]
                [Validation(Required=false)]
                public int? RequestMethod { get; set; }

                /// <summary>
                /// <para>The format in which the response of the API request is returned. Valid values: 0 and 1. The value 0 indicates the JSON format. The value 1 indicates the XML format. APIs generated in wizard or script mode support the JSON format. APIs generated by registration support the JSON and XML formats.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("ResponseContentType")]
                [Validation(Required=false)]
                public int? ResponseContentType { get; set; }

                /// <summary>
                /// <para>The details of the API generated in script mode. This parameter is returned only if the API is generated in script mode.</para>
                /// </summary>
                [NameInMap("ScriptDetails")]
                [Validation(Required=false)]
                public ListDataServicePublishedApisResponseBodyDataApisScriptDetails ScriptDetails { get; set; }
                public class ListDataServicePublishedApisResponseBodyDataApisScriptDetails : TeaModel {
                    /// <summary>
                    /// <para>The sample error response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: false}</para>
                    /// </summary>
                    [NameInMap("FailedResultSample")]
                    [Validation(Required=false)]
                    public string FailedResultSample { get; set; }

                    /// <summary>
                    /// <para>Indicates whether the entries are returned by page.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("IsPagedResponse")]
                    [Validation(Required=false)]
                    public bool? IsPagedResponse { get; set; }

                    /// <summary>
                    /// <para>The SQL script.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>select a from t</para>
                    /// </summary>
                    [NameInMap("Script")]
                    [Validation(Required=false)]
                    public string Script { get; set; }

                    /// <summary>
                    /// <para>The data source information about the API generated in script mode.</para>
                    /// </summary>
                    [NameInMap("ScriptConnection")]
                    [Validation(Required=false)]
                    public ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptConnection ScriptConnection { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptConnection : TeaModel {
                        /// <summary>
                        /// <para>The data source ID.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>123</para>
                        /// </summary>
                        [NameInMap("ConnectionId")]
                        [Validation(Required=false)]
                        public long? ConnectionId { get; set; }

                        /// <summary>
                        /// <para>The name of the table in the data source.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>t</para>
                        /// </summary>
                        [NameInMap("TableName")]
                        [Validation(Required=false)]
                        public string TableName { get; set; }

                    }

                    /// <summary>
                    /// <para>The error codes returned for the API generated in script mode.</para>
                    /// </summary>
                    [NameInMap("ScriptErrorCodes")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptErrorCodes> ScriptErrorCodes { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptErrorCodes : TeaModel {
                        /// <summary>
                        /// <para>The error code.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>1001</para>
                        /// </summary>
                        [NameInMap("ErrorCode")]
                        [Validation(Required=false)]
                        public string ErrorCode { get; set; }

                        /// <summary>
                        /// <para>The error message.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>fail to call</para>
                        /// </summary>
                        [NameInMap("ErrorMessage")]
                        [Validation(Required=false)]
                        public string ErrorMessage { get; set; }

                        /// <summary>
                        /// <para>The solution used to fix the error.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>retry</para>
                        /// </summary>
                        [NameInMap("ErrorSolution")]
                        [Validation(Required=false)]
                        public string ErrorSolution { get; set; }

                    }

                    /// <summary>
                    /// <para>The request parameters of the API generated in script mode.</para>
                    /// </summary>
                    [NameInMap("ScriptRequestParameters")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptRequestParameters> ScriptRequestParameters { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptRequestParameters : TeaModel {
                        /// <summary>
                        /// <para>The default value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>default1</para>
                        /// </summary>
                        [NameInMap("DefaultValue")]
                        [Validation(Required=false)]
                        public string DefaultValue { get; set; }

                        /// <summary>
                        /// <para>The sample value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>example1</para>
                        /// </summary>
                        [NameInMap("ExampleValue")]
                        [Validation(Required=false)]
                        public string ExampleValue { get; set; }

                        /// <summary>
                        /// <para>Indicates whether the request parameter is required.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>true</para>
                        /// </summary>
                        [NameInMap("IsRequiredParameter")]
                        [Validation(Required=false)]
                        public bool? IsRequiredParameter { get; set; }

                        /// <summary>
                        /// <para>The data type of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: String</description></item>
                        /// <item><description>1: Int</description></item>
                        /// <item><description>2: Long</description></item>
                        /// <item><description>3: Float</description></item>
                        /// <item><description>4: Double</description></item>
                        /// <item><description>5: Boolean</description></item>
                        /// </list>
                        /// <para>Advanced scripts also support the following data types:</para>
                        /// <list type="bullet">
                        /// <item><description>6: StringList</description></item>
                        /// <item><description>7: IntList</description></item>
                        /// <item><description>8: LongList</description></item>
                        /// <item><description>9: FloatList</description></item>
                        /// <item><description>10: DoubleList</description></item>
                        /// <item><description>11: BooleanList</description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterDataType")]
                        [Validation(Required=false)]
                        public int? ParameterDataType { get; set; }

                        /// <summary>
                        /// <para>The description.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>description1</para>
                        /// </summary>
                        [NameInMap("ParameterDescription")]
                        [Validation(Required=false)]
                        public string ParameterDescription { get; set; }

                        /// <summary>
                        /// <para>The name of the parameter.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>param1</para>
                        /// </summary>
                        [NameInMap("ParameterName")]
                        [Validation(Required=false)]
                        public string ParameterName { get; set; }

                        /// <summary>
                        /// <para>The operator used for the value of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: Equal</description></item>
                        /// <item><description>1: Like</description></item>
                        /// <item><description>2: Const</description></item>
                        /// <item><description>3: In</description></item>
                        /// </list>
                        /// <para>APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterOperator")]
                        [Validation(Required=false)]
                        public int? ParameterOperator { get; set; }

                        /// <summary>
                        /// <para>The position of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: indicates that the parameter is in the URL path of the request.</description></item>
                        /// <item><description>1: indicates that the parameter is in the Query parameter of the request URL.</description></item>
                        /// <item><description>2: indicates that the parameter is in the request header.</description></item>
                        /// <item><description>3: indicates that the parameter is in the request body.</description></item>
                        /// </list>
                        /// <para>APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterPosition")]
                        [Validation(Required=false)]
                        public int? ParameterPosition { get; set; }

                    }

                    /// <summary>
                    /// <para>The response parameters of the API generated in script mode.</para>
                    /// </summary>
                    [NameInMap("ScriptResponseParameters")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptResponseParameters> ScriptResponseParameters { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisScriptDetailsScriptResponseParameters : TeaModel {
                        /// <summary>
                        /// <para>The sample value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>example2</para>
                        /// </summary>
                        [NameInMap("ExampleValue")]
                        [Validation(Required=false)]
                        public string ExampleValue { get; set; }

                        /// <summary>
                        /// <para>The data type of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: String</description></item>
                        /// <item><description>1: Int</description></item>
                        /// <item><description>2: Long</description></item>
                        /// <item><description>3: Float</description></item>
                        /// <item><description>4: Double</description></item>
                        /// <item><description>5: Boolean</description></item>
                        /// <item><description>6: StringList</description></item>
                        /// <item><description>7: IntList</description></item>
                        /// <item><description>8: LongList</description></item>
                        /// <item><description>9: FloatList</description></item>
                        /// <item><description>10: DoubleList</description></item>
                        /// <item><description>11: BooleanList</description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterDataType")]
                        [Validation(Required=false)]
                        public int? ParameterDataType { get; set; }

                        /// <summary>
                        /// <para>The description.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>description2</para>
                        /// </summary>
                        [NameInMap("ParameterDescription")]
                        [Validation(Required=false)]
                        public string ParameterDescription { get; set; }

                        /// <summary>
                        /// <para>The name of the parameter.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>param2</para>
                        /// </summary>
                        [NameInMap("ParameterName")]
                        [Validation(Required=false)]
                        public string ParameterName { get; set; }

                    }

                    /// <summary>
                    /// <para>The sample success response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: true}</para>
                    /// </summary>
                    [NameInMap("SuccessfulResultSample")]
                    [Validation(Required=false)]
                    public string SuccessfulResultSample { get; set; }

                }

                /// <summary>
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("SqlMode")]
                [Validation(Required=false)]
                public int? SqlMode { get; set; }

                /// <summary>
                /// <para>The status of the API. Valid values: 0 and 1. The value 0 indicates that the API is not published. The value 1 indicates that the API is published.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1</para>
                /// </summary>
                [NameInMap("Status")]
                [Validation(Required=false)]
                public int? Status { get; set; }

                /// <summary>
                /// <para>The tenant ID.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10001</para>
                /// </summary>
                [NameInMap("TenantId")]
                [Validation(Required=false)]
                public long? TenantId { get; set; }

                /// <summary>
                /// <para>The timeout period of the API request. Unit: milliseconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>10000</para>
                /// </summary>
                [NameInMap("Timeout")]
                [Validation(Required=false)]
                public int? Timeout { get; set; }

                /// <summary>
                /// <para>The scope in which the API is visible. Valid values: 0 and 1. The value 0 indicates that the API is visible within the workspace. The value 1 indicates that the API is visible only to its owner.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("VisibleRange")]
                [Validation(Required=false)]
                public int? VisibleRange { get; set; }

                /// <summary>
                /// <para>The details of the API generated in wizard mode. This parameter is returned only if the API is generated in wizard mode.</para>
                /// </summary>
                [NameInMap("WizardDetails")]
                [Validation(Required=false)]
                public ListDataServicePublishedApisResponseBodyDataApisWizardDetails WizardDetails { get; set; }
                public class ListDataServicePublishedApisResponseBodyDataApisWizardDetails : TeaModel {
                    /// <summary>
                    /// <para>The sample error response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: false}</para>
                    /// </summary>
                    [NameInMap("FailedResultSample")]
                    [Validation(Required=false)]
                    public string FailedResultSample { get; set; }

                    /// <summary>
                    /// <para>Indicates whether the entries are returned by page.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>true</para>
                    /// </summary>
                    [NameInMap("IsPagedResponse")]
                    [Validation(Required=false)]
                    public bool? IsPagedResponse { get; set; }

                    /// <summary>
                    /// <para>The sample success response of the API.</para>
                    /// 
                    /// <b>Example:</b>
                    /// <para>{&quot;success&quot;: true}</para>
                    /// </summary>
                    [NameInMap("SuccessfulResultSample")]
                    [Validation(Required=false)]
                    public string SuccessfulResultSample { get; set; }

                    /// <summary>
                    /// <para>The data source information about the API generated in wizard mode.</para>
                    /// </summary>
                    [NameInMap("WizardConnection")]
                    [Validation(Required=false)]
                    public ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardConnection WizardConnection { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardConnection : TeaModel {
                        /// <summary>
                        /// <para>The ID of the data source.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>123</para>
                        /// </summary>
                        [NameInMap("ConnectionId")]
                        [Validation(Required=false)]
                        public long? ConnectionId { get; set; }

                        /// <summary>
                        /// <para>The name of the table in the data source.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>t</para>
                        /// </summary>
                        [NameInMap("TableName")]
                        [Validation(Required=false)]
                        public string TableName { get; set; }

                    }

                    /// <summary>
                    /// <para>The error codes returned for the API generated in wizard mode.</para>
                    /// </summary>
                    [NameInMap("WizardErrorCodes")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardErrorCodes> WizardErrorCodes { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardErrorCodes : TeaModel {
                        /// <summary>
                        /// <para>The error code.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>1001</para>
                        /// </summary>
                        [NameInMap("ErrorCode")]
                        [Validation(Required=false)]
                        public string ErrorCode { get; set; }

                        /// <summary>
                        /// <para>The error message.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>fail to call</para>
                        /// </summary>
                        [NameInMap("ErrorMessage")]
                        [Validation(Required=false)]
                        public string ErrorMessage { get; set; }

                        /// <summary>
                        /// <para>The solution used to fix the error.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>retry</para>
                        /// </summary>
                        [NameInMap("ErrorSolution")]
                        [Validation(Required=false)]
                        public string ErrorSolution { get; set; }

                    }

                    /// <summary>
                    /// <para>The request parameters of the API generated in wizard mode.</para>
                    /// </summary>
                    [NameInMap("WizardRequestParameters")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardRequestParameters> WizardRequestParameters { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardRequestParameters : TeaModel {
                        /// <summary>
                        /// <para>The default value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>default1</para>
                        /// </summary>
                        [NameInMap("DefaultValue")]
                        [Validation(Required=false)]
                        public string DefaultValue { get; set; }

                        /// <summary>
                        /// <para>The sample value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>example1</para>
                        /// </summary>
                        [NameInMap("ExampleValue")]
                        [Validation(Required=false)]
                        public string ExampleValue { get; set; }

                        /// <summary>
                        /// <para>Indicates whether the request parameter is required.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>true</para>
                        /// </summary>
                        [NameInMap("IsRequiredParameter")]
                        [Validation(Required=false)]
                        public bool? IsRequiredParameter { get; set; }

                        /// <summary>
                        /// <para>The data type of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: String</description></item>
                        /// <item><description>1: Int</description></item>
                        /// <item><description>2: Long</description></item>
                        /// <item><description>3: Float</description></item>
                        /// <item><description>4: Double</description></item>
                        /// <item><description>5: Boolean</description></item>
                        /// <item><description>6: StringList</description></item>
                        /// <item><description>7: IntList</description></item>
                        /// <item><description>8: LongList</description></item>
                        /// <item><description>9: FloatList</description></item>
                        /// <item><description>10: DoubleList</description></item>
                        /// <item><description>11: BooleanList</description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterDataType")]
                        [Validation(Required=false)]
                        public int? ParameterDataType { get; set; }

                        /// <summary>
                        /// <para>The description.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>description1</para>
                        /// </summary>
                        [NameInMap("ParameterDescription")]
                        [Validation(Required=false)]
                        public string ParameterDescription { get; set; }

                        /// <summary>
                        /// <para>The name of the parameter.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>param1</para>
                        /// </summary>
                        [NameInMap("ParameterName")]
                        [Validation(Required=false)]
                        public string ParameterName { get; set; }

                        /// <summary>
                        /// <para>The operator used for the value of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates the Equal operator. The value 1 indicates the Like operator. The value 2 indicates the Const operator. The value 3 indicates the In operator. APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterOperator")]
                        [Validation(Required=false)]
                        public int? ParameterOperator { get; set; }

                        /// <summary>
                        /// <para>The position of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates that the parameter is in the URL path of the request. The value 1 indicates that the parameter is in the Query parameter of the request URL. The value 2 indicates that the parameter is in the request header. The value 3 indicates that the parameter is in the request body. APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterPosition")]
                        [Validation(Required=false)]
                        public int? ParameterPosition { get; set; }

                    }

                    /// <summary>
                    /// <para>The response parameters of the API generated in wizard mode.</para>
                    /// </summary>
                    [NameInMap("WizardResponseParameters")]
                    [Validation(Required=false)]
                    public List<ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardResponseParameters> WizardResponseParameters { get; set; }
                    public class ListDataServicePublishedApisResponseBodyDataApisWizardDetailsWizardResponseParameters : TeaModel {
                        /// <summary>
                        /// <para>The sample value.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>example2</para>
                        /// </summary>
                        [NameInMap("ExampleValue")]
                        [Validation(Required=false)]
                        public string ExampleValue { get; set; }

                        /// <summary>
                        /// <para>The data type of the parameter. Valid values:</para>
                        /// <list type="bullet">
                        /// <item><description>0: String</description></item>
                        /// <item><description>1: Int</description></item>
                        /// <item><description>2: Long</description></item>
                        /// <item><description>3: Float</description></item>
                        /// <item><description>4: Double</description></item>
                        /// <item><description>5: Boolean</description></item>
                        /// <item><description>6: StringList</description></item>
                        /// <item><description>7: IntList</description></item>
                        /// <item><description>8: LongList</description></item>
                        /// <item><description>9: FloatList</description></item>
                        /// <item><description>10: DoubleList</description></item>
                        /// <item><description>11: BooleanList</description></item>
                        /// </list>
                        /// 
                        /// <b>Example:</b>
                        /// <para>0</para>
                        /// </summary>
                        [NameInMap("ParameterDataType")]
                        [Validation(Required=false)]
                        public int? ParameterDataType { get; set; }

                        /// <summary>
                        /// <para>The description.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>description2</para>
                        /// </summary>
                        [NameInMap("ParameterDescription")]
                        [Validation(Required=false)]
                        public string ParameterDescription { get; set; }

                        /// <summary>
                        /// <para>The name of the parameter.</para>
                        /// 
                        /// <b>Example:</b>
                        /// <para>param2</para>
                        /// </summary>
                        [NameInMap("ParameterName")]
                        [Validation(Required=false)]
                        public string ParameterName { get; set; }

                    }

                }

            }

            /// <summary>
            /// <para>The page number. The value of this parameter is the same as that of the PageNumber parameter in the request.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("PageNumber")]
            [Validation(Required=false)]
            public int? PageNumber { get; set; }

            /// <summary>
            /// <para>The number of entries per page. Valid values: 1 to 100. Default value: 10.</para>
            /// 
            /// <b>Example:</b>
            /// <para>10</para>
            /// </summary>
            [NameInMap("PageSize")]
            [Validation(Required=false)]
            public int? PageSize { get; set; }

            /// <summary>
            /// <para>The total number of entries returned.</para>
            /// 
            /// <b>Example:</b>
            /// <para>100</para>
            /// </summary>
            [NameInMap("TotalCount")]
            [Validation(Required=false)]
            public int? TotalCount { get; set; }

        }

        /// <summary>
        /// <para>The error code.</para>
        /// 
        /// <b>Example:</b>
        /// <para>Invalid.Tenant.ConnectionNotExists</para>
        /// </summary>
        [NameInMap("ErrorCode")]
        [Validation(Required=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// <para>The error message.</para>
        /// 
        /// <b>Example:</b>
        /// <para>The connection does not exist.</para>
        /// </summary>
        [NameInMap("ErrorMessage")]
        [Validation(Required=false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// <para>The HTTP status code.</para>
        /// 
        /// <b>Example:</b>
        /// <para>200</para>
        /// </summary>
        [NameInMap("HttpStatusCode")]
        [Validation(Required=false)]
        public int? HttpStatusCode { get; set; }

        /// <summary>
        /// <para>The request ID.</para>
        /// 
        /// <b>Example:</b>
        /// <para>0000-ABCD-EFG****</para>
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// <para>Indicates whether the request was successful.</para>
        /// 
        /// <b>Example:</b>
        /// <para>true</para>
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

    }

}
