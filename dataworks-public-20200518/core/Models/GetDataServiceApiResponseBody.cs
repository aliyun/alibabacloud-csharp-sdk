// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Dataworks_public20200518.Models
{
    public class GetDataServiceApiResponseBody : TeaModel {
        /// <summary>
        /// The data returned.
        /// </summary>
        [NameInMap("Data")]
        [Validation(Required=false)]
        public GetDataServiceApiResponseBodyData Data { get; set; }
        public class GetDataServiceApiResponseBodyData : TeaModel {
            /// <summary>
            /// The ID of the DataService Studio API.
            /// </summary>
            [NameInMap("ApiId")]
            [Validation(Required=false)]
            public long? ApiId { get; set; }

            /// <summary>
            /// The type of the API. Valid values: 0, 1, and 2. The value 0 indicates that the API is generated in wizard mode. The value 1 indicates that the API is generated in script mode. The value 2 indicates that the API is generated by registration.
            /// </summary>
            [NameInMap("ApiMode")]
            [Validation(Required=false)]
            public int? ApiMode { get; set; }

            /// <summary>
            /// The name of the API.
            /// </summary>
            [NameInMap("ApiName")]
            [Validation(Required=false)]
            public string ApiName { get; set; }

            /// <summary>
            /// The path of the API.
            /// </summary>
            [NameInMap("ApiPath")]
            [Validation(Required=false)]
            public string ApiPath { get; set; }

            /// <summary>
            /// The creation time.
            /// </summary>
            [NameInMap("CreatedTime")]
            [Validation(Required=false)]
            public string CreatedTime { get; set; }

            /// <summary>
            /// The ID of the Alibaba Cloud account used by the creator of the API.
            /// </summary>
            [NameInMap("CreatorId")]
            [Validation(Required=false)]
            public string CreatorId { get; set; }

            /// <summary>
            /// The description.
            /// </summary>
            [NameInMap("Description")]
            [Validation(Required=false)]
            public string Description { get; set; }

            /// <summary>
            /// The ID of the folder.
            /// </summary>
            [NameInMap("FolderId")]
            [Validation(Required=false)]
            public long? FolderId { get; set; }

            /// <summary>
            /// The ID of the group.
            /// </summary>
            [NameInMap("GroupId")]
            [Validation(Required=false)]
            public string GroupId { get; set; }

            /// <summary>
            /// The time when the API was last modified.
            /// </summary>
            [NameInMap("ModifiedTime")]
            [Validation(Required=false)]
            public string ModifiedTime { get; set; }

            /// <summary>
            /// The ID of the Alibaba Cloud account used by the user who last modified the API.
            /// </summary>
            [NameInMap("OperatorId")]
            [Validation(Required=false)]
            public string OperatorId { get; set; }

            /// <summary>
            /// The ID of the workspace.
            /// </summary>
            [NameInMap("ProjectId")]
            [Validation(Required=false)]
            public long? ProjectId { get; set; }

            /// <summary>
            /// The list of fields.
            /// </summary>
            [NameInMap("Protocols")]
            [Validation(Required=false)]
            public List<int?> Protocols { get; set; }

            /// <summary>
            /// The details of the API generated by registration. This parameter is returned only if the API is generated by registration.
            /// </summary>
            [NameInMap("RegistrationDetails")]
            [Validation(Required=false)]
            public GetDataServiceApiResponseBodyDataRegistrationDetails RegistrationDetails { get; set; }
            public class GetDataServiceApiResponseBodyDataRegistrationDetails : TeaModel {
                /// <summary>
                /// The sample error response of the API.
                /// </summary>
                [NameInMap("FailedResultSample")]
                [Validation(Required=false)]
                public string FailedResultSample { get; set; }

                /// <summary>
                /// The error codes returned for the API generated by registration.
                /// </summary>
                [NameInMap("RegistrationErrorCodes")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataRegistrationDetailsRegistrationErrorCodes> RegistrationErrorCodes { get; set; }
                public class GetDataServiceApiResponseBodyDataRegistrationDetailsRegistrationErrorCodes : TeaModel {
                    /// <summary>
                    /// The error code returned.
                    /// </summary>
                    [NameInMap("ErrorCode")]
                    [Validation(Required=false)]
                    public string ErrorCode { get; set; }

                    /// <summary>
                    /// The error message returned.
                    /// </summary>
                    [NameInMap("ErrorMessage")]
                    [Validation(Required=false)]
                    public string ErrorMessage { get; set; }

                    /// <summary>
                    /// The solution used to fix the error.
                    /// </summary>
                    [NameInMap("ErrorSolution")]
                    [Validation(Required=false)]
                    public string ErrorSolution { get; set; }

                }

                /// <summary>
                /// The request parameters of the API generated by registration.
                /// </summary>
                [NameInMap("RegistrationRequestParameters")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataRegistrationDetailsRegistrationRequestParameters> RegistrationRequestParameters { get; set; }
                public class GetDataServiceApiResponseBodyDataRegistrationDetailsRegistrationRequestParameters : TeaModel {
                    /// <summary>
                    /// The name of the associated field. This parameter is supported only if the API is generated in wizard mode.
                    /// </summary>
                    [NameInMap("ColumnName")]
                    [Validation(Required=false)]
                    public string ColumnName { get; set; }

                    /// <summary>
                    /// The default value.
                    /// </summary>
                    [NameInMap("DefaultValue")]
                    [Validation(Required=false)]
                    public string DefaultValue { get; set; }

                    /// <summary>
                    /// The sample value.
                    /// </summary>
                    [NameInMap("ExampleValue")]
                    [Validation(Required=false)]
                    public string ExampleValue { get; set; }

                    /// <summary>
                    /// Indicates whether the parameter is required.
                    /// </summary>
                    [NameInMap("IsRequiredParameter")]
                    [Validation(Required=false)]
                    public bool? IsRequiredParameter { get; set; }

                    /// <summary>
                    /// The data type of the parameter. Valid values: 0, 1, 2, 3, 4, and 5. The value 0 indicates the STRING data type, the value 1 indicates the INT data type, the value 2 indicates the LONG data type, the value 3 indicates the FLOAT data type, the value 4 indicates the DOUBLE data type, and the value 5 indicates the BOOLEAN data type.
                    /// </summary>
                    [NameInMap("ParameterDataType")]
                    [Validation(Required=false)]
                    public int? ParameterDataType { get; set; }

                    /// <summary>
                    /// The description.
                    /// </summary>
                    [NameInMap("ParameterDescription")]
                    [Validation(Required=false)]
                    public string ParameterDescription { get; set; }

                    /// <summary>
                    /// The name of the parameter.
                    /// </summary>
                    [NameInMap("ParameterName")]
                    [Validation(Required=false)]
                    public string ParameterName { get; set; }

                    /// <summary>
                    /// The operator used for the value of the parameter. Valid values:
                    /// 
                    /// *   0: indicates that the operator is Equal.
                    /// *   1: indicates that the operator is Like.
                    /// *   2: indicates that the operator is Const.
                    /// *   3: indicates that the operator is In.
                    /// 
                    /// APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.
                    /// </summary>
                    [NameInMap("ParameterOperator")]
                    [Validation(Required=false)]
                    public int? ParameterOperator { get; set; }

                    /// <summary>
                    /// The position of the parameter. Valid values:
                    /// 
                    /// *   0: indicates that the parameter is in the URL path of the request.
                    /// *   1: indicates that the parameter is in the Query parameter of the request URL.
                    /// *   2: indicates that the parameter is in the request header.
                    /// *   3: indicates that the parameter is in the request body.
                    /// 
                    /// APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.
                    /// </summary>
                    [NameInMap("ParameterPosition")]
                    [Validation(Required=false)]
                    public int? ParameterPosition { get; set; }

                }

                /// <summary>
                /// The format in which the response of the API request is returned. Valid values:
                /// 
                /// *   0: indicates the JSON format.
                /// *   1: indicates the XML format.
                /// 
                /// APIs generated in wizard or script mode support the JSON format. APIs generated by registration support the JSON and XML formats.
                /// </summary>
                [NameInMap("ServiceContentType")]
                [Validation(Required=false)]
                public int? ServiceContentType { get; set; }

                /// <summary>
                /// The address of the backend service.
                /// </summary>
                [NameInMap("ServiceHost")]
                [Validation(Required=false)]
                public string ServiceHost { get; set; }

                /// <summary>
                /// The path of the backend service.
                /// </summary>
                [NameInMap("ServicePath")]
                [Validation(Required=false)]
                public string ServicePath { get; set; }

                /// <summary>
                /// The description of the request body initiated to call the backend service.
                /// </summary>
                [NameInMap("ServiceRequestBodyDescription")]
                [Validation(Required=false)]
                public string ServiceRequestBodyDescription { get; set; }

                /// <summary>
                /// Sample success responses
                /// </summary>
                [NameInMap("SuccessfulResultSample")]
                [Validation(Required=false)]
                public string SuccessfulResultSample { get; set; }

            }

            /// <summary>
            /// The request method of the API. Valid values: 0, 1, 2, and 3. The value 0 indicates the GET method, the value 1 indicates the POST method, the value 2 indicates the PUT method, and the value 3 indicates the DELETE method. APIs generated in wizard or script mode support the GET and POST methods. APIs generated by registration support the GET, POST, PUT, and DELETE methods.
            /// </summary>
            [NameInMap("RequestMethod")]
            [Validation(Required=false)]
            public int? RequestMethod { get; set; }

            /// <summary>
            /// The format in which the response of the API request is returned. Valid values: 0 and 1. The value 0 indicates the JSON format. The value 1 indicates the XML format. APIs generated in wizard or script mode support the JSON format. APIs generated by registration support the JSON and XML formats.
            /// </summary>
            [NameInMap("ResponseContentType")]
            [Validation(Required=false)]
            public int? ResponseContentType { get; set; }

            /// <summary>
            /// The details of the API generated in script mode. This parameter is returned only if the API is generated in script mode.
            /// </summary>
            [NameInMap("ScriptDetails")]
            [Validation(Required=false)]
            public GetDataServiceApiResponseBodyDataScriptDetails ScriptDetails { get; set; }
            public class GetDataServiceApiResponseBodyDataScriptDetails : TeaModel {
                /// <summary>
                /// Indicates whether the entries were returned by page.
                /// </summary>
                [NameInMap("IsPagedResponse")]
                [Validation(Required=false)]
                public bool? IsPagedResponse { get; set; }

                /// <summary>
                /// The SQL script.
                /// </summary>
                [NameInMap("Script")]
                [Validation(Required=false)]
                public string Script { get; set; }

                /// <summary>
                /// The data source information of the API generated in script mode.
                /// </summary>
                [NameInMap("ScriptConnection")]
                [Validation(Required=false)]
                public GetDataServiceApiResponseBodyDataScriptDetailsScriptConnection ScriptConnection { get; set; }
                public class GetDataServiceApiResponseBodyDataScriptDetailsScriptConnection : TeaModel {
                    /// <summary>
                    /// The ID of the data source.
                    /// </summary>
                    [NameInMap("ConnectionId")]
                    [Validation(Required=false)]
                    public long? ConnectionId { get; set; }

                    /// <summary>
                    /// The name of the table in the data source.
                    /// </summary>
                    [NameInMap("TableName")]
                    [Validation(Required=false)]
                    public string TableName { get; set; }

                }

                /// <summary>
                /// The request parameters of the API generated in script mode.
                /// </summary>
                [NameInMap("ScriptRequestParameters")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataScriptDetailsScriptRequestParameters> ScriptRequestParameters { get; set; }
                public class GetDataServiceApiResponseBodyDataScriptDetailsScriptRequestParameters : TeaModel {
                    /// <summary>
                    /// The name of the associated field. This parameter is supported only if the API is generated in wizard mode.
                    /// </summary>
                    [NameInMap("ColumnName")]
                    [Validation(Required=false)]
                    public string ColumnName { get; set; }

                    /// <summary>
                    /// The default value.
                    /// </summary>
                    [NameInMap("DefaultValue")]
                    [Validation(Required=false)]
                    public string DefaultValue { get; set; }

                    /// <summary>
                    /// The sample value.
                    /// </summary>
                    [NameInMap("ExampleValue")]
                    [Validation(Required=false)]
                    public string ExampleValue { get; set; }

                    /// <summary>
                    /// Indicates whether the parameter is required.
                    /// </summary>
                    [NameInMap("IsRequiredParameter")]
                    [Validation(Required=false)]
                    public bool? IsRequiredParameter { get; set; }

                    /// <summary>
                    /// The data type of the parameter. Valid values: 0, 1, 2, 3, 4, and 5. The value 0 indicates the STRING data type, the value 1 indicates the INT data type, the value 2 indicates the LONG data type, the value 3 indicates the FLOAT data type, the value 4 indicates the DOUBLE data type, and the value 5 indicates the BOOLEAN data type.
                    /// </summary>
                    [NameInMap("ParameterDataType")]
                    [Validation(Required=false)]
                    public int? ParameterDataType { get; set; }

                    /// <summary>
                    /// The description.
                    /// </summary>
                    [NameInMap("ParameterDescription")]
                    [Validation(Required=false)]
                    public string ParameterDescription { get; set; }

                    /// <summary>
                    /// The name of the parameter.
                    /// </summary>
                    [NameInMap("ParameterName")]
                    [Validation(Required=false)]
                    public string ParameterName { get; set; }

                    /// <summary>
                    /// The operator used for the value of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates that the operator is Equal, the value 1 indicates that the operator is Like, the value 2 indicates that the operator is Const, and the value 3 indicates that the operator is In. APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.
                    /// </summary>
                    [NameInMap("ParameterOperator")]
                    [Validation(Required=false)]
                    public int? ParameterOperator { get; set; }

                    /// <summary>
                    /// The position of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates that the parameter is in the URL path of the request, the value 1 indicates that the parameter is in the Query parameter of the request URL, the value 2 indicates that the parameter is in the request header, and the value 3 indicates that the parameter is in the request body. APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.
                    /// </summary>
                    [NameInMap("ParameterPosition")]
                    [Validation(Required=false)]
                    public int? ParameterPosition { get; set; }

                }

                /// <summary>
                /// The response parameters of the API generated in script mode.
                /// </summary>
                [NameInMap("ScriptResponseParameters")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataScriptDetailsScriptResponseParameters> ScriptResponseParameters { get; set; }
                public class GetDataServiceApiResponseBodyDataScriptDetailsScriptResponseParameters : TeaModel {
                    /// <summary>
                    /// The name of the associated field. This parameter is supported only if the API is generated in wizard mode.
                    /// </summary>
                    [NameInMap("ColumnName")]
                    [Validation(Required=false)]
                    public string ColumnName { get; set; }

                    /// <summary>
                    /// The sample value.
                    /// </summary>
                    [NameInMap("ExampleValue")]
                    [Validation(Required=false)]
                    public string ExampleValue { get; set; }

                    /// <summary>
                    /// The data type of the parameter. Valid values: 0, 1, 2, 3, 4, and 5. The value 0 indicates the STRING data type, the value 1 indicates the INT data type, the value 2 indicates the LONG data type, the value 3 indicates the FLOAT data type, the value 4 indicates the DOUBLE data type, and the value 5 indicates the BOOLEAN data type.
                    /// </summary>
                    [NameInMap("ParameterDataType")]
                    [Validation(Required=false)]
                    public int? ParameterDataType { get; set; }

                    /// <summary>
                    /// The description.
                    /// </summary>
                    [NameInMap("ParameterDescription")]
                    [Validation(Required=false)]
                    public string ParameterDescription { get; set; }

                    /// <summary>
                    /// The name of the parameter.
                    /// </summary>
                    [NameInMap("ParameterName")]
                    [Validation(Required=false)]
                    public string ParameterName { get; set; }

                }

            }

            /// <summary>
            /// The status of the API. Valid values: 0 and 1. The value 0 indicates that the API is not published. The value 1 indicates that the API is published.
            /// </summary>
            [NameInMap("Status")]
            [Validation(Required=false)]
            public int? Status { get; set; }

            /// <summary>
            /// The ID of the tenant.
            /// </summary>
            [NameInMap("TenantId")]
            [Validation(Required=false)]
            public long? TenantId { get; set; }

            /// <summary>
            /// The timeout period of the API request. Unit: milliseconds.
            /// </summary>
            [NameInMap("Timeout")]
            [Validation(Required=false)]
            public int? Timeout { get; set; }

            /// <summary>
            /// The scope in which the API is visible. Valid values: 0 and 1. The value 0 indicates that the API is visible to the members in a specific workspace. The value 1 indicates that the API is visible only to the API creator.
            /// </summary>
            [NameInMap("VisibleRange")]
            [Validation(Required=false)]
            public int? VisibleRange { get; set; }

            /// <summary>
            /// The details of the API generated in wizard mode. This parameter is returned only if the API is generated in wizard mode.
            /// </summary>
            [NameInMap("WizardDetails")]
            [Validation(Required=false)]
            public GetDataServiceApiResponseBodyDataWizardDetails WizardDetails { get; set; }
            public class GetDataServiceApiResponseBodyDataWizardDetails : TeaModel {
                /// <summary>
                /// Indicates whether the entries were returned by page.
                /// </summary>
                [NameInMap("IsPagedResponse")]
                [Validation(Required=false)]
                public bool? IsPagedResponse { get; set; }

                /// <summary>
                /// The data source information of the API generated in wizard mode.
                /// </summary>
                [NameInMap("WizardConnection")]
                [Validation(Required=false)]
                public GetDataServiceApiResponseBodyDataWizardDetailsWizardConnection WizardConnection { get; set; }
                public class GetDataServiceApiResponseBodyDataWizardDetailsWizardConnection : TeaModel {
                    /// <summary>
                    /// The ID of the data source.
                    /// </summary>
                    [NameInMap("ConnectionId")]
                    [Validation(Required=false)]
                    public long? ConnectionId { get; set; }

                    /// <summary>
                    /// The name of the table in the data source.
                    /// </summary>
                    [NameInMap("TableName")]
                    [Validation(Required=false)]
                    public string TableName { get; set; }

                }

                /// <summary>
                /// The request parameters of the API generated in wizard mode.
                /// </summary>
                [NameInMap("WizardRequestParameters")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataWizardDetailsWizardRequestParameters> WizardRequestParameters { get; set; }
                public class GetDataServiceApiResponseBodyDataWizardDetailsWizardRequestParameters : TeaModel {
                    /// <summary>
                    /// The name of the associated field. This parameter is supported only if the API is generated in wizard mode.
                    /// </summary>
                    [NameInMap("ColumnName")]
                    [Validation(Required=false)]
                    public string ColumnName { get; set; }

                    /// <summary>
                    /// The default value.
                    /// </summary>
                    [NameInMap("DefaultValue")]
                    [Validation(Required=false)]
                    public string DefaultValue { get; set; }

                    /// <summary>
                    /// The sample value.
                    /// </summary>
                    [NameInMap("ExampleValue")]
                    [Validation(Required=false)]
                    public string ExampleValue { get; set; }

                    /// <summary>
                    /// Indicates whether the parameter is required.
                    /// </summary>
                    [NameInMap("IsRequiredParameter")]
                    [Validation(Required=false)]
                    public bool? IsRequiredParameter { get; set; }

                    /// <summary>
                    /// The data type of the parameter. Valid values: 0, 1, 2, 3, 4, and 5. The value 0 indicates the STRING data type, the value 1 indicates the INT data type, the value 2 indicates the LONG data type, the value 3 indicates the FLOAT data type, the value 4 indicates the DOUBLE data type, and the value 5 indicates the BOOLEAN data type.
                    /// </summary>
                    [NameInMap("ParameterDataType")]
                    [Validation(Required=false)]
                    public int? ParameterDataType { get; set; }

                    /// <summary>
                    /// The description.
                    /// </summary>
                    [NameInMap("ParameterDescription")]
                    [Validation(Required=false)]
                    public string ParameterDescription { get; set; }

                    /// <summary>
                    /// The name of the parameter.
                    /// </summary>
                    [NameInMap("ParameterName")]
                    [Validation(Required=false)]
                    public string ParameterName { get; set; }

                    /// <summary>
                    /// The operator used for the value of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates that the operator is Equal, the value 1 indicates that the operator is Like, the value 2 indicates that the operator is Const, and the value 3 indicates that the operator is In. APIs generated in wizard mode support the Equal, Like, and In operators. APIs generated in script mode support the Equal operator. APIs generated by registration support the Equal and Const operators.
                    /// </summary>
                    [NameInMap("ParameterOperator")]
                    [Validation(Required=false)]
                    public int? ParameterOperator { get; set; }

                    /// <summary>
                    /// The position of the parameter. Valid values: 0, 1, 2, and 3. The value 0 indicates that the parameter is in the URL path of the request, the value 1 indicates that the parameter is in the Query parameter of the request URL, the value 2 indicates that the parameter is in the request header, and the value 3 indicates that the parameter is in the request body. APIs generated in wizard or script mode support only the Query position. APIs generated by registration whose request method is GET or DELETE support the Query and Head positions. APIs generated by registration whose request method is PUT or POST support the Query, Head, and Body positions.
                    /// </summary>
                    [NameInMap("ParameterPosition")]
                    [Validation(Required=false)]
                    public int? ParameterPosition { get; set; }

                }

                /// <summary>
                /// The response parameters of the API generated in wizard mode.
                /// </summary>
                [NameInMap("WizardResponseParameters")]
                [Validation(Required=false)]
                public List<GetDataServiceApiResponseBodyDataWizardDetailsWizardResponseParameters> WizardResponseParameters { get; set; }
                public class GetDataServiceApiResponseBodyDataWizardDetailsWizardResponseParameters : TeaModel {
                    /// <summary>
                    /// The name of the associated field. This parameter is supported only if the API is generated in wizard mode.
                    /// </summary>
                    [NameInMap("ColumnName")]
                    [Validation(Required=false)]
                    public string ColumnName { get; set; }

                    /// <summary>
                    /// The sample value.
                    /// </summary>
                    [NameInMap("ExampleValue")]
                    [Validation(Required=false)]
                    public string ExampleValue { get; set; }

                    /// <summary>
                    /// The data type of the parameter. Valid values: 0, 1, 2, 3, 4, and 5. The value 0 indicates the STRING data type, the value 1 indicates the INT data type, the value 2 indicates the LONG data type, the value 3 indicates the FLOAT data type, the value 4 indicates the DOUBLE data type, and the value 5 indicates the BOOLEAN data type.
                    /// </summary>
                    [NameInMap("ParameterDataType")]
                    [Validation(Required=false)]
                    public int? ParameterDataType { get; set; }

                    /// <summary>
                    /// The description.
                    /// </summary>
                    [NameInMap("ParameterDescription")]
                    [Validation(Required=false)]
                    public string ParameterDescription { get; set; }

                    /// <summary>
                    /// The name of the parameter.
                    /// </summary>
                    [NameInMap("ParameterName")]
                    [Validation(Required=false)]
                    public string ParameterName { get; set; }

                }

            }

        }

        /// <summary>
        /// The error code returned.
        /// </summary>
        [NameInMap("ErrorCode")]
        [Validation(Required=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// The error message returned.
        /// </summary>
        [NameInMap("ErrorMessage")]
        [Validation(Required=false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// The HTTP status code returned.
        /// </summary>
        [NameInMap("HttpStatusCode")]
        [Validation(Required=false)]
        public int? HttpStatusCode { get; set; }

        /// <summary>
        /// The ID of the request.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Indicates whether the request was successful.
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

    }

}
