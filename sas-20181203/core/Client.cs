// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;

using Tea;
using Tea.Utils;

using AlibabaCloud.SDK.Sas20181203.Models;

namespace AlibabaCloud.SDK.Sas20181203
{
    public class Client : AlibabaCloud.OpenApiClient.Client
    {

        public Client(AlibabaCloud.OpenApiClient.Models.Config config): base(config)
        {
            this._endpointRule = "regional";
            this._endpointMap = new Dictionary<string, string>
            {
                {"cn-qingdao", "tds.aliyuncs.com"},
                {"cn-beijing", "tds.aliyuncs.com"},
                {"cn-zhangjiakou", "tds.aliyuncs.com"},
                {"cn-huhehaote", "tds.aliyuncs.com"},
                {"cn-wulanchabu", "tds.aliyuncs.com"},
                {"cn-hangzhou", "tds.aliyuncs.com"},
                {"cn-shanghai", "tds.aliyuncs.com"},
                {"cn-nanjing", "tds.aliyuncs.com"},
                {"cn-fuzhou", "tds.aliyuncs.com"},
                {"cn-shenzhen", "tds.aliyuncs.com"},
                {"cn-heyuan", "tds.aliyuncs.com"},
                {"cn-guangzhou", "tds.aliyuncs.com"},
                {"ap-southeast-2", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-southeast-6", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-northeast-2", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-southeast-3", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-northeast-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-southeast-7", "tds.ap-southeast-1.aliyuncs.com"},
                {"cn-chengdu", "tds.aliyuncs.com"},
                {"ap-southeast-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-southeast-5", "tds.ap-southeast-1.aliyuncs.com"},
                {"cn-hongkong", "tds.aliyuncs.com"},
                {"eu-central-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"us-east-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"us-west-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"eu-west-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"me-east-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"me-central-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"ap-south-1", "tds.ap-southeast-1.aliyuncs.com"},
                {"cn-beijing-finance-1", "tds.aliyuncs.com"},
                {"cn-hangzhou-finance", "tds.aliyuncs.com"},
                {"cn-shanghai-finance-1", "tds.aliyuncs.com"},
                {"cn-shenzhen-finance-1", "tds.aliyuncs.com"},
                {"cn-heyuan-acdr-1", "tds.aliyuncs.com"},
                {"cn-north-2-gov-1", "tds.aliyuncs.com"},
                {"cn-qingdao-acdr-ut-1", "tds.aliyuncs.com"},
                {"cn-shanghai-mybk", "tds.aliyuncs.com"},
                {"cn-wuhan-lr", "tds.aliyuncs.com"},
                {"cn-zhengzhou-jva", "tds.aliyuncs.com"},
            };
            CheckConfig(config);
            this._endpoint = GetEndpoint("sas", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
        }


        public string GetEndpoint(string productId, string regionId, string endpointRule, string network, string suffix, Dictionary<string, string> endpointMap, string endpoint)
        {
            if (!AlibabaCloud.TeaUtil.Common.Empty(endpoint))
            {
                return endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(endpointMap) && !AlibabaCloud.TeaUtil.Common.Empty(endpointMap.Get(regionId)))
            {
                return endpointMap.Get(regionId);
            }
            return AlibabaCloud.EndpointUtil.Common.GetEndpointRules(productId, regionId, endpointRule, network, suffix);
        }

        /**
         * @summary Select an operation for assets.
         *
         * @param request AddAssetSelectionCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddAssetSelectionCriteriaResponse
         */
        public AddAssetSelectionCriteriaResponse AddAssetSelectionCriteriaWithOptions(AddAssetSelectionCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaOperation))
            {
                query["CriteriaOperation"] = request.CriteriaOperation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperationList))
            {
                query["TargetOperationList"] = request.TargetOperationList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddAssetSelectionCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddAssetSelectionCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Select an operation for assets.
         *
         * @param request AddAssetSelectionCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddAssetSelectionCriteriaResponse
         */
        public async Task<AddAssetSelectionCriteriaResponse> AddAssetSelectionCriteriaWithOptionsAsync(AddAssetSelectionCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaOperation))
            {
                query["CriteriaOperation"] = request.CriteriaOperation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperationList))
            {
                query["TargetOperationList"] = request.TargetOperationList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddAssetSelectionCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddAssetSelectionCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Select an operation for assets.
         *
         * @param request AddAssetSelectionCriteriaRequest
         * @return AddAssetSelectionCriteriaResponse
         */
        public AddAssetSelectionCriteriaResponse AddAssetSelectionCriteria(AddAssetSelectionCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddAssetSelectionCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Select an operation for assets.
         *
         * @param request AddAssetSelectionCriteriaRequest
         * @return AddAssetSelectionCriteriaResponse
         */
        public async Task<AddAssetSelectionCriteriaResponse> AddAssetSelectionCriteriaAsync(AddAssetSelectionCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddAssetSelectionCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds check items to the whitelist for instances.
         *
         * @param request AddCheckInstanceResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddCheckInstanceResultWhiteListResponse
         */
        public AddCheckInstanceResultWhiteListResponse AddCheckInstanceResultWhiteListWithOptions(AddCheckInstanceResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                query["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddCheckInstanceResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddCheckInstanceResultWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds check items to the whitelist for instances.
         *
         * @param request AddCheckInstanceResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddCheckInstanceResultWhiteListResponse
         */
        public async Task<AddCheckInstanceResultWhiteListResponse> AddCheckInstanceResultWhiteListWithOptionsAsync(AddCheckInstanceResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                query["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddCheckInstanceResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddCheckInstanceResultWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds check items to the whitelist for instances.
         *
         * @param request AddCheckInstanceResultWhiteListRequest
         * @return AddCheckInstanceResultWhiteListResponse
         */
        public AddCheckInstanceResultWhiteListResponse AddCheckInstanceResultWhiteList(AddCheckInstanceResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddCheckInstanceResultWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Adds check items to the whitelist for instances.
         *
         * @param request AddCheckInstanceResultWhiteListRequest
         * @return AddCheckInstanceResultWhiteListResponse
         */
        public async Task<AddCheckInstanceResultWhiteListResponse> AddCheckInstanceResultWhiteListAsync(AddCheckInstanceResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddCheckInstanceResultWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds check items to the whitelist.
         *
         * @param request AddCheckResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddCheckResultWhiteListResponse
         */
        public AddCheckResultWhiteListResponse AddCheckResultWhiteListWithOptions(AddCheckResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddCheckResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddCheckResultWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds check items to the whitelist.
         *
         * @param request AddCheckResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddCheckResultWhiteListResponse
         */
        public async Task<AddCheckResultWhiteListResponse> AddCheckResultWhiteListWithOptionsAsync(AddCheckResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddCheckResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddCheckResultWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds check items to the whitelist.
         *
         * @param request AddCheckResultWhiteListRequest
         * @return AddCheckResultWhiteListResponse
         */
        public AddCheckResultWhiteListResponse AddCheckResultWhiteList(AddCheckResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddCheckResultWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Adds check items to the whitelist.
         *
         * @param request AddCheckResultWhiteListRequest
         * @return AddCheckResultWhiteListResponse
         */
        public async Task<AddCheckResultWhiteListResponse> AddCheckResultWhiteListAsync(AddCheckResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddCheckResultWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a custom defense rule.
         *
         * @param request AddClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddClientUserDefineRuleResponse
         */
        public AddClientUserDefineRuleResponse AddClientUserDefineRuleWithOptions(AddClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionType))
            {
                query["ActionType"] = request.ActionType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Domain))
            {
                query["Domain"] = request.Domain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePath))
            {
                query["FilePath"] = request.FilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IP))
            {
                query["IP"] = request.IP;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5List))
            {
                query["Md5List"] = request.Md5List;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewFilePath))
            {
                query["NewFilePath"] = request.NewFilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentCmdline))
            {
                query["ParentCmdline"] = request.ParentCmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentProcPath))
            {
                query["ParentProcPath"] = request.ParentProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Platform))
            {
                query["Platform"] = request.Platform;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PortStr))
            {
                query["PortStr"] = request.PortStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPath))
            {
                query["ProcPath"] = request.ProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryContent))
            {
                query["RegistryContent"] = request.RegistryContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryKey))
            {
                query["RegistryKey"] = request.RegistryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddClientUserDefineRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a custom defense rule.
         *
         * @param request AddClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddClientUserDefineRuleResponse
         */
        public async Task<AddClientUserDefineRuleResponse> AddClientUserDefineRuleWithOptionsAsync(AddClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionType))
            {
                query["ActionType"] = request.ActionType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Domain))
            {
                query["Domain"] = request.Domain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePath))
            {
                query["FilePath"] = request.FilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IP))
            {
                query["IP"] = request.IP;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5List))
            {
                query["Md5List"] = request.Md5List;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewFilePath))
            {
                query["NewFilePath"] = request.NewFilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentCmdline))
            {
                query["ParentCmdline"] = request.ParentCmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentProcPath))
            {
                query["ParentProcPath"] = request.ParentProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Platform))
            {
                query["Platform"] = request.Platform;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PortStr))
            {
                query["PortStr"] = request.PortStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPath))
            {
                query["ProcPath"] = request.ProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryContent))
            {
                query["RegistryContent"] = request.RegistryContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryKey))
            {
                query["RegistryKey"] = request.RegistryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddClientUserDefineRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a custom defense rule.
         *
         * @param request AddClientUserDefineRuleRequest
         * @return AddClientUserDefineRuleResponse
         */
        public AddClientUserDefineRuleResponse AddClientUserDefineRule(AddClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddClientUserDefineRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a custom defense rule.
         *
         * @param request AddClientUserDefineRuleRequest
         * @return AddClientUserDefineRuleResponse
         */
        public async Task<AddClientUserDefineRuleResponse> AddClientUserDefineRuleAsync(AddClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddClientUserDefineRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a rule for non-image program defense.
         *
         * @param tmpReq AddContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddContainerDefenseRuleResponse
         */
        public AddContainerDefenseRuleResponse AddContainerDefenseRuleWithOptions(AddContainerDefenseRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            AddContainerDefenseRuleShrinkRequest request = new AddContainerDefenseRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Whitelist))
            {
                request.WhitelistShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Whitelist, "Whitelist", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scope))
            {
                query["Scope"] = request.Scope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhitelistShrink))
            {
                query["Whitelist"] = request.WhitelistShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddContainerDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a rule for non-image program defense.
         *
         * @param tmpReq AddContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddContainerDefenseRuleResponse
         */
        public async Task<AddContainerDefenseRuleResponse> AddContainerDefenseRuleWithOptionsAsync(AddContainerDefenseRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            AddContainerDefenseRuleShrinkRequest request = new AddContainerDefenseRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Whitelist))
            {
                request.WhitelistShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Whitelist, "Whitelist", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scope))
            {
                query["Scope"] = request.Scope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhitelistShrink))
            {
                query["Whitelist"] = request.WhitelistShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddContainerDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a rule for non-image program defense.
         *
         * @param request AddContainerDefenseRuleRequest
         * @return AddContainerDefenseRuleResponse
         */
        public AddContainerDefenseRuleResponse AddContainerDefenseRule(AddContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddContainerDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a rule for non-image program defense.
         *
         * @param request AddContainerDefenseRuleRequest
         * @return AddContainerDefenseRuleResponse
         */
        public async Task<AddContainerDefenseRuleResponse> AddContainerDefenseRuleAsync(AddContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddContainerDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a defense rule against container escapes.
         *
         * @param request AddContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddContainerPluginRuleResponse
         */
        public AddContainerPluginRuleResponse AddContainerPluginRuleWithOptions(AddContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleTemplateId))
            {
                query["RuleTemplateId"] = request.RuleTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectedPolicy))
            {
                query["SelectedPolicy"] = request.SelectedPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteImages))
            {
                query["WhiteImages"] = request.WhiteImages;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddContainerPluginRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule against container escapes.
         *
         * @param request AddContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddContainerPluginRuleResponse
         */
        public async Task<AddContainerPluginRuleResponse> AddContainerPluginRuleWithOptionsAsync(AddContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleTemplateId))
            {
                query["RuleTemplateId"] = request.RuleTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectedPolicy))
            {
                query["SelectedPolicy"] = request.SelectedPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteImages))
            {
                query["WhiteImages"] = request.WhiteImages;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddContainerPluginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule against container escapes.
         *
         * @param request AddContainerPluginRuleRequest
         * @return AddContainerPluginRuleResponse
         */
        public AddContainerPluginRuleResponse AddContainerPluginRule(AddContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddContainerPluginRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a defense rule against container escapes.
         *
         * @param request AddContainerPluginRuleRequest
         * @return AddContainerPluginRuleResponse
         */
        public async Task<AddContainerPluginRuleResponse> AddContainerPluginRuleAsync(AddContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddContainerPluginRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an alert handling rule.
         *
         * @param request AddImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddImageEventOperationResponse
         */
        public AddImageEventOperationResponse AddImageEventOperationWithOptions(AddImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Conditions))
            {
                query["Conditions"] = request.Conditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventKey))
            {
                query["EventKey"] = request.EventKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenarios))
            {
                query["Scenarios"] = request.Scenarios;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddImageEventOperationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an alert handling rule.
         *
         * @param request AddImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddImageEventOperationResponse
         */
        public async Task<AddImageEventOperationResponse> AddImageEventOperationWithOptionsAsync(AddImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Conditions))
            {
                query["Conditions"] = request.Conditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventKey))
            {
                query["EventKey"] = request.EventKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenarios))
            {
                query["Scenarios"] = request.Scenarios;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddImageEventOperationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an alert handling rule.
         *
         * @param request AddImageEventOperationRequest
         * @return AddImageEventOperationResponse
         */
        public AddImageEventOperationResponse AddImageEventOperation(AddImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddImageEventOperationWithOptions(request, runtime);
        }

        /**
         * @summary Creates an alert handling rule.
         *
         * @param request AddImageEventOperationRequest
         * @return AddImageEventOperationResponse
         */
        public async Task<AddImageEventOperationResponse> AddImageEventOperationAsync(AddImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddImageEventOperationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds image vulnerabilities to the whitelist.
         *
         * @param request AddImageVulWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddImageVulWhiteListResponse
         */
        public AddImageVulWhiteListResponse AddImageVulWhiteListWithOptions(AddImageVulWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddImageVulWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddImageVulWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds image vulnerabilities to the whitelist.
         *
         * @param request AddImageVulWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddImageVulWhiteListResponse
         */
        public async Task<AddImageVulWhiteListResponse> AddImageVulWhiteListWithOptionsAsync(AddImageVulWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddImageVulWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddImageVulWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds image vulnerabilities to the whitelist.
         *
         * @param request AddImageVulWhiteListRequest
         * @return AddImageVulWhiteListResponse
         */
        public AddImageVulWhiteListResponse AddImageVulWhiteList(AddImageVulWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddImageVulWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Adds image vulnerabilities to the whitelist.
         *
         * @param request AddImageVulWhiteListRequest
         * @return AddImageVulWhiteListResponse
         */
        public async Task<AddImageVulWhiteListResponse> AddImageVulWhiteListAsync(AddImageVulWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddImageVulWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a command that is used to install the Security Center agent.
         *
         * @param request AddInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddInstallCodeResponse
         */
        public AddInstallCodeResponse AddInstallCodeWithOptions(AddInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpiredDate))
            {
                query["ExpiredDate"] = request.ExpiredDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OnlyImage))
            {
                query["OnlyImage"] = request.OnlyImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyCluster))
            {
                query["ProxyCluster"] = request.ProxyCluster;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VendorName))
            {
                query["VendorName"] = request.VendorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddInstallCodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a command that is used to install the Security Center agent.
         *
         * @param request AddInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddInstallCodeResponse
         */
        public async Task<AddInstallCodeResponse> AddInstallCodeWithOptionsAsync(AddInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpiredDate))
            {
                query["ExpiredDate"] = request.ExpiredDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OnlyImage))
            {
                query["OnlyImage"] = request.OnlyImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyCluster))
            {
                query["ProxyCluster"] = request.ProxyCluster;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VendorName))
            {
                query["VendorName"] = request.VendorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddInstallCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a command that is used to install the Security Center agent.
         *
         * @param request AddInstallCodeRequest
         * @return AddInstallCodeResponse
         */
        public AddInstallCodeResponse AddInstallCode(AddInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddInstallCodeWithOptions(request, runtime);
        }

        /**
         * @summary Creates a command that is used to install the Security Center agent.
         *
         * @param request AddInstallCodeRequest
         * @return AddInstallCodeResponse
         */
        public async Task<AddInstallCodeResponse> AddInstallCodeAsync(AddInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddInstallCodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a self-managed image repository.
         *
         * @param request AddPrivateRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrivateRegistryResponse
         */
        public AddPrivateRegistryResponse AddPrivateRegistryWithOptions(AddPrivateRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                query["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtraParam))
            {
                query["ExtraParam"] = request.ExtraParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                query["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                query["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                query["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryHostIp))
            {
                query["RegistryHostIp"] = request.RegistryHostIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryRegionId))
            {
                query["RegistryRegionId"] = request.RegistryRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                query["RegistryType"] = request.RegistryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryVersion))
            {
                query["RegistryVersion"] = request.RegistryVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                query["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                query["UserName"] = request.UserName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrivateRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrivateRegistryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a self-managed image repository.
         *
         * @param request AddPrivateRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrivateRegistryResponse
         */
        public async Task<AddPrivateRegistryResponse> AddPrivateRegistryWithOptionsAsync(AddPrivateRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                query["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtraParam))
            {
                query["ExtraParam"] = request.ExtraParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                query["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                query["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                query["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryHostIp))
            {
                query["RegistryHostIp"] = request.RegistryHostIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryRegionId))
            {
                query["RegistryRegionId"] = request.RegistryRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                query["RegistryType"] = request.RegistryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryVersion))
            {
                query["RegistryVersion"] = request.RegistryVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                query["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                query["UserName"] = request.UserName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrivateRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrivateRegistryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a self-managed image repository.
         *
         * @param request AddPrivateRegistryRequest
         * @return AddPrivateRegistryResponse
         */
        public AddPrivateRegistryResponse AddPrivateRegistry(AddPrivateRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrivateRegistryWithOptions(request, runtime);
        }

        /**
         * @summary Adds a self-managed image repository.
         *
         * @param request AddPrivateRegistryRequest
         * @return AddPrivateRegistryResponse
         */
        public async Task<AddPrivateRegistryResponse> AddPrivateRegistryAsync(AddPrivateRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrivateRegistryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a rule for container tamper-proofing.
         *
         * @param request AddSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddSasContainerWebDefenseRuleResponse
         */
        public AddSasContainerWebDefenseRuleResponse AddSasContainerWebDefenseRuleWithOptions(AddSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PathConfDTOList))
            {
                query["PathConfDTOList"] = request.PathConfDTOList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddSasContainerWebDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a rule for container tamper-proofing.
         *
         * @param request AddSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddSasContainerWebDefenseRuleResponse
         */
        public async Task<AddSasContainerWebDefenseRuleResponse> AddSasContainerWebDefenseRuleWithOptionsAsync(AddSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PathConfDTOList))
            {
                query["PathConfDTOList"] = request.PathConfDTOList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddSasContainerWebDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a rule for container tamper-proofing.
         *
         * @param request AddSasContainerWebDefenseRuleRequest
         * @return AddSasContainerWebDefenseRuleResponse
         */
        public AddSasContainerWebDefenseRuleResponse AddSasContainerWebDefenseRule(AddSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddSasContainerWebDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a rule for container tamper-proofing.
         *
         * @param request AddSasContainerWebDefenseRuleRequest
         * @return AddSasContainerWebDefenseRuleResponse
         */
        public async Task<AddSasContainerWebDefenseRuleResponse> AddSasContainerWebDefenseRuleAsync(AddSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddSasContainerWebDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request AddSasModuleTrialRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddSasModuleTrialResponse
         */
        public AddSasModuleTrialResponse AddSasModuleTrialWithOptions(AddSasModuleTrialRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleCode))
            {
                query["ModuleCode"] = request.ModuleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddSasModuleTrial",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddSasModuleTrialResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request AddSasModuleTrialRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddSasModuleTrialResponse
         */
        public async Task<AddSasModuleTrialResponse> AddSasModuleTrialWithOptionsAsync(AddSasModuleTrialRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleCode))
            {
                query["ModuleCode"] = request.ModuleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddSasModuleTrial",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddSasModuleTrialResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request AddSasModuleTrialRequest
         * @return AddSasModuleTrialResponse
         */
        public AddSasModuleTrialResponse AddSasModuleTrial(AddSasModuleTrialRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddSasModuleTrialWithOptions(request, runtime);
        }

        /**
         * @summary Enables the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request AddSasModuleTrialRequest
         * @return AddSasModuleTrialResponse
         */
        public async Task<AddSasModuleTrialResponse> AddSasModuleTrialAsync(AddSasModuleTrialRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddSasModuleTrialWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a tag to assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call the AddTagWithUuid operation to add only a custom tag to assets.
         *
         * @param request AddTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddTagWithUuidResponse
         */
        public AddTagWithUuidResponse AddTagWithUuidWithOptions(AddTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTagWithUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a tag to assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call the AddTagWithUuid operation to add only a custom tag to assets.
         *
         * @param request AddTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddTagWithUuidResponse
         */
        public async Task<AddTagWithUuidResponse> AddTagWithUuidWithOptionsAsync(AddTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTagWithUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a tag to assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call the AddTagWithUuid operation to add only a custom tag to assets.
         *
         * @param request AddTagWithUuidRequest
         * @return AddTagWithUuidResponse
         */
        public AddTagWithUuidResponse AddTagWithUuid(AddTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddTagWithUuidWithOptions(request, runtime);
        }

        /**
         * @summary Adds a tag to assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call the AddTagWithUuid operation to add only a custom tag to assets.
         *
         * @param request AddTagWithUuidRequest
         * @return AddTagWithUuidResponse
         */
        public async Task<AddTagWithUuidResponse> AddTagWithUuidAsync(AddTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddTagWithUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds servers from which you want to uninstall the Security Center agent.
         *
         * @param request AddUninstallClientsByUuidsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddUninstallClientsByUuidsResponse
         */
        public AddUninstallClientsByUuidsResponse AddUninstallClientsByUuidsWithOptions(AddUninstallClientsByUuidsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CallMethod))
            {
                query["CallMethod"] = request.CallMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Feedback))
            {
                query["Feedback"] = request.Feedback;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddUninstallClientsByUuids",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddUninstallClientsByUuidsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds servers from which you want to uninstall the Security Center agent.
         *
         * @param request AddUninstallClientsByUuidsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddUninstallClientsByUuidsResponse
         */
        public async Task<AddUninstallClientsByUuidsResponse> AddUninstallClientsByUuidsWithOptionsAsync(AddUninstallClientsByUuidsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CallMethod))
            {
                query["CallMethod"] = request.CallMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Feedback))
            {
                query["Feedback"] = request.Feedback;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddUninstallClientsByUuids",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddUninstallClientsByUuidsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds servers from which you want to uninstall the Security Center agent.
         *
         * @param request AddUninstallClientsByUuidsRequest
         * @return AddUninstallClientsByUuidsResponse
         */
        public AddUninstallClientsByUuidsResponse AddUninstallClientsByUuids(AddUninstallClientsByUuidsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddUninstallClientsByUuidsWithOptions(request, runtime);
        }

        /**
         * @summary Adds servers from which you want to uninstall the Security Center agent.
         *
         * @param request AddUninstallClientsByUuidsRequest
         * @return AddUninstallClientsByUuidsResponse
         */
        public async Task<AddUninstallClientsByUuidsResponse> AddUninstallClientsByUuidsAsync(AddUninstallClientsByUuidsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddUninstallClientsByUuidsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request AddVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddVpcHoneyPotResponse
         */
        public AddVpcHoneyPotResponse AddVpcHoneyPotWithOptions(AddVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddVpcHoneyPotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request AddVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddVpcHoneyPotResponse
         */
        public async Task<AddVpcHoneyPotResponse> AddVpcHoneyPotWithOptionsAsync(AddVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddVpcHoneyPotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request AddVpcHoneyPotRequest
         * @return AddVpcHoneyPotResponse
         */
        public AddVpcHoneyPotResponse AddVpcHoneyPot(AddVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddVpcHoneyPotWithOptions(request, runtime);
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request AddVpcHoneyPotRequest
         * @return AddVpcHoneyPotResponse
         */
        public async Task<AddVpcHoneyPotResponse> AddVpcHoneyPotAsync(AddVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddVpcHoneyPotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of an advanced whitelist rule.
         *
         * @param request AdvanceSecurityEventOperationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AdvanceSecurityEventOperationsResponse
         */
        public AdvanceSecurityEventOperationsResponse AdvanceSecurityEventOperationsWithOptions(AdvanceSecurityEventOperationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AdvanceSecurityEventOperations",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AdvanceSecurityEventOperationsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of an advanced whitelist rule.
         *
         * @param request AdvanceSecurityEventOperationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AdvanceSecurityEventOperationsResponse
         */
        public async Task<AdvanceSecurityEventOperationsResponse> AdvanceSecurityEventOperationsWithOptionsAsync(AdvanceSecurityEventOperationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AdvanceSecurityEventOperations",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AdvanceSecurityEventOperationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of an advanced whitelist rule.
         *
         * @param request AdvanceSecurityEventOperationsRequest
         * @return AdvanceSecurityEventOperationsResponse
         */
        public AdvanceSecurityEventOperationsResponse AdvanceSecurityEventOperations(AdvanceSecurityEventOperationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AdvanceSecurityEventOperationsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of an advanced whitelist rule.
         *
         * @param request AdvanceSecurityEventOperationsRequest
         * @return AdvanceSecurityEventOperationsResponse
         */
        public async Task<AdvanceSecurityEventOperationsResponse> AdvanceSecurityEventOperationsAsync(AdvanceSecurityEventOperationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AdvanceSecurityEventOperationsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes whitelist rules for alerts generated for sensitive files that are detected by using the agentless detection feature in batches.
         *
         * @param request BatchDeleteMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchDeleteMaliciousFileWhitelistConfigResponse
         */
        public BatchDeleteMaliciousFileWhitelistConfigResponse BatchDeleteMaliciousFileWhitelistConfigWithOptions(BatchDeleteMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigIdList))
            {
                query["ConfigIdList"] = request.ConfigIdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes whitelist rules for alerts generated for sensitive files that are detected by using the agentless detection feature in batches.
         *
         * @param request BatchDeleteMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchDeleteMaliciousFileWhitelistConfigResponse
         */
        public async Task<BatchDeleteMaliciousFileWhitelistConfigResponse> BatchDeleteMaliciousFileWhitelistConfigWithOptionsAsync(BatchDeleteMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigIdList))
            {
                query["ConfigIdList"] = request.ConfigIdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes whitelist rules for alerts generated for sensitive files that are detected by using the agentless detection feature in batches.
         *
         * @param request BatchDeleteMaliciousFileWhitelistConfigRequest
         * @return BatchDeleteMaliciousFileWhitelistConfigResponse
         */
        public BatchDeleteMaliciousFileWhitelistConfigResponse BatchDeleteMaliciousFileWhitelistConfig(BatchDeleteMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchDeleteMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes whitelist rules for alerts generated for sensitive files that are detected by using the agentless detection feature in batches.
         *
         * @param request BatchDeleteMaliciousFileWhitelistConfigRequest
         * @return BatchDeleteMaliciousFileWhitelistConfigResponse
         */
        public async Task<BatchDeleteMaliciousFileWhitelistConfigResponse> BatchDeleteMaliciousFileWhitelistConfigAsync(BatchDeleteMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchDeleteMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables multiple features in proactive defense at a time.
         *
         * @param request BatchOperateCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchOperateCommonOverallConfigResponse
         */
        public BatchOperateCommonOverallConfigResponse BatchOperateCommonOverallConfigWithOptions(BatchOperateCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchOperateCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchOperateCommonOverallConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables multiple features in proactive defense at a time.
         *
         * @param request BatchOperateCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchOperateCommonOverallConfigResponse
         */
        public async Task<BatchOperateCommonOverallConfigResponse> BatchOperateCommonOverallConfigWithOptionsAsync(BatchOperateCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchOperateCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchOperateCommonOverallConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables multiple features in proactive defense at a time.
         *
         * @param request BatchOperateCommonOverallConfigRequest
         * @return BatchOperateCommonOverallConfigResponse
         */
        public BatchOperateCommonOverallConfigResponse BatchOperateCommonOverallConfig(BatchOperateCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchOperateCommonOverallConfigWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables multiple features in proactive defense at a time.
         *
         * @param request BatchOperateCommonOverallConfigRequest
         * @return BatchOperateCommonOverallConfigResponse
         */
        public async Task<BatchOperateCommonOverallConfigResponse> BatchOperateCommonOverallConfigAsync(BatchOperateCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchOperateCommonOverallConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies multiple alert whitelist rules of sensitive files that are detected by using the agentless detection feature at a time.
         *
         * @param request BatchUpdateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchUpdateMaliciousFileWhitelistConfigResponse
         */
        public BatchUpdateMaliciousFileWhitelistConfigResponse BatchUpdateMaliciousFileWhitelistConfigWithOptions(BatchUpdateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigList))
            {
                query["ConfigList"] = request.ConfigList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies multiple alert whitelist rules of sensitive files that are detected by using the agentless detection feature at a time.
         *
         * @param request BatchUpdateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BatchUpdateMaliciousFileWhitelistConfigResponse
         */
        public async Task<BatchUpdateMaliciousFileWhitelistConfigResponse> BatchUpdateMaliciousFileWhitelistConfigWithOptionsAsync(BatchUpdateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigList))
            {
                query["ConfigList"] = request.ConfigList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies multiple alert whitelist rules of sensitive files that are detected by using the agentless detection feature at a time.
         *
         * @param request BatchUpdateMaliciousFileWhitelistConfigRequest
         * @return BatchUpdateMaliciousFileWhitelistConfigResponse
         */
        public BatchUpdateMaliciousFileWhitelistConfigResponse BatchUpdateMaliciousFileWhitelistConfig(BatchUpdateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUpdateMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies multiple alert whitelist rules of sensitive files that are detected by using the agentless detection feature at a time.
         *
         * @param request BatchUpdateMaliciousFileWhitelistConfigRequest
         * @return BatchUpdateMaliciousFileWhitelistConfigResponse
         */
        public async Task<BatchUpdateMaliciousFileWhitelistConfigResponse> BatchUpdateMaliciousFileWhitelistConfigAsync(BatchUpdateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUpdateMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Binds servers to Security Center or unbinds servers from Security Center.
         *
         * @param request BindAuthToMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindAuthToMachineResponse
         */
        public BindAuthToMachineResponse BindAuthToMachineWithOptions(BindAuthToMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthVersion))
            {
                query["AuthVersion"] = request.AuthVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoBind))
            {
                query["AutoBind"] = request.AutoBind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bind))
            {
                query["Bind"] = request.Bind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindAll))
            {
                query["BindAll"] = request.BindAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsPreBind))
            {
                query["IsPreBind"] = request.IsPreBind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NtmVersion))
            {
                query["NtmVersion"] = request.NtmVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreBindOrderId))
            {
                query["PreBindOrderId"] = request.PreBindOrderId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnBind))
            {
                query["UnBind"] = request.UnBind;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindAuthToMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindAuthToMachineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Binds servers to Security Center or unbinds servers from Security Center.
         *
         * @param request BindAuthToMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindAuthToMachineResponse
         */
        public async Task<BindAuthToMachineResponse> BindAuthToMachineWithOptionsAsync(BindAuthToMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthVersion))
            {
                query["AuthVersion"] = request.AuthVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoBind))
            {
                query["AutoBind"] = request.AutoBind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bind))
            {
                query["Bind"] = request.Bind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindAll))
            {
                query["BindAll"] = request.BindAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsPreBind))
            {
                query["IsPreBind"] = request.IsPreBind;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NtmVersion))
            {
                query["NtmVersion"] = request.NtmVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PreBindOrderId))
            {
                query["PreBindOrderId"] = request.PreBindOrderId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnBind))
            {
                query["UnBind"] = request.UnBind;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindAuthToMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindAuthToMachineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Binds servers to Security Center or unbinds servers from Security Center.
         *
         * @param request BindAuthToMachineRequest
         * @return BindAuthToMachineResponse
         */
        public BindAuthToMachineResponse BindAuthToMachine(BindAuthToMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindAuthToMachineWithOptions(request, runtime);
        }

        /**
         * @summary Binds servers to Security Center or unbinds servers from Security Center.
         *
         * @param request BindAuthToMachineRequest
         * @return BindAuthToMachineResponse
         */
        public async Task<BindAuthToMachineResponse> BindAuthToMachineAsync(BindAuthToMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindAuthToMachineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds servers to Security Center over a proxy server. After you create a proxy cluster and deploy a proxy server, you can connect a server to the proxy cluster as a client. This way, the server is added to Security Center over the proxy server and is protected.
         *
         * @param request BindHybridProxyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindHybridProxyResponse
         */
        public BindHybridProxyResponse BindHybridProxyWithOptions(BindHybridProxyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.YundunUuids))
            {
                query["YundunUuids"] = request.YundunUuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindHybridProxy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindHybridProxyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds servers to Security Center over a proxy server. After you create a proxy cluster and deploy a proxy server, you can connect a server to the proxy cluster as a client. This way, the server is added to Security Center over the proxy server and is protected.
         *
         * @param request BindHybridProxyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindHybridProxyResponse
         */
        public async Task<BindHybridProxyResponse> BindHybridProxyWithOptionsAsync(BindHybridProxyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.YundunUuids))
            {
                query["YundunUuids"] = request.YundunUuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindHybridProxy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindHybridProxyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds servers to Security Center over a proxy server. After you create a proxy cluster and deploy a proxy server, you can connect a server to the proxy cluster as a client. This way, the server is added to Security Center over the proxy server and is protected.
         *
         * @param request BindHybridProxyRequest
         * @return BindHybridProxyResponse
         */
        public BindHybridProxyResponse BindHybridProxy(BindHybridProxyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindHybridProxyWithOptions(request, runtime);
        }

        /**
         * @summary Adds servers to Security Center over a proxy server. After you create a proxy cluster and deploy a proxy server, you can connect a server to the proxy cluster as a client. This way, the server is added to Security Center over the proxy server and is protected.
         *
         * @param request BindHybridProxyRequest
         * @return BindHybridProxyResponse
         */
        public async Task<BindHybridProxyResponse> BindHybridProxyAsync(BindHybridProxyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindHybridProxyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Cancels the main task.
         *
         * @param request CancelOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CancelOnceTaskResponse
         */
        public CancelOnceTaskResponse CancelOnceTaskWithOptions(CancelOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOnceTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Cancels the main task.
         *
         * @param request CancelOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CancelOnceTaskResponse
         */
        public async Task<CancelOnceTaskResponse> CancelOnceTaskWithOptionsAsync(CancelOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOnceTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Cancels the main task.
         *
         * @param request CancelOnceTaskRequest
         * @return CancelOnceTaskResponse
         */
        public CancelOnceTaskResponse CancelOnceTask(CancelOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelOnceTaskWithOptions(request, runtime);
        }

        /**
         * @summary Cancels the main task.
         *
         * @param request CancelOnceTaskRequest
         * @return CancelOnceTaskResponse
         */
        public async Task<CancelOnceTaskResponse> CancelOnceTaskAsync(CancelOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelOnceTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the interval of asset synchronization configurations.
         *
         * @param request ChangeAssetRefreshTaskConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeAssetRefreshTaskConfigResponse
         */
        public ChangeAssetRefreshTaskConfigResponse ChangeAssetRefreshTaskConfigWithOptions(ChangeAssetRefreshTaskConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetRefreshConfigs))
            {
                query["AssetRefreshConfigs"] = request.AssetRefreshConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeAssetRefreshTaskConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeAssetRefreshTaskConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the interval of asset synchronization configurations.
         *
         * @param request ChangeAssetRefreshTaskConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeAssetRefreshTaskConfigResponse
         */
        public async Task<ChangeAssetRefreshTaskConfigResponse> ChangeAssetRefreshTaskConfigWithOptionsAsync(ChangeAssetRefreshTaskConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetRefreshConfigs))
            {
                query["AssetRefreshConfigs"] = request.AssetRefreshConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeAssetRefreshTaskConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeAssetRefreshTaskConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the interval of asset synchronization configurations.
         *
         * @param request ChangeAssetRefreshTaskConfigRequest
         * @return ChangeAssetRefreshTaskConfigResponse
         */
        public ChangeAssetRefreshTaskConfigResponse ChangeAssetRefreshTaskConfig(ChangeAssetRefreshTaskConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeAssetRefreshTaskConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the interval of asset synchronization configurations.
         *
         * @param request ChangeAssetRefreshTaskConfigRequest
         * @return ChangeAssetRefreshTaskConfigResponse
         */
        public async Task<ChangeAssetRefreshTaskConfigResponse> ChangeAssetRefreshTaskConfigAsync(ChangeAssetRefreshTaskConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeAssetRefreshTaskConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configuration items of the configuration assessment feature.
         *
         * @param tmpReq ChangeCheckConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeCheckConfigResponse
         */
        public ChangeCheckConfigResponse ChangeCheckConfigWithOptions(ChangeCheckConfigRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ChangeCheckConfigShrinkRequest request = new ChangeCheckConfigShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ConfigRequirementIds))
            {
                request.ConfigRequirementIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRequirementIds, "ConfigRequirementIds", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ConfigStandardIds))
            {
                request.ConfigStandardIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigStandardIds, "ConfigStandardIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddedCheck))
            {
                query["AddedCheck"] = request.AddedCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigRequirementIdsShrink))
            {
                query["ConfigRequirementIds"] = request.ConfigRequirementIdsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigStandardIdsShrink))
            {
                query["ConfigStandardIds"] = request.ConfigStandardIdsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configure))
            {
                query["Configure"] = request.Configure;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleDays))
            {
                query["CycleDays"] = request.CycleDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableAddCheck))
            {
                query["EnableAddCheck"] = request.EnableAddCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableAutoCheck))
            {
                query["EnableAutoCheck"] = request.EnableAutoCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemovedCheck))
            {
                query["RemovedCheck"] = request.RemovedCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeCheckConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeCheckConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration items of the configuration assessment feature.
         *
         * @param tmpReq ChangeCheckConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeCheckConfigResponse
         */
        public async Task<ChangeCheckConfigResponse> ChangeCheckConfigWithOptionsAsync(ChangeCheckConfigRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ChangeCheckConfigShrinkRequest request = new ChangeCheckConfigShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ConfigRequirementIds))
            {
                request.ConfigRequirementIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigRequirementIds, "ConfigRequirementIds", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ConfigStandardIds))
            {
                request.ConfigStandardIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ConfigStandardIds, "ConfigStandardIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddedCheck))
            {
                query["AddedCheck"] = request.AddedCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigRequirementIdsShrink))
            {
                query["ConfigRequirementIds"] = request.ConfigRequirementIdsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigStandardIdsShrink))
            {
                query["ConfigStandardIds"] = request.ConfigStandardIdsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configure))
            {
                query["Configure"] = request.Configure;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleDays))
            {
                query["CycleDays"] = request.CycleDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableAddCheck))
            {
                query["EnableAddCheck"] = request.EnableAddCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableAutoCheck))
            {
                query["EnableAutoCheck"] = request.EnableAutoCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemovedCheck))
            {
                query["RemovedCheck"] = request.RemovedCheck;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeCheckConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeCheckConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration items of the configuration assessment feature.
         *
         * @param request ChangeCheckConfigRequest
         * @return ChangeCheckConfigResponse
         */
        public ChangeCheckConfigResponse ChangeCheckConfig(ChangeCheckConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeCheckConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configuration items of the configuration assessment feature.
         *
         * @param request ChangeCheckConfigRequest
         * @return ChangeCheckConfigResponse
         */
        public async Task<ChangeCheckConfigResponse> ChangeCheckConfigAsync(ChangeCheckConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeCheckConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the custom configuration items of a check item.
         *
         * @param request ChangeCheckCustomConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeCheckCustomConfigResponse
         */
        public ChangeCheckCustomConfigResponse ChangeCheckCustomConfigWithOptions(ChangeCheckCustomConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomConfigs))
            {
                query["CustomConfigs"] = request.CustomConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepairConfigs))
            {
                query["RepairConfigs"] = request.RepairConfigs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeCheckCustomConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeCheckCustomConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the custom configuration items of a check item.
         *
         * @param request ChangeCheckCustomConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeCheckCustomConfigResponse
         */
        public async Task<ChangeCheckCustomConfigResponse> ChangeCheckCustomConfigWithOptionsAsync(ChangeCheckCustomConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomConfigs))
            {
                query["CustomConfigs"] = request.CustomConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepairConfigs))
            {
                query["RepairConfigs"] = request.RepairConfigs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeCheckCustomConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeCheckCustomConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the custom configuration items of a check item.
         *
         * @param request ChangeCheckCustomConfigRequest
         * @return ChangeCheckCustomConfigResponse
         */
        public ChangeCheckCustomConfigResponse ChangeCheckCustomConfig(ChangeCheckCustomConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeCheckCustomConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the custom configuration items of a check item.
         *
         * @param request ChangeCheckCustomConfigRequest
         * @return ChangeCheckCustomConfigResponse
         */
        public async Task<ChangeCheckCustomConfigResponse> ChangeCheckCustomConfigAsync(ChangeCheckCustomConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeCheckCustomConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request ChangeSecurityScoreRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeSecurityScoreRuleResponse
         */
        public ChangeSecurityScoreRuleResponse ChangeSecurityScoreRuleWithOptions(ChangeSecurityScoreRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetSecurityScoreRule))
            {
                query["ResetSecurityScoreRule"] = request.ResetSecurityScoreRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityScoreRuleList))
            {
                query["SecurityScoreRuleList"] = request.SecurityScoreRuleList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeSecurityScoreRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeSecurityScoreRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request ChangeSecurityScoreRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeSecurityScoreRuleResponse
         */
        public async Task<ChangeSecurityScoreRuleResponse> ChangeSecurityScoreRuleWithOptionsAsync(ChangeSecurityScoreRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetSecurityScoreRule))
            {
                query["ResetSecurityScoreRule"] = request.ResetSecurityScoreRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityScoreRuleList))
            {
                query["SecurityScoreRuleList"] = request.SecurityScoreRuleList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeSecurityScoreRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeSecurityScoreRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request ChangeSecurityScoreRuleRequest
         * @return ChangeSecurityScoreRuleResponse
         */
        public ChangeSecurityScoreRuleResponse ChangeSecurityScoreRule(ChangeSecurityScoreRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeSecurityScoreRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request ChangeSecurityScoreRuleRequest
         * @return ChangeSecurityScoreRuleResponse
         */
        public async Task<ChangeSecurityScoreRuleResponse> ChangeSecurityScoreRuleAsync(ChangeSecurityScoreRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeSecurityScoreRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the language settings of log analysis. The modification on the language settings takes effect within 12 hours and affects only the language of the descriptions for security events in security logs.
         *
         * @param request ChangeUserLangRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeUserLangResponse
         */
        public ChangeUserLangResponse ChangeUserLangWithOptions(ChangeUserLangRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLang))
            {
                query["UserLang"] = request.UserLang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeUserLang",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeUserLangResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the language settings of log analysis. The modification on the language settings takes effect within 12 hours and affects only the language of the descriptions for security events in security logs.
         *
         * @param request ChangeUserLangRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeUserLangResponse
         */
        public async Task<ChangeUserLangResponse> ChangeUserLangWithOptionsAsync(ChangeUserLangRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLang))
            {
                query["UserLang"] = request.UserLang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeUserLang",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeUserLangResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the language settings of log analysis. The modification on the language settings takes effect within 12 hours and affects only the language of the descriptions for security events in security logs.
         *
         * @param request ChangeUserLangRequest
         * @return ChangeUserLangResponse
         */
        public ChangeUserLangResponse ChangeUserLang(ChangeUserLangRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeUserLangWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the language settings of log analysis. The modification on the language settings takes effect within 12 hours and affects only the language of the descriptions for security events in security logs.
         *
         * @param request ChangeUserLangRequest
         * @return ChangeUserLangResponse
         */
        public async Task<ChangeUserLangResponse> ChangeUserLangAsync(ChangeUserLangRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeUserLangWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether the IDs of quarantined files are valid.
         *
         * @param request CheckQuaraFileIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckQuaraFileIdResponse
         */
        public CheckQuaraFileIdResponse CheckQuaraFileIdWithOptions(CheckQuaraFileIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileIds))
            {
                query["QuaraFileIds"] = request.QuaraFileIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckQuaraFileId",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckQuaraFileIdResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether the IDs of quarantined files are valid.
         *
         * @param request CheckQuaraFileIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckQuaraFileIdResponse
         */
        public async Task<CheckQuaraFileIdResponse> CheckQuaraFileIdWithOptionsAsync(CheckQuaraFileIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileIds))
            {
                query["QuaraFileIds"] = request.QuaraFileIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckQuaraFileId",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckQuaraFileIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether the IDs of quarantined files are valid.
         *
         * @param request CheckQuaraFileIdRequest
         * @return CheckQuaraFileIdResponse
         */
        public CheckQuaraFileIdResponse CheckQuaraFileId(CheckQuaraFileIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckQuaraFileIdWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether the IDs of quarantined files are valid.
         *
         * @param request CheckQuaraFileIdRequest
         * @return CheckQuaraFileIdResponse
         */
        public async Task<CheckQuaraFileIdResponse> CheckQuaraFileIdAsync(CheckQuaraFileIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckQuaraFileIdWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether one or more alert events are generated on a specified server based on the IDs of the alert events.
         *
         * @param request CheckSecurityEventIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckSecurityEventIdResponse
         */
        public CheckSecurityEventIdResponse CheckSecurityEventIdWithOptions(CheckSecurityEventIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSecurityEventId",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSecurityEventIdResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether one or more alert events are generated on a specified server based on the IDs of the alert events.
         *
         * @param request CheckSecurityEventIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckSecurityEventIdResponse
         */
        public async Task<CheckSecurityEventIdResponse> CheckSecurityEventIdWithOptionsAsync(CheckSecurityEventIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckSecurityEventId",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckSecurityEventIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether one or more alert events are generated on a specified server based on the IDs of the alert events.
         *
         * @param request CheckSecurityEventIdRequest
         * @return CheckSecurityEventIdResponse
         */
        public CheckSecurityEventIdResponse CheckSecurityEventId(CheckSecurityEventIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckSecurityEventIdWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether one or more alert events are generated on a specified server based on the IDs of the alert events.
         *
         * @param request CheckSecurityEventIdRequest
         * @return CheckSecurityEventIdResponse
         */
        public async Task<CheckSecurityEventIdResponse> CheckSecurityEventIdAsync(CheckSecurityEventIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckSecurityEventIdWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether Elastic Compute Service (ECS) instances exist.
         *
         * @param request CheckUserHasEcsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckUserHasEcsResponse
         */
        public CheckUserHasEcsResponse CheckUserHasEcsWithOptions(CheckUserHasEcsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckUserHasEcs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckUserHasEcsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether Elastic Compute Service (ECS) instances exist.
         *
         * @param request CheckUserHasEcsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckUserHasEcsResponse
         */
        public async Task<CheckUserHasEcsResponse> CheckUserHasEcsWithOptionsAsync(CheckUserHasEcsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckUserHasEcs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckUserHasEcsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether Elastic Compute Service (ECS) instances exist.
         *
         * @param request CheckUserHasEcsRequest
         * @return CheckUserHasEcsResponse
         */
        public CheckUserHasEcsResponse CheckUserHasEcs(CheckUserHasEcsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckUserHasEcsWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether Elastic Compute Service (ECS) instances exist.
         *
         * @param request CheckUserHasEcsRequest
         * @return CheckUserHasEcsResponse
         */
        public async Task<CheckUserHasEcsResponse> CheckUserHasEcsAsync(CheckUserHasEcsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckUserHasEcsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Confirms the alert events that you want to handle.
         *
         * @param request ConfirmVirusEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ConfirmVirusEventsResponse
         */
        public ConfirmVirusEventsResponse ConfirmVirusEventsWithOptions(ConfirmVirusEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationAll))
            {
                query["OperationAll"] = request.OperationAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationRange))
            {
                query["OperationRange"] = request.OperationRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfirmVirusEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfirmVirusEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Confirms the alert events that you want to handle.
         *
         * @param request ConfirmVirusEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ConfirmVirusEventsResponse
         */
        public async Task<ConfirmVirusEventsResponse> ConfirmVirusEventsWithOptionsAsync(ConfirmVirusEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationAll))
            {
                query["OperationAll"] = request.OperationAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationRange))
            {
                query["OperationRange"] = request.OperationRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfirmVirusEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfirmVirusEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Confirms the alert events that you want to handle.
         *
         * @param request ConfirmVirusEventsRequest
         * @return ConfirmVirusEventsResponse
         */
        public ConfirmVirusEventsResponse ConfirmVirusEvents(ConfirmVirusEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ConfirmVirusEventsWithOptions(request, runtime);
        }

        /**
         * @summary Confirms the alert events that you want to handle.
         *
         * @param request ConfirmVirusEventsRequest
         * @return ConfirmVirusEventsResponse
         */
        public async Task<ConfirmVirusEventsResponse> ConfirmVirusEventsAsync(ConfirmVirusEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ConfirmVirusEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an agentless detection task.
         *
         * @param request CreateAgentlessScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAgentlessScanTaskResponse
         */
        public CreateAgentlessScanTaskResponse CreateAgentlessScanTaskWithOptions(CreateAgentlessScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoDeleteDays))
            {
                query["AutoDeleteDays"] = request.AutoDeleteDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseAfterScan))
            {
                query["ReleaseAfterScan"] = request.ReleaseAfterScan;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDataDisk))
            {
                query["ScanDataDisk"] = request.ScanDataDisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAgentlessScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAgentlessScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an agentless detection task.
         *
         * @param request CreateAgentlessScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAgentlessScanTaskResponse
         */
        public async Task<CreateAgentlessScanTaskResponse> CreateAgentlessScanTaskWithOptionsAsync(CreateAgentlessScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoDeleteDays))
            {
                query["AutoDeleteDays"] = request.AutoDeleteDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseAfterScan))
            {
                query["ReleaseAfterScan"] = request.ReleaseAfterScan;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDataDisk))
            {
                query["ScanDataDisk"] = request.ScanDataDisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAgentlessScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAgentlessScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an agentless detection task.
         *
         * @param request CreateAgentlessScanTaskRequest
         * @return CreateAgentlessScanTaskResponse
         */
        public CreateAgentlessScanTaskResponse CreateAgentlessScanTask(CreateAgentlessScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateAgentlessScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates an agentless detection task.
         *
         * @param request CreateAgentlessScanTaskRequest
         * @return CreateAgentlessScanTaskResponse
         */
        public async Task<CreateAgentlessScanTaskResponse> CreateAgentlessScanTaskAsync(CreateAgentlessScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateAgentlessScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a defense rule against brute-force attacks.
         *
         * @param request CreateAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAntiBruteForceRuleResponse
         */
        public CreateAntiBruteForceRuleResponse CreateAntiBruteForceRuleWithOptions(CreateAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultRule))
            {
                query["DefaultRule"] = request.DefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FailCount))
            {
                query["FailCount"] = request.FailCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForbiddenTime))
            {
                query["ForbiddenTime"] = request.ForbiddenTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Span))
            {
                query["Span"] = request.Span;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAntiBruteForceRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule against brute-force attacks.
         *
         * @param request CreateAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAntiBruteForceRuleResponse
         */
        public async Task<CreateAntiBruteForceRuleResponse> CreateAntiBruteForceRuleWithOptionsAsync(CreateAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultRule))
            {
                query["DefaultRule"] = request.DefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FailCount))
            {
                query["FailCount"] = request.FailCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForbiddenTime))
            {
                query["ForbiddenTime"] = request.ForbiddenTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Span))
            {
                query["Span"] = request.Span;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAntiBruteForceRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule against brute-force attacks.
         *
         * @param request CreateAntiBruteForceRuleRequest
         * @return CreateAntiBruteForceRuleResponse
         */
        public CreateAntiBruteForceRuleResponse CreateAntiBruteForceRule(CreateAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateAntiBruteForceRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a defense rule against brute-force attacks.
         *
         * @param request CreateAntiBruteForceRuleRequest
         * @return CreateAntiBruteForceRuleResponse
         */
        public async Task<CreateAntiBruteForceRuleResponse> CreateAntiBruteForceRuleAsync(CreateAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateAntiBruteForceRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Create asset selection configurations.
         *
         * @param request CreateAssetSelectionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAssetSelectionConfigResponse
         */
        public CreateAssetSelectionConfigResponse CreateAssetSelectionConfigWithOptions(CreateAssetSelectionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAssetSelectionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAssetSelectionConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Create asset selection configurations.
         *
         * @param request CreateAssetSelectionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAssetSelectionConfigResponse
         */
        public async Task<CreateAssetSelectionConfigResponse> CreateAssetSelectionConfigWithOptionsAsync(CreateAssetSelectionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAssetSelectionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAssetSelectionConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Create asset selection configurations.
         *
         * @param request CreateAssetSelectionConfigRequest
         * @return CreateAssetSelectionConfigResponse
         */
        public CreateAssetSelectionConfigResponse CreateAssetSelectionConfig(CreateAssetSelectionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateAssetSelectionConfigWithOptions(request, runtime);
        }

        /**
         * @summary Create asset selection configurations.
         *
         * @param request CreateAssetSelectionConfigRequest
         * @return CreateAssetSelectionConfigResponse
         */
        public async Task<CreateAssetSelectionConfigResponse> CreateAssetSelectionConfigAsync(CreateAssetSelectionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateAssetSelectionConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an anti-ransomware policy for servers.
         *
         * @param tmpReq CreateBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateBackupPolicyResponse
         */
        public CreateBackupPolicyResponse CreateBackupPolicyWithOptions(CreateBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateBackupPolicyShrinkRequest request = new CreateBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Policy))
            {
                request.PolicyShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Policy, "Policy", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyShrink))
            {
                query["Policy"] = request.PolicyShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyRegionId))
            {
                query["PolicyRegionId"] = request.PolicyRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an anti-ransomware policy for servers.
         *
         * @param tmpReq CreateBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateBackupPolicyResponse
         */
        public async Task<CreateBackupPolicyResponse> CreateBackupPolicyWithOptionsAsync(CreateBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateBackupPolicyShrinkRequest request = new CreateBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Policy))
            {
                request.PolicyShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Policy, "Policy", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyShrink))
            {
                query["Policy"] = request.PolicyShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyRegionId))
            {
                query["PolicyRegionId"] = request.PolicyRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an anti-ransomware policy for servers.
         *
         * @param request CreateBackupPolicyRequest
         * @return CreateBackupPolicyResponse
         */
        public CreateBackupPolicyResponse CreateBackupPolicy(CreateBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Creates an anti-ransomware policy for servers.
         *
         * @param request CreateBackupPolicyRequest
         * @return CreateBackupPolicyResponse
         */
        public async Task<CreateBackupPolicyResponse> CreateBackupPolicyAsync(CreateBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a container scan task.
         *
         * @param request CreateContainerScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateContainerScanTaskResponse
         */
        public CreateContainerScanTaskResponse CreateContainerScanTaskWithOptions(CreateContainerScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerIds))
            {
                query["ContainerIds"] = request.ContainerIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateContainerScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateContainerScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a container scan task.
         *
         * @param request CreateContainerScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateContainerScanTaskResponse
         */
        public async Task<CreateContainerScanTaskResponse> CreateContainerScanTaskWithOptionsAsync(CreateContainerScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerIds))
            {
                query["ContainerIds"] = request.ContainerIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateContainerScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateContainerScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a container scan task.
         *
         * @param request CreateContainerScanTaskRequest
         * @return CreateContainerScanTaskResponse
         */
        public CreateContainerScanTaskResponse CreateContainerScanTask(CreateContainerScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateContainerScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a container scan task.
         *
         * @param request CreateContainerScanTaskRequest
         * @return CreateContainerScanTaskResponse
         */
        public async Task<CreateContainerScanTaskResponse> CreateContainerScanTaskAsync(CreateContainerScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateContainerScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a scan task for a running container application based on the application name.
         *
         * @param request CreateContainerScanTaskByAppNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateContainerScanTaskByAppNameResponse
         */
        public CreateContainerScanTaskByAppNameResponse CreateContainerScanTaskByAppNameWithOptions(CreateContainerScanTaskByAppNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppNames))
            {
                query["AppNames"] = request.AppNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateContainerScanTaskByAppName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateContainerScanTaskByAppNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a scan task for a running container application based on the application name.
         *
         * @param request CreateContainerScanTaskByAppNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateContainerScanTaskByAppNameResponse
         */
        public async Task<CreateContainerScanTaskByAppNameResponse> CreateContainerScanTaskByAppNameWithOptionsAsync(CreateContainerScanTaskByAppNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppNames))
            {
                query["AppNames"] = request.AppNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateContainerScanTaskByAppName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateContainerScanTaskByAppNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a scan task for a running container application based on the application name.
         *
         * @param request CreateContainerScanTaskByAppNameRequest
         * @return CreateContainerScanTaskByAppNameResponse
         */
        public CreateContainerScanTaskByAppNameResponse CreateContainerScanTaskByAppName(CreateContainerScanTaskByAppNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateContainerScanTaskByAppNameWithOptions(request, runtime);
        }

        /**
         * @summary Creates a scan task for a running container application based on the application name.
         *
         * @param request CreateContainerScanTaskByAppNameRequest
         * @return CreateContainerScanTaskByAppNameResponse
         */
        public async Task<CreateContainerScanTaskByAppNameResponse> CreateContainerScanTaskByAppNameAsync(CreateContainerScanTaskByAppNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateContainerScanTaskByAppNameWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an IP address blocking policy for one or more servers.
         *
         * @param request CreateCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateCustomBlockRecordResponse
         */
        public CreateCustomBlockRecordResponse CreateCustomBlockRecordWithOptions(CreateCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireTime))
            {
                query["ExpireTime"] = request.ExpireTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCustomBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an IP address blocking policy for one or more servers.
         *
         * @param request CreateCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateCustomBlockRecordResponse
         */
        public async Task<CreateCustomBlockRecordResponse> CreateCustomBlockRecordWithOptionsAsync(CreateCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireTime))
            {
                query["ExpireTime"] = request.ExpireTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCustomBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an IP address blocking policy for one or more servers.
         *
         * @param request CreateCustomBlockRecordRequest
         * @return CreateCustomBlockRecordResponse
         */
        public CreateCustomBlockRecordResponse CreateCustomBlockRecord(CreateCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCustomBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Creates an IP address blocking policy for one or more servers.
         *
         * @param request CreateCustomBlockRecordRequest
         * @return CreateCustomBlockRecordResponse
         */
        public async Task<CreateCustomBlockRecordResponse> CreateCustomBlockRecordAsync(CreateCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCustomBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request CreateCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateCycleTaskResponse
         */
        public CreateCycleTaskResponse CreateCycleTaskWithOptions(CreateCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirstDateStr))
            {
                query["FirstDateStr"] = request.FirstDateStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalPeriod))
            {
                query["IntervalPeriod"] = request.IntervalPeriod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodUnit))
            {
                query["PeriodUnit"] = request.PeriodUnit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetEndTime))
            {
                query["TargetEndTime"] = request.TargetEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetStartTime))
            {
                query["TargetStartTime"] = request.TargetStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCycleTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request CreateCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateCycleTaskResponse
         */
        public async Task<CreateCycleTaskResponse> CreateCycleTaskWithOptionsAsync(CreateCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirstDateStr))
            {
                query["FirstDateStr"] = request.FirstDateStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalPeriod))
            {
                query["IntervalPeriod"] = request.IntervalPeriod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodUnit))
            {
                query["PeriodUnit"] = request.PeriodUnit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetEndTime))
            {
                query["TargetEndTime"] = request.TargetEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetStartTime))
            {
                query["TargetStartTime"] = request.TargetStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateCycleTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request CreateCycleTaskRequest
         * @return CreateCycleTaskResponse
         */
        public CreateCycleTaskResponse CreateCycleTask(CreateCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateCycleTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request CreateCycleTaskRequest
         * @return CreateCycleTaskResponse
         */
        public async Task<CreateCycleTaskResponse> CreateCycleTaskAsync(CreateCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateCycleTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Pushes a file to the cloud for detection.
         *
         * @description You can call this operation to push a file to the cloud for detection. Before you call this operation, make sure that the file is uploaded. You can call the CreateFileDetectUploadUrl operation to upload the file.
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileDetectResponse
         */
        public CreateFileDetectResponse CreateFileDetectWithOptions(CreateFileDetectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Decompress))
            {
                query["Decompress"] = request.Decompress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadUrl))
            {
                query["DownloadUrl"] = request.DownloadUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKey))
            {
                query["HashKey"] = request.HashKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssKey))
            {
                query["OssKey"] = request.OssKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileDetect",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileDetectResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Pushes a file to the cloud for detection.
         *
         * @description You can call this operation to push a file to the cloud for detection. Before you call this operation, make sure that the file is uploaded. You can call the CreateFileDetectUploadUrl operation to upload the file.
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileDetectResponse
         */
        public async Task<CreateFileDetectResponse> CreateFileDetectWithOptionsAsync(CreateFileDetectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Decompress))
            {
                query["Decompress"] = request.Decompress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadUrl))
            {
                query["DownloadUrl"] = request.DownloadUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKey))
            {
                query["HashKey"] = request.HashKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssKey))
            {
                query["OssKey"] = request.OssKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileDetect",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileDetectResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Pushes a file to the cloud for detection.
         *
         * @description You can call this operation to push a file to the cloud for detection. Before you call this operation, make sure that the file is uploaded. You can call the CreateFileDetectUploadUrl operation to upload the file.
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectRequest
         * @return CreateFileDetectResponse
         */
        public CreateFileDetectResponse CreateFileDetect(CreateFileDetectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateFileDetectWithOptions(request, runtime);
        }

        /**
         * @summary Pushes a file to the cloud for detection.
         *
         * @description You can call this operation to push a file to the cloud for detection. Before you call this operation, make sure that the file is uploaded. You can call the CreateFileDetectUploadUrl operation to upload the file.
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectRequest
         * @return CreateFileDetectResponse
         */
        public async Task<CreateFileDetectResponse> CreateFileDetectAsync(CreateFileDetectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateFileDetectWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the parameters that are required to upload a file for detection.
         *
         * @description You can call this operation to query the parameters that are required to upload a file for detection. If the value of the response parameter FileExist is true, the file that you want to upload for detection already exists in the cloud. In this case, you can directly push the file for detection. If the value of the response parameter FileExist is false, you must use the form upload method to upload the file to the specified Object Storage Service (OSS) bucket based on the response parameters of this operation.
         * The form upload method is provided by OSS. For more information, see [Form upload](https://help.aliyun.com/document_detail/84788.html).
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectUploadUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileDetectUploadUrlResponse
         */
        public CreateFileDetectUploadUrlResponse CreateFileDetectUploadUrlWithOptions(CreateFileDetectUploadUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyContextList))
            {
                query["HashKeyContextList"] = request.HashKeyContextList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyList))
            {
                query["HashKeyList"] = request.HashKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileDetectUploadUrl",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileDetectUploadUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the parameters that are required to upload a file for detection.
         *
         * @description You can call this operation to query the parameters that are required to upload a file for detection. If the value of the response parameter FileExist is true, the file that you want to upload for detection already exists in the cloud. In this case, you can directly push the file for detection. If the value of the response parameter FileExist is false, you must use the form upload method to upload the file to the specified Object Storage Service (OSS) bucket based on the response parameters of this operation.
         * The form upload method is provided by OSS. For more information, see [Form upload](https://help.aliyun.com/document_detail/84788.html).
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectUploadUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileDetectUploadUrlResponse
         */
        public async Task<CreateFileDetectUploadUrlResponse> CreateFileDetectUploadUrlWithOptionsAsync(CreateFileDetectUploadUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyContextList))
            {
                query["HashKeyContextList"] = request.HashKeyContextList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyList))
            {
                query["HashKeyList"] = request.HashKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileDetectUploadUrl",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileDetectUploadUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the parameters that are required to upload a file for detection.
         *
         * @description You can call this operation to query the parameters that are required to upload a file for detection. If the value of the response parameter FileExist is true, the file that you want to upload for detection already exists in the cloud. In this case, you can directly push the file for detection. If the value of the response parameter FileExist is false, you must use the form upload method to upload the file to the specified Object Storage Service (OSS) bucket based on the response parameters of this operation.
         * The form upload method is provided by OSS. For more information, see [Form upload](https://help.aliyun.com/document_detail/84788.html).
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectUploadUrlRequest
         * @return CreateFileDetectUploadUrlResponse
         */
        public CreateFileDetectUploadUrlResponse CreateFileDetectUploadUrl(CreateFileDetectUploadUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateFileDetectUploadUrlWithOptions(request, runtime);
        }

        /**
         * @summary Queries the parameters that are required to upload a file for detection.
         *
         * @description You can call this operation to query the parameters that are required to upload a file for detection. If the value of the response parameter FileExist is true, the file that you want to upload for detection already exists in the cloud. In this case, you can directly push the file for detection. If the value of the response parameter FileExist is false, you must use the form upload method to upload the file to the specified Object Storage Service (OSS) bucket based on the response parameters of this operation.
         * The form upload method is provided by OSS. For more information, see [Form upload](https://help.aliyun.com/document_detail/84788.html).
         * The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request CreateFileDetectUploadUrlRequest
         * @return CreateFileDetectUploadUrlResponse
         */
        public async Task<CreateFileDetectUploadUrlResponse> CreateFileDetectUploadUrlAsync(CreateFileDetectUploadUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateFileDetectUploadUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a core file monitoring rule.
         *
         * @param request CreateFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileProtectRuleResponse
         */
        public CreateFileProtectRuleResponse CreateFileProtectRuleWithOptions(CreateFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileOps))
            {
                query["FileOps"] = request.FileOps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePaths))
            {
                query["FilePaths"] = request.FilePaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPaths))
            {
                query["ProcPaths"] = request.ProcPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchId))
            {
                query["SwitchId"] = request.SwitchId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileProtectRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a core file monitoring rule.
         *
         * @param request CreateFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileProtectRuleResponse
         */
        public async Task<CreateFileProtectRuleResponse> CreateFileProtectRuleWithOptionsAsync(CreateFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileOps))
            {
                query["FileOps"] = request.FileOps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePaths))
            {
                query["FilePaths"] = request.FilePaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPaths))
            {
                query["ProcPaths"] = request.ProcPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchId))
            {
                query["SwitchId"] = request.SwitchId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileProtectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a core file monitoring rule.
         *
         * @param request CreateFileProtectRuleRequest
         * @return CreateFileProtectRuleResponse
         */
        public CreateFileProtectRuleResponse CreateFileProtectRule(CreateFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateFileProtectRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a core file monitoring rule.
         *
         * @param request CreateFileProtectRuleRequest
         * @return CreateFileProtectRuleResponse
         */
        public async Task<CreateFileProtectRuleResponse> CreateFileProtectRuleAsync(CreateFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateFileProtectRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Specifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request CreateFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileUploadLimitResponse
         */
        public CreateFileUploadLimitResponse CreateFileUploadLimitWithOptions(CreateFileUploadLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileUploadLimitResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Specifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request CreateFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateFileUploadLimitResponse
         */
        public async Task<CreateFileUploadLimitResponse> CreateFileUploadLimitWithOptionsAsync(CreateFileUploadLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateFileUploadLimitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Specifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request CreateFileUploadLimitRequest
         * @return CreateFileUploadLimitResponse
         */
        public CreateFileUploadLimitResponse CreateFileUploadLimit(CreateFileUploadLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateFileUploadLimitWithOptions(request, runtime);
        }

        /**
         * @summary Specifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request CreateFileUploadLimitRequest
         * @return CreateFileUploadLimitResponse
         */
        public async Task<CreateFileUploadLimitResponse> CreateFileUploadLimitAsync(CreateFileUploadLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateFileUploadLimitWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request CreateHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotResponse
         */
        public CreateHoneypotResponse CreateHoneypotWithOptions(CreateHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageId))
            {
                query["HoneypotImageId"] = request.HoneypotImageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request CreateHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotResponse
         */
        public async Task<CreateHoneypotResponse> CreateHoneypotWithOptionsAsync(CreateHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageId))
            {
                query["HoneypotImageId"] = request.HoneypotImageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request CreateHoneypotRequest
         * @return CreateHoneypotResponse
         */
        public CreateHoneypotResponse CreateHoneypot(CreateHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Creates a honeypot.
         *
         * @param request CreateHoneypotRequest
         * @return CreateHoneypotResponse
         */
        public async Task<CreateHoneypotResponse> CreateHoneypotAsync(CreateHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a management node.
         *
         * @param request CreateHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotNodeResponse
         */
        public CreateHoneypotNodeResponse CreateHoneypotNodeWithOptions(CreateHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllowHoneypotAccessInternet))
            {
                query["AllowHoneypotAccessInternet"] = request.AllowHoneypotAccessInternet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableProbeNum))
            {
                query["AvailableProbeNum"] = request.AvailableProbeNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupProbeIpList))
            {
                query["SecurityGroupProbeIpList"] = request.SecurityGroupProbeIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a management node.
         *
         * @param request CreateHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotNodeResponse
         */
        public async Task<CreateHoneypotNodeResponse> CreateHoneypotNodeWithOptionsAsync(CreateHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllowHoneypotAccessInternet))
            {
                query["AllowHoneypotAccessInternet"] = request.AllowHoneypotAccessInternet;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableProbeNum))
            {
                query["AvailableProbeNum"] = request.AvailableProbeNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupProbeIpList))
            {
                query["SecurityGroupProbeIpList"] = request.SecurityGroupProbeIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a management node.
         *
         * @param request CreateHoneypotNodeRequest
         * @return CreateHoneypotNodeResponse
         */
        public CreateHoneypotNodeResponse CreateHoneypotNode(CreateHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHoneypotNodeWithOptions(request, runtime);
        }

        /**
         * @summary Creates a management node.
         *
         * @param request CreateHoneypotNodeRequest
         * @return CreateHoneypotNodeResponse
         */
        public async Task<CreateHoneypotNodeResponse> CreateHoneypotNodeAsync(CreateHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHoneypotNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a honeypot template.
         *
         * @param request CreateHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotPresetResponse
         */
        public CreateHoneypotPresetResponse CreateHoneypotPresetWithOptions(CreateHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotPresetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot template.
         *
         * @param request CreateHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotPresetResponse
         */
        public async Task<CreateHoneypotPresetResponse> CreateHoneypotPresetWithOptionsAsync(CreateHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotPresetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a honeypot template.
         *
         * @param request CreateHoneypotPresetRequest
         * @return CreateHoneypotPresetResponse
         */
        public CreateHoneypotPresetResponse CreateHoneypotPreset(CreateHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHoneypotPresetWithOptions(request, runtime);
        }

        /**
         * @summary Creates a honeypot template.
         *
         * @param request CreateHoneypotPresetRequest
         * @return CreateHoneypotPresetResponse
         */
        public async Task<CreateHoneypotPresetResponse> CreateHoneypotPresetAsync(CreateHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHoneypotPresetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a probe.
         *
         * @param request CreateHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotProbeResponse
         */
        public CreateHoneypotProbeResponse CreateHoneypotProbeWithOptions(CreateHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Arp))
            {
                query["Arp"] = request.Arp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessGroupId))
            {
                query["BusinessGroupId"] = request.BusinessGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ControlNodeId))
            {
                query["ControlNodeId"] = request.ControlNodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotBindList))
            {
                query["HoneypotBindList"] = request.HoneypotBindList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ping))
            {
                query["Ping"] = request.Ping;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeVersion))
            {
                query["ProbeVersion"] = request.ProbeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyIp))
            {
                query["ProxyIp"] = request.ProxyIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a probe.
         *
         * @param request CreateHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotProbeResponse
         */
        public async Task<CreateHoneypotProbeResponse> CreateHoneypotProbeWithOptionsAsync(CreateHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Arp))
            {
                query["Arp"] = request.Arp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessGroupId))
            {
                query["BusinessGroupId"] = request.BusinessGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ControlNodeId))
            {
                query["ControlNodeId"] = request.ControlNodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotBindList))
            {
                query["HoneypotBindList"] = request.HoneypotBindList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ping))
            {
                query["Ping"] = request.Ping;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeVersion))
            {
                query["ProbeVersion"] = request.ProbeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyIp))
            {
                query["ProxyIp"] = request.ProxyIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a probe.
         *
         * @param request CreateHoneypotProbeRequest
         * @return CreateHoneypotProbeResponse
         */
        public CreateHoneypotProbeResponse CreateHoneypotProbe(CreateHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHoneypotProbeWithOptions(request, runtime);
        }

        /**
         * @summary Creates a probe.
         *
         * @param request CreateHoneypotProbeRequest
         * @return CreateHoneypotProbeResponse
         */
        public async Task<CreateHoneypotProbeResponse> CreateHoneypotProbeAsync(CreateHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHoneypotProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a monitoring or forwarding service for a probe.
         *
         * @param request CreateHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotProbeBindResponse
         */
        public CreateHoneypotProbeBindResponse CreateHoneypotProbeBindWithOptions(CreateHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindPortList))
            {
                query["BindPortList"] = request.BindPortList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotProbeBindResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a monitoring or forwarding service for a probe.
         *
         * @param request CreateHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHoneypotProbeBindResponse
         */
        public async Task<CreateHoneypotProbeBindResponse> CreateHoneypotProbeBindWithOptionsAsync(CreateHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindPortList))
            {
                query["BindPortList"] = request.BindPortList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHoneypotProbeBindResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a monitoring or forwarding service for a probe.
         *
         * @param request CreateHoneypotProbeBindRequest
         * @return CreateHoneypotProbeBindResponse
         */
        public CreateHoneypotProbeBindResponse CreateHoneypotProbeBind(CreateHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHoneypotProbeBindWithOptions(request, runtime);
        }

        /**
         * @summary Creates a monitoring or forwarding service for a probe.
         *
         * @param request CreateHoneypotProbeBindRequest
         * @return CreateHoneypotProbeBindResponse
         */
        public async Task<CreateHoneypotProbeBindResponse> CreateHoneypotProbeBindAsync(CreateHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHoneypotProbeBindWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建代理集群
         *
         * @param request CreateHybridProxyClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHybridProxyClusterResponse
         */
        public CreateHybridProxyClusterResponse CreateHybridProxyClusterWithOptions(CreateHybridProxyClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ip))
            {
                query["Ip"] = request.Ip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHybridProxyCluster",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHybridProxyClusterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建代理集群
         *
         * @param request CreateHybridProxyClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateHybridProxyClusterResponse
         */
        public async Task<CreateHybridProxyClusterResponse> CreateHybridProxyClusterWithOptionsAsync(CreateHybridProxyClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ip))
            {
                query["Ip"] = request.Ip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateHybridProxyCluster",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateHybridProxyClusterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建代理集群
         *
         * @param request CreateHybridProxyClusterRequest
         * @return CreateHybridProxyClusterResponse
         */
        public CreateHybridProxyClusterResponse CreateHybridProxyCluster(CreateHybridProxyClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateHybridProxyClusterWithOptions(request, runtime);
        }

        /**
         * @summary 创建代理集群
         *
         * @param request CreateHybridProxyClusterRequest
         * @return CreateHybridProxyClusterResponse
         */
        public async Task<CreateHybridProxyClusterResponse> CreateHybridProxyClusterAsync(CreateHybridProxyClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateHybridProxyClusterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a defense rule in the container firewall module.
         *
         * @param tmpReq CreateInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateInterceptionRuleResponse
         */
        public CreateInterceptionRuleResponse CreateInterceptionRuleWithOptions(CreateInterceptionRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateInterceptionRuleShrinkRequest request = new CreateInterceptionRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstTargetList))
            {
                request.DstTargetListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstTargetList, "DstTargetList", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcTarget))
            {
                request.SrcTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcTarget, "SrcTarget", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTargetListShrink))
            {
                query["DstTargetList"] = request.DstTargetListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptType))
            {
                query["InterceptType"] = request.InterceptType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderIndex))
            {
                query["OrderIndex"] = request.OrderIndex;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTargetShrink))
            {
                query["SrcTarget"] = request.SrcTargetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateInterceptionRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule in the container firewall module.
         *
         * @param tmpReq CreateInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateInterceptionRuleResponse
         */
        public async Task<CreateInterceptionRuleResponse> CreateInterceptionRuleWithOptionsAsync(CreateInterceptionRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateInterceptionRuleShrinkRequest request = new CreateInterceptionRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstTargetList))
            {
                request.DstTargetListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstTargetList, "DstTargetList", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcTarget))
            {
                request.SrcTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcTarget, "SrcTarget", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTargetListShrink))
            {
                query["DstTargetList"] = request.DstTargetListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptType))
            {
                query["InterceptType"] = request.InterceptType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderIndex))
            {
                query["OrderIndex"] = request.OrderIndex;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTargetShrink))
            {
                query["SrcTarget"] = request.SrcTargetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateInterceptionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a defense rule in the container firewall module.
         *
         * @param request CreateInterceptionRuleRequest
         * @return CreateInterceptionRuleResponse
         */
        public CreateInterceptionRuleResponse CreateInterceptionRule(CreateInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateInterceptionRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a defense rule in the container firewall module.
         *
         * @param request CreateInterceptionRuleRequest
         * @return CreateInterceptionRuleResponse
         */
        public async Task<CreateInterceptionRuleResponse> CreateInterceptionRuleAsync(CreateInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateInterceptionRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a defense object.
         *
         * @param request CreateInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateInterceptionTargetResponse
         */
        public CreateInterceptionTargetResponse CreateInterceptionTargetWithOptions(CreateInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateInterceptionTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a defense object.
         *
         * @param request CreateInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateInterceptionTargetResponse
         */
        public async Task<CreateInterceptionTargetResponse> CreateInterceptionTargetWithOptionsAsync(CreateInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateInterceptionTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a defense object.
         *
         * @param request CreateInterceptionTargetRequest
         * @return CreateInterceptionTargetResponse
         */
        public CreateInterceptionTargetResponse CreateInterceptionTarget(CreateInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateInterceptionTargetWithOptions(request, runtime);
        }

        /**
         * @summary Creates a defense object.
         *
         * @param request CreateInterceptionTargetRequest
         * @return CreateInterceptionTargetResponse
         */
        public async Task<CreateInterceptionTargetResponse> CreateInterceptionTargetAsync(CreateInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateInterceptionTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a Jenkins image repository.
         *
         * @param request CreateJenkinsImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateJenkinsImageRegistryResponse
         */
        public CreateJenkinsImageRegistryResponse CreateJenkinsImageRegistryWithOptions(CreateJenkinsImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                body["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtraParam))
            {
                body["ExtraParam"] = request.ExtraParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                body["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                body["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PersistenceDay))
            {
                body["PersistenceDay"] = request.PersistenceDay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                body["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryHostIp))
            {
                body["RegistryHostIp"] = request.RegistryHostIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryName))
            {
                body["RegistryName"] = request.RegistryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                body["RegistryType"] = request.RegistryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryVersion))
            {
                body["RegistryVersion"] = request.RegistryVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                body["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                body["UserName"] = request.UserName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                body["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                body["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateJenkinsImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateJenkinsImageRegistryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a Jenkins image repository.
         *
         * @param request CreateJenkinsImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateJenkinsImageRegistryResponse
         */
        public async Task<CreateJenkinsImageRegistryResponse> CreateJenkinsImageRegistryWithOptionsAsync(CreateJenkinsImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                body["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtraParam))
            {
                body["ExtraParam"] = request.ExtraParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                body["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                body["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PersistenceDay))
            {
                body["PersistenceDay"] = request.PersistenceDay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                body["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryHostIp))
            {
                body["RegistryHostIp"] = request.RegistryHostIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryName))
            {
                body["RegistryName"] = request.RegistryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                body["RegistryType"] = request.RegistryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryVersion))
            {
                body["RegistryVersion"] = request.RegistryVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                body["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                body["UserName"] = request.UserName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                body["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                body["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateJenkinsImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateJenkinsImageRegistryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a Jenkins image repository.
         *
         * @param request CreateJenkinsImageRegistryRequest
         * @return CreateJenkinsImageRegistryResponse
         */
        public CreateJenkinsImageRegistryResponse CreateJenkinsImageRegistry(CreateJenkinsImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateJenkinsImageRegistryWithOptions(request, runtime);
        }

        /**
         * @summary Creates a Jenkins image repository.
         *
         * @param request CreateJenkinsImageRegistryRequest
         * @return CreateJenkinsImageRegistryResponse
         */
        public async Task<CreateJenkinsImageRegistryResponse> CreateJenkinsImageRegistryAsync(CreateJenkinsImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateJenkinsImageRegistryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request CreateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateMaliciousFileWhitelistConfigResponse
         */
        public CreateMaliciousFileWhitelistConfigResponse CreateMaliciousFileWhitelistConfigWithOptions(CreateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operator))
            {
                query["Operator"] = request.Operator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetValue))
            {
                query["TargetValue"] = request.TargetValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request CreateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateMaliciousFileWhitelistConfigResponse
         */
        public async Task<CreateMaliciousFileWhitelistConfigResponse> CreateMaliciousFileWhitelistConfigWithOptionsAsync(CreateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operator))
            {
                query["Operator"] = request.Operator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetValue))
            {
                query["TargetValue"] = request.TargetValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request CreateMaliciousFileWhitelistConfigRequest
         * @return CreateMaliciousFileWhitelistConfigResponse
         */
        public CreateMaliciousFileWhitelistConfigResponse CreateMaliciousFileWhitelistConfig(CreateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Creates an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request CreateMaliciousFileWhitelistConfigRequest
         * @return CreateMaliciousFileWhitelistConfigResponse
         */
        public async Task<CreateMaliciousFileWhitelistConfigResponse> CreateMaliciousFileWhitelistConfigAsync(CreateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds remarks to alert events for agentless detection.
         *
         * @param request CreateMaliciousNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateMaliciousNoteResponse
         */
        public CreateMaliciousNoteResponse CreateMaliciousNoteWithOptions(CreateMaliciousNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Note))
            {
                query["Note"] = request.Note;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateMaliciousNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateMaliciousNoteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to alert events for agentless detection.
         *
         * @param request CreateMaliciousNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateMaliciousNoteResponse
         */
        public async Task<CreateMaliciousNoteResponse> CreateMaliciousNoteWithOptionsAsync(CreateMaliciousNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Note))
            {
                query["Note"] = request.Note;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateMaliciousNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateMaliciousNoteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to alert events for agentless detection.
         *
         * @param request CreateMaliciousNoteRequest
         * @return CreateMaliciousNoteResponse
         */
        public CreateMaliciousNoteResponse CreateMaliciousNote(CreateMaliciousNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateMaliciousNoteWithOptions(request, runtime);
        }

        /**
         * @summary Adds remarks to alert events for agentless detection.
         *
         * @param request CreateMaliciousNoteRequest
         * @return CreateMaliciousNoteResponse
         */
        public async Task<CreateMaliciousNoteResponse> CreateMaliciousNoteAsync(CreateMaliciousNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateMaliciousNoteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the components that are required by at-risk image blocking. The components are policy-template-controller, gatekeeper, and logtail-ds.
         *
         * @param request CreateOpaClusterPluginRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOpaClusterPluginResponse
         */
        public CreateOpaClusterPluginResponse CreateOpaClusterPluginWithOptions(CreateOpaClusterPluginRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOpaClusterPlugin",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOpaClusterPluginResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the components that are required by at-risk image blocking. The components are policy-template-controller, gatekeeper, and logtail-ds.
         *
         * @param request CreateOpaClusterPluginRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOpaClusterPluginResponse
         */
        public async Task<CreateOpaClusterPluginResponse> CreateOpaClusterPluginWithOptionsAsync(CreateOpaClusterPluginRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOpaClusterPlugin",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOpaClusterPluginResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the components that are required by at-risk image blocking. The components are policy-template-controller, gatekeeper, and logtail-ds.
         *
         * @param request CreateOpaClusterPluginRequest
         * @return CreateOpaClusterPluginResponse
         */
        public CreateOpaClusterPluginResponse CreateOpaClusterPlugin(CreateOpaClusterPluginRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOpaClusterPluginWithOptions(request, runtime);
        }

        /**
         * @summary Installs the components that are required by at-risk image blocking. The components are policy-template-controller, gatekeeper, and logtail-ds.
         *
         * @param request CreateOpaClusterPluginRequest
         * @return CreateOpaClusterPluginResponse
         */
        public async Task<CreateOpaClusterPluginResponse> CreateOpaClusterPluginAsync(CreateOpaClusterPluginRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOpaClusterPluginWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a rule to block at-risk images.
         *
         * @param tmpReq CreateOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOpaStrategyNewResponse
         */
        public CreateOpaStrategyNewResponse CreateOpaStrategyNewWithOptions(CreateOpaStrategyNewRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateOpaStrategyNewShrinkRequest request = new CreateOpaStrategyNewShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AlarmDetail))
            {
                request.AlarmDetailShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AlarmDetail, "AlarmDetail", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmDetailShrink))
            {
                query["AlarmDetail"] = request.AlarmDetailShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousImage))
            {
                query["MaliciousImage"] = request.MaliciousImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scopes))
            {
                query["Scopes"] = request.Scopes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTemplateId))
            {
                query["StrategyTemplateId"] = request.StrategyTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnScanedImage))
            {
                query["UnScanedImage"] = request.UnScanedImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                query["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOpaStrategyNewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a rule to block at-risk images.
         *
         * @param tmpReq CreateOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOpaStrategyNewResponse
         */
        public async Task<CreateOpaStrategyNewResponse> CreateOpaStrategyNewWithOptionsAsync(CreateOpaStrategyNewRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateOpaStrategyNewShrinkRequest request = new CreateOpaStrategyNewShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AlarmDetail))
            {
                request.AlarmDetailShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AlarmDetail, "AlarmDetail", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmDetailShrink))
            {
                query["AlarmDetail"] = request.AlarmDetailShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousImage))
            {
                query["MaliciousImage"] = request.MaliciousImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scopes))
            {
                query["Scopes"] = request.Scopes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTemplateId))
            {
                query["StrategyTemplateId"] = request.StrategyTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnScanedImage))
            {
                query["UnScanedImage"] = request.UnScanedImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                query["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOpaStrategyNewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a rule to block at-risk images.
         *
         * @param request CreateOpaStrategyNewRequest
         * @return CreateOpaStrategyNewResponse
         */
        public CreateOpaStrategyNewResponse CreateOpaStrategyNew(CreateOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOpaStrategyNewWithOptions(request, runtime);
        }

        /**
         * @summary Creates a rule to block at-risk images.
         *
         * @param request CreateOpaStrategyNewRequest
         * @return CreateOpaStrategyNewResponse
         */
        public async Task<CreateOpaStrategyNewResponse> CreateOpaStrategyNewAsync(CreateOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOpaStrategyNewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the mapping between an asset and an asset group. For example, you can call this operation to modify the server group to which the asset belongs or the asset list of the asset group.
         *
         * @description A server can belong only to one server group. If you call the CreateOrUpdateAssetGroup operation and the server specified in request parameters belongs to Server Group A, the server is removed from Server Group A and then added to the newly created or specified server group after the call is complete.
         *
         * @param request CreateOrUpdateAssetGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateAssetGroupResponse
         */
        public CreateOrUpdateAssetGroupResponse CreateOrUpdateAssetGroupWithOptions(CreateOrUpdateAssetGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateAssetGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateAssetGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the mapping between an asset and an asset group. For example, you can call this operation to modify the server group to which the asset belongs or the asset list of the asset group.
         *
         * @description A server can belong only to one server group. If you call the CreateOrUpdateAssetGroup operation and the server specified in request parameters belongs to Server Group A, the server is removed from Server Group A and then added to the newly created or specified server group after the call is complete.
         *
         * @param request CreateOrUpdateAssetGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateAssetGroupResponse
         */
        public async Task<CreateOrUpdateAssetGroupResponse> CreateOrUpdateAssetGroupWithOptionsAsync(CreateOrUpdateAssetGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateAssetGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateAssetGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the mapping between an asset and an asset group. For example, you can call this operation to modify the server group to which the asset belongs or the asset list of the asset group.
         *
         * @description A server can belong only to one server group. If you call the CreateOrUpdateAssetGroup operation and the server specified in request parameters belongs to Server Group A, the server is removed from Server Group A and then added to the newly created or specified server group after the call is complete.
         *
         * @param request CreateOrUpdateAssetGroupRequest
         * @return CreateOrUpdateAssetGroupResponse
         */
        public CreateOrUpdateAssetGroupResponse CreateOrUpdateAssetGroup(CreateOrUpdateAssetGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateAssetGroupWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the mapping between an asset and an asset group. For example, you can call this operation to modify the server group to which the asset belongs or the asset list of the asset group.
         *
         * @description A server can belong only to one server group. If you call the CreateOrUpdateAssetGroup operation and the server specified in request parameters belongs to Server Group A, the server is removed from Server Group A and then added to the newly created or specified server group after the call is complete.
         *
         * @param request CreateOrUpdateAssetGroupRequest
         * @return CreateOrUpdateAssetGroupResponse
         */
        public async Task<CreateOrUpdateAssetGroupResponse> CreateOrUpdateAssetGroupAsync(CreateOrUpdateAssetGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateAssetGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies a DingTalk chatbot that sends notifications.
         *
         * @param request CreateOrUpdateDingTalkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateDingTalkResponse
         */
        public CreateOrUpdateDingTalkResponse CreateOrUpdateDingTalkWithOptions(CreateOrUpdateDingTalkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigList))
            {
                query["ConfigList"] = request.ConfigList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingTalkLang))
            {
                query["DingTalkLang"] = request.DingTalkLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalTime))
            {
                query["IntervalTime"] = request.IntervalTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleActionName))
            {
                query["RuleActionName"] = request.RuleActionName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SendUrl))
            {
                query["SendUrl"] = request.SendUrl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateDingTalk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateDingTalkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a DingTalk chatbot that sends notifications.
         *
         * @param request CreateOrUpdateDingTalkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateDingTalkResponse
         */
        public async Task<CreateOrUpdateDingTalkResponse> CreateOrUpdateDingTalkWithOptionsAsync(CreateOrUpdateDingTalkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigList))
            {
                query["ConfigList"] = request.ConfigList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingTalkLang))
            {
                query["DingTalkLang"] = request.DingTalkLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalTime))
            {
                query["IntervalTime"] = request.IntervalTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleActionName))
            {
                query["RuleActionName"] = request.RuleActionName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SendUrl))
            {
                query["SendUrl"] = request.SendUrl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateDingTalk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateDingTalkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a DingTalk chatbot that sends notifications.
         *
         * @param request CreateOrUpdateDingTalkRequest
         * @return CreateOrUpdateDingTalkResponse
         */
        public CreateOrUpdateDingTalkResponse CreateOrUpdateDingTalk(CreateOrUpdateDingTalkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateDingTalkWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies a DingTalk chatbot that sends notifications.
         *
         * @param request CreateOrUpdateDingTalkRequest
         * @return CreateOrUpdateDingTalkResponse
         */
        public async Task<CreateOrUpdateDingTalkResponse> CreateOrUpdateDingTalkAsync(CreateOrUpdateDingTalkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateDingTalkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a bucket check task.
         *
         * @param request CreateOssBucketScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOssBucketScanTaskResponse
         */
        public CreateOssBucketScanTaskResponse CreateOssBucketScanTaskWithOptions(CreateOssBucketScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExcludeKeySuffixList))
            {
                query["ExcludeKeySuffixList"] = request.ExcludeKeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanMode))
            {
                query["ScanMode"] = request.ScanMode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOssBucketScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOssBucketScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a bucket check task.
         *
         * @param request CreateOssBucketScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOssBucketScanTaskResponse
         */
        public async Task<CreateOssBucketScanTaskResponse> CreateOssBucketScanTaskWithOptionsAsync(CreateOssBucketScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExcludeKeySuffixList))
            {
                query["ExcludeKeySuffixList"] = request.ExcludeKeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanMode))
            {
                query["ScanMode"] = request.ScanMode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOssBucketScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOssBucketScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a bucket check task.
         *
         * @param request CreateOssBucketScanTaskRequest
         * @return CreateOssBucketScanTaskResponse
         */
        public CreateOssBucketScanTaskResponse CreateOssBucketScanTask(CreateOssBucketScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOssBucketScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a bucket check task.
         *
         * @param request CreateOssBucketScanTaskRequest
         * @return CreateOssBucketScanTaskResponse
         */
        public async Task<CreateOssBucketScanTaskResponse> CreateOssBucketScanTaskAsync(CreateOssBucketScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOssBucketScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a scan policy.
         *
         * @param request CreateOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOssScanConfigResponse
         */
        public CreateOssScanConfigResponse CreateOssScanConfigWithOptions(CreateOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayList))
            {
                query["ScanDayList"] = request.ScanDayList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOssScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a scan policy.
         *
         * @param request CreateOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOssScanConfigResponse
         */
        public async Task<CreateOssScanConfigResponse> CreateOssScanConfigWithOptionsAsync(CreateOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayList))
            {
                query["ScanDayList"] = request.ScanDayList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOssScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a scan policy.
         *
         * @param request CreateOssScanConfigRequest
         * @return CreateOssScanConfigResponse
         */
        public CreateOssScanConfigResponse CreateOssScanConfig(CreateOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOssScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Creates a scan policy.
         *
         * @param request CreateOssScanConfigRequest
         * @return CreateOssScanConfigResponse
         */
        public async Task<CreateOssScanConfigResponse> CreateOssScanConfigAsync(CreateOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOssScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a restoration task.
         *
         * @param request CreateRestoreJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRestoreJobResponse
         */
        public CreateRestoreJobResponse CreateRestoreJobWithOptions(CreateRestoreJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Includes))
            {
                query["Includes"] = request.Includes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotHash))
            {
                query["SnapshotHash"] = request.SnapshotHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotId))
            {
                query["SnapshotId"] = request.SnapshotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotVersion))
            {
                query["SnapshotVersion"] = request.SnapshotVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VaultId))
            {
                query["VaultId"] = request.VaultId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRestoreJob",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRestoreJobResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a restoration task.
         *
         * @param request CreateRestoreJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRestoreJobResponse
         */
        public async Task<CreateRestoreJobResponse> CreateRestoreJobWithOptionsAsync(CreateRestoreJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Includes))
            {
                query["Includes"] = request.Includes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotHash))
            {
                query["SnapshotHash"] = request.SnapshotHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotId))
            {
                query["SnapshotId"] = request.SnapshotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotVersion))
            {
                query["SnapshotVersion"] = request.SnapshotVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VaultId))
            {
                query["VaultId"] = request.VaultId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRestoreJob",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRestoreJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a restoration task.
         *
         * @param request CreateRestoreJobRequest
         * @return CreateRestoreJobResponse
         */
        public CreateRestoreJobResponse CreateRestoreJob(CreateRestoreJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRestoreJobWithOptions(request, runtime);
        }

        /**
         * @summary Creates a restoration task.
         *
         * @param request CreateRestoreJobRequest
         * @return CreateRestoreJobResponse
         */
        public async Task<CreateRestoreJobResponse> CreateRestoreJobAsync(CreateRestoreJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRestoreJobWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a service-linked role and authorizes Security Center to access cloud resources.
         *
         * @description For more information about service-linked roles, see [Service-linked roles](https://help.aliyun.com/document_detail/160674.html).
         *
         * @param request CreateServiceLinkedRoleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateServiceLinkedRoleResponse
         */
        public CreateServiceLinkedRoleResponse CreateServiceLinkedRoleWithOptions(CreateServiceLinkedRoleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceLinkedRole))
            {
                query["ServiceLinkedRole"] = request.ServiceLinkedRole;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateServiceLinkedRole",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateServiceLinkedRoleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a service-linked role and authorizes Security Center to access cloud resources.
         *
         * @description For more information about service-linked roles, see [Service-linked roles](https://help.aliyun.com/document_detail/160674.html).
         *
         * @param request CreateServiceLinkedRoleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateServiceLinkedRoleResponse
         */
        public async Task<CreateServiceLinkedRoleResponse> CreateServiceLinkedRoleWithOptionsAsync(CreateServiceLinkedRoleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceLinkedRole))
            {
                query["ServiceLinkedRole"] = request.ServiceLinkedRole;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateServiceLinkedRole",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateServiceLinkedRoleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a service-linked role and authorizes Security Center to access cloud resources.
         *
         * @description For more information about service-linked roles, see [Service-linked roles](https://help.aliyun.com/document_detail/160674.html).
         *
         * @param request CreateServiceLinkedRoleRequest
         * @return CreateServiceLinkedRoleResponse
         */
        public CreateServiceLinkedRoleResponse CreateServiceLinkedRole(CreateServiceLinkedRoleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateServiceLinkedRoleWithOptions(request, runtime);
        }

        /**
         * @summary Creates a service-linked role and authorizes Security Center to access cloud resources.
         *
         * @description For more information about service-linked roles, see [Service-linked roles](https://help.aliyun.com/document_detail/160674.html).
         *
         * @param request CreateServiceLinkedRoleRequest
         * @return CreateServiceLinkedRoleResponse
         */
        public async Task<CreateServiceLinkedRoleResponse> CreateServiceLinkedRoleAsync(CreateServiceLinkedRoleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateServiceLinkedRoleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Create a service trail.
         *
         * @param request CreateServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateServiceTrailResponse
         */
        public CreateServiceTrailResponse CreateServiceTrailWithOptions(CreateServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateServiceTrailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Create a service trail.
         *
         * @param request CreateServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateServiceTrailResponse
         */
        public async Task<CreateServiceTrailResponse> CreateServiceTrailWithOptionsAsync(CreateServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateServiceTrailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Create a service trail.
         *
         * @param request CreateServiceTrailRequest
         * @return CreateServiceTrailResponse
         */
        public CreateServiceTrailResponse CreateServiceTrail(CreateServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateServiceTrailWithOptions(request, runtime);
        }

        /**
         * @summary Create a service trail.
         *
         * @param request CreateServiceTrailRequest
         * @return CreateServiceTrailResponse
         */
        public async Task<CreateServiceTrailResponse> CreateServiceTrailAsync(CreateServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateServiceTrailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a task to query alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request CreateSimilarSecurityEventsQueryTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSimilarSecurityEventsQueryTaskResponse
         */
        public CreateSimilarSecurityEventsQueryTaskResponse CreateSimilarSecurityEventsQueryTaskWithOptions(CreateSimilarSecurityEventsQueryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SimilarEventScenarioCode))
            {
                query["SimilarEventScenarioCode"] = request.SimilarEventScenarioCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSimilarSecurityEventsQueryTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSimilarSecurityEventsQueryTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a task to query alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request CreateSimilarSecurityEventsQueryTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSimilarSecurityEventsQueryTaskResponse
         */
        public async Task<CreateSimilarSecurityEventsQueryTaskResponse> CreateSimilarSecurityEventsQueryTaskWithOptionsAsync(CreateSimilarSecurityEventsQueryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SimilarEventScenarioCode))
            {
                query["SimilarEventScenarioCode"] = request.SimilarEventScenarioCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSimilarSecurityEventsQueryTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSimilarSecurityEventsQueryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a task to query alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request CreateSimilarSecurityEventsQueryTaskRequest
         * @return CreateSimilarSecurityEventsQueryTaskResponse
         */
        public CreateSimilarSecurityEventsQueryTaskResponse CreateSimilarSecurityEventsQueryTask(CreateSimilarSecurityEventsQueryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSimilarSecurityEventsQueryTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a task to query alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request CreateSimilarSecurityEventsQueryTaskRequest
         * @return CreateSimilarSecurityEventsQueryTaskResponse
         */
        public async Task<CreateSimilarSecurityEventsQueryTaskResponse> CreateSimilarSecurityEventsQueryTaskAsync(CreateSimilarSecurityEventsQueryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSimilarSecurityEventsQueryTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds remarks to an alert event.
         *
         * @param request CreateSuspEventNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSuspEventNoteResponse
         */
        public CreateSuspEventNoteResponse CreateSuspEventNoteWithOptions(CreateSuspEventNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Note))
            {
                query["Note"] = request.Note;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSuspEventNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSuspEventNoteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to an alert event.
         *
         * @param request CreateSuspEventNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSuspEventNoteResponse
         */
        public async Task<CreateSuspEventNoteResponse> CreateSuspEventNoteWithOptionsAsync(CreateSuspEventNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Note))
            {
                query["Note"] = request.Note;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSuspEventNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSuspEventNoteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to an alert event.
         *
         * @param request CreateSuspEventNoteRequest
         * @return CreateSuspEventNoteResponse
         */
        public CreateSuspEventNoteResponse CreateSuspEventNote(CreateSuspEventNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSuspEventNoteWithOptions(request, runtime);
        }

        /**
         * @summary Adds remarks to an alert event.
         *
         * @param request CreateSuspEventNoteRequest
         * @return CreateSuspEventNoteResponse
         */
        public async Task<CreateSuspEventNoteResponse> CreateSuspEventNoteAsync(CreateSuspEventNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSuspEventNoteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an anti-ransomware policy for a database.
         *
         * @param tmpReq CreateUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateUniBackupPolicyResponse
         */
        public CreateUniBackupPolicyResponse CreateUniBackupPolicyWithOptions(CreateUniBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateUniBackupPolicyShrinkRequest request = new CreateUniBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FullPlan))
            {
                request.FullPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FullPlan, "FullPlan", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.IncPlan))
            {
                request.IncPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.IncPlan, "IncPlan", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountName))
            {
                query["AccountName"] = request.AccountName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountPassword))
            {
                query["AccountPassword"] = request.AccountPassword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseAddByUser))
            {
                query["DatabaseAddByUser"] = request.DatabaseAddByUser;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullPlanShrink))
            {
                query["FullPlan"] = request.FullPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncPlanShrink))
            {
                query["IncPlan"] = request.IncPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retention))
            {
                query["Retention"] = request.Retention;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeedLimiter))
            {
                query["SpeedLimiter"] = request.SpeedLimiter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUniBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an anti-ransomware policy for a database.
         *
         * @param tmpReq CreateUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateUniBackupPolicyResponse
         */
        public async Task<CreateUniBackupPolicyResponse> CreateUniBackupPolicyWithOptionsAsync(CreateUniBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateUniBackupPolicyShrinkRequest request = new CreateUniBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FullPlan))
            {
                request.FullPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FullPlan, "FullPlan", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.IncPlan))
            {
                request.IncPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.IncPlan, "IncPlan", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountName))
            {
                query["AccountName"] = request.AccountName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountPassword))
            {
                query["AccountPassword"] = request.AccountPassword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseAddByUser))
            {
                query["DatabaseAddByUser"] = request.DatabaseAddByUser;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullPlanShrink))
            {
                query["FullPlan"] = request.FullPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncPlanShrink))
            {
                query["IncPlan"] = request.IncPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retention))
            {
                query["Retention"] = request.Retention;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeedLimiter))
            {
                query["SpeedLimiter"] = request.SpeedLimiter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUniBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an anti-ransomware policy for a database.
         *
         * @param request CreateUniBackupPolicyRequest
         * @return CreateUniBackupPolicyResponse
         */
        public CreateUniBackupPolicyResponse CreateUniBackupPolicy(CreateUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateUniBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Creates an anti-ransomware policy for a database.
         *
         * @param request CreateUniBackupPolicyRequest
         * @return CreateUniBackupPolicyResponse
         */
        public async Task<CreateUniBackupPolicyResponse> CreateUniBackupPolicyAsync(CreateUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateUniBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a restoration task for a database.
         *
         * @param request CreateUniRestorePlanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateUniRestorePlanResponse
         */
        public CreateUniRestorePlanResponse CreateUniRestorePlanWithOptions(CreateUniRestorePlanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Database))
            {
                query["Database"] = request.Database;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetScn))
            {
                query["ResetScn"] = request.ResetScn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetTime))
            {
                query["ResetTime"] = request.ResetTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RestoreInfo))
            {
                query["RestoreInfo"] = request.RestoreInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimePoint))
            {
                query["TimePoint"] = request.TimePoint;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUniRestorePlan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUniRestorePlanResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a restoration task for a database.
         *
         * @param request CreateUniRestorePlanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateUniRestorePlanResponse
         */
        public async Task<CreateUniRestorePlanResponse> CreateUniRestorePlanWithOptionsAsync(CreateUniRestorePlanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Database))
            {
                query["Database"] = request.Database;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetScn))
            {
                query["ResetScn"] = request.ResetScn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResetTime))
            {
                query["ResetTime"] = request.ResetTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RestoreInfo))
            {
                query["RestoreInfo"] = request.RestoreInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimePoint))
            {
                query["TimePoint"] = request.TimePoint;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateUniRestorePlan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateUniRestorePlanResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a restoration task for a database.
         *
         * @param request CreateUniRestorePlanRequest
         * @return CreateUniRestorePlanResponse
         */
        public CreateUniRestorePlanResponse CreateUniRestorePlan(CreateUniRestorePlanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateUniRestorePlanWithOptions(request, runtime);
        }

        /**
         * @summary Creates a restoration task for a database.
         *
         * @param request CreateUniRestorePlanRequest
         * @return CreateUniRestorePlanResponse
         */
        public async Task<CreateUniRestorePlanResponse> CreateUniRestorePlanAsync(CreateUniRestorePlanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateUniRestorePlanWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a one-time virus scan task that is immediately executed.
         *
         * @param request CreateVirusScanOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateVirusScanOnceTaskResponse
         */
        public CreateVirusScanOnceTaskResponse CreateVirusScanOnceTaskWithOptions(CreateVirusScanOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanPath))
            {
                query["ScanPath"] = request.ScanPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVirusScanOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVirusScanOnceTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a one-time virus scan task that is immediately executed.
         *
         * @param request CreateVirusScanOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateVirusScanOnceTaskResponse
         */
        public async Task<CreateVirusScanOnceTaskResponse> CreateVirusScanOnceTaskWithOptionsAsync(CreateVirusScanOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanPath))
            {
                query["ScanPath"] = request.ScanPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVirusScanOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVirusScanOnceTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a one-time virus scan task that is immediately executed.
         *
         * @param request CreateVirusScanOnceTaskRequest
         * @return CreateVirusScanOnceTaskResponse
         */
        public CreateVirusScanOnceTaskResponse CreateVirusScanOnceTask(CreateVirusScanOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateVirusScanOnceTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a one-time virus scan task that is immediately executed.
         *
         * @param request CreateVirusScanOnceTaskRequest
         * @return CreateVirusScanOnceTaskResponse
         */
        public async Task<CreateVirusScanOnceTaskResponse> CreateVirusScanOnceTaskAsync(CreateVirusScanOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateVirusScanOnceTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a list of vulnerabilities that can be automatically fixed. After the list is created, you can select the list when you create a vulnerability fixing task on the Playbook page.
         *
         * @param request CreateVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateVulAutoRepairConfigResponse
         */
        public CreateVulAutoRepairConfigResponse CreateVulAutoRepairConfigWithOptions(CreateVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulAutoRepairConfigList))
            {
                query["VulAutoRepairConfigList"] = request.VulAutoRepairConfigList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVulAutoRepairConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a list of vulnerabilities that can be automatically fixed. After the list is created, you can select the list when you create a vulnerability fixing task on the Playbook page.
         *
         * @param request CreateVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateVulAutoRepairConfigResponse
         */
        public async Task<CreateVulAutoRepairConfigResponse> CreateVulAutoRepairConfigWithOptionsAsync(CreateVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulAutoRepairConfigList))
            {
                query["VulAutoRepairConfigList"] = request.VulAutoRepairConfigList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateVulAutoRepairConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a list of vulnerabilities that can be automatically fixed. After the list is created, you can select the list when you create a vulnerability fixing task on the Playbook page.
         *
         * @param request CreateVulAutoRepairConfigRequest
         * @return CreateVulAutoRepairConfigResponse
         */
        public CreateVulAutoRepairConfigResponse CreateVulAutoRepairConfig(CreateVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateVulAutoRepairConfigWithOptions(request, runtime);
        }

        /**
         * @summary Creates a list of vulnerabilities that can be automatically fixed. After the list is created, you can select the list when you create a vulnerability fixing task on the Playbook page.
         *
         * @param request CreateVulAutoRepairConfigRequest
         * @return CreateVulAutoRepairConfigResponse
         */
        public async Task<CreateVulAutoRepairConfigResponse> CreateVulAutoRepairConfigAsync(CreateVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateVulAutoRepairConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the specified defense rules against brute-force attacks.
         *
         * @param request DeleteAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAntiBruteForceRuleResponse
         */
        public DeleteAntiBruteForceRuleResponse DeleteAntiBruteForceRuleWithOptions(DeleteAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAntiBruteForceRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the specified defense rules against brute-force attacks.
         *
         * @param request DeleteAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAntiBruteForceRuleResponse
         */
        public async Task<DeleteAntiBruteForceRuleResponse> DeleteAntiBruteForceRuleWithOptionsAsync(DeleteAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAntiBruteForceRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the specified defense rules against brute-force attacks.
         *
         * @param request DeleteAntiBruteForceRuleRequest
         * @return DeleteAntiBruteForceRuleResponse
         */
        public DeleteAntiBruteForceRuleResponse DeleteAntiBruteForceRule(DeleteAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAntiBruteForceRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the specified defense rules against brute-force attacks.
         *
         * @param request DeleteAntiBruteForceRuleRequest
         * @return DeleteAntiBruteForceRuleResponse
         */
        public async Task<DeleteAntiBruteForceRuleResponse> DeleteAntiBruteForceRuleAsync(DeleteAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAntiBruteForceRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an anti-ransomware policy.
         *
         * @param request DeleteBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBackupPolicyResponse
         */
        public DeleteBackupPolicyResponse DeleteBackupPolicyWithOptions(DeleteBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an anti-ransomware policy.
         *
         * @param request DeleteBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBackupPolicyResponse
         */
        public async Task<DeleteBackupPolicyResponse> DeleteBackupPolicyWithOptionsAsync(DeleteBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an anti-ransomware policy.
         *
         * @param request DeleteBackupPolicyRequest
         * @return DeleteBackupPolicyResponse
         */
        public DeleteBackupPolicyResponse DeleteBackupPolicy(DeleteBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an anti-ransomware policy.
         *
         * @param request DeleteBackupPolicyRequest
         * @return DeleteBackupPolicyResponse
         */
        public async Task<DeleteBackupPolicyResponse> DeleteBackupPolicyAsync(DeleteBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Disables a specified anti-ransomware policy that is applied to specified servers and uninstalls the anti-ransomware agent from the servers. If the backup vaults of the servers contain only backup data of the servers, the backup vaults are deleted.
         *
         * @param request DeleteBackupPolicyMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBackupPolicyMachineResponse
         */
        public DeleteBackupPolicyMachineResponse DeleteBackupPolicyMachineWithOptions(DeleteBackupPolicyMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBackupPolicyMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBackupPolicyMachineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Disables a specified anti-ransomware policy that is applied to specified servers and uninstalls the anti-ransomware agent from the servers. If the backup vaults of the servers contain only backup data of the servers, the backup vaults are deleted.
         *
         * @param request DeleteBackupPolicyMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBackupPolicyMachineResponse
         */
        public async Task<DeleteBackupPolicyMachineResponse> DeleteBackupPolicyMachineWithOptionsAsync(DeleteBackupPolicyMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBackupPolicyMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBackupPolicyMachineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Disables a specified anti-ransomware policy that is applied to specified servers and uninstalls the anti-ransomware agent from the servers. If the backup vaults of the servers contain only backup data of the servers, the backup vaults are deleted.
         *
         * @param request DeleteBackupPolicyMachineRequest
         * @return DeleteBackupPolicyMachineResponse
         */
        public DeleteBackupPolicyMachineResponse DeleteBackupPolicyMachine(DeleteBackupPolicyMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteBackupPolicyMachineWithOptions(request, runtime);
        }

        /**
         * @summary Disables a specified anti-ransomware policy that is applied to specified servers and uninstalls the anti-ransomware agent from the servers. If the backup vaults of the servers contain only backup data of the servers, the backup vaults are deleted.
         *
         * @param request DeleteBackupPolicyMachineRequest
         * @return DeleteBackupPolicyMachineResponse
         */
        public async Task<DeleteBackupPolicyMachineResponse> DeleteBackupPolicyMachineAsync(DeleteBackupPolicyMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteBackupPolicyMachineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a binary security policy from the container signature feature.
         *
         * @param request DeleteBinarySecurityPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBinarySecurityPolicyResponse
         */
        public DeleteBinarySecurityPolicyResponse DeleteBinarySecurityPolicyWithOptions(DeleteBinarySecurityPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBinarySecurityPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBinarySecurityPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a binary security policy from the container signature feature.
         *
         * @param request DeleteBinarySecurityPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteBinarySecurityPolicyResponse
         */
        public async Task<DeleteBinarySecurityPolicyResponse> DeleteBinarySecurityPolicyWithOptionsAsync(DeleteBinarySecurityPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteBinarySecurityPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteBinarySecurityPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a binary security policy from the container signature feature.
         *
         * @param request DeleteBinarySecurityPolicyRequest
         * @return DeleteBinarySecurityPolicyResponse
         */
        public DeleteBinarySecurityPolicyResponse DeleteBinarySecurityPolicy(DeleteBinarySecurityPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteBinarySecurityPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a binary security policy from the container signature feature.
         *
         * @param request DeleteBinarySecurityPolicyRequest
         * @return DeleteBinarySecurityPolicyResponse
         */
        public async Task<DeleteBinarySecurityPolicyResponse> DeleteBinarySecurityPolicyAsync(DeleteBinarySecurityPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteBinarySecurityPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes specified custom defense rules.
         *
         * @param request DeleteClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteClientUserDefineRuleResponse
         */
        public DeleteClientUserDefineRuleResponse DeleteClientUserDefineRuleWithOptions(DeleteClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IdList))
            {
                query["IdList"] = request.IdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientUserDefineRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes specified custom defense rules.
         *
         * @param request DeleteClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteClientUserDefineRuleResponse
         */
        public async Task<DeleteClientUserDefineRuleResponse> DeleteClientUserDefineRuleWithOptionsAsync(DeleteClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IdList))
            {
                query["IdList"] = request.IdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientUserDefineRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes specified custom defense rules.
         *
         * @param request DeleteClientUserDefineRuleRequest
         * @return DeleteClientUserDefineRuleResponse
         */
        public DeleteClientUserDefineRuleResponse DeleteClientUserDefineRule(DeleteClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteClientUserDefineRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes specified custom defense rules.
         *
         * @param request DeleteClientUserDefineRuleRequest
         * @return DeleteClientUserDefineRuleResponse
         */
        public async Task<DeleteClientUserDefineRuleResponse> DeleteClientUserDefineRuleAsync(DeleteClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteClientUserDefineRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a rule for non-image program defense.
         *
         * @param request DeleteContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContainerDefenseRuleResponse
         */
        public DeleteContainerDefenseRuleResponse DeleteContainerDefenseRuleWithOptions(DeleteContainerDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContainerDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a rule for non-image program defense.
         *
         * @param request DeleteContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContainerDefenseRuleResponse
         */
        public async Task<DeleteContainerDefenseRuleResponse> DeleteContainerDefenseRuleWithOptionsAsync(DeleteContainerDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContainerDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a rule for non-image program defense.
         *
         * @param request DeleteContainerDefenseRuleRequest
         * @return DeleteContainerDefenseRuleResponse
         */
        public DeleteContainerDefenseRuleResponse DeleteContainerDefenseRule(DeleteContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteContainerDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a rule for non-image program defense.
         *
         * @param request DeleteContainerDefenseRuleRequest
         * @return DeleteContainerDefenseRuleResponse
         */
        public async Task<DeleteContainerDefenseRuleResponse> DeleteContainerDefenseRuleAsync(DeleteContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteContainerDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a defense rule against container escapes.
         *
         * @param request DeleteContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContainerPluginRuleResponse
         */
        public DeleteContainerPluginRuleResponse DeleteContainerPluginRuleWithOptions(DeleteContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContainerPluginRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a defense rule against container escapes.
         *
         * @param request DeleteContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContainerPluginRuleResponse
         */
        public async Task<DeleteContainerPluginRuleResponse> DeleteContainerPluginRuleWithOptionsAsync(DeleteContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContainerPluginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a defense rule against container escapes.
         *
         * @param request DeleteContainerPluginRuleRequest
         * @return DeleteContainerPluginRuleResponse
         */
        public DeleteContainerPluginRuleResponse DeleteContainerPluginRule(DeleteContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteContainerPluginRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a defense rule against container escapes.
         *
         * @param request DeleteContainerPluginRuleRequest
         * @return DeleteContainerPluginRuleResponse
         */
        public async Task<DeleteContainerPluginRuleResponse> DeleteContainerPluginRuleAsync(DeleteContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteContainerPluginRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified IP address blocking policy from one or more servers.
         *
         * @param request DeleteCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCustomBlockRecordResponse
         */
        public DeleteCustomBlockRecordResponse DeleteCustomBlockRecordWithOptions(DeleteCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCustomBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified IP address blocking policy from one or more servers.
         *
         * @param request DeleteCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCustomBlockRecordResponse
         */
        public async Task<DeleteCustomBlockRecordResponse> DeleteCustomBlockRecordWithOptionsAsync(DeleteCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCustomBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified IP address blocking policy from one or more servers.
         *
         * @param request DeleteCustomBlockRecordRequest
         * @return DeleteCustomBlockRecordResponse
         */
        public DeleteCustomBlockRecordResponse DeleteCustomBlockRecord(DeleteCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCustomBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified IP address blocking policy from one or more servers.
         *
         * @param request DeleteCustomBlockRecordRequest
         * @return DeleteCustomBlockRecordResponse
         */
        public async Task<DeleteCustomBlockRecordResponse> DeleteCustomBlockRecordAsync(DeleteCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCustomBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request DeleteCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCycleTaskResponse
         */
        public DeleteCycleTaskResponse DeleteCycleTaskWithOptions(DeleteCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCycleTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request DeleteCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCycleTaskResponse
         */
        public async Task<DeleteCycleTaskResponse> DeleteCycleTaskWithOptionsAsync(DeleteCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCycleTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request DeleteCycleTaskRequest
         * @return DeleteCycleTaskResponse
         */
        public DeleteCycleTaskResponse DeleteCycleTask(DeleteCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCycleTaskWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a periodic scan task. The task can be an image scan task, urgent vulnerability scan task, or virus scan task.
         *
         * @param request DeleteCycleTaskRequest
         * @return DeleteCycleTaskResponse
         */
        public async Task<DeleteCycleTaskResponse> DeleteCycleTaskAsync(DeleteCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCycleTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes core file monitoring rules.
         *
         * @param request DeleteFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteFileProtectRuleResponse
         */
        public DeleteFileProtectRuleResponse DeleteFileProtectRuleWithOptions(DeleteFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteFileProtectRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes core file monitoring rules.
         *
         * @param request DeleteFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteFileProtectRuleResponse
         */
        public async Task<DeleteFileProtectRuleResponse> DeleteFileProtectRuleWithOptionsAsync(DeleteFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteFileProtectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes core file monitoring rules.
         *
         * @param request DeleteFileProtectRuleRequest
         * @return DeleteFileProtectRuleResponse
         */
        public DeleteFileProtectRuleResponse DeleteFileProtectRule(DeleteFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteFileProtectRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes core file monitoring rules.
         *
         * @param request DeleteFileProtectRuleRequest
         * @return DeleteFileProtectRuleResponse
         */
        public async Task<DeleteFileProtectRuleResponse> DeleteFileProtectRuleAsync(DeleteFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteFileProtectRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a server group.
         *
         * @description The **Default** server group that is provided by Security Center cannot be deleted. After you delete a group, the assets in this group are moved to the **Default** group.
         *
         * @param request DeleteGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGroupResponse
         */
        public DeleteGroupResponse DeleteGroupWithOptions(DeleteGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a server group.
         *
         * @description The **Default** server group that is provided by Security Center cannot be deleted. After you delete a group, the assets in this group are moved to the **Default** group.
         *
         * @param request DeleteGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGroupResponse
         */
        public async Task<DeleteGroupResponse> DeleteGroupWithOptionsAsync(DeleteGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a server group.
         *
         * @description The **Default** server group that is provided by Security Center cannot be deleted. After you delete a group, the assets in this group are moved to the **Default** group.
         *
         * @param request DeleteGroupRequest
         * @return DeleteGroupResponse
         */
        public DeleteGroupResponse DeleteGroup(DeleteGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteGroupWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a server group.
         *
         * @description The **Default** server group that is provided by Security Center cannot be deleted. After you delete a group, the assets in this group are moved to the **Default** group.
         *
         * @param request DeleteGroupRequest
         * @return DeleteGroupResponse
         */
        public async Task<DeleteGroupResponse> DeleteGroupAsync(DeleteGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified honeypot.
         *
         * @param request DeleteHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotResponse
         */
        public DeleteHoneypotResponse DeleteHoneypotWithOptions(DeleteHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified honeypot.
         *
         * @param request DeleteHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotResponse
         */
        public async Task<DeleteHoneypotResponse> DeleteHoneypotWithOptionsAsync(DeleteHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified honeypot.
         *
         * @param request DeleteHoneypotRequest
         * @return DeleteHoneypotResponse
         */
        public DeleteHoneypotResponse DeleteHoneypot(DeleteHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified honeypot.
         *
         * @param request DeleteHoneypotRequest
         * @return DeleteHoneypotResponse
         */
        public async Task<DeleteHoneypotResponse> DeleteHoneypotAsync(DeleteHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified management node.
         *
         * @param request DeleteHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotNodeResponse
         */
        public DeleteHoneypotNodeResponse DeleteHoneypotNodeWithOptions(DeleteHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified management node.
         *
         * @param request DeleteHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotNodeResponse
         */
        public async Task<DeleteHoneypotNodeResponse> DeleteHoneypotNodeWithOptionsAsync(DeleteHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified management node.
         *
         * @param request DeleteHoneypotNodeRequest
         * @return DeleteHoneypotNodeResponse
         */
        public DeleteHoneypotNodeResponse DeleteHoneypotNode(DeleteHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHoneypotNodeWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified management node.
         *
         * @param request DeleteHoneypotNodeRequest
         * @return DeleteHoneypotNodeResponse
         */
        public async Task<DeleteHoneypotNodeResponse> DeleteHoneypotNodeAsync(DeleteHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHoneypotNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified honeypot template.
         *
         * @param request DeleteHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotPresetResponse
         */
        public DeleteHoneypotPresetResponse DeleteHoneypotPresetWithOptions(DeleteHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotPresetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified honeypot template.
         *
         * @param request DeleteHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotPresetResponse
         */
        public async Task<DeleteHoneypotPresetResponse> DeleteHoneypotPresetWithOptionsAsync(DeleteHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotPresetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified honeypot template.
         *
         * @param request DeleteHoneypotPresetRequest
         * @return DeleteHoneypotPresetResponse
         */
        public DeleteHoneypotPresetResponse DeleteHoneypotPreset(DeleteHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHoneypotPresetWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified honeypot template.
         *
         * @param request DeleteHoneypotPresetRequest
         * @return DeleteHoneypotPresetResponse
         */
        public async Task<DeleteHoneypotPresetResponse> DeleteHoneypotPresetAsync(DeleteHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHoneypotPresetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified probe.
         *
         * @param request DeleteHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotProbeResponse
         */
        public DeleteHoneypotProbeResponse DeleteHoneypotProbeWithOptions(DeleteHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified probe.
         *
         * @param request DeleteHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotProbeResponse
         */
        public async Task<DeleteHoneypotProbeResponse> DeleteHoneypotProbeWithOptionsAsync(DeleteHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified probe.
         *
         * @param request DeleteHoneypotProbeRequest
         * @return DeleteHoneypotProbeResponse
         */
        public DeleteHoneypotProbeResponse DeleteHoneypotProbe(DeleteHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHoneypotProbeWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified probe.
         *
         * @param request DeleteHoneypotProbeRequest
         * @return DeleteHoneypotProbeResponse
         */
        public async Task<DeleteHoneypotProbeResponse> DeleteHoneypotProbeAsync(DeleteHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHoneypotProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Delete the probe service.
         *
         * @param request DeleteHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotProbeBindResponse
         */
        public DeleteHoneypotProbeBindResponse DeleteHoneypotProbeBindWithOptions(DeleteHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindId))
            {
                query["BindId"] = request.BindId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotProbeBindResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Delete the probe service.
         *
         * @param request DeleteHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteHoneypotProbeBindResponse
         */
        public async Task<DeleteHoneypotProbeBindResponse> DeleteHoneypotProbeBindWithOptionsAsync(DeleteHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindId))
            {
                query["BindId"] = request.BindId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteHoneypotProbeBindResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Delete the probe service.
         *
         * @param request DeleteHoneypotProbeBindRequest
         * @return DeleteHoneypotProbeBindResponse
         */
        public DeleteHoneypotProbeBindResponse DeleteHoneypotProbeBind(DeleteHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteHoneypotProbeBindWithOptions(request, runtime);
        }

        /**
         * @summary Delete the probe service.
         *
         * @param request DeleteHoneypotProbeBindRequest
         * @return DeleteHoneypotProbeBindResponse
         */
        public async Task<DeleteHoneypotProbeBindResponse> DeleteHoneypotProbeBindAsync(DeleteHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteHoneypotProbeBindWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an alert handling rule.
         *
         * @param request DeleteImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteImageEventOperationResponse
         */
        public DeleteImageEventOperationResponse DeleteImageEventOperationWithOptions(DeleteImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageEventOperationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert handling rule.
         *
         * @param request DeleteImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteImageEventOperationResponse
         */
        public async Task<DeleteImageEventOperationResponse> DeleteImageEventOperationWithOptionsAsync(DeleteImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageEventOperationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert handling rule.
         *
         * @param request DeleteImageEventOperationRequest
         * @return DeleteImageEventOperationResponse
         */
        public DeleteImageEventOperationResponse DeleteImageEventOperation(DeleteImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteImageEventOperationWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an alert handling rule.
         *
         * @param request DeleteImageEventOperationRequest
         * @return DeleteImageEventOperationResponse
         */
        public async Task<DeleteImageEventOperationResponse> DeleteImageEventOperationAsync(DeleteImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteImageEventOperationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an image vulnerability whitelist.
         *
         * @param request DeleteImageVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteImageVulWhitelistResponse
         */
        public DeleteImageVulWhitelistResponse DeleteImageVulWhitelistWithOptions(DeleteImageVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageVulWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an image vulnerability whitelist.
         *
         * @param request DeleteImageVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteImageVulWhitelistResponse
         */
        public async Task<DeleteImageVulWhitelistResponse> DeleteImageVulWhitelistWithOptionsAsync(DeleteImageVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteImageVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteImageVulWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an image vulnerability whitelist.
         *
         * @param request DeleteImageVulWhitelistRequest
         * @return DeleteImageVulWhitelistResponse
         */
        public DeleteImageVulWhitelistResponse DeleteImageVulWhitelist(DeleteImageVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteImageVulWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an image vulnerability whitelist.
         *
         * @param request DeleteImageVulWhitelistRequest
         * @return DeleteImageVulWhitelistResponse
         */
        public async Task<DeleteImageVulWhitelistResponse> DeleteImageVulWhitelistAsync(DeleteImageVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteImageVulWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the command that is used to install the Security Center agent.
         *
         * @param request DeleteInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInstallCodeResponse
         */
        public DeleteInstallCodeResponse DeleteInstallCodeWithOptions(DeleteInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CaptchaCode))
            {
                query["CaptchaCode"] = request.CaptchaCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInstallCodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the command that is used to install the Security Center agent.
         *
         * @param request DeleteInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInstallCodeResponse
         */
        public async Task<DeleteInstallCodeResponse> DeleteInstallCodeWithOptionsAsync(DeleteInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CaptchaCode))
            {
                query["CaptchaCode"] = request.CaptchaCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInstallCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the command that is used to install the Security Center agent.
         *
         * @param request DeleteInstallCodeRequest
         * @return DeleteInstallCodeResponse
         */
        public DeleteInstallCodeResponse DeleteInstallCode(DeleteInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteInstallCodeWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the command that is used to install the Security Center agent.
         *
         * @param request DeleteInstallCodeRequest
         * @return DeleteInstallCodeResponse
         */
        public async Task<DeleteInstallCodeResponse> DeleteInstallCodeAsync(DeleteInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteInstallCodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a defense rule in the container firewall module.
         *
         * @param request DeleteInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInterceptionRuleResponse
         */
        public DeleteInterceptionRuleResponse DeleteInterceptionRuleWithOptions(DeleteInterceptionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInterceptionRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a defense rule in the container firewall module.
         *
         * @param request DeleteInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInterceptionRuleResponse
         */
        public async Task<DeleteInterceptionRuleResponse> DeleteInterceptionRuleWithOptionsAsync(DeleteInterceptionRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInterceptionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a defense rule in the container firewall module.
         *
         * @param request DeleteInterceptionRuleRequest
         * @return DeleteInterceptionRuleResponse
         */
        public DeleteInterceptionRuleResponse DeleteInterceptionRule(DeleteInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteInterceptionRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a defense rule in the container firewall module.
         *
         * @param request DeleteInterceptionRuleRequest
         * @return DeleteInterceptionRuleResponse
         */
        public async Task<DeleteInterceptionRuleResponse> DeleteInterceptionRuleAsync(DeleteInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteInterceptionRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes the network objects that are in effect in the container firewall.
         *
         * @param request DeleteInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInterceptionTargetResponse
         */
        public DeleteInterceptionTargetResponse DeleteInterceptionTargetWithOptions(DeleteInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIds))
            {
                query["TargetIds"] = request.TargetIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInterceptionTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes the network objects that are in effect in the container firewall.
         *
         * @param request DeleteInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteInterceptionTargetResponse
         */
        public async Task<DeleteInterceptionTargetResponse> DeleteInterceptionTargetWithOptionsAsync(DeleteInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIds))
            {
                query["TargetIds"] = request.TargetIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteInterceptionTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes the network objects that are in effect in the container firewall.
         *
         * @param request DeleteInterceptionTargetRequest
         * @return DeleteInterceptionTargetResponse
         */
        public DeleteInterceptionTargetResponse DeleteInterceptionTarget(DeleteInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteInterceptionTargetWithOptions(request, runtime);
        }

        /**
         * @summary Removes the network objects that are in effect in the container firewall.
         *
         * @param request DeleteInterceptionTargetRequest
         * @return DeleteInterceptionTargetResponse
         */
        public async Task<DeleteInterceptionTargetResponse> DeleteInterceptionTargetAsync(DeleteInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteInterceptionTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the Kubernetes access information.
         *
         * @param request DeleteK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteK8sAccessInfoResponse
         */
        public DeleteK8sAccessInfoResponse DeleteK8sAccessInfoWithOptions(DeleteK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteK8sAccessInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the Kubernetes access information.
         *
         * @param request DeleteK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteK8sAccessInfoResponse
         */
        public async Task<DeleteK8sAccessInfoResponse> DeleteK8sAccessInfoWithOptionsAsync(DeleteK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteK8sAccessInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the Kubernetes access information.
         *
         * @param request DeleteK8sAccessInfoRequest
         * @return DeleteK8sAccessInfoResponse
         */
        public DeleteK8sAccessInfoResponse DeleteK8sAccessInfo(DeleteK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteK8sAccessInfoWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the Kubernetes access information.
         *
         * @param request DeleteK8sAccessInfoRequest
         * @return DeleteK8sAccessInfoResponse
         */
        public async Task<DeleteK8sAccessInfoResponse> DeleteK8sAccessInfoAsync(DeleteK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteK8sAccessInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the basic configuration information from the logon security configurations for a specific asset.
         *
         * @param request DeleteLoginBaseConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteLoginBaseConfigResponse
         */
        public DeleteLoginBaseConfigResponse DeleteLoginBaseConfigWithOptions(DeleteLoginBaseConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteLoginBaseConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteLoginBaseConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the basic configuration information from the logon security configurations for a specific asset.
         *
         * @param request DeleteLoginBaseConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteLoginBaseConfigResponse
         */
        public async Task<DeleteLoginBaseConfigResponse> DeleteLoginBaseConfigWithOptionsAsync(DeleteLoginBaseConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteLoginBaseConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteLoginBaseConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the basic configuration information from the logon security configurations for a specific asset.
         *
         * @param request DeleteLoginBaseConfigRequest
         * @return DeleteLoginBaseConfigResponse
         */
        public DeleteLoginBaseConfigResponse DeleteLoginBaseConfig(DeleteLoginBaseConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteLoginBaseConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the basic configuration information from the logon security configurations for a specific asset.
         *
         * @param request DeleteLoginBaseConfigRequest
         * @return DeleteLoginBaseConfigResponse
         */
        public async Task<DeleteLoginBaseConfigResponse> DeleteLoginBaseConfigAsync(DeleteLoginBaseConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteLoginBaseConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a whitelist rule for alerts generated for sensitive files that are detected by using the agentless detection feature.
         *
         * @param request DeleteMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteMaliciousFileWhitelistConfigResponse
         */
        public DeleteMaliciousFileWhitelistConfigResponse DeleteMaliciousFileWhitelistConfigWithOptions(DeleteMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a whitelist rule for alerts generated for sensitive files that are detected by using the agentless detection feature.
         *
         * @param request DeleteMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteMaliciousFileWhitelistConfigResponse
         */
        public async Task<DeleteMaliciousFileWhitelistConfigResponse> DeleteMaliciousFileWhitelistConfigWithOptionsAsync(DeleteMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a whitelist rule for alerts generated for sensitive files that are detected by using the agentless detection feature.
         *
         * @param request DeleteMaliciousFileWhitelistConfigRequest
         * @return DeleteMaliciousFileWhitelistConfigResponse
         */
        public DeleteMaliciousFileWhitelistConfigResponse DeleteMaliciousFileWhitelistConfig(DeleteMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a whitelist rule for alerts generated for sensitive files that are detected by using the agentless detection feature.
         *
         * @param request DeleteMaliciousFileWhitelistConfigRequest
         * @return DeleteMaliciousFileWhitelistConfigResponse
         */
        public async Task<DeleteMaliciousFileWhitelistConfigResponse> DeleteMaliciousFileWhitelistConfigAsync(DeleteMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes the remarks added to alert events that are generated by the agentless detection feature.
         *
         * @param request DeleteMaliciousNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteMaliciousNoteResponse
         */
        public DeleteMaliciousNoteResponse DeleteMaliciousNoteWithOptions(DeleteMaliciousNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoteId))
            {
                query["NoteId"] = request.NoteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteMaliciousNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteMaliciousNoteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes the remarks added to alert events that are generated by the agentless detection feature.
         *
         * @param request DeleteMaliciousNoteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteMaliciousNoteResponse
         */
        public async Task<DeleteMaliciousNoteResponse> DeleteMaliciousNoteWithOptionsAsync(DeleteMaliciousNoteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoteId))
            {
                query["NoteId"] = request.NoteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteMaliciousNote",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteMaliciousNoteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes the remarks added to alert events that are generated by the agentless detection feature.
         *
         * @param request DeleteMaliciousNoteRequest
         * @return DeleteMaliciousNoteResponse
         */
        public DeleteMaliciousNoteResponse DeleteMaliciousNote(DeleteMaliciousNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteMaliciousNoteWithOptions(request, runtime);
        }

        /**
         * @summary Removes the remarks added to alert events that are generated by the agentless detection feature.
         *
         * @param request DeleteMaliciousNoteRequest
         * @return DeleteMaliciousNoteResponse
         */
        public async Task<DeleteMaliciousNoteResponse> DeleteMaliciousNoteAsync(DeleteMaliciousNoteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteMaliciousNoteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes rules of the at-risk image blocking type.
         *
         * @param request DeleteOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteOpaStrategyNewResponse
         */
        public DeleteOpaStrategyNewResponse DeleteOpaStrategyNewWithOptions(DeleteOpaStrategyNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyIds))
            {
                query["StrategyIds"] = request.StrategyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOpaStrategyNewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes rules of the at-risk image blocking type.
         *
         * @param request DeleteOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteOpaStrategyNewResponse
         */
        public async Task<DeleteOpaStrategyNewResponse> DeleteOpaStrategyNewWithOptionsAsync(DeleteOpaStrategyNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyIds))
            {
                query["StrategyIds"] = request.StrategyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOpaStrategyNewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes rules of the at-risk image blocking type.
         *
         * @param request DeleteOpaStrategyNewRequest
         * @return DeleteOpaStrategyNewResponse
         */
        public DeleteOpaStrategyNewResponse DeleteOpaStrategyNew(DeleteOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOpaStrategyNewWithOptions(request, runtime);
        }

        /**
         * @summary Deletes rules of the at-risk image blocking type.
         *
         * @param request DeleteOpaStrategyNewRequest
         * @return DeleteOpaStrategyNewResponse
         */
        public async Task<DeleteOpaStrategyNewResponse> DeleteOpaStrategyNewAsync(DeleteOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOpaStrategyNewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request DeleteOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteOssScanConfigResponse
         */
        public DeleteOssScanConfigResponse DeleteOssScanConfigWithOptions(DeleteOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOssScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request DeleteOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteOssScanConfigResponse
         */
        public async Task<DeleteOssScanConfigResponse> DeleteOssScanConfigWithOptionsAsync(DeleteOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOssScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request DeleteOssScanConfigRequest
         * @return DeleteOssScanConfigResponse
         */
        public DeleteOssScanConfigResponse DeleteOssScanConfig(DeleteOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOssScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request DeleteOssScanConfigRequest
         * @return DeleteOssScanConfigResponse
         */
        public async Task<DeleteOssScanConfigResponse> DeleteOssScanConfigAsync(DeleteOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOssScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a private image repository by using the ID of the image repository.
         *
         * @param request DeletePrivateRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrivateRegistryResponse
         */
        public DeletePrivateRegistryResponse DeletePrivateRegistryWithOptions(DeletePrivateRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                query["RegistryId"] = request.RegistryId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrivateRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrivateRegistryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a private image repository by using the ID of the image repository.
         *
         * @param request DeletePrivateRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrivateRegistryResponse
         */
        public async Task<DeletePrivateRegistryResponse> DeletePrivateRegistryWithOptionsAsync(DeletePrivateRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                query["RegistryId"] = request.RegistryId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrivateRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrivateRegistryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a private image repository by using the ID of the image repository.
         *
         * @param request DeletePrivateRegistryRequest
         * @return DeletePrivateRegistryResponse
         */
        public DeletePrivateRegistryResponse DeletePrivateRegistry(DeletePrivateRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrivateRegistryWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a private image repository by using the ID of the image repository.
         *
         * @param request DeletePrivateRegistryRequest
         * @return DeletePrivateRegistryResponse
         */
        public async Task<DeletePrivateRegistryResponse> DeletePrivateRegistryAsync(DeletePrivateRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrivateRegistryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a rule for container tamper-proofing.
         *
         * @param request DeleteSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSasContainerWebDefenseRuleResponse
         */
        public DeleteSasContainerWebDefenseRuleResponse DeleteSasContainerWebDefenseRuleWithOptions(DeleteSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSasContainerWebDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a rule for container tamper-proofing.
         *
         * @param request DeleteSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSasContainerWebDefenseRuleResponse
         */
        public async Task<DeleteSasContainerWebDefenseRuleResponse> DeleteSasContainerWebDefenseRuleWithOptionsAsync(DeleteSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSasContainerWebDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a rule for container tamper-proofing.
         *
         * @param request DeleteSasContainerWebDefenseRuleRequest
         * @return DeleteSasContainerWebDefenseRuleResponse
         */
        public DeleteSasContainerWebDefenseRuleResponse DeleteSasContainerWebDefenseRule(DeleteSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSasContainerWebDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a rule for container tamper-proofing.
         *
         * @param request DeleteSasContainerWebDefenseRuleRequest
         * @return DeleteSasContainerWebDefenseRuleResponse
         */
        public async Task<DeleteSasContainerWebDefenseRuleResponse> DeleteSasContainerWebDefenseRuleAsync(DeleteSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSasContainerWebDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes multiple custom defense rules at a time. The custom defense rules are used to add false positive alerts to the whitelist.
         *
         * @param request DeleteSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSecurityEventMarkMissListResponse
         */
        public DeleteSecurityEventMarkMissListResponse DeleteSecurityEventMarkMissListWithOptions(DeleteSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSecurityEventMarkMissListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes multiple custom defense rules at a time. The custom defense rules are used to add false positive alerts to the whitelist.
         *
         * @param request DeleteSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSecurityEventMarkMissListResponse
         */
        public async Task<DeleteSecurityEventMarkMissListResponse> DeleteSecurityEventMarkMissListWithOptionsAsync(DeleteSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSecurityEventMarkMissListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes multiple custom defense rules at a time. The custom defense rules are used to add false positive alerts to the whitelist.
         *
         * @param request DeleteSecurityEventMarkMissListRequest
         * @return DeleteSecurityEventMarkMissListResponse
         */
        public DeleteSecurityEventMarkMissListResponse DeleteSecurityEventMarkMissList(DeleteSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSecurityEventMarkMissListWithOptions(request, runtime);
        }

        /**
         * @summary Deletes multiple custom defense rules at a time. The custom defense rules are used to add false positive alerts to the whitelist.
         *
         * @param request DeleteSecurityEventMarkMissListRequest
         * @return DeleteSecurityEventMarkMissListResponse
         */
        public async Task<DeleteSecurityEventMarkMissListResponse> DeleteSecurityEventMarkMissListAsync(DeleteSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSecurityEventMarkMissListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a service trail.
         *
         * @param request DeleteServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteServiceTrailResponse
         */
        public DeleteServiceTrailResponse DeleteServiceTrailWithOptions(DeleteServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteServiceTrailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a service trail.
         *
         * @param request DeleteServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteServiceTrailResponse
         */
        public async Task<DeleteServiceTrailResponse> DeleteServiceTrailWithOptionsAsync(DeleteServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteServiceTrailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a service trail.
         *
         * @param request DeleteServiceTrailRequest
         * @return DeleteServiceTrailResponse
         */
        public DeleteServiceTrailResponse DeleteServiceTrail(DeleteServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteServiceTrailWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a service trail.
         *
         * @param request DeleteServiceTrailRequest
         * @return DeleteServiceTrailResponse
         */
        public async Task<DeleteServiceTrailResponse> DeleteServiceTrailAsync(DeleteServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteServiceTrailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a baseline check policy.
         *
         * @param request DeleteStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteStrategyResponse
         */
        public DeleteStrategyResponse DeleteStrategyWithOptions(DeleteStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a baseline check policy.
         *
         * @param request DeleteStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteStrategyResponse
         */
        public async Task<DeleteStrategyResponse> DeleteStrategyWithOptionsAsync(DeleteStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a baseline check policy.
         *
         * @param request DeleteStrategyRequest
         * @return DeleteStrategyResponse
         */
        public DeleteStrategyResponse DeleteStrategy(DeleteStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a baseline check policy.
         *
         * @param request DeleteStrategyRequest
         * @return DeleteStrategyResponse
         */
        public async Task<DeleteStrategyResponse> DeleteStrategyAsync(DeleteStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the description of an alert.
         *
         * @param request DeleteSuspEventNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSuspEventNodeResponse
         */
        public DeleteSuspEventNodeResponse DeleteSuspEventNodeWithOptions(DeleteSuspEventNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoteId))
            {
                query["NoteId"] = request.NoteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSuspEventNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSuspEventNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the description of an alert.
         *
         * @param request DeleteSuspEventNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSuspEventNodeResponse
         */
        public async Task<DeleteSuspEventNodeResponse> DeleteSuspEventNodeWithOptionsAsync(DeleteSuspEventNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoteId))
            {
                query["NoteId"] = request.NoteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSuspEventNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSuspEventNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the description of an alert.
         *
         * @param request DeleteSuspEventNodeRequest
         * @return DeleteSuspEventNodeResponse
         */
        public DeleteSuspEventNodeResponse DeleteSuspEventNode(DeleteSuspEventNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSuspEventNodeWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the description of an alert.
         *
         * @param request DeleteSuspEventNodeRequest
         * @return DeleteSuspEventNodeResponse
         */
        public async Task<DeleteSuspEventNodeResponse> DeleteSuspEventNodeAsync(DeleteSuspEventNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSuspEventNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes custom tags from assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call this operation to remove only the custom tag that is added to an asset.
         *
         * @param request DeleteTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTagWithUuidResponse
         */
        public DeleteTagWithUuidResponse DeleteTagWithUuidWithOptions(DeleteTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTagWithUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes custom tags from assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call this operation to remove only the custom tag that is added to an asset.
         *
         * @param request DeleteTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTagWithUuidResponse
         */
        public async Task<DeleteTagWithUuidResponse> DeleteTagWithUuidWithOptionsAsync(DeleteTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTagWithUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes custom tags from assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call this operation to remove only the custom tag that is added to an asset.
         *
         * @param request DeleteTagWithUuidRequest
         * @return DeleteTagWithUuidResponse
         */
        public DeleteTagWithUuidResponse DeleteTagWithUuid(DeleteTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTagWithUuidWithOptions(request, runtime);
        }

        /**
         * @summary Removes custom tags from assets.
         *
         * @description Security Center provides asset importance tags and custom tags. You can call this operation to remove only the custom tag that is added to an asset.
         *
         * @param request DeleteTagWithUuidRequest
         * @return DeleteTagWithUuidResponse
         */
        public async Task<DeleteTagWithUuidResponse> DeleteTagWithUuidAsync(DeleteTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTagWithUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes anti-ransomware policies that are created for databases.
         *
         * @param request DeleteUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteUniBackupPolicyResponse
         */
        public DeleteUniBackupPolicyResponse DeleteUniBackupPolicyWithOptions(DeleteUniBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyIds))
            {
                query["PolicyIds"] = request.PolicyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteUniBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes anti-ransomware policies that are created for databases.
         *
         * @param request DeleteUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteUniBackupPolicyResponse
         */
        public async Task<DeleteUniBackupPolicyResponse> DeleteUniBackupPolicyWithOptionsAsync(DeleteUniBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyIds))
            {
                query["PolicyIds"] = request.PolicyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteUniBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes anti-ransomware policies that are created for databases.
         *
         * @param request DeleteUniBackupPolicyRequest
         * @return DeleteUniBackupPolicyResponse
         */
        public DeleteUniBackupPolicyResponse DeleteUniBackupPolicy(DeleteUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteUniBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Deletes anti-ransomware policies that are created for databases.
         *
         * @param request DeleteUniBackupPolicyRequest
         * @return DeleteUniBackupPolicyResponse
         */
        public async Task<DeleteUniBackupPolicyResponse> DeleteUniBackupPolicyAsync(DeleteUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteUniBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a honeypot.
         *
         * @param request DeleteVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVpcHoneyPotResponse
         */
        public DeleteVpcHoneyPotResponse DeleteVpcHoneyPotWithOptions(DeleteVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVpcHoneyPotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a honeypot.
         *
         * @param request DeleteVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVpcHoneyPotResponse
         */
        public async Task<DeleteVpcHoneyPotResponse> DeleteVpcHoneyPotWithOptionsAsync(DeleteVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVpcHoneyPotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a honeypot.
         *
         * @param request DeleteVpcHoneyPotRequest
         * @return DeleteVpcHoneyPotResponse
         */
        public DeleteVpcHoneyPotResponse DeleteVpcHoneyPot(DeleteVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteVpcHoneyPotWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a honeypot.
         *
         * @param request DeleteVpcHoneyPotRequest
         * @return DeleteVpcHoneyPotResponse
         */
        public async Task<DeleteVpcHoneyPotResponse> DeleteVpcHoneyPotAsync(DeleteVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteVpcHoneyPotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes configurations of of an automatic vulnerability fixing task at a time on the Playbook page.
         *
         * @param request DeleteVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVulAutoRepairConfigResponse
         */
        public DeleteVulAutoRepairConfigResponse DeleteVulAutoRepairConfigWithOptions(DeleteVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigIdList))
            {
                query["ConfigIdList"] = request.ConfigIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVulAutoRepairConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes configurations of of an automatic vulnerability fixing task at a time on the Playbook page.
         *
         * @param request DeleteVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVulAutoRepairConfigResponse
         */
        public async Task<DeleteVulAutoRepairConfigResponse> DeleteVulAutoRepairConfigWithOptionsAsync(DeleteVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigIdList))
            {
                query["ConfigIdList"] = request.ConfigIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVulAutoRepairConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes configurations of of an automatic vulnerability fixing task at a time on the Playbook page.
         *
         * @param request DeleteVulAutoRepairConfigRequest
         * @return DeleteVulAutoRepairConfigResponse
         */
        public DeleteVulAutoRepairConfigResponse DeleteVulAutoRepairConfig(DeleteVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteVulAutoRepairConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes configurations of of an automatic vulnerability fixing task at a time on the Playbook page.
         *
         * @param request DeleteVulAutoRepairConfigRequest
         * @return DeleteVulAutoRepairConfigResponse
         */
        public async Task<DeleteVulAutoRepairConfigResponse> DeleteVulAutoRepairConfigAsync(DeleteVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteVulAutoRepairConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a specified vulnerability whitelist.
         *
         * @param request DeleteVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVulWhitelistResponse
         */
        public DeleteVulWhitelistResponse DeleteVulWhitelistWithOptions(DeleteVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVulWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified vulnerability whitelist.
         *
         * @param request DeleteVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteVulWhitelistResponse
         */
        public async Task<DeleteVulWhitelistResponse> DeleteVulWhitelistWithOptionsAsync(DeleteVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteVulWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a specified vulnerability whitelist.
         *
         * @param request DeleteVulWhitelistRequest
         * @return DeleteVulWhitelistResponse
         */
        public DeleteVulWhitelistResponse DeleteVulWhitelist(DeleteVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteVulWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a specified vulnerability whitelist.
         *
         * @param request DeleteVulWhitelistRequest
         * @return DeleteVulWhitelistResponse
         */
        public async Task<DeleteVulWhitelistResponse> DeleteVulWhitelistAsync(DeleteVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteVulWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of AccessKey pair leaks.
         *
         * @param request DescribeAccessKeyLeakDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAccessKeyLeakDetailResponse
         */
        public DescribeAccessKeyLeakDetailResponse DescribeAccessKeyLeakDetailWithOptions(DescribeAccessKeyLeakDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAccessKeyLeakDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAccessKeyLeakDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of AccessKey pair leaks.
         *
         * @param request DescribeAccessKeyLeakDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAccessKeyLeakDetailResponse
         */
        public async Task<DescribeAccessKeyLeakDetailResponse> DescribeAccessKeyLeakDetailWithOptionsAsync(DescribeAccessKeyLeakDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAccessKeyLeakDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAccessKeyLeakDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of AccessKey pair leaks.
         *
         * @param request DescribeAccessKeyLeakDetailRequest
         * @return DescribeAccessKeyLeakDetailResponse
         */
        public DescribeAccessKeyLeakDetailResponse DescribeAccessKeyLeakDetail(DescribeAccessKeyLeakDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAccessKeyLeakDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of AccessKey pair leaks.
         *
         * @param request DescribeAccessKeyLeakDetailRequest
         * @return DescribeAccessKeyLeakDetailResponse
         */
        public async Task<DescribeAccessKeyLeakDetailResponse> DescribeAccessKeyLeakDetailAsync(DescribeAccessKeyLeakDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAccessKeyLeakDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the AccessKey pair leaks that are detected on your assets.
         *
         * @param request DescribeAccesskeyLeakListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAccesskeyLeakListResponse
         */
        public DescribeAccesskeyLeakListResponse DescribeAccesskeyLeakListWithOptions(DescribeAccesskeyLeakListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTs))
            {
                query["StartTs"] = request.StartTs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAccesskeyLeakList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAccesskeyLeakListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the AccessKey pair leaks that are detected on your assets.
         *
         * @param request DescribeAccesskeyLeakListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAccesskeyLeakListResponse
         */
        public async Task<DescribeAccesskeyLeakListResponse> DescribeAccesskeyLeakListWithOptionsAsync(DescribeAccesskeyLeakListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTs))
            {
                query["StartTs"] = request.StartTs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAccesskeyLeakList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAccesskeyLeakListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the AccessKey pair leaks that are detected on your assets.
         *
         * @param request DescribeAccesskeyLeakListRequest
         * @return DescribeAccesskeyLeakListResponse
         */
        public DescribeAccesskeyLeakListResponse DescribeAccesskeyLeakList(DescribeAccesskeyLeakListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAccesskeyLeakListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the AccessKey pair leaks that are detected on your assets.
         *
         * @param request DescribeAccesskeyLeakListRequest
         * @return DescribeAccesskeyLeakListResponse
         */
        public async Task<DescribeAccesskeyLeakListResponse> DescribeAccesskeyLeakListAsync(DescribeAccesskeyLeakListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAccesskeyLeakListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the affected servers in the result of a virus scan task.
         *
         * @param request DescribeAffectedAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAffectedAssetsResponse
         */
        public DescribeAffectedAssetsResponse DescribeAffectedAssetsWithOptions(DescribeAffectedAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Current))
            {
                query["Current"] = request.Current;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAffectedAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAffectedAssetsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the affected servers in the result of a virus scan task.
         *
         * @param request DescribeAffectedAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAffectedAssetsResponse
         */
        public async Task<DescribeAffectedAssetsResponse> DescribeAffectedAssetsWithOptionsAsync(DescribeAffectedAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Current))
            {
                query["Current"] = request.Current;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAffectedAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAffectedAssetsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the affected servers in the result of a virus scan task.
         *
         * @param request DescribeAffectedAssetsRequest
         * @return DescribeAffectedAssetsResponse
         */
        public DescribeAffectedAssetsResponse DescribeAffectedAssets(DescribeAffectedAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAffectedAssetsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the affected servers in the result of a virus scan task.
         *
         * @param request DescribeAffectedAssetsRequest
         * @return DescribeAffectedAssetsResponse
         */
        public async Task<DescribeAffectedAssetsResponse> DescribeAffectedAssetsAsync(DescribeAffectedAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAffectedAssetsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of malicious image samples.
         *
         * @param request DescribeAffectedMaliciousFileImagesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAffectedMaliciousFileImagesResponse
         */
        public DescribeAffectedMaliciousFileImagesResponse DescribeAffectedMaliciousFileImagesWithOptions(DescribeAffectedMaliciousFileImagesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAffectedMaliciousFileImages",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAffectedMaliciousFileImagesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of malicious image samples.
         *
         * @param request DescribeAffectedMaliciousFileImagesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAffectedMaliciousFileImagesResponse
         */
        public async Task<DescribeAffectedMaliciousFileImagesResponse> DescribeAffectedMaliciousFileImagesWithOptionsAsync(DescribeAffectedMaliciousFileImagesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAffectedMaliciousFileImages",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAffectedMaliciousFileImagesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of malicious image samples.
         *
         * @param request DescribeAffectedMaliciousFileImagesRequest
         * @return DescribeAffectedMaliciousFileImagesResponse
         */
        public DescribeAffectedMaliciousFileImagesResponse DescribeAffectedMaliciousFileImages(DescribeAffectedMaliciousFileImagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAffectedMaliciousFileImagesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of malicious image samples.
         *
         * @param request DescribeAffectedMaliciousFileImagesRequest
         * @return DescribeAffectedMaliciousFileImagesResponse
         */
        public async Task<DescribeAffectedMaliciousFileImagesResponse> DescribeAffectedMaliciousFileImagesAsync(DescribeAffectedMaliciousFileImagesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAffectedMaliciousFileImagesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the installation status of the Security Center agent after you run an installation command by using Cloud Assistant. You can call this operation to query the installation status only if the installation request is initiated within 2 minutes.
         *
         * @param request DescribeAgentInstallStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAgentInstallStatusResponse
         */
        public DescribeAgentInstallStatusResponse DescribeAgentInstallStatusWithOptions(DescribeAgentInstallStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAgentInstallStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAgentInstallStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the installation status of the Security Center agent after you run an installation command by using Cloud Assistant. You can call this operation to query the installation status only if the installation request is initiated within 2 minutes.
         *
         * @param request DescribeAgentInstallStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAgentInstallStatusResponse
         */
        public async Task<DescribeAgentInstallStatusResponse> DescribeAgentInstallStatusWithOptionsAsync(DescribeAgentInstallStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAgentInstallStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAgentInstallStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the installation status of the Security Center agent after you run an installation command by using Cloud Assistant. You can call this operation to query the installation status only if the installation request is initiated within 2 minutes.
         *
         * @param request DescribeAgentInstallStatusRequest
         * @return DescribeAgentInstallStatusResponse
         */
        public DescribeAgentInstallStatusResponse DescribeAgentInstallStatus(DescribeAgentInstallStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAgentInstallStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the installation status of the Security Center agent after you run an installation command by using Cloud Assistant. You can call this operation to query the installation status only if the installation request is initiated within 2 minutes.
         *
         * @param request DescribeAgentInstallStatusRequest
         * @return DescribeAgentInstallStatusResponse
         */
        public async Task<DescribeAgentInstallStatusResponse> DescribeAgentInstallStatusAsync(DescribeAgentInstallStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAgentInstallStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an alert event. An alert event consists of alerts and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeAlarmEventDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAlarmEventDetailResponse
         */
        public DescribeAlarmEventDetailResponse DescribeAlarmEventDetailWithOptions(DescribeAlarmEventDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmUniqueInfo))
            {
                query["AlarmUniqueInfo"] = request.AlarmUniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAlarmEventDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAlarmEventDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an alert event. An alert event consists of alerts and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeAlarmEventDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAlarmEventDetailResponse
         */
        public async Task<DescribeAlarmEventDetailResponse> DescribeAlarmEventDetailWithOptionsAsync(DescribeAlarmEventDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmUniqueInfo))
            {
                query["AlarmUniqueInfo"] = request.AlarmUniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAlarmEventDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAlarmEventDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an alert event. An alert event consists of alerts and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeAlarmEventDetailRequest
         * @return DescribeAlarmEventDetailResponse
         */
        public DescribeAlarmEventDetailResponse DescribeAlarmEventDetail(DescribeAlarmEventDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAlarmEventDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an alert event. An alert event consists of alerts and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeAlarmEventDetailRequest
         * @return DescribeAlarmEventDetailResponse
         */
        public async Task<DescribeAlarmEventDetailResponse> DescribeAlarmEventDetailAsync(DescribeAlarmEventDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAlarmEventDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the stack information about an alert event.
         *
         * @param request DescribeAlarmEventStackInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAlarmEventStackInfoResponse
         */
        public DescribeAlarmEventStackInfoResponse DescribeAlarmEventStackInfoWithOptions(DescribeAlarmEventStackInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAlarmEventStackInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAlarmEventStackInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the stack information about an alert event.
         *
         * @param request DescribeAlarmEventStackInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAlarmEventStackInfoResponse
         */
        public async Task<DescribeAlarmEventStackInfoResponse> DescribeAlarmEventStackInfoWithOptionsAsync(DescribeAlarmEventStackInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAlarmEventStackInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAlarmEventStackInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the stack information about an alert event.
         *
         * @param request DescribeAlarmEventStackInfoRequest
         * @return DescribeAlarmEventStackInfoResponse
         */
        public DescribeAlarmEventStackInfoResponse DescribeAlarmEventStackInfo(DescribeAlarmEventStackInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAlarmEventStackInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the stack information about an alert event.
         *
         * @param request DescribeAlarmEventStackInfoRequest
         * @return DescribeAlarmEventStackInfoResponse
         */
        public async Task<DescribeAlarmEventStackInfoResponse> DescribeAlarmEventStackInfoAsync(DescribeAlarmEventStackInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAlarmEventStackInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about all server assets, including the asset group IDs and asset names.
         *
         * @param request DescribeAllEntityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllEntityResponse
         */
        public DescribeAllEntityResponse DescribeAllEntityWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllEntity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllEntityResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about all server assets, including the asset group IDs and asset names.
         *
         * @param request DescribeAllEntityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllEntityResponse
         */
        public async Task<DescribeAllEntityResponse> DescribeAllEntityWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllEntity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllEntityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about all server assets, including the asset group IDs and asset names.
         *
         * @return DescribeAllEntityResponse
         */
        public DescribeAllEntityResponse DescribeAllEntity()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAllEntityWithOptions(runtime);
        }

        /**
         * @summary Queries the information about all server assets, including the asset group IDs and asset names.
         *
         * @return DescribeAllEntityResponse
         */
        public async Task<DescribeAllEntityResponse> DescribeAllEntityAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAllEntityWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about all server groups.
         *
         * @param request DescribeAllGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllGroupsResponse
         */
        public DescribeAllGroupsResponse DescribeAllGroupsWithOptions(DescribeAllGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllGroups",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllGroupsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about all server groups.
         *
         * @param request DescribeAllGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllGroupsResponse
         */
        public async Task<DescribeAllGroupsResponse> DescribeAllGroupsWithOptionsAsync(DescribeAllGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllGroups",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllGroupsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about all server groups.
         *
         * @param request DescribeAllGroupsRequest
         * @return DescribeAllGroupsResponse
         */
        public DescribeAllGroupsResponse DescribeAllGroups(DescribeAllGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAllGroupsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about all server groups.
         *
         * @param request DescribeAllGroupsRequest
         * @return DescribeAllGroupsResponse
         */
        public async Task<DescribeAllGroupsResponse> DescribeAllGroupsAsync(DescribeAllGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAllGroupsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries baselines that are used in image baseline checks.
         *
         * @param request DescribeAllImageBaselineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllImageBaselineResponse
         */
        public DescribeAllImageBaselineResponse DescribeAllImageBaselineWithOptions(DescribeAllImageBaselineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllImageBaseline",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllImageBaselineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries baselines that are used in image baseline checks.
         *
         * @param request DescribeAllImageBaselineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAllImageBaselineResponse
         */
        public async Task<DescribeAllImageBaselineResponse> DescribeAllImageBaselineWithOptionsAsync(DescribeAllImageBaselineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAllImageBaseline",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAllImageBaselineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries baselines that are used in image baseline checks.
         *
         * @param request DescribeAllImageBaselineRequest
         * @return DescribeAllImageBaselineResponse
         */
        public DescribeAllImageBaselineResponse DescribeAllImageBaseline(DescribeAllImageBaselineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAllImageBaselineWithOptions(request, runtime);
        }

        /**
         * @summary Queries baselines that are used in image baseline checks.
         *
         * @param request DescribeAllImageBaselineRequest
         * @return DescribeAllImageBaselineResponse
         */
        public async Task<DescribeAllImageBaselineResponse> DescribeAllImageBaselineAsync(DescribeAllImageBaselineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAllImageBaselineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries created defense rules against brute-force attacks.
         *
         * @param request DescribeAntiBruteForceRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAntiBruteForceRulesResponse
         */
        public DescribeAntiBruteForceRulesResponse DescribeAntiBruteForceRulesWithOptions(DescribeAntiBruteForceRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAntiBruteForceRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAntiBruteForceRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries created defense rules against brute-force attacks.
         *
         * @param request DescribeAntiBruteForceRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAntiBruteForceRulesResponse
         */
        public async Task<DescribeAntiBruteForceRulesResponse> DescribeAntiBruteForceRulesWithOptionsAsync(DescribeAntiBruteForceRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAntiBruteForceRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAntiBruteForceRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries created defense rules against brute-force attacks.
         *
         * @param request DescribeAntiBruteForceRulesRequest
         * @return DescribeAntiBruteForceRulesResponse
         */
        public DescribeAntiBruteForceRulesResponse DescribeAntiBruteForceRules(DescribeAntiBruteForceRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAntiBruteForceRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries created defense rules against brute-force attacks.
         *
         * @param request DescribeAntiBruteForceRulesRequest
         * @return DescribeAntiBruteForceRulesResponse
         */
        public async Task<DescribeAntiBruteForceRulesResponse> DescribeAntiBruteForceRulesAsync(DescribeAntiBruteForceRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAntiBruteForceRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the scan cycle for application vulnerabilities.
         *
         * @param request DescribeAppVulScanCycleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAppVulScanCycleResponse
         */
        public DescribeAppVulScanCycleResponse DescribeAppVulScanCycleWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAppVulScanCycle",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAppVulScanCycleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the scan cycle for application vulnerabilities.
         *
         * @param request DescribeAppVulScanCycleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAppVulScanCycleResponse
         */
        public async Task<DescribeAppVulScanCycleResponse> DescribeAppVulScanCycleWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAppVulScanCycle",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAppVulScanCycleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the scan cycle for application vulnerabilities.
         *
         * @return DescribeAppVulScanCycleResponse
         */
        public DescribeAppVulScanCycleResponse DescribeAppVulScanCycle()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAppVulScanCycleWithOptions(runtime);
        }

        /**
         * @summary Queries the scan cycle for application vulnerabilities.
         *
         * @return DescribeAppVulScanCycleResponse
         */
        public async Task<DescribeAppVulScanCycleResponse> DescribeAppVulScanCycleAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAppVulScanCycleWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request DescribeAssetDetailByUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetDetailByUuidResponse
         */
        public DescribeAssetDetailByUuidResponse DescribeAssetDetailByUuidWithOptions(DescribeAssetDetailByUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetDetailByUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetDetailByUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request DescribeAssetDetailByUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetDetailByUuidResponse
         */
        public async Task<DescribeAssetDetailByUuidResponse> DescribeAssetDetailByUuidWithOptionsAsync(DescribeAssetDetailByUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetDetailByUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetDetailByUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request DescribeAssetDetailByUuidRequest
         * @return DescribeAssetDetailByUuidResponse
         */
        public DescribeAssetDetailByUuidResponse DescribeAssetDetailByUuid(DescribeAssetDetailByUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAssetDetailByUuidWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request DescribeAssetDetailByUuidRequest
         * @return DescribeAssetDetailByUuidResponse
         */
        public async Task<DescribeAssetDetailByUuidResponse> DescribeAssetDetailByUuidAsync(DescribeAssetDetailByUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAssetDetailByUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of Elastic Compute Service (ECS) instances.
         *
         * @param request DescribeAssetDetailByUuidsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetDetailByUuidsResponse
         */
        public DescribeAssetDetailByUuidsResponse DescribeAssetDetailByUuidsWithOptions(DescribeAssetDetailByUuidsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetDetailByUuids",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetDetailByUuidsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of Elastic Compute Service (ECS) instances.
         *
         * @param request DescribeAssetDetailByUuidsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetDetailByUuidsResponse
         */
        public async Task<DescribeAssetDetailByUuidsResponse> DescribeAssetDetailByUuidsWithOptionsAsync(DescribeAssetDetailByUuidsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetDetailByUuids",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetDetailByUuidsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of Elastic Compute Service (ECS) instances.
         *
         * @param request DescribeAssetDetailByUuidsRequest
         * @return DescribeAssetDetailByUuidsResponse
         */
        public DescribeAssetDetailByUuidsResponse DescribeAssetDetailByUuids(DescribeAssetDetailByUuidsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAssetDetailByUuidsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of Elastic Compute Service (ECS) instances.
         *
         * @param request DescribeAssetDetailByUuidsRequest
         * @return DescribeAssetDetailByUuidsResponse
         */
        public async Task<DescribeAssetDetailByUuidsResponse> DescribeAssetDetailByUuidsAsync(DescribeAssetDetailByUuidsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAssetDetailByUuidsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the request, which is used to locate and troubleshoot issues.
         *
         * @param request DescribeAssetSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetSummaryResponse
         */
        public DescribeAssetSummaryResponse DescribeAssetSummaryWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the request, which is used to locate and troubleshoot issues.
         *
         * @param request DescribeAssetSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetSummaryResponse
         */
        public async Task<DescribeAssetSummaryResponse> DescribeAssetSummaryWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the request, which is used to locate and troubleshoot issues.
         *
         * @return DescribeAssetSummaryResponse
         */
        public DescribeAssetSummaryResponse DescribeAssetSummary()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAssetSummaryWithOptions(runtime);
        }

        /**
         * @summary The ID of the request, which is used to locate and troubleshoot issues.
         *
         * @return DescribeAssetSummaryResponse
         */
        public async Task<DescribeAssetSummaryResponse> DescribeAssetSummaryAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAssetSummaryWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the risk information about containers.
         *
         * @param request DescribeAssetsSecurityEventSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetsSecurityEventSummaryResponse
         */
        public DescribeAssetsSecurityEventSummaryResponse DescribeAssetsSecurityEventSummaryWithOptions(DescribeAssetsSecurityEventSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetsSecurityEventSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetsSecurityEventSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the risk information about containers.
         *
         * @param request DescribeAssetsSecurityEventSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAssetsSecurityEventSummaryResponse
         */
        public async Task<DescribeAssetsSecurityEventSummaryResponse> DescribeAssetsSecurityEventSummaryWithOptionsAsync(DescribeAssetsSecurityEventSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAssetsSecurityEventSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAssetsSecurityEventSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the risk information about containers.
         *
         * @param request DescribeAssetsSecurityEventSummaryRequest
         * @return DescribeAssetsSecurityEventSummaryResponse
         */
        public DescribeAssetsSecurityEventSummaryResponse DescribeAssetsSecurityEventSummary(DescribeAssetsSecurityEventSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAssetsSecurityEventSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the risk information about containers.
         *
         * @param request DescribeAssetsSecurityEventSummaryRequest
         * @return DescribeAssetsSecurityEventSummaryResponse
         */
        public async Task<DescribeAssetsSecurityEventSummaryResponse> DescribeAssetsSecurityEventSummaryAsync(DescribeAssetsSecurityEventSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAssetsSecurityEventSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the results of automatically connecting applications on Elastic Compute Service (ECS) instances to the application protection feature after the Runtime Application Self-Protection (RASP) agent is installed on the ECS instances.
         *
         * @param request DescribeAttachRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAttachRecordsResponse
         */
        public DescribeAttachRecordsResponse DescribeAttachRecordsWithOptions(DescribeAttachRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAttachRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAttachRecordsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the results of automatically connecting applications on Elastic Compute Service (ECS) instances to the application protection feature after the Runtime Application Self-Protection (RASP) agent is installed on the ECS instances.
         *
         * @param request DescribeAttachRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAttachRecordsResponse
         */
        public async Task<DescribeAttachRecordsResponse> DescribeAttachRecordsWithOptionsAsync(DescribeAttachRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAttachRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAttachRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the results of automatically connecting applications on Elastic Compute Service (ECS) instances to the application protection feature after the Runtime Application Self-Protection (RASP) agent is installed on the ECS instances.
         *
         * @param request DescribeAttachRecordsRequest
         * @return DescribeAttachRecordsResponse
         */
        public DescribeAttachRecordsResponse DescribeAttachRecords(DescribeAttachRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAttachRecordsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the results of automatically connecting applications on Elastic Compute Service (ECS) instances to the application protection feature after the Runtime Application Self-Protection (RASP) agent is installed on the ECS instances.
         *
         * @param request DescribeAttachRecordsRequest
         * @return DescribeAttachRecordsResponse
         */
        public async Task<DescribeAttachRecordsResponse> DescribeAttachRecordsAsync(DescribeAttachRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAttachRecordsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of attack analysis.
         *
         * @param request DescribeAttackAnalysisDataRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAttackAnalysisDataResponse
         */
        public DescribeAttackAnalysisDataResponse DescribeAttackAnalysisDataWithOptions(DescribeAttackAnalysisDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Base64))
            {
                query["Base64"] = request.Base64;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Data))
            {
                query["Data"] = request.Data;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAttackAnalysisData",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAttackAnalysisDataResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of attack analysis.
         *
         * @param request DescribeAttackAnalysisDataRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAttackAnalysisDataResponse
         */
        public async Task<DescribeAttackAnalysisDataResponse> DescribeAttackAnalysisDataWithOptionsAsync(DescribeAttackAnalysisDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Base64))
            {
                query["Base64"] = request.Base64;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Data))
            {
                query["Data"] = request.Data;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAttackAnalysisData",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAttackAnalysisDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of attack analysis.
         *
         * @param request DescribeAttackAnalysisDataRequest
         * @return DescribeAttackAnalysisDataResponse
         */
        public DescribeAttackAnalysisDataResponse DescribeAttackAnalysisData(DescribeAttackAnalysisDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAttackAnalysisDataWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of attack analysis.
         *
         * @param request DescribeAttackAnalysisDataRequest
         * @return DescribeAttackAnalysisDataResponse
         */
        public async Task<DescribeAttackAnalysisDataResponse> DescribeAttackAnalysisDataAsync(DescribeAttackAnalysisDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAttackAnalysisDataWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of days during which a detected vulnerability is retained before the vulnerability is automatically deleted.
         *
         * @param request DescribeAutoDelConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAutoDelConfigResponse
         */
        public DescribeAutoDelConfigResponse DescribeAutoDelConfigWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAutoDelConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAutoDelConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of days during which a detected vulnerability is retained before the vulnerability is automatically deleted.
         *
         * @param request DescribeAutoDelConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAutoDelConfigResponse
         */
        public async Task<DescribeAutoDelConfigResponse> DescribeAutoDelConfigWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAutoDelConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAutoDelConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of days during which a detected vulnerability is retained before the vulnerability is automatically deleted.
         *
         * @return DescribeAutoDelConfigResponse
         */
        public DescribeAutoDelConfigResponse DescribeAutoDelConfig()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAutoDelConfigWithOptions(runtime);
        }

        /**
         * @summary Queries the number of days during which a detected vulnerability is retained before the vulnerability is automatically deleted.
         *
         * @return DescribeAutoDelConfigResponse
         */
        public async Task<DescribeAutoDelConfigResponse> DescribeAutoDelConfigAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAutoDelConfigWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about a file to which archived alert events are exported.
         *
         * @param request DescribeBackUpExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackUpExportInfoResponse
         */
        public DescribeBackUpExportInfoResponse DescribeBackUpExportInfoWithOptions(DescribeBackUpExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackUpExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackUpExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a file to which archived alert events are exported.
         *
         * @param request DescribeBackUpExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackUpExportInfoResponse
         */
        public async Task<DescribeBackUpExportInfoResponse> DescribeBackUpExportInfoWithOptionsAsync(DescribeBackUpExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackUpExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackUpExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a file to which archived alert events are exported.
         *
         * @param request DescribeBackUpExportInfoRequest
         * @return DescribeBackUpExportInfoResponse
         */
        public DescribeBackUpExportInfoResponse DescribeBackUpExportInfo(DescribeBackUpExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackUpExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a file to which archived alert events are exported.
         *
         * @param request DescribeBackUpExportInfoRequest
         * @return DescribeBackUpExportInfoResponse
         */
        public async Task<DescribeBackUpExportInfoResponse> DescribeBackUpExportInfoAsync(DescribeBackUpExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackUpExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @description You can call the DescribeBackupClients operation to query the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @param request DescribeBackupClientsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupClientsResponse
         */
        public DescribeBackupClientsResponse DescribeBackupClientsWithOptions(DescribeBackupClientsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportRegionId))
            {
                query["SupportRegionId"] = request.SupportRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupClients",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupClientsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @description You can call the DescribeBackupClients operation to query the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @param request DescribeBackupClientsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupClientsResponse
         */
        public async Task<DescribeBackupClientsResponse> DescribeBackupClientsWithOptionsAsync(DescribeBackupClientsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportRegionId))
            {
                query["SupportRegionId"] = request.SupportRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupClients",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupClientsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @description You can call the DescribeBackupClients operation to query the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @param request DescribeBackupClientsRequest
         * @return DescribeBackupClientsResponse
         */
        public DescribeBackupClientsResponse DescribeBackupClients(DescribeBackupClientsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupClientsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @description You can call the DescribeBackupClients operation to query the servers on which the anti-ransomware agent is installed in a specified region.
         *
         * @param request DescribeBackupClientsRequest
         * @return DescribeBackupClientsResponse
         */
        public async Task<DescribeBackupClientsResponse> DescribeBackupClientsAsync(DescribeBackupClientsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupClientsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries backup files.
         *
         * @param request DescribeBackupFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupFilesResponse
         */
        public DescribeBackupFilesResponse DescribeBackupFilesWithOptions(DescribeBackupFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotHash))
            {
                query["SnapshotHash"] = request.SnapshotHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupFilesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries backup files.
         *
         * @param request DescribeBackupFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupFilesResponse
         */
        public async Task<DescribeBackupFilesResponse> DescribeBackupFilesWithOptionsAsync(DescribeBackupFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnapshotHash))
            {
                query["SnapshotHash"] = request.SnapshotHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupFilesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries backup files.
         *
         * @param request DescribeBackupFilesRequest
         * @return DescribeBackupFilesResponse
         */
        public DescribeBackupFilesResponse DescribeBackupFiles(DescribeBackupFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupFilesWithOptions(request, runtime);
        }

        /**
         * @summary Queries backup files.
         *
         * @param request DescribeBackupFilesRequest
         * @return DescribeBackupFilesResponse
         */
        public async Task<DescribeBackupFilesResponse> DescribeBackupFilesAsync(DescribeBackupFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupFilesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the backup status of a sever to which an anti-ransomware policy is applied.
         *
         * @param request DescribeBackupMachineStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupMachineStatusResponse
         */
        public DescribeBackupMachineStatusResponse DescribeBackupMachineStatusWithOptions(DescribeBackupMachineStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupMachineStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupMachineStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the backup status of a sever to which an anti-ransomware policy is applied.
         *
         * @param request DescribeBackupMachineStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupMachineStatusResponse
         */
        public async Task<DescribeBackupMachineStatusResponse> DescribeBackupMachineStatusWithOptionsAsync(DescribeBackupMachineStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupMachineStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupMachineStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the backup status of a sever to which an anti-ransomware policy is applied.
         *
         * @param request DescribeBackupMachineStatusRequest
         * @return DescribeBackupMachineStatusResponse
         */
        public DescribeBackupMachineStatusResponse DescribeBackupMachineStatus(DescribeBackupMachineStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupMachineStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the backup status of a sever to which an anti-ransomware policy is applied.
         *
         * @param request DescribeBackupMachineStatusRequest
         * @return DescribeBackupMachineStatusResponse
         */
        public async Task<DescribeBackupMachineStatusResponse> DescribeBackupMachineStatusAsync(DescribeBackupMachineStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupMachineStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries anti-ransomware policies.
         *
         * @param request DescribeBackupPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupPoliciesResponse
         */
        public DescribeBackupPoliciesResponse DescribeBackupPoliciesWithOptions(DescribeBackupPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupPolicies",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries anti-ransomware policies.
         *
         * @param request DescribeBackupPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupPoliciesResponse
         */
        public async Task<DescribeBackupPoliciesResponse> DescribeBackupPoliciesWithOptionsAsync(DescribeBackupPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupPolicies",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries anti-ransomware policies.
         *
         * @param request DescribeBackupPoliciesRequest
         * @return DescribeBackupPoliciesResponse
         */
        public DescribeBackupPoliciesResponse DescribeBackupPolicies(DescribeBackupPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupPoliciesWithOptions(request, runtime);
        }

        /**
         * @summary Queries anti-ransomware policies.
         *
         * @param request DescribeBackupPoliciesRequest
         * @return DescribeBackupPoliciesResponse
         */
        public async Task<DescribeBackupPoliciesResponse> DescribeBackupPoliciesAsync(DescribeBackupPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupPoliciesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for servers.
         *
         * @param request DescribeBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupPolicyResponse
         */
        public DescribeBackupPolicyResponse DescribeBackupPolicyWithOptions(DescribeBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for servers.
         *
         * @param request DescribeBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupPolicyResponse
         */
        public async Task<DescribeBackupPolicyResponse> DescribeBackupPolicyWithOptionsAsync(DescribeBackupPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for servers.
         *
         * @param request DescribeBackupPolicyRequest
         * @return DescribeBackupPolicyResponse
         */
        public DescribeBackupPolicyResponse DescribeBackupPolicy(DescribeBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for servers.
         *
         * @param request DescribeBackupPolicyRequest
         * @return DescribeBackupPolicyResponse
         */
        public async Task<DescribeBackupPolicyResponse> DescribeBackupPolicyAsync(DescribeBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of restoration tasks.
         *
         * @description If you have created restoration tasks, you can call this operation to query the number of restoration tasks that are in the **restored** or **being restored** state.
         *
         * @param request DescribeBackupRestoreCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupRestoreCountResponse
         */
        public DescribeBackupRestoreCountResponse DescribeBackupRestoreCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupRestoreCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupRestoreCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of restoration tasks.
         *
         * @description If you have created restoration tasks, you can call this operation to query the number of restoration tasks that are in the **restored** or **being restored** state.
         *
         * @param request DescribeBackupRestoreCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBackupRestoreCountResponse
         */
        public async Task<DescribeBackupRestoreCountResponse> DescribeBackupRestoreCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBackupRestoreCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBackupRestoreCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of restoration tasks.
         *
         * @description If you have created restoration tasks, you can call this operation to query the number of restoration tasks that are in the **restored** or **being restored** state.
         *
         * @return DescribeBackupRestoreCountResponse
         */
        public DescribeBackupRestoreCountResponse DescribeBackupRestoreCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBackupRestoreCountWithOptions(runtime);
        }

        /**
         * @summary Queries the statistics of restoration tasks.
         *
         * @description If you have created restoration tasks, you can call this operation to query the number of restoration tasks that are in the **restored** or **being restored** state.
         *
         * @return DescribeBackupRestoreCountResponse
         */
        public async Task<DescribeBackupRestoreCountResponse> DescribeBackupRestoreCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBackupRestoreCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the IP addresses that are blocked by a defense rule against brute-force attacks.
         *
         * @param request DescribeBruteForceRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBruteForceRecordsResponse
         */
        public DescribeBruteForceRecordsResponse DescribeBruteForceRecordsWithOptions(DescribeBruteForceRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBruteForceRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBruteForceRecordsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the IP addresses that are blocked by a defense rule against brute-force attacks.
         *
         * @param request DescribeBruteForceRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBruteForceRecordsResponse
         */
        public async Task<DescribeBruteForceRecordsResponse> DescribeBruteForceRecordsWithOptionsAsync(DescribeBruteForceRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBruteForceRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBruteForceRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the IP addresses that are blocked by a defense rule against brute-force attacks.
         *
         * @param request DescribeBruteForceRecordsRequest
         * @return DescribeBruteForceRecordsResponse
         */
        public DescribeBruteForceRecordsResponse DescribeBruteForceRecords(DescribeBruteForceRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBruteForceRecordsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the IP addresses that are blocked by a defense rule against brute-force attacks.
         *
         * @param request DescribeBruteForceRecordsRequest
         * @return DescribeBruteForceRecordsResponse
         */
        public async Task<DescribeBruteForceRecordsResponse> DescribeBruteForceRecordsAsync(DescribeBruteForceRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBruteForceRecordsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeBruteForceSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBruteForceSummaryResponse
         */
        public DescribeBruteForceSummaryResponse DescribeBruteForceSummaryWithOptions(DescribeBruteForceSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBruteForceSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBruteForceSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeBruteForceSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeBruteForceSummaryResponse
         */
        public async Task<DescribeBruteForceSummaryResponse> DescribeBruteForceSummaryWithOptionsAsync(DescribeBruteForceSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeBruteForceSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeBruteForceSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeBruteForceSummaryRequest
         * @return DescribeBruteForceSummaryResponse
         */
        public DescribeBruteForceSummaryResponse DescribeBruteForceSummary(DescribeBruteForceSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeBruteForceSummaryWithOptions(request, runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeBruteForceSummaryRequest
         * @return DescribeBruteForceSummaryResponse
         */
        public async Task<DescribeBruteForceSummaryResponse> DescribeBruteForceSummaryAsync(DescribeBruteForceSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeBruteForceSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the list of fixable vulnerabilities.
         *
         * @param request DescribeCanFixVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCanFixVulListResponse
         */
        public DescribeCanFixVulListResponse DescribeCanFixVulListWithOptions(DescribeCanFixVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCanFixVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCanFixVulListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the list of fixable vulnerabilities.
         *
         * @param request DescribeCanFixVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCanFixVulListResponse
         */
        public async Task<DescribeCanFixVulListResponse> DescribeCanFixVulListWithOptionsAsync(DescribeCanFixVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCanFixVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCanFixVulListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the list of fixable vulnerabilities.
         *
         * @param request DescribeCanFixVulListRequest
         * @return DescribeCanFixVulListResponse
         */
        public DescribeCanFixVulListResponse DescribeCanFixVulList(DescribeCanFixVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCanFixVulListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the list of fixable vulnerabilities.
         *
         * @param request DescribeCanFixVulListRequest
         * @return DescribeCanFixVulListResponse
         */
        public async Task<DescribeCanFixVulListResponse> DescribeCanFixVulListAsync(DescribeCanFixVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCanFixVulListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询分类并附带每个分类的未处理异常数量
         *
         * @param request DescribeCheckEcsWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckEcsWarningsResponse
         */
        public DescribeCheckEcsWarningsResponse DescribeCheckEcsWarningsWithOptions(DescribeCheckEcsWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckEcsWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckEcsWarningsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询分类并附带每个分类的未处理异常数量
         *
         * @param request DescribeCheckEcsWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckEcsWarningsResponse
         */
        public async Task<DescribeCheckEcsWarningsResponse> DescribeCheckEcsWarningsWithOptionsAsync(DescribeCheckEcsWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckEcsWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckEcsWarningsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询分类并附带每个分类的未处理异常数量
         *
         * @param request DescribeCheckEcsWarningsRequest
         * @return DescribeCheckEcsWarningsResponse
         */
        public DescribeCheckEcsWarningsResponse DescribeCheckEcsWarnings(DescribeCheckEcsWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckEcsWarningsWithOptions(request, runtime);
        }

        /**
         * @summary 查询分类并附带每个分类的未处理异常数量
         *
         * @param request DescribeCheckEcsWarningsRequest
         * @return DescribeCheckEcsWarningsResponse
         */
        public async Task<DescribeCheckEcsWarningsResponse> DescribeCheckEcsWarningsAsync(DescribeCheckEcsWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckEcsWarningsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the parameters that you can configure to fix specified risk items.
         *
         * @param request DescribeCheckFixDetailsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckFixDetailsResponse
         */
        public DescribeCheckFixDetailsResponse DescribeCheckFixDetailsWithOptions(DescribeCheckFixDetailsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckFixDetails",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckFixDetailsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the parameters that you can configure to fix specified risk items.
         *
         * @param request DescribeCheckFixDetailsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckFixDetailsResponse
         */
        public async Task<DescribeCheckFixDetailsResponse> DescribeCheckFixDetailsWithOptionsAsync(DescribeCheckFixDetailsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckFixDetails",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckFixDetailsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the parameters that you can configure to fix specified risk items.
         *
         * @param request DescribeCheckFixDetailsRequest
         * @return DescribeCheckFixDetailsResponse
         */
        public DescribeCheckFixDetailsResponse DescribeCheckFixDetails(DescribeCheckFixDetailsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckFixDetailsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the parameters that you can configure to fix specified risk items.
         *
         * @param request DescribeCheckFixDetailsRequest
         * @return DescribeCheckFixDetailsResponse
         */
        public async Task<DescribeCheckFixDetailsResponse> DescribeCheckFixDetailsAsync(DescribeCheckFixDetailsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckFixDetailsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about a specified check item.
         *
         * @param request DescribeCheckWarningDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningDetailResponse
         */
        public DescribeCheckWarningDetailResponse DescribeCheckWarningDetailWithOptions(DescribeCheckWarningDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningId))
            {
                query["CheckWarningId"] = request.CheckWarningId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified check item.
         *
         * @param request DescribeCheckWarningDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningDetailResponse
         */
        public async Task<DescribeCheckWarningDetailResponse> DescribeCheckWarningDetailWithOptionsAsync(DescribeCheckWarningDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningId))
            {
                query["CheckWarningId"] = request.CheckWarningId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified check item.
         *
         * @param request DescribeCheckWarningDetailRequest
         * @return DescribeCheckWarningDetailResponse
         */
        public DescribeCheckWarningDetailResponse DescribeCheckWarningDetail(DescribeCheckWarningDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckWarningDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a specified check item.
         *
         * @param request DescribeCheckWarningDetailRequest
         * @return DescribeCheckWarningDetailResponse
         */
        public async Task<DescribeCheckWarningDetailResponse> DescribeCheckWarningDetailAsync(DescribeCheckWarningDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckWarningDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the servers on which the same risk item is detected by specifying a baseline and a check item.
         *
         * @param request DescribeCheckWarningMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningMachinesResponse
         */
        public DescribeCheckWarningMachinesResponse DescribeCheckWarningMachinesWithOptions(DescribeCheckWarningMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningMachinesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which the same risk item is detected by specifying a baseline and a check item.
         *
         * @param request DescribeCheckWarningMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningMachinesResponse
         */
        public async Task<DescribeCheckWarningMachinesResponse> DescribeCheckWarningMachinesWithOptionsAsync(DescribeCheckWarningMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningMachinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which the same risk item is detected by specifying a baseline and a check item.
         *
         * @param request DescribeCheckWarningMachinesRequest
         * @return DescribeCheckWarningMachinesResponse
         */
        public DescribeCheckWarningMachinesResponse DescribeCheckWarningMachines(DescribeCheckWarningMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckWarningMachinesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the servers on which the same risk item is detected by specifying a baseline and a check item.
         *
         * @param request DescribeCheckWarningMachinesRequest
         * @return DescribeCheckWarningMachinesResponse
         */
        public async Task<DescribeCheckWarningMachinesResponse> DescribeCheckWarningMachinesAsync(DescribeCheckWarningMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckWarningMachinesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistical information about baseline check results. The information includes the number of servers on which a baseline check is performed, the number of baseline check items, and the pass rate of check items in the last baseline check.
         *
         * @param request DescribeCheckWarningSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningSummaryResponse
         */
        public DescribeCheckWarningSummaryResponse DescribeCheckWarningSummaryWithOptions(DescribeCheckWarningSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistical information about baseline check results. The information includes the number of servers on which a baseline check is performed, the number of baseline check items, and the pass rate of check items in the last baseline check.
         *
         * @param request DescribeCheckWarningSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningSummaryResponse
         */
        public async Task<DescribeCheckWarningSummaryResponse> DescribeCheckWarningSummaryWithOptionsAsync(DescribeCheckWarningSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarningSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistical information about baseline check results. The information includes the number of servers on which a baseline check is performed, the number of baseline check items, and the pass rate of check items in the last baseline check.
         *
         * @param request DescribeCheckWarningSummaryRequest
         * @return DescribeCheckWarningSummaryResponse
         */
        public DescribeCheckWarningSummaryResponse DescribeCheckWarningSummary(DescribeCheckWarningSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckWarningSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistical information about baseline check results. The information includes the number of servers on which a baseline check is performed, the number of baseline check items, and the pass rate of check items in the last baseline check.
         *
         * @param request DescribeCheckWarningSummaryRequest
         * @return DescribeCheckWarningSummaryResponse
         */
        public async Task<DescribeCheckWarningSummaryResponse> DescribeCheckWarningSummaryAsync(DescribeCheckWarningSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckWarningSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about specified risk items and the check items of a specified server.
         *
         * @param request DescribeCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningsResponse
         */
        public DescribeCheckWarningsResponse DescribeCheckWarningsWithOptions(DescribeCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerName))
            {
                query["ContainerName"] = request.ContainerName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about specified risk items and the check items of a specified server.
         *
         * @param request DescribeCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCheckWarningsResponse
         */
        public async Task<DescribeCheckWarningsResponse> DescribeCheckWarningsWithOptionsAsync(DescribeCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerName))
            {
                query["ContainerName"] = request.ContainerName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCheckWarningsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about specified risk items and the check items of a specified server.
         *
         * @param request DescribeCheckWarningsRequest
         * @return DescribeCheckWarningsResponse
         */
        public DescribeCheckWarningsResponse DescribeCheckWarnings(DescribeCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCheckWarningsWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about specified risk items and the check items of a specified server.
         *
         * @param request DescribeCheckWarningsRequest
         * @return DescribeCheckWarningsResponse
         */
        public async Task<DescribeCheckWarningsResponse> DescribeCheckWarningsAsync(DescribeCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCheckWarningsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the Security Center agent.
         *
         * @param request DescribeClientConfSetupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClientConfSetupResponse
         */
        public DescribeClientConfSetupResponse DescribeClientConfSetupWithOptions(DescribeClientConfSetupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTag))
            {
                query["StrategyTag"] = request.StrategyTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTagValue))
            {
                query["StrategyTagValue"] = request.StrategyTagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClientConfSetup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClientConfSetupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the Security Center agent.
         *
         * @param request DescribeClientConfSetupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClientConfSetupResponse
         */
        public async Task<DescribeClientConfSetupResponse> DescribeClientConfSetupWithOptionsAsync(DescribeClientConfSetupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTag))
            {
                query["StrategyTag"] = request.StrategyTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTagValue))
            {
                query["StrategyTagValue"] = request.StrategyTagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClientConfSetup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClientConfSetupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the Security Center agent.
         *
         * @param request DescribeClientConfSetupRequest
         * @return DescribeClientConfSetupResponse
         */
        public DescribeClientConfSetupResponse DescribeClientConfSetup(DescribeClientConfSetupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClientConfSetupWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the Security Center agent.
         *
         * @param request DescribeClientConfSetupRequest
         * @return DescribeClientConfSetupResponse
         */
        public async Task<DescribeClientConfSetupResponse> DescribeClientConfSetupAsync(DescribeClientConfSetupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClientConfSetupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of servers to which different tags are added.
         *
         * @param request DescribeClientConfStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClientConfStrategyResponse
         */
        public DescribeClientConfStrategyResponse DescribeClientConfStrategyWithOptions(DescribeClientConfStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagValue))
            {
                query["TagValue"] = request.TagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClientConfStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClientConfStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of servers to which different tags are added.
         *
         * @param request DescribeClientConfStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClientConfStrategyResponse
         */
        public async Task<DescribeClientConfStrategyResponse> DescribeClientConfStrategyWithOptionsAsync(DescribeClientConfStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagValue))
            {
                query["TagValue"] = request.TagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClientConfStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClientConfStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of servers to which different tags are added.
         *
         * @param request DescribeClientConfStrategyRequest
         * @return DescribeClientConfStrategyResponse
         */
        public DescribeClientConfStrategyResponse DescribeClientConfStrategy(DescribeClientConfStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClientConfStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of servers to which different tags are added.
         *
         * @param request DescribeClientConfStrategyRequest
         * @return DescribeClientConfStrategyResponse
         */
        public async Task<DescribeClientConfStrategyResponse> DescribeClientConfStrategyAsync(DescribeClientConfStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClientConfStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about assets that meet specific search conditions. For example, you can search for assets by the instance name or region of the asset.
         *
         * @description You can search for an asset by using search conditions, such as the instance ID, instance name, virtual private cloud (VPC) ID, region, and public IP address. You can also configure a logical relationship between multiple search conditions to search for the assets that meet the search conditions.
         *
         * @param request DescribeCloudCenterInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCloudCenterInstancesResponse
         */
        public DescribeCloudCenterInstancesResponse DescribeCloudCenterInstancesWithOptions(DescribeCloudCenterInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Importance))
            {
                query["Importance"] = request.Importance;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoGroupTrace))
            {
                query["NoGroupTrace"] = request.NoGroupTrace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCloudCenterInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCloudCenterInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about assets that meet specific search conditions. For example, you can search for assets by the instance name or region of the asset.
         *
         * @description You can search for an asset by using search conditions, such as the instance ID, instance name, virtual private cloud (VPC) ID, region, and public IP address. You can also configure a logical relationship between multiple search conditions to search for the assets that meet the search conditions.
         *
         * @param request DescribeCloudCenterInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCloudCenterInstancesResponse
         */
        public async Task<DescribeCloudCenterInstancesResponse> DescribeCloudCenterInstancesWithOptionsAsync(DescribeCloudCenterInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Importance))
            {
                query["Importance"] = request.Importance;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoGroupTrace))
            {
                query["NoGroupTrace"] = request.NoGroupTrace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCloudCenterInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCloudCenterInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about assets that meet specific search conditions. For example, you can search for assets by the instance name or region of the asset.
         *
         * @description You can search for an asset by using search conditions, such as the instance ID, instance name, virtual private cloud (VPC) ID, region, and public IP address. You can also configure a logical relationship between multiple search conditions to search for the assets that meet the search conditions.
         *
         * @param request DescribeCloudCenterInstancesRequest
         * @return DescribeCloudCenterInstancesResponse
         */
        public DescribeCloudCenterInstancesResponse DescribeCloudCenterInstances(DescribeCloudCenterInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCloudCenterInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about assets that meet specific search conditions. For example, you can search for assets by the instance name or region of the asset.
         *
         * @description You can search for an asset by using search conditions, such as the instance ID, instance name, virtual private cloud (VPC) ID, region, and public IP address. You can also configure a logical relationship between multiple search conditions to search for the assets that meet the search conditions.
         *
         * @param request DescribeCloudCenterInstancesRequest
         * @return DescribeCloudCenterInstancesResponse
         */
        public async Task<DescribeCloudCenterInstancesResponse> DescribeCloudCenterInstancesAsync(DescribeCloudCenterInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCloudCenterInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeCloudProductFieldStatistics is deprecated, please use Sas::2018-12-03::GetCloudAssetSummary instead.
         *
         * @summary Queries the statistics of cloud services.
         *
         * @param request DescribeCloudProductFieldStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCloudProductFieldStatisticsResponse
         */
        // Deprecated
        public DescribeCloudProductFieldStatisticsResponse DescribeCloudProductFieldStatisticsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCloudProductFieldStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCloudProductFieldStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeCloudProductFieldStatistics is deprecated, please use Sas::2018-12-03::GetCloudAssetSummary instead.
         *
         * @summary Queries the statistics of cloud services.
         *
         * @param request DescribeCloudProductFieldStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCloudProductFieldStatisticsResponse
         */
        // Deprecated
        public async Task<DescribeCloudProductFieldStatisticsResponse> DescribeCloudProductFieldStatisticsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCloudProductFieldStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCloudProductFieldStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeCloudProductFieldStatistics is deprecated, please use Sas::2018-12-03::GetCloudAssetSummary instead.
         *
         * @summary Queries the statistics of cloud services.
         *
         * @return DescribeCloudProductFieldStatisticsResponse
         */
        // Deprecated
        public DescribeCloudProductFieldStatisticsResponse DescribeCloudProductFieldStatistics()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCloudProductFieldStatisticsWithOptions(runtime);
        }

        /**
         * @deprecated OpenAPI DescribeCloudProductFieldStatistics is deprecated, please use Sas::2018-12-03::GetCloudAssetSummary instead.
         *
         * @summary Queries the statistics of cloud services.
         *
         * @return DescribeCloudProductFieldStatisticsResponse
         */
        // Deprecated
        public async Task<DescribeCloudProductFieldStatisticsResponse> DescribeCloudProductFieldStatisticsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCloudProductFieldStatisticsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about an cluster based on the cluster ID.
         *
         * @param request DescribeClusterBasicInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterBasicInfoResponse
         */
        public DescribeClusterBasicInfoResponse DescribeClusterBasicInfoWithOptions(DescribeClusterBasicInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterBasicInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterBasicInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an cluster based on the cluster ID.
         *
         * @param request DescribeClusterBasicInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterBasicInfoResponse
         */
        public async Task<DescribeClusterBasicInfoResponse> DescribeClusterBasicInfoWithOptionsAsync(DescribeClusterBasicInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterBasicInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterBasicInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an cluster based on the cluster ID.
         *
         * @param request DescribeClusterBasicInfoRequest
         * @return DescribeClusterBasicInfoResponse
         */
        public DescribeClusterBasicInfoResponse DescribeClusterBasicInfo(DescribeClusterBasicInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClusterBasicInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about an cluster based on the cluster ID.
         *
         * @param request DescribeClusterBasicInfoRequest
         * @return DescribeClusterBasicInfoResponse
         */
        public async Task<DescribeClusterBasicInfoResponse> DescribeClusterBasicInfoAsync(DescribeClusterBasicInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClusterBasicInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a cluster.
         *
         * @param request DescribeClusterInfoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterInfoListResponse
         */
        public DescribeClusterInfoListResponse DescribeClusterInfoListWithOptions(DescribeClusterInfoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterInfoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterInfoListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a cluster.
         *
         * @param request DescribeClusterInfoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterInfoListResponse
         */
        public async Task<DescribeClusterInfoListResponse> DescribeClusterInfoListWithOptionsAsync(DescribeClusterInfoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterInfoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterInfoListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a cluster.
         *
         * @param request DescribeClusterInfoListRequest
         * @return DescribeClusterInfoListResponse
         */
        public DescribeClusterInfoListResponse DescribeClusterInfoList(DescribeClusterInfoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClusterInfoListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a cluster.
         *
         * @param request DescribeClusterInfoListRequest
         * @return DescribeClusterInfoListResponse
         */
        public async Task<DescribeClusterInfoListResponse> DescribeClusterInfoListAsync(DescribeClusterInfoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClusterInfoListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the network topology edge by cluster.
         *
         * @param request DescribeClusterNetworkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterNetworkResponse
         */
        public DescribeClusterNetworkResponse DescribeClusterNetworkWithOptions(DescribeClusterNetworkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterNetwork",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterNetworkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the network topology edge by cluster.
         *
         * @param request DescribeClusterNetworkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterNetworkResponse
         */
        public async Task<DescribeClusterNetworkResponse> DescribeClusterNetworkWithOptionsAsync(DescribeClusterNetworkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterNetwork",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterNetworkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the network topology edge by cluster.
         *
         * @param request DescribeClusterNetworkRequest
         * @return DescribeClusterNetworkResponse
         */
        public DescribeClusterNetworkResponse DescribeClusterNetwork(DescribeClusterNetworkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClusterNetworkWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the network topology edge by cluster.
         *
         * @param request DescribeClusterNetworkRequest
         * @return DescribeClusterNetworkResponse
         */
        public async Task<DescribeClusterNetworkResponse> DescribeClusterNetworkAsync(DescribeClusterNetworkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClusterNetworkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities that are detected on a cluster.
         *
         * @param request DescribeClusterVulStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterVulStatisticsResponse
         */
        public DescribeClusterVulStatisticsResponse DescribeClusterVulStatisticsWithOptions(DescribeClusterVulStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterVulStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterVulStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities that are detected on a cluster.
         *
         * @param request DescribeClusterVulStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeClusterVulStatisticsResponse
         */
        public async Task<DescribeClusterVulStatisticsResponse> DescribeClusterVulStatisticsWithOptionsAsync(DescribeClusterVulStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeClusterVulStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeClusterVulStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities that are detected on a cluster.
         *
         * @param request DescribeClusterVulStatisticsRequest
         * @return DescribeClusterVulStatisticsResponse
         */
        public DescribeClusterVulStatisticsResponse DescribeClusterVulStatistics(DescribeClusterVulStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeClusterVulStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities that are detected on a cluster.
         *
         * @param request DescribeClusterVulStatisticsRequest
         * @return DescribeClusterVulStatisticsResponse
         */
        public async Task<DescribeClusterVulStatisticsResponse> DescribeClusterVulStatisticsAsync(DescribeClusterVulStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeClusterVulStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a specified feature.
         *
         * @param request DescribeCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonOverallConfigResponse
         */
        public DescribeCommonOverallConfigResponse DescribeCommonOverallConfigWithOptions(DescribeCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonOverallConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a specified feature.
         *
         * @param request DescribeCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonOverallConfigResponse
         */
        public async Task<DescribeCommonOverallConfigResponse> DescribeCommonOverallConfigWithOptionsAsync(DescribeCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonOverallConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a specified feature.
         *
         * @param request DescribeCommonOverallConfigRequest
         * @return DescribeCommonOverallConfigResponse
         */
        public DescribeCommonOverallConfigResponse DescribeCommonOverallConfig(DescribeCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCommonOverallConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a specified feature.
         *
         * @param request DescribeCommonOverallConfigRequest
         * @return DescribeCommonOverallConfigResponse
         */
        public async Task<DescribeCommonOverallConfigResponse> DescribeCommonOverallConfigAsync(DescribeCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCommonOverallConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of features in proactive defense.
         *
         * @param request DescribeCommonOverallConfigListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonOverallConfigListResponse
         */
        public DescribeCommonOverallConfigListResponse DescribeCommonOverallConfigListWithOptions(DescribeCommonOverallConfigListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonOverallConfigList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonOverallConfigListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of features in proactive defense.
         *
         * @param request DescribeCommonOverallConfigListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonOverallConfigListResponse
         */
        public async Task<DescribeCommonOverallConfigListResponse> DescribeCommonOverallConfigListWithOptionsAsync(DescribeCommonOverallConfigListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonOverallConfigList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonOverallConfigListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of features in proactive defense.
         *
         * @param request DescribeCommonOverallConfigListRequest
         * @return DescribeCommonOverallConfigListResponse
         */
        public DescribeCommonOverallConfigListResponse DescribeCommonOverallConfigList(DescribeCommonOverallConfigListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCommonOverallConfigListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of features in proactive defense.
         *
         * @param request DescribeCommonOverallConfigListRequest
         * @return DescribeCommonOverallConfigListResponse
         */
        public async Task<DescribeCommonOverallConfigListResponse> DescribeCommonOverallConfigListAsync(DescribeCommonOverallConfigListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCommonOverallConfigListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the proactive defense feature.
         *
         * @param request DescribeCommonTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonTargetConfigResponse
         */
        public DescribeCommonTargetConfigResponse DescribeCommonTargetConfigWithOptions(DescribeCommonTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonTargetConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the proactive defense feature.
         *
         * @param request DescribeCommonTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonTargetConfigResponse
         */
        public async Task<DescribeCommonTargetConfigResponse> DescribeCommonTargetConfigWithOptionsAsync(DescribeCommonTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonTargetConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the proactive defense feature.
         *
         * @param request DescribeCommonTargetConfigRequest
         * @return DescribeCommonTargetConfigResponse
         */
        public DescribeCommonTargetConfigResponse DescribeCommonTargetConfig(DescribeCommonTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCommonTargetConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the proactive defense feature.
         *
         * @param request DescribeCommonTargetConfigRequest
         * @return DescribeCommonTargetConfigResponse
         */
        public async Task<DescribeCommonTargetConfigResponse> DescribeCommonTargetConfigAsync(DescribeCommonTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCommonTargetConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the servers based on the specified configuration item.
         *
         * @param request DescribeCommonTargetResultListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonTargetResultListResponse
         */
        public DescribeCommonTargetResultListResponse DescribeCommonTargetResultListWithOptions(DescribeCommonTargetResultListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonTargetResultList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonTargetResultListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers based on the specified configuration item.
         *
         * @param request DescribeCommonTargetResultListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCommonTargetResultListResponse
         */
        public async Task<DescribeCommonTargetResultListResponse> DescribeCommonTargetResultListWithOptionsAsync(DescribeCommonTargetResultListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCommonTargetResultList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCommonTargetResultListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers based on the specified configuration item.
         *
         * @param request DescribeCommonTargetResultListRequest
         * @return DescribeCommonTargetResultListResponse
         */
        public DescribeCommonTargetResultListResponse DescribeCommonTargetResultList(DescribeCommonTargetResultListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCommonTargetResultListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the servers based on the specified configuration item.
         *
         * @param request DescribeCommonTargetResultListRequest
         * @return DescribeCommonTargetResultListResponse
         */
        public async Task<DescribeCommonTargetResultListResponse> DescribeCommonTargetResultListAsync(DescribeCommonTargetResultListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCommonTargetResultListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the priorities to fix vulnerabilities.
         *
         * @param request DescribeConcernNecessityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeConcernNecessityResponse
         */
        public DescribeConcernNecessityResponse DescribeConcernNecessityWithOptions(DescribeConcernNecessityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeConcernNecessity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeConcernNecessityResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the priorities to fix vulnerabilities.
         *
         * @param request DescribeConcernNecessityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeConcernNecessityResponse
         */
        public async Task<DescribeConcernNecessityResponse> DescribeConcernNecessityWithOptionsAsync(DescribeConcernNecessityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeConcernNecessity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeConcernNecessityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the priorities to fix vulnerabilities.
         *
         * @param request DescribeConcernNecessityRequest
         * @return DescribeConcernNecessityResponse
         */
        public DescribeConcernNecessityResponse DescribeConcernNecessity(DescribeConcernNecessityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeConcernNecessityWithOptions(request, runtime);
        }

        /**
         * @summary Queries the priorities to fix vulnerabilities.
         *
         * @param request DescribeConcernNecessityRequest
         * @return DescribeConcernNecessityResponse
         */
        public async Task<DescribeConcernNecessityResponse> DescribeConcernNecessityAsync(DescribeConcernNecessityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeConcernNecessityWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a containerized application.
         *
         * @param request DescribeContainerAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerAppsResponse
         */
        public DescribeContainerAppsResponse DescribeContainerAppsWithOptions(DescribeContainerAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerApps",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerAppsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a containerized application.
         *
         * @param request DescribeContainerAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerAppsResponse
         */
        public async Task<DescribeContainerAppsResponse> DescribeContainerAppsWithOptionsAsync(DescribeContainerAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerApps",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerAppsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a containerized application.
         *
         * @param request DescribeContainerAppsRequest
         * @return DescribeContainerAppsResponse
         */
        public DescribeContainerAppsResponse DescribeContainerApps(DescribeContainerAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerAppsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a containerized application.
         *
         * @param request DescribeContainerAppsRequest
         * @return DescribeContainerAppsResponse
         */
        public async Task<DescribeContainerAppsResponse> DescribeContainerAppsAsync(DescribeContainerAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerAppsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the filter conditions that you can use to filter the containers.
         *
         * @param request DescribeContainerCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerCriteriaResponse
         */
        public DescribeContainerCriteriaResponse DescribeContainerCriteriaWithOptions(DescribeContainerCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the filter conditions that you can use to filter the containers.
         *
         * @param request DescribeContainerCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerCriteriaResponse
         */
        public async Task<DescribeContainerCriteriaResponse> DescribeContainerCriteriaWithOptionsAsync(DescribeContainerCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the filter conditions that you can use to filter the containers.
         *
         * @param request DescribeContainerCriteriaRequest
         * @return DescribeContainerCriteriaResponse
         */
        public DescribeContainerCriteriaResponse DescribeContainerCriteria(DescribeContainerCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the filter conditions that you can use to filter the containers.
         *
         * @param request DescribeContainerCriteriaRequest
         * @return DescribeContainerCriteriaResponse
         */
        public async Task<DescribeContainerCriteriaResponse> DescribeContainerCriteriaAsync(DescribeContainerCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about containers.
         *
         * @param request DescribeContainerInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerInstancesResponse
         */
        public DescribeContainerInstancesResponse DescribeContainerInstancesWithOptions(DescribeContainerInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about containers.
         *
         * @param request DescribeContainerInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerInstancesResponse
         */
        public async Task<DescribeContainerInstancesResponse> DescribeContainerInstancesWithOptionsAsync(DescribeContainerInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about containers.
         *
         * @param request DescribeContainerInstancesRequest
         * @return DescribeContainerInstancesResponse
         */
        public DescribeContainerInstancesResponse DescribeContainerInstances(DescribeContainerInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about containers.
         *
         * @param request DescribeContainerInstancesRequest
         * @return DescribeContainerInstancesResponse
         */
        public async Task<DescribeContainerInstancesResponse> DescribeContainerInstancesAsync(DescribeContainerInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan of one or more running container applications.
         *
         * @param request DescribeContainerScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerScanConfigResponse
         */
        public DescribeContainerScanConfigResponse DescribeContainerScanConfigWithOptions(DescribeContainerScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan of one or more running container applications.
         *
         * @param request DescribeContainerScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerScanConfigResponse
         */
        public async Task<DescribeContainerScanConfigResponse> DescribeContainerScanConfigWithOptionsAsync(DescribeContainerScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan of one or more running container applications.
         *
         * @param request DescribeContainerScanConfigRequest
         * @return DescribeContainerScanConfigResponse
         */
        public DescribeContainerScanConfigResponse DescribeContainerScanConfig(DescribeContainerScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan of one or more running container applications.
         *
         * @param request DescribeContainerScanConfigRequest
         * @return DescribeContainerScanConfigResponse
         */
        public async Task<DescribeContainerScanConfigResponse> DescribeContainerScanConfigAsync(DescribeContainerScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert statistics on container assets.
         *
         * @description Only users who created a Container Registry Enterprise Edition instance can call this operation.
         *
         * @param request DescribeContainerStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerStatisticsResponse
         */
        public DescribeContainerStatisticsResponse DescribeContainerStatisticsWithOptions(DescribeContainerStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert statistics on container assets.
         *
         * @description Only users who created a Container Registry Enterprise Edition instance can call this operation.
         *
         * @param request DescribeContainerStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerStatisticsResponse
         */
        public async Task<DescribeContainerStatisticsResponse> DescribeContainerStatisticsWithOptionsAsync(DescribeContainerStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert statistics on container assets.
         *
         * @description Only users who created a Container Registry Enterprise Edition instance can call this operation.
         *
         * @param request DescribeContainerStatisticsRequest
         * @return DescribeContainerStatisticsResponse
         */
        public DescribeContainerStatisticsResponse DescribeContainerStatistics(DescribeContainerStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert statistics on container assets.
         *
         * @description Only users who created a Container Registry Enterprise Edition instance can call this operation.
         *
         * @param request DescribeContainerStatisticsRequest
         * @return DescribeContainerStatisticsResponse
         */
        public async Task<DescribeContainerStatisticsResponse> DescribeContainerStatisticsAsync(DescribeContainerStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of container assets by using an attribute.
         *
         * @param request DescribeContainerTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerTagsResponse
         */
        public DescribeContainerTagsResponse DescribeContainerTagsWithOptions(DescribeContainerTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of container assets by using an attribute.
         *
         * @param request DescribeContainerTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContainerTagsResponse
         */
        public async Task<DescribeContainerTagsResponse> DescribeContainerTagsWithOptionsAsync(DescribeContainerTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContainerTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContainerTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of container assets by using an attribute.
         *
         * @param request DescribeContainerTagsRequest
         * @return DescribeContainerTagsResponse
         */
        public DescribeContainerTagsResponse DescribeContainerTags(DescribeContainerTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContainerTagsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of container assets by using an attribute.
         *
         * @param request DescribeContainerTagsRequest
         * @return DescribeContainerTagsResponse
         */
        public async Task<DescribeContainerTagsResponse> DescribeContainerTagsAsync(DescribeContainerTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContainerTagsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of images that are not scanned.
         *
         * @param request DescribeCountNotScannedImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCountNotScannedImageResponse
         */
        public DescribeCountNotScannedImageResponse DescribeCountNotScannedImageWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCountNotScannedImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCountNotScannedImageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of images that are not scanned.
         *
         * @param request DescribeCountNotScannedImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCountNotScannedImageResponse
         */
        public async Task<DescribeCountNotScannedImageResponse> DescribeCountNotScannedImageWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCountNotScannedImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCountNotScannedImageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of images that are not scanned.
         *
         * @return DescribeCountNotScannedImageResponse
         */
        public DescribeCountNotScannedImageResponse DescribeCountNotScannedImage()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCountNotScannedImageWithOptions(runtime);
        }

        /**
         * @summary Queries the number of images that are not scanned.
         *
         * @return DescribeCountNotScannedImageResponse
         */
        public async Task<DescribeCountNotScannedImageResponse> DescribeCountNotScannedImageAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCountNotScannedImageWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the number of images that are scanned.
         *
         * @param request DescribeCountScannedImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCountScannedImageResponse
         */
        public DescribeCountScannedImageResponse DescribeCountScannedImageWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCountScannedImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCountScannedImageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of images that are scanned.
         *
         * @param request DescribeCountScannedImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCountScannedImageResponse
         */
        public async Task<DescribeCountScannedImageResponse> DescribeCountScannedImageWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCountScannedImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCountScannedImageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of images that are scanned.
         *
         * @return DescribeCountScannedImageResponse
         */
        public DescribeCountScannedImageResponse DescribeCountScannedImage()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCountScannedImageWithOptions(runtime);
        }

        /**
         * @summary Queries the number of images that are scanned.
         *
         * @return DescribeCountScannedImageResponse
         */
        public async Task<DescribeCountScannedImageResponse> DescribeCountScannedImageAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCountScannedImageWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the filter conditions that are used to search for assets in fuzzy match mode.
         *
         * @param request DescribeCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCriteriaResponse
         */
        public DescribeCriteriaResponse DescribeCriteriaWithOptions(DescribeCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportAutoTag))
            {
                query["SupportAutoTag"] = request.SupportAutoTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the filter conditions that are used to search for assets in fuzzy match mode.
         *
         * @param request DescribeCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCriteriaResponse
         */
        public async Task<DescribeCriteriaResponse> DescribeCriteriaWithOptionsAsync(DescribeCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SupportAutoTag))
            {
                query["SupportAutoTag"] = request.SupportAutoTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the filter conditions that are used to search for assets in fuzzy match mode.
         *
         * @param request DescribeCriteriaRequest
         * @return DescribeCriteriaResponse
         */
        public DescribeCriteriaResponse DescribeCriteria(DescribeCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the filter conditions that are used to search for assets in fuzzy match mode.
         *
         * @param request DescribeCriteriaRequest
         * @return DescribeCriteriaResponse
         */
        public async Task<DescribeCriteriaResponse> DescribeCriteriaAsync(DescribeCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the list of servers on which the custom defense rule against brute-force attacks takes effect.
         *
         * @param request DescribeCustomBlockInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCustomBlockInstancesResponse
         */
        public DescribeCustomBlockInstancesResponse DescribeCustomBlockInstancesWithOptions(DescribeCustomBlockInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomBlockInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomBlockInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the list of servers on which the custom defense rule against brute-force attacks takes effect.
         *
         * @param request DescribeCustomBlockInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCustomBlockInstancesResponse
         */
        public async Task<DescribeCustomBlockInstancesResponse> DescribeCustomBlockInstancesWithOptionsAsync(DescribeCustomBlockInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomBlockInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomBlockInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the list of servers on which the custom defense rule against brute-force attacks takes effect.
         *
         * @param request DescribeCustomBlockInstancesRequest
         * @return DescribeCustomBlockInstancesResponse
         */
        public DescribeCustomBlockInstancesResponse DescribeCustomBlockInstances(DescribeCustomBlockInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCustomBlockInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the list of servers on which the custom defense rule against brute-force attacks takes effect.
         *
         * @param request DescribeCustomBlockInstancesRequest
         * @return DescribeCustomBlockInstancesResponse
         */
        public async Task<DescribeCustomBlockInstancesResponse> DescribeCustomBlockInstancesAsync(DescribeCustomBlockInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCustomBlockInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the defense rules against brute-force attacks that are applied to one or more servers.
         *
         * @param request DescribeCustomBlockRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCustomBlockRecordsResponse
         */
        public DescribeCustomBlockRecordsResponse DescribeCustomBlockRecordsWithOptions(DescribeCustomBlockRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomBlockRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomBlockRecordsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the defense rules against brute-force attacks that are applied to one or more servers.
         *
         * @param request DescribeCustomBlockRecordsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCustomBlockRecordsResponse
         */
        public async Task<DescribeCustomBlockRecordsResponse> DescribeCustomBlockRecordsWithOptionsAsync(DescribeCustomBlockRecordsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCustomBlockRecords",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCustomBlockRecordsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the defense rules against brute-force attacks that are applied to one or more servers.
         *
         * @param request DescribeCustomBlockRecordsRequest
         * @return DescribeCustomBlockRecordsResponse
         */
        public DescribeCustomBlockRecordsResponse DescribeCustomBlockRecords(DescribeCustomBlockRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCustomBlockRecordsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the defense rules against brute-force attacks that are applied to one or more servers.
         *
         * @param request DescribeCustomBlockRecordsRequest
         * @return DescribeCustomBlockRecordsResponse
         */
        public async Task<DescribeCustomBlockRecordsResponse> DescribeCustomBlockRecordsAsync(DescribeCustomBlockRecordsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCustomBlockRecordsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries periodic scan tasks. The tasks include image scan tasks, urgent vulnerability scan tasks, and virus scan tasks.
         *
         * @param request DescribeCycleTaskListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCycleTaskListResponse
         */
        public DescribeCycleTaskListResponse DescribeCycleTaskListWithOptions(DescribeCycleTaskListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCycleTaskList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCycleTaskListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries periodic scan tasks. The tasks include image scan tasks, urgent vulnerability scan tasks, and virus scan tasks.
         *
         * @param request DescribeCycleTaskListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeCycleTaskListResponse
         */
        public async Task<DescribeCycleTaskListResponse> DescribeCycleTaskListWithOptionsAsync(DescribeCycleTaskListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeCycleTaskList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeCycleTaskListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries periodic scan tasks. The tasks include image scan tasks, urgent vulnerability scan tasks, and virus scan tasks.
         *
         * @param request DescribeCycleTaskListRequest
         * @return DescribeCycleTaskListResponse
         */
        public DescribeCycleTaskListResponse DescribeCycleTaskList(DescribeCycleTaskListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeCycleTaskListWithOptions(request, runtime);
        }

        /**
         * @summary Queries periodic scan tasks. The tasks include image scan tasks, urgent vulnerability scan tasks, and virus scan tasks.
         *
         * @param request DescribeCycleTaskListRequest
         * @return DescribeCycleTaskListResponse
         */
        public async Task<DescribeCycleTaskListResponse> DescribeCycleTaskListAsync(DescribeCycleTaskListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeCycleTaskListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the default installation version of the proxy that is used in hybrid-cloud scenarios.
         *
         * @param request DescribeDefaultProxyInstallVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDefaultProxyInstallVersionResponse
         */
        public DescribeDefaultProxyInstallVersionResponse DescribeDefaultProxyInstallVersionWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDefaultProxyInstallVersion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDefaultProxyInstallVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the default installation version of the proxy that is used in hybrid-cloud scenarios.
         *
         * @param request DescribeDefaultProxyInstallVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDefaultProxyInstallVersionResponse
         */
        public async Task<DescribeDefaultProxyInstallVersionResponse> DescribeDefaultProxyInstallVersionWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDefaultProxyInstallVersion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDefaultProxyInstallVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the default installation version of the proxy that is used in hybrid-cloud scenarios.
         *
         * @return DescribeDefaultProxyInstallVersionResponse
         */
        public DescribeDefaultProxyInstallVersionResponse DescribeDefaultProxyInstallVersion()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDefaultProxyInstallVersionWithOptions(runtime);
        }

        /**
         * @summary Queries the default installation version of the proxy that is used in hybrid-cloud scenarios.
         *
         * @return DescribeDefaultProxyInstallVersionResponse
         */
        public async Task<DescribeDefaultProxyInstallVersionResponse> DescribeDefaultProxyInstallVersionAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDefaultProxyInstallVersionWithOptionsAsync(runtime);
        }

        /**
         * @summary Obtains DingTalk notifications.
         *
         * @param request DescribeDingTalkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDingTalkResponse
         */
        public DescribeDingTalkResponse DescribeDingTalkWithOptions(DescribeDingTalkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleActionName))
            {
                query["RuleActionName"] = request.RuleActionName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDingTalk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDingTalkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains DingTalk notifications.
         *
         * @param request DescribeDingTalkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDingTalkResponse
         */
        public async Task<DescribeDingTalkResponse> DescribeDingTalkWithOptionsAsync(DescribeDingTalkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleActionName))
            {
                query["RuleActionName"] = request.RuleActionName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDingTalk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDingTalkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains DingTalk notifications.
         *
         * @param request DescribeDingTalkRequest
         * @return DescribeDingTalkResponse
         */
        public DescribeDingTalkResponse DescribeDingTalk(DescribeDingTalkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDingTalkWithOptions(request, runtime);
        }

        /**
         * @summary Obtains DingTalk notifications.
         *
         * @param request DescribeDingTalkRequest
         * @return DescribeDingTalkResponse
         */
        public async Task<DescribeDingTalkResponse> DescribeDingTalkAsync(DescribeDingTalkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDingTalkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainCountResponse
         */
        public DescribeDomainCountResponse DescribeDomainCountWithOptions(DescribeDomainCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainCountResponse
         */
        public async Task<DescribeDomainCountResponse> DescribeDomainCountWithOptionsAsync(DescribeDomainCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainCountRequest
         * @return DescribeDomainCountResponse
         */
        public DescribeDomainCountResponse DescribeDomainCount(DescribeDomainCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDomainCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the number of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainCountRequest
         * @return DescribeDomainCountResponse
         */
        public async Task<DescribeDomainCountResponse> DescribeDomainCountAsync(DescribeDomainCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDomainCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainDetailResponse
         */
        public DescribeDomainDetailResponse DescribeDomainDetailWithOptions(DescribeDomainDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                query["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainDetailResponse
         */
        public async Task<DescribeDomainDetailResponse> DescribeDomainDetailWithOptionsAsync(DescribeDomainDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainName))
            {
                query["DomainName"] = request.DomainName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainDetailRequest
         * @return DescribeDomainDetailResponse
         */
        public DescribeDomainDetailResponse DescribeDomainDetail(DescribeDomainDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDomainDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainDetailRequest
         * @return DescribeDomainDetailResponse
         */
        public async Task<DescribeDomainDetailResponse> DescribeDomainDetailAsync(DescribeDomainDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDomainDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainListResponse
         */
        public DescribeDomainListResponse DescribeDomainListWithOptions(DescribeDomainListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainType))
            {
                query["DomainType"] = request.DomainType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyDomain))
            {
                query["FuzzyDomain"] = request.FuzzyDomain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDomainListResponse
         */
        public async Task<DescribeDomainListResponse> DescribeDomainListWithOptionsAsync(DescribeDomainListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainType))
            {
                query["DomainType"] = request.DomainType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyDomain))
            {
                query["FuzzyDomain"] = request.FuzzyDomain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDomainList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDomainListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainListRequest
         * @return DescribeDomainListResponse
         */
        public DescribeDomainListResponse DescribeDomainList(DescribeDomainListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDomainListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the domain assets within your Alibaba Cloud account.
         *
         * @param request DescribeDomainListRequest
         * @return DescribeDomainListResponse
         */
        public async Task<DescribeDomainListResponse> DescribeDomainListAsync(DescribeDomainListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDomainListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whether Security Center is authorized to scan for urgent vulnerabilities.
         *
         * @param request DescribeEmgUserAgreementRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEmgUserAgreementResponse
         */
        public DescribeEmgUserAgreementResponse DescribeEmgUserAgreementWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEmgUserAgreement",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEmgUserAgreementResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether Security Center is authorized to scan for urgent vulnerabilities.
         *
         * @param request DescribeEmgUserAgreementRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEmgUserAgreementResponse
         */
        public async Task<DescribeEmgUserAgreementResponse> DescribeEmgUserAgreementWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEmgUserAgreement",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEmgUserAgreementResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether Security Center is authorized to scan for urgent vulnerabilities.
         *
         * @return DescribeEmgUserAgreementResponse
         */
        public DescribeEmgUserAgreementResponse DescribeEmgUserAgreement()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEmgUserAgreementWithOptions(runtime);
        }

        /**
         * @summary Queries whether Security Center is authorized to scan for urgent vulnerabilities.
         *
         * @return DescribeEmgUserAgreementResponse
         */
        public async Task<DescribeEmgUserAgreementResponse> DescribeEmgUserAgreementAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEmgUserAgreementWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details of urgent vulnerabilities.
         *
         * @param request DescribeEmgVulItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEmgVulItemResponse
         */
        public DescribeEmgVulItemResponse DescribeEmgVulItemWithOptions(DescribeEmgVulItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulName))
            {
                query["VulName"] = request.VulName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEmgVulItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEmgVulItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of urgent vulnerabilities.
         *
         * @param request DescribeEmgVulItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEmgVulItemResponse
         */
        public async Task<DescribeEmgVulItemResponse> DescribeEmgVulItemWithOptionsAsync(DescribeEmgVulItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskStatus))
            {
                query["RiskStatus"] = request.RiskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulName))
            {
                query["VulName"] = request.VulName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEmgVulItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEmgVulItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of urgent vulnerabilities.
         *
         * @param request DescribeEmgVulItemRequest
         * @return DescribeEmgVulItemResponse
         */
        public DescribeEmgVulItemResponse DescribeEmgVulItem(DescribeEmgVulItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEmgVulItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of urgent vulnerabilities.
         *
         * @param request DescribeEmgVulItemRequest
         * @return DescribeEmgVulItemResponse
         */
        public async Task<DescribeEmgVulItemResponse> DescribeEmgVulItemAsync(DescribeEmgVulItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEmgVulItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of alert events by risk level.
         *
         * @param request DescribeEventLevelCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEventLevelCountResponse
         */
        public DescribeEventLevelCountResponse DescribeEventLevelCountWithOptions(DescribeEventLevelCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerIds))
            {
                query["ContainerIds"] = request.ContainerIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEventLevelCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEventLevelCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of alert events by risk level.
         *
         * @param request DescribeEventLevelCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEventLevelCountResponse
         */
        public async Task<DescribeEventLevelCountResponse> DescribeEventLevelCountWithOptionsAsync(DescribeEventLevelCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerIds))
            {
                query["ContainerIds"] = request.ContainerIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEventLevelCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEventLevelCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of alert events by risk level.
         *
         * @param request DescribeEventLevelCountRequest
         * @return DescribeEventLevelCountResponse
         */
        public DescribeEventLevelCountResponse DescribeEventLevelCount(DescribeEventLevelCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEventLevelCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of alert events by risk level.
         *
         * @param request DescribeEventLevelCountRequest
         * @return DescribeEventLevelCountResponse
         */
        public async Task<DescribeEventLevelCountResponse> DescribeEventLevelCountAsync(DescribeEventLevelCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEventLevelCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the platforms that are supported by the feature of container threat detection.
         *
         * @param request DescribeEventOnStageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEventOnStageResponse
         */
        public DescribeEventOnStageResponse DescribeEventOnStageWithOptions(DescribeEventOnStageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEventOnStage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEventOnStageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the platforms that are supported by the feature of container threat detection.
         *
         * @param request DescribeEventOnStageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEventOnStageResponse
         */
        public async Task<DescribeEventOnStageResponse> DescribeEventOnStageWithOptionsAsync(DescribeEventOnStageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEventOnStage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEventOnStageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the platforms that are supported by the feature of container threat detection.
         *
         * @param request DescribeEventOnStageRequest
         * @return DescribeEventOnStageResponse
         */
        public DescribeEventOnStageResponse DescribeEventOnStage(DescribeEventOnStageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEventOnStageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the platforms that are supported by the feature of container threat detection.
         *
         * @param request DescribeEventOnStageRequest
         * @return DescribeEventOnStageResponse
         */
        public async Task<DescribeEventOnStageResponse> DescribeEventOnStageAsync(DescribeEventOnStageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEventOnStageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the directories that are excluded from anti-ransomware.
         *
         * @param request DescribeExcludeSystemPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExcludeSystemPathResponse
         */
        public DescribeExcludeSystemPathResponse DescribeExcludeSystemPathWithOptions(DescribeExcludeSystemPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExcludeSystemPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExcludeSystemPathResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the directories that are excluded from anti-ransomware.
         *
         * @param request DescribeExcludeSystemPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExcludeSystemPathResponse
         */
        public async Task<DescribeExcludeSystemPathResponse> DescribeExcludeSystemPathWithOptionsAsync(DescribeExcludeSystemPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExcludeSystemPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExcludeSystemPathResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the directories that are excluded from anti-ransomware.
         *
         * @param request DescribeExcludeSystemPathRequest
         * @return DescribeExcludeSystemPathResponse
         */
        public DescribeExcludeSystemPathResponse DescribeExcludeSystemPath(DescribeExcludeSystemPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExcludeSystemPathWithOptions(request, runtime);
        }

        /**
         * @summary Queries the directories that are excluded from anti-ransomware.
         *
         * @param request DescribeExcludeSystemPathRequest
         * @return DescribeExcludeSystemPathResponse
         */
        public async Task<DescribeExcludeSystemPathResponse> DescribeExcludeSystemPathAsync(DescribeExcludeSystemPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExcludeSystemPathWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the progress of a task that exports your assets to an Excel file.
         *
         * @param request DescribeExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExportInfoResponse
         */
        public DescribeExportInfoResponse DescribeExportInfoWithOptions(DescribeExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a task that exports your assets to an Excel file.
         *
         * @param request DescribeExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExportInfoResponse
         */
        public async Task<DescribeExportInfoResponse> DescribeExportInfoWithOptionsAsync(DescribeExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a task that exports your assets to an Excel file.
         *
         * @param request DescribeExportInfoRequest
         * @return DescribeExportInfoResponse
         */
        public DescribeExportInfoResponse DescribeExportInfo(DescribeExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the progress of a task that exports your assets to an Excel file.
         *
         * @param request DescribeExportInfoRequest
         * @return DescribeExportInfoResponse
         */
        public async Task<DescribeExportInfoResponse> DescribeExportInfoAsync(DescribeExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the weak password-related risks of a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedCheckWarningRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedCheckWarningResponse
         */
        public DescribeExposedCheckWarningResponse DescribeExposedCheckWarningWithOptions(DescribeExposedCheckWarningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedCheckWarning",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedCheckWarningResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the weak password-related risks of a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedCheckWarningRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedCheckWarningResponse
         */
        public async Task<DescribeExposedCheckWarningResponse> DescribeExposedCheckWarningWithOptionsAsync(DescribeExposedCheckWarningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedCheckWarning",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedCheckWarningResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the weak password-related risks of a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedCheckWarningRequest
         * @return DescribeExposedCheckWarningResponse
         */
        public DescribeExposedCheckWarningResponse DescribeExposedCheckWarning(DescribeExposedCheckWarningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedCheckWarningWithOptions(request, runtime);
        }

        /**
         * @summary Queries the weak password-related risks of a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedCheckWarningRequest
         * @return DescribeExposedCheckWarningResponse
         */
        public async Task<DescribeExposedCheckWarningResponse> DescribeExposedCheckWarningAsync(DescribeExposedCheckWarningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedCheckWarningWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the search conditions that are used to search for exposed assets.
         *
         * @param request DescribeExposedInstanceCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceCriteriaResponse
         */
        public DescribeExposedInstanceCriteriaResponse DescribeExposedInstanceCriteriaWithOptions(DescribeExposedInstanceCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that are used to search for exposed assets.
         *
         * @param request DescribeExposedInstanceCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceCriteriaResponse
         */
        public async Task<DescribeExposedInstanceCriteriaResponse> DescribeExposedInstanceCriteriaWithOptionsAsync(DescribeExposedInstanceCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that are used to search for exposed assets.
         *
         * @param request DescribeExposedInstanceCriteriaRequest
         * @return DescribeExposedInstanceCriteriaResponse
         */
        public DescribeExposedInstanceCriteriaResponse DescribeExposedInstanceCriteria(DescribeExposedInstanceCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedInstanceCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the search conditions that are used to search for exposed assets.
         *
         * @param request DescribeExposedInstanceCriteriaRequest
         * @return DescribeExposedInstanceCriteriaResponse
         */
        public async Task<DescribeExposedInstanceCriteriaResponse> DescribeExposedInstanceCriteriaAsync(DescribeExposedInstanceCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedInstanceCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedInstanceDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceDetailResponse
         */
        public DescribeExposedInstanceDetailResponse DescribeExposedInstanceDetailWithOptions(DescribeExposedInstanceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedInstanceDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceDetailResponse
         */
        public async Task<DescribeExposedInstanceDetailResponse> DescribeExposedInstanceDetailWithOptionsAsync(DescribeExposedInstanceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedInstanceDetailRequest
         * @return DescribeExposedInstanceDetailResponse
         */
        public DescribeExposedInstanceDetailResponse DescribeExposedInstanceDetail(DescribeExposedInstanceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedInstanceDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a specified server that is exposed on the Internet.
         *
         * @param request DescribeExposedInstanceDetailRequest
         * @return DescribeExposedInstanceDetailResponse
         */
        public async Task<DescribeExposedInstanceDetailResponse> DescribeExposedInstanceDetailAsync(DescribeExposedInstanceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedInstanceDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the servers that are exposed on the Internet.
         *
         * @param request DescribeExposedInstanceListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceListResponse
         */
        public DescribeExposedInstanceListResponse DescribeExposedInstanceListWithOptions(DescribeExposedInstanceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposureComponent))
            {
                query["ExposureComponent"] = request.ExposureComponent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposureIp))
            {
                query["ExposureIp"] = request.ExposureIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposurePort))
            {
                query["ExposurePort"] = request.ExposurePort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthStatus))
            {
                query["HealthStatus"] = request.HealthStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulStatus))
            {
                query["VulStatus"] = request.VulStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers that are exposed on the Internet.
         *
         * @param request DescribeExposedInstanceListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedInstanceListResponse
         */
        public async Task<DescribeExposedInstanceListResponse> DescribeExposedInstanceListWithOptionsAsync(DescribeExposedInstanceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposureComponent))
            {
                query["ExposureComponent"] = request.ExposureComponent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposureIp))
            {
                query["ExposureIp"] = request.ExposureIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExposurePort))
            {
                query["ExposurePort"] = request.ExposurePort;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HealthStatus))
            {
                query["HealthStatus"] = request.HealthStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulStatus))
            {
                query["VulStatus"] = request.VulStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedInstanceList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedInstanceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers that are exposed on the Internet.
         *
         * @param request DescribeExposedInstanceListRequest
         * @return DescribeExposedInstanceListResponse
         */
        public DescribeExposedInstanceListResponse DescribeExposedInstanceList(DescribeExposedInstanceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedInstanceListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the servers that are exposed on the Internet.
         *
         * @param request DescribeExposedInstanceListRequest
         * @return DescribeExposedInstanceListResponse
         */
        public async Task<DescribeExposedInstanceListResponse> DescribeExposedInstanceListAsync(DescribeExposedInstanceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedInstanceListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the exposure statistics of the assets on the Internet.
         *
         * @param request DescribeExposedStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedStatisticsResponse
         */
        public DescribeExposedStatisticsResponse DescribeExposedStatisticsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the exposure statistics of the assets on the Internet.
         *
         * @param request DescribeExposedStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedStatisticsResponse
         */
        public async Task<DescribeExposedStatisticsResponse> DescribeExposedStatisticsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the exposure statistics of the assets on the Internet.
         *
         * @return DescribeExposedStatisticsResponse
         */
        public DescribeExposedStatisticsResponse DescribeExposedStatistics()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedStatisticsWithOptions(runtime);
        }

        /**
         * @summary Queries the exposure statistics of the assets on the Internet.
         *
         * @return DescribeExposedStatisticsResponse
         */
        public async Task<DescribeExposedStatisticsResponse> DescribeExposedStatisticsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedStatisticsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the gateway assets, ports, system components, or public IP addresses that are exposed on the Internet.
         *
         * @param request DescribeExposedStatisticsDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedStatisticsDetailResponse
         */
        public DescribeExposedStatisticsDetailResponse DescribeExposedStatisticsDetailWithOptions(DescribeExposedStatisticsDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsType))
            {
                query["StatisticsType"] = request.StatisticsType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsTypeGatewayType))
            {
                query["StatisticsTypeGatewayType"] = request.StatisticsTypeGatewayType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsTypeInstanceValue))
            {
                query["StatisticsTypeInstanceValue"] = request.StatisticsTypeInstanceValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedStatisticsDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedStatisticsDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the gateway assets, ports, system components, or public IP addresses that are exposed on the Internet.
         *
         * @param request DescribeExposedStatisticsDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeExposedStatisticsDetailResponse
         */
        public async Task<DescribeExposedStatisticsDetailResponse> DescribeExposedStatisticsDetailWithOptionsAsync(DescribeExposedStatisticsDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsType))
            {
                query["StatisticsType"] = request.StatisticsType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsTypeGatewayType))
            {
                query["StatisticsTypeGatewayType"] = request.StatisticsTypeGatewayType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsTypeInstanceValue))
            {
                query["StatisticsTypeInstanceValue"] = request.StatisticsTypeInstanceValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeExposedStatisticsDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeExposedStatisticsDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the gateway assets, ports, system components, or public IP addresses that are exposed on the Internet.
         *
         * @param request DescribeExposedStatisticsDetailRequest
         * @return DescribeExposedStatisticsDetailResponse
         */
        public DescribeExposedStatisticsDetailResponse DescribeExposedStatisticsDetail(DescribeExposedStatisticsDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeExposedStatisticsDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the gateway assets, ports, system components, or public IP addresses that are exposed on the Internet.
         *
         * @param request DescribeExposedStatisticsDetailRequest
         * @return DescribeExposedStatisticsDetailResponse
         */
        public async Task<DescribeExposedStatisticsDetailResponse> DescribeExposedStatisticsDetailAsync(DescribeExposedStatisticsDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeExposedStatisticsDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of servers.
         *
         * @param request DescribeFieldStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFieldStatisticsResponse
         */
        public DescribeFieldStatisticsResponse DescribeFieldStatisticsWithOptions(DescribeFieldStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFieldStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFieldStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of servers.
         *
         * @param request DescribeFieldStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFieldStatisticsResponse
         */
        public async Task<DescribeFieldStatisticsResponse> DescribeFieldStatisticsWithOptionsAsync(DescribeFieldStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFieldStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFieldStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of servers.
         *
         * @param request DescribeFieldStatisticsRequest
         * @return DescribeFieldStatisticsResponse
         */
        public DescribeFieldStatisticsResponse DescribeFieldStatistics(DescribeFieldStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeFieldStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of servers.
         *
         * @param request DescribeFieldStatisticsRequest
         * @return DescribeFieldStatisticsResponse
         */
        public async Task<DescribeFieldStatisticsResponse> DescribeFieldStatisticsAsync(DescribeFieldStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeFieldStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of vulnerabilities that are fixed by the pay-as-you-go vulnerability fixing feature.
         *
         * @param request DescribeFixUsedCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFixUsedCountResponse
         */
        public DescribeFixUsedCountResponse DescribeFixUsedCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFixUsedCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFixUsedCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of vulnerabilities that are fixed by the pay-as-you-go vulnerability fixing feature.
         *
         * @param request DescribeFixUsedCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFixUsedCountResponse
         */
        public async Task<DescribeFixUsedCountResponse> DescribeFixUsedCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFixUsedCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFixUsedCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of vulnerabilities that are fixed by the pay-as-you-go vulnerability fixing feature.
         *
         * @return DescribeFixUsedCountResponse
         */
        public DescribeFixUsedCountResponse DescribeFixUsedCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeFixUsedCountWithOptions(runtime);
        }

        /**
         * @summary Queries the number of vulnerabilities that are fixed by the pay-as-you-go vulnerability fixing feature.
         *
         * @return DescribeFixUsedCountResponse
         */
        public async Task<DescribeFixUsedCountResponse> DescribeFixUsedCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeFixUsedCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the pre-patches that are required to fix a specified Windows system vulnerability.
         *
         * @param request DescribeFrontVulPatchListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFrontVulPatchListResponse
         */
        public DescribeFrontVulPatchListResponse DescribeFrontVulPatchListWithOptions(DescribeFrontVulPatchListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFrontVulPatchList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFrontVulPatchListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the pre-patches that are required to fix a specified Windows system vulnerability.
         *
         * @param request DescribeFrontVulPatchListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeFrontVulPatchListResponse
         */
        public async Task<DescribeFrontVulPatchListResponse> DescribeFrontVulPatchListWithOptionsAsync(DescribeFrontVulPatchListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeFrontVulPatchList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeFrontVulPatchListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the pre-patches that are required to fix a specified Windows system vulnerability.
         *
         * @param request DescribeFrontVulPatchListRequest
         * @return DescribeFrontVulPatchListResponse
         */
        public DescribeFrontVulPatchListResponse DescribeFrontVulPatchList(DescribeFrontVulPatchListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeFrontVulPatchListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the pre-patches that are required to fix a specified Windows system vulnerability.
         *
         * @param request DescribeFrontVulPatchListRequest
         * @return DescribeFrontVulPatchListResponse
         */
        public async Task<DescribeFrontVulPatchListResponse> DescribeFrontVulPatchListAsync(DescribeFrontVulPatchListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeFrontVulPatchListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the structure of a group.
         *
         * @param request DescribeGroupStructRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupStructResponse
         */
        public DescribeGroupStructResponse DescribeGroupStructWithOptions(DescribeGroupStructRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupStruct",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupStructResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the structure of a group.
         *
         * @param request DescribeGroupStructRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupStructResponse
         */
        public async Task<DescribeGroupStructResponse> DescribeGroupStructWithOptionsAsync(DescribeGroupStructRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupStruct",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupStructResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the structure of a group.
         *
         * @param request DescribeGroupStructRequest
         * @return DescribeGroupStructResponse
         */
        public DescribeGroupStructResponse DescribeGroupStruct(DescribeGroupStructRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupStructWithOptions(request, runtime);
        }

        /**
         * @summary Queries the structure of a group.
         *
         * @param request DescribeGroupStructRequest
         * @return DescribeGroupStructResponse
         */
        public async Task<DescribeGroupStructResponse> DescribeGroupStructAsync(DescribeGroupStructRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupStructWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries containers by group type.
         *
         * @param request DescribeGroupedContainerInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedContainerInstancesResponse
         */
        public DescribeGroupedContainerInstancesResponse DescribeGroupedContainerInstancesWithOptions(DescribeGroupedContainerInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedContainerInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedContainerInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries containers by group type.
         *
         * @param request DescribeGroupedContainerInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedContainerInstancesResponse
         */
        public async Task<DescribeGroupedContainerInstancesResponse> DescribeGroupedContainerInstancesWithOptionsAsync(DescribeGroupedContainerInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedContainerInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedContainerInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries containers by group type.
         *
         * @param request DescribeGroupedContainerInstancesRequest
         * @return DescribeGroupedContainerInstancesResponse
         */
        public DescribeGroupedContainerInstancesResponse DescribeGroupedContainerInstances(DescribeGroupedContainerInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupedContainerInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries containers by group type.
         *
         * @param request DescribeGroupedContainerInstancesRequest
         * @return DescribeGroupedContainerInstancesResponse
         */
        public async Task<DescribeGroupedContainerInstancesResponse> DescribeGroupedContainerInstancesAsync(DescribeGroupedContainerInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupedContainerInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistical information about assets based on a specified filter condition.
         *
         * @param request DescribeGroupedInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedInstancesResponse
         */
        public DescribeGroupedInstancesResponse DescribeGroupedInstancesWithOptions(DescribeGroupedInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoPage))
            {
                query["NoPage"] = request.NoPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SaleVersionCheckCode))
            {
                query["SaleVersionCheckCode"] = request.SaleVersionCheckCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistical information about assets based on a specified filter condition.
         *
         * @param request DescribeGroupedInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedInstancesResponse
         */
        public async Task<DescribeGroupedInstancesResponse> DescribeGroupedInstancesWithOptionsAsync(DescribeGroupedInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupField))
            {
                query["GroupField"] = request.GroupField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoPage))
            {
                query["NoPage"] = request.NoPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SaleVersionCheckCode))
            {
                query["SaleVersionCheckCode"] = request.SaleVersionCheckCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistical information about assets based on a specified filter condition.
         *
         * @param request DescribeGroupedInstancesRequest
         * @return DescribeGroupedInstancesResponse
         */
        public DescribeGroupedInstancesResponse DescribeGroupedInstances(DescribeGroupedInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupedInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistical information about assets based on a specified filter condition.
         *
         * @param request DescribeGroupedInstancesRequest
         * @return DescribeGroupedInstancesResponse
         */
        public async Task<DescribeGroupedInstancesResponse> DescribeGroupedInstancesAsync(DescribeGroupedInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupedInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of malicious image samples.
         *
         * @param request DescribeGroupedMaliciousFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedMaliciousFilesResponse
         */
        public DescribeGroupedMaliciousFilesResponse DescribeGroupedMaliciousFilesWithOptions(DescribeGroupedMaliciousFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyMaliciousName))
            {
                query["FuzzyMaliciousName"] = request.FuzzyMaliciousName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedMaliciousFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedMaliciousFilesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of malicious image samples.
         *
         * @param request DescribeGroupedMaliciousFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedMaliciousFilesResponse
         */
        public async Task<DescribeGroupedMaliciousFilesResponse> DescribeGroupedMaliciousFilesWithOptionsAsync(DescribeGroupedMaliciousFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyMaliciousName))
            {
                query["FuzzyMaliciousName"] = request.FuzzyMaliciousName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedMaliciousFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedMaliciousFilesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of malicious image samples.
         *
         * @param request DescribeGroupedMaliciousFilesRequest
         * @return DescribeGroupedMaliciousFilesResponse
         */
        public DescribeGroupedMaliciousFilesResponse DescribeGroupedMaliciousFiles(DescribeGroupedMaliciousFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupedMaliciousFilesWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of malicious image samples.
         *
         * @param request DescribeGroupedMaliciousFilesRequest
         * @return DescribeGroupedMaliciousFilesResponse
         */
        public async Task<DescribeGroupedMaliciousFilesResponse> DescribeGroupedMaliciousFilesAsync(DescribeGroupedMaliciousFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupedMaliciousFilesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of asset tags.
         *
         * @param request DescribeGroupedTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedTagsResponse
         */
        public DescribeGroupedTagsResponse DescribeGroupedTagsWithOptions(DescribeGroupedTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of asset tags.
         *
         * @param request DescribeGroupedTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedTagsResponse
         */
        public async Task<DescribeGroupedTagsResponse> DescribeGroupedTagsWithOptionsAsync(DescribeGroupedTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of asset tags.
         *
         * @param request DescribeGroupedTagsRequest
         * @return DescribeGroupedTagsResponse
         */
        public DescribeGroupedTagsResponse DescribeGroupedTags(DescribeGroupedTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupedTagsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of asset tags.
         *
         * @param request DescribeGroupedTagsRequest
         * @return DescribeGroupedTagsResponse
         */
        public async Task<DescribeGroupedTagsResponse> DescribeGroupedTagsAsync(DescribeGroupedTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupedTagsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries vulnerabilities by group.
         *
         * @param request DescribeGroupedVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedVulResponse
         */
        public DescribeGroupedVulResponse DescribeGroupedVulWithOptions(DescribeGroupedVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedVulResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries vulnerabilities by group.
         *
         * @param request DescribeGroupedVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeGroupedVulResponse
         */
        public async Task<DescribeGroupedVulResponse> DescribeGroupedVulWithOptionsAsync(DescribeGroupedVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeGroupedVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeGroupedVulResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries vulnerabilities by group.
         *
         * @param request DescribeGroupedVulRequest
         * @return DescribeGroupedVulResponse
         */
        public DescribeGroupedVulResponse DescribeGroupedVul(DescribeGroupedVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeGroupedVulWithOptions(request, runtime);
        }

        /**
         * @summary Queries vulnerabilities by group.
         *
         * @param request DescribeGroupedVulRequest
         * @return DescribeGroupedVulResponse
         */
        public async Task<DescribeGroupedVulResponse> DescribeGroupedVulAsync(DescribeGroupedVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeGroupedVulWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about baseline export, including the name of the file to which baselines are exported and the download URL for the file.
         *
         * @param request DescribeHcExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHcExportInfoResponse
         */
        public DescribeHcExportInfoResponse DescribeHcExportInfoWithOptions(DescribeHcExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHcExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHcExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about baseline export, including the name of the file to which baselines are exported and the download URL for the file.
         *
         * @param request DescribeHcExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHcExportInfoResponse
         */
        public async Task<DescribeHcExportInfoResponse> DescribeHcExportInfoWithOptionsAsync(DescribeHcExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHcExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHcExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about baseline export, including the name of the file to which baselines are exported and the download URL for the file.
         *
         * @param request DescribeHcExportInfoRequest
         * @return DescribeHcExportInfoResponse
         */
        public DescribeHcExportInfoResponse DescribeHcExportInfo(DescribeHcExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeHcExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about baseline export, including the name of the file to which baselines are exported and the download URL for the file.
         *
         * @param request DescribeHcExportInfoRequest
         * @return DescribeHcExportInfoResponse
         */
        public async Task<DescribeHcExportInfoResponse> DescribeHcExportInfoAsync(DescribeHcExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeHcExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries statistics on the quota of honeypots.
         *
         * @param request DescribeHoneyPotAuthRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHoneyPotAuthResponse
         */
        public DescribeHoneyPotAuthResponse DescribeHoneyPotAuthWithOptions(DescribeHoneyPotAuthRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHoneyPotAuth",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHoneyPotAuthResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries statistics on the quota of honeypots.
         *
         * @param request DescribeHoneyPotAuthRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHoneyPotAuthResponse
         */
        public async Task<DescribeHoneyPotAuthResponse> DescribeHoneyPotAuthWithOptionsAsync(DescribeHoneyPotAuthRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHoneyPotAuth",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHoneyPotAuthResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries statistics on the quota of honeypots.
         *
         * @param request DescribeHoneyPotAuthRequest
         * @return DescribeHoneyPotAuthResponse
         */
        public DescribeHoneyPotAuthResponse DescribeHoneyPotAuth(DescribeHoneyPotAuthRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeHoneyPotAuthWithOptions(request, runtime);
        }

        /**
         * @summary Queries statistics on the quota of honeypots.
         *
         * @param request DescribeHoneyPotAuthRequest
         * @return DescribeHoneyPotAuthResponse
         */
        public async Task<DescribeHoneyPotAuthResponse> DescribeHoneyPotAuthAsync(DescribeHoneyPotAuthRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeHoneyPotAuthWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the top five virtual private clouds (VPCs) or assets for which alerts are most frequently generated.
         *
         * @param request DescribeHoneyPotSuspStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHoneyPotSuspStatisticsResponse
         */
        public DescribeHoneyPotSuspStatisticsResponse DescribeHoneyPotSuspStatisticsWithOptions(DescribeHoneyPotSuspStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsDays))
            {
                query["StatisticsDays"] = request.StatisticsDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsKeyType))
            {
                query["StatisticsKeyType"] = request.StatisticsKeyType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHoneyPotSuspStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHoneyPotSuspStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the top five virtual private clouds (VPCs) or assets for which alerts are most frequently generated.
         *
         * @param request DescribeHoneyPotSuspStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeHoneyPotSuspStatisticsResponse
         */
        public async Task<DescribeHoneyPotSuspStatisticsResponse> DescribeHoneyPotSuspStatisticsWithOptionsAsync(DescribeHoneyPotSuspStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsDays))
            {
                query["StatisticsDays"] = request.StatisticsDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsKeyType))
            {
                query["StatisticsKeyType"] = request.StatisticsKeyType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeHoneyPotSuspStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeHoneyPotSuspStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the top five virtual private clouds (VPCs) or assets for which alerts are most frequently generated.
         *
         * @param request DescribeHoneyPotSuspStatisticsRequest
         * @return DescribeHoneyPotSuspStatisticsResponse
         */
        public DescribeHoneyPotSuspStatisticsResponse DescribeHoneyPotSuspStatistics(DescribeHoneyPotSuspStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeHoneyPotSuspStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the top five virtual private clouds (VPCs) or assets for which alerts are most frequently generated.
         *
         * @param request DescribeHoneyPotSuspStatisticsRequest
         * @return DescribeHoneyPotSuspStatisticsResponse
         */
        public async Task<DescribeHoneyPotSuspStatisticsResponse> DescribeHoneyPotSuspStatisticsAsync(DescribeHoneyPotSuspStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeHoneyPotSuspStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries an image digest.
         *
         * @param request DescribeImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageResponse
         */
        public DescribeImageResponse DescribeImageWithOptions(DescribeImageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageInstanceId))
            {
                query["ImageInstanceId"] = request.ImageInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageRegionId))
            {
                query["ImageRegionId"] = request.ImageRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageRepoId))
            {
                query["ImageRepoId"] = request.ImageRepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries an image digest.
         *
         * @param request DescribeImageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageResponse
         */
        public async Task<DescribeImageResponse> DescribeImageWithOptionsAsync(DescribeImageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageInstanceId))
            {
                query["ImageInstanceId"] = request.ImageInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageRegionId))
            {
                query["ImageRegionId"] = request.ImageRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageRepoId))
            {
                query["ImageRepoId"] = request.ImageRepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries an image digest.
         *
         * @param request DescribeImageRequest
         * @return DescribeImageResponse
         */
        public DescribeImageResponse DescribeImage(DescribeImageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageWithOptions(request, runtime);
        }

        /**
         * @summary Queries an image digest.
         *
         * @param request DescribeImageRequest
         * @return DescribeImageResponse
         */
        public async Task<DescribeImageResponse> DescribeImageAsync(DescribeImageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the security scan results of images.
         *
         * @param request DescribeImageBaselineCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineCheckResultResponse
         */
        public DescribeImageBaselineCheckResultResponse DescribeImageBaselineCheckResultWithOptions(DescribeImageBaselineCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineCheckResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the security scan results of images.
         *
         * @param request DescribeImageBaselineCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineCheckResultResponse
         */
        public async Task<DescribeImageBaselineCheckResultResponse> DescribeImageBaselineCheckResultWithOptionsAsync(DescribeImageBaselineCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineCheckResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the security scan results of images.
         *
         * @param request DescribeImageBaselineCheckResultRequest
         * @return DescribeImageBaselineCheckResultResponse
         */
        public DescribeImageBaselineCheckResultResponse DescribeImageBaselineCheckResult(DescribeImageBaselineCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageBaselineCheckResultWithOptions(request, runtime);
        }

        /**
         * @summary Queries the security scan results of images.
         *
         * @param request DescribeImageBaselineCheckResultRequest
         * @return DescribeImageBaselineCheckResultResponse
         */
        public async Task<DescribeImageBaselineCheckResultResponse> DescribeImageBaselineCheckResultAsync(DescribeImageBaselineCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageBaselineCheckResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the check results of image baselines that are included in an image scan task.
         *
         * @param request DescribeImageBaselineCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineCheckSummaryResponse
         */
        public DescribeImageBaselineCheckSummaryResponse DescribeImageBaselineCheckSummaryWithOptions(DescribeImageBaselineCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineCheckSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the check results of image baselines that are included in an image scan task.
         *
         * @param request DescribeImageBaselineCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineCheckSummaryResponse
         */
        public async Task<DescribeImageBaselineCheckSummaryResponse> DescribeImageBaselineCheckSummaryWithOptionsAsync(DescribeImageBaselineCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineCheckSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the check results of image baselines that are included in an image scan task.
         *
         * @param request DescribeImageBaselineCheckSummaryRequest
         * @return DescribeImageBaselineCheckSummaryResponse
         */
        public DescribeImageBaselineCheckSummaryResponse DescribeImageBaselineCheckSummary(DescribeImageBaselineCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageBaselineCheckSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the check results of image baselines that are included in an image scan task.
         *
         * @param request DescribeImageBaselineCheckSummaryRequest
         * @return DescribeImageBaselineCheckSummaryResponse
         */
        public async Task<DescribeImageBaselineCheckSummaryResponse> DescribeImageBaselineCheckSummaryAsync(DescribeImageBaselineCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageBaselineCheckSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about the baseline check result for an image.
         *
         * @param request DescribeImageBaselineDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineDetailResponse
         */
        public DescribeImageBaselineDetailResponse DescribeImageBaselineDetailWithOptions(DescribeImageBaselineDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemKey))
            {
                query["BaselineItemKey"] = request.BaselineItemKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the baseline check result for an image.
         *
         * @param request DescribeImageBaselineDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineDetailResponse
         */
        public async Task<DescribeImageBaselineDetailResponse> DescribeImageBaselineDetailWithOptionsAsync(DescribeImageBaselineDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemKey))
            {
                query["BaselineItemKey"] = request.BaselineItemKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the baseline check result for an image.
         *
         * @param request DescribeImageBaselineDetailRequest
         * @return DescribeImageBaselineDetailResponse
         */
        public DescribeImageBaselineDetailResponse DescribeImageBaselineDetail(DescribeImageBaselineDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageBaselineDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about the baseline check result for an image.
         *
         * @param request DescribeImageBaselineDetailRequest
         * @return DescribeImageBaselineDetailResponse
         */
        public async Task<DescribeImageBaselineDetailResponse> DescribeImageBaselineDetailAsync(DescribeImageBaselineDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageBaselineDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries baseline check results based on images.
         *
         * @param request DescribeImageBaselineItemListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineItemListResponse
         */
        public DescribeImageBaselineItemListResponse DescribeImageBaselineItemListWithOptions(DescribeImageBaselineItemListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineClassKey))
            {
                query["BaselineClassKey"] = request.BaselineClassKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineNameKey))
            {
                query["BaselineNameKey"] = request.BaselineNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineItemList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineItemListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries baseline check results based on images.
         *
         * @param request DescribeImageBaselineItemListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineItemListResponse
         */
        public async Task<DescribeImageBaselineItemListResponse> DescribeImageBaselineItemListWithOptionsAsync(DescribeImageBaselineItemListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineClassKey))
            {
                query["BaselineClassKey"] = request.BaselineClassKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineNameKey))
            {
                query["BaselineNameKey"] = request.BaselineNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineItemList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineItemListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries baseline check results based on images.
         *
         * @param request DescribeImageBaselineItemListRequest
         * @return DescribeImageBaselineItemListResponse
         */
        public DescribeImageBaselineItemListResponse DescribeImageBaselineItemList(DescribeImageBaselineItemListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageBaselineItemListWithOptions(request, runtime);
        }

        /**
         * @summary Queries baseline check results based on images.
         *
         * @param request DescribeImageBaselineItemListRequest
         * @return DescribeImageBaselineItemListResponse
         */
        public async Task<DescribeImageBaselineItemListResponse> DescribeImageBaselineItemListAsync(DescribeImageBaselineItemListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageBaselineItemListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a baseline check policy for images.
         *
         * @param request DescribeImageBaselineStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineStrategyResponse
         */
        public DescribeImageBaselineStrategyResponse DescribeImageBaselineStrategyWithOptions(DescribeImageBaselineStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a baseline check policy for images.
         *
         * @param request DescribeImageBaselineStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageBaselineStrategyResponse
         */
        public async Task<DescribeImageBaselineStrategyResponse> DescribeImageBaselineStrategyWithOptionsAsync(DescribeImageBaselineStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageBaselineStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageBaselineStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a baseline check policy for images.
         *
         * @param request DescribeImageBaselineStrategyRequest
         * @return DescribeImageBaselineStrategyResponse
         */
        public DescribeImageBaselineStrategyResponse DescribeImageBaselineStrategy(DescribeImageBaselineStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageBaselineStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a baseline check policy for images.
         *
         * @param request DescribeImageBaselineStrategyRequest
         * @return DescribeImageBaselineStrategyResponse
         */
        public async Task<DescribeImageBaselineStrategyResponse> DescribeImageBaselineStrategyAsync(DescribeImageBaselineStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageBaselineStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the search conditions that are used to query images.
         *
         * @param request DescribeImageCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageCriteriaResponse
         */
        public DescribeImageCriteriaResponse DescribeImageCriteriaWithOptions(DescribeImageCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that are used to query images.
         *
         * @param request DescribeImageCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageCriteriaResponse
         */
        public async Task<DescribeImageCriteriaResponse> DescribeImageCriteriaWithOptionsAsync(DescribeImageCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that are used to query images.
         *
         * @param request DescribeImageCriteriaRequest
         * @return DescribeImageCriteriaResponse
         */
        public DescribeImageCriteriaResponse DescribeImageCriteria(DescribeImageCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the search conditions that are used to query images.
         *
         * @param request DescribeImageCriteriaRequest
         * @return DescribeImageCriteriaResponse
         */
        public async Task<DescribeImageCriteriaResponse> DescribeImageCriteriaAsync(DescribeImageCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the conditions for handling alert events in an image.
         *
         * @param request DescribeImageEventOperationConditionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageEventOperationConditionResponse
         */
        public DescribeImageEventOperationConditionResponse DescribeImageEventOperationConditionWithOptions(DescribeImageEventOperationConditionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageEventOperationCondition",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageEventOperationConditionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the conditions for handling alert events in an image.
         *
         * @param request DescribeImageEventOperationConditionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageEventOperationConditionResponse
         */
        public async Task<DescribeImageEventOperationConditionResponse> DescribeImageEventOperationConditionWithOptionsAsync(DescribeImageEventOperationConditionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageEventOperationCondition",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageEventOperationConditionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the conditions for handling alert events in an image.
         *
         * @param request DescribeImageEventOperationConditionRequest
         * @return DescribeImageEventOperationConditionResponse
         */
        public DescribeImageEventOperationConditionResponse DescribeImageEventOperationCondition(DescribeImageEventOperationConditionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageEventOperationConditionWithOptions(request, runtime);
        }

        /**
         * @summary Queries the conditions for handling alert events in an image.
         *
         * @param request DescribeImageEventOperationConditionRequest
         * @return DescribeImageEventOperationConditionResponse
         */
        public async Task<DescribeImageEventOperationConditionResponse> DescribeImageEventOperationConditionAsync(DescribeImageEventOperationConditionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageEventOperationConditionWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert handling rules by page.
         *
         * @param request DescribeImageEventOperationPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageEventOperationPageResponse
         */
        public DescribeImageEventOperationPageResponse DescribeImageEventOperationPageWithOptions(DescribeImageEventOperationPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventKey))
            {
                query["EventKey"] = request.EventKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageEventOperationPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageEventOperationPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert handling rules by page.
         *
         * @param request DescribeImageEventOperationPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageEventOperationPageResponse
         */
        public async Task<DescribeImageEventOperationPageResponse> DescribeImageEventOperationPageWithOptionsAsync(DescribeImageEventOperationPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventKey))
            {
                query["EventKey"] = request.EventKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageEventOperationPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageEventOperationPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert handling rules by page.
         *
         * @param request DescribeImageEventOperationPageRequest
         * @return DescribeImageEventOperationPageResponse
         */
        public DescribeImageEventOperationPageResponse DescribeImageEventOperationPage(DescribeImageEventOperationPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageEventOperationPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert handling rules by page.
         *
         * @param request DescribeImageEventOperationPageRequest
         * @return DescribeImageEventOperationPageResponse
         */
        public async Task<DescribeImageEventOperationPageResponse> DescribeImageEventOperationPageAsync(DescribeImageEventOperationPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageEventOperationPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the scheduled fix of image risks.
         *
         * @param request DescribeImageFixCycleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageFixCycleConfigResponse
         */
        public DescribeImageFixCycleConfigResponse DescribeImageFixCycleConfigWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageFixCycleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageFixCycleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the scheduled fix of image risks.
         *
         * @param request DescribeImageFixCycleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageFixCycleConfigResponse
         */
        public async Task<DescribeImageFixCycleConfigResponse> DescribeImageFixCycleConfigWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageFixCycleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageFixCycleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the scheduled fix of image risks.
         *
         * @return DescribeImageFixCycleConfigResponse
         */
        public DescribeImageFixCycleConfigResponse DescribeImageFixCycleConfig()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageFixCycleConfigWithOptions(runtime);
        }

        /**
         * @summary Queries the configurations of the scheduled fix of image risks.
         *
         * @return DescribeImageFixCycleConfigResponse
         */
        public async Task<DescribeImageFixCycleConfigResponse> DescribeImageFixCycleConfigAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageFixCycleConfigWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the tasks that you create to fix image risks.
         *
         * @param request DescribeImageFixTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageFixTaskResponse
         */
        public DescribeImageFixTaskResponse DescribeImageFixTaskWithOptions(DescribeImageFixTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageFixTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageFixTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the tasks that you create to fix image risks.
         *
         * @param request DescribeImageFixTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageFixTaskResponse
         */
        public async Task<DescribeImageFixTaskResponse> DescribeImageFixTaskWithOptionsAsync(DescribeImageFixTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageFixTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageFixTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the tasks that you create to fix image risks.
         *
         * @param request DescribeImageFixTaskRequest
         * @return DescribeImageFixTaskResponse
         */
        public DescribeImageFixTaskResponse DescribeImageFixTask(DescribeImageFixTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageFixTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries the tasks that you create to fix image risks.
         *
         * @param request DescribeImageFixTaskRequest
         * @return DescribeImageFixTaskResponse
         */
        public async Task<DescribeImageFixTaskResponse> DescribeImageFixTaskAsync(DescribeImageFixTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageFixTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries image vulnerabilities.
         *
         * @param request DescribeImageGroupedVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageGroupedVulListResponse
         */
        public DescribeImageGroupedVulListResponse DescribeImageGroupedVulListWithOptions(DescribeImageGroupedVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsLatest))
            {
                query["IsLatest"] = request.IsLatest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PatchId))
            {
                query["PatchId"] = request.PatchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageGroupedVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageGroupedVulListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries image vulnerabilities.
         *
         * @param request DescribeImageGroupedVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageGroupedVulListResponse
         */
        public async Task<DescribeImageGroupedVulListResponse> DescribeImageGroupedVulListWithOptionsAsync(DescribeImageGroupedVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageLayer))
            {
                query["ImageLayer"] = request.ImageLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTag))
            {
                query["ImageTag"] = request.ImageTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsLatest))
            {
                query["IsLatest"] = request.IsLatest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PatchId))
            {
                query["PatchId"] = request.PatchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageGroupedVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageGroupedVulListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries image vulnerabilities.
         *
         * @param request DescribeImageGroupedVulListRequest
         * @return DescribeImageGroupedVulListResponse
         */
        public DescribeImageGroupedVulListResponse DescribeImageGroupedVulList(DescribeImageGroupedVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageGroupedVulListWithOptions(request, runtime);
        }

        /**
         * @summary Queries image vulnerabilities.
         *
         * @param request DescribeImageGroupedVulListRequest
         * @return DescribeImageGroupedVulListResponse
         */
        public async Task<DescribeImageGroupedVulListResponse> DescribeImageGroupedVulListAsync(DescribeImageGroupedVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageGroupedVulListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries images.
         *
         * @param request DescribeImageInfoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageInfoListResponse
         */
        public DescribeImageInfoListResponse DescribeImageInfoListWithOptions(DescribeImageInfoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageInfoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageInfoListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries images.
         *
         * @param request DescribeImageInfoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageInfoListResponse
         */
        public async Task<DescribeImageInfoListResponse> DescribeImageInfoListWithOptionsAsync(DescribeImageInfoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageInfoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageInfoListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries images.
         *
         * @param request DescribeImageInfoListRequest
         * @return DescribeImageInfoListResponse
         */
        public DescribeImageInfoListResponse DescribeImageInfoList(DescribeImageInfoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageInfoListWithOptions(request, runtime);
        }

        /**
         * @summary Queries images.
         *
         * @param request DescribeImageInfoListRequest
         * @return DescribeImageInfoListResponse
         */
        public async Task<DescribeImageInfoListResponse> DescribeImageInfoListAsync(DescribeImageInfoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageInfoListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about images.
         *
         * @param request DescribeImageInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageInstancesResponse
         */
        public DescribeImageInstancesResponse DescribeImageInstancesWithOptions(DescribeImageInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scanned))
            {
                query["Scanned"] = request.Scanned;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about images.
         *
         * @param request DescribeImageInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageInstancesResponse
         */
        public async Task<DescribeImageInstancesResponse> DescribeImageInstancesWithOptionsAsync(DescribeImageInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scanned))
            {
                query["Scanned"] = request.Scanned;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about images.
         *
         * @param request DescribeImageInstancesRequest
         * @return DescribeImageInstancesResponse
         */
        public DescribeImageInstancesResponse DescribeImageInstances(DescribeImageInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about images.
         *
         * @param request DescribeImageInstancesRequest
         * @return DescribeImageInstancesResponse
         */
        public async Task<DescribeImageInstancesResponse> DescribeImageInstancesAsync(DescribeImageInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the most recent scan task that is created for an image.
         *
         * @param request DescribeImageLatestScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageLatestScanTaskResponse
         */
        public DescribeImageLatestScanTaskResponse DescribeImageLatestScanTaskWithOptions(DescribeImageLatestScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageLatestScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageLatestScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the most recent scan task that is created for an image.
         *
         * @param request DescribeImageLatestScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageLatestScanTaskResponse
         */
        public async Task<DescribeImageLatestScanTaskResponse> DescribeImageLatestScanTaskWithOptionsAsync(DescribeImageLatestScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageLatestScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageLatestScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the most recent scan task that is created for an image.
         *
         * @param request DescribeImageLatestScanTaskRequest
         * @return DescribeImageLatestScanTaskResponse
         */
        public DescribeImageLatestScanTaskResponse DescribeImageLatestScanTask(DescribeImageLatestScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageLatestScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries the most recent scan task that is created for an image.
         *
         * @param request DescribeImageLatestScanTaskRequest
         * @return DescribeImageLatestScanTaskResponse
         */
        public async Task<DescribeImageLatestScanTaskResponse> DescribeImageLatestScanTaskAsync(DescribeImageLatestScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageLatestScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about images that are affected by sensitive files.
         *
         * @param tmpReq DescribeImageListBySensitiveFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageListBySensitiveFileResponse
         */
        public DescribeImageListBySensitiveFileResponse DescribeImageListBySensitiveFileWithOptions(DescribeImageListBySensitiveFileRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageListBySensitiveFileShrinkRequest request = new DescribeImageListBySensitiveFileShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageListBySensitiveFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageListBySensitiveFileResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about images that are affected by sensitive files.
         *
         * @param tmpReq DescribeImageListBySensitiveFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageListBySensitiveFileResponse
         */
        public async Task<DescribeImageListBySensitiveFileResponse> DescribeImageListBySensitiveFileWithOptionsAsync(DescribeImageListBySensitiveFileRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageListBySensitiveFileShrinkRequest request = new DescribeImageListBySensitiveFileShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageListBySensitiveFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageListBySensitiveFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about images that are affected by sensitive files.
         *
         * @param request DescribeImageListBySensitiveFileRequest
         * @return DescribeImageListBySensitiveFileResponse
         */
        public DescribeImageListBySensitiveFileResponse DescribeImageListBySensitiveFile(DescribeImageListBySensitiveFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageListBySensitiveFileWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about images that are affected by sensitive files.
         *
         * @param request DescribeImageListBySensitiveFileRequest
         * @return DescribeImageListBySensitiveFileResponse
         */
        public async Task<DescribeImageListBySensitiveFileResponse> DescribeImageListBySensitiveFileAsync(DescribeImageListBySensitiveFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageListBySensitiveFileWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about images in the results of image baseline checks.
         *
         * @param request DescribeImageListWithBaselineNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageListWithBaselineNameResponse
         */
        public DescribeImageListWithBaselineNameResponse DescribeImageListWithBaselineNameWithOptions(DescribeImageListWithBaselineNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineNameKey))
            {
                query["BaselineNameKey"] = request.BaselineNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageListWithBaselineName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageListWithBaselineNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about images in the results of image baseline checks.
         *
         * @param request DescribeImageListWithBaselineNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageListWithBaselineNameResponse
         */
        public async Task<DescribeImageListWithBaselineNameResponse> DescribeImageListWithBaselineNameWithOptionsAsync(DescribeImageListWithBaselineNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineNameKey))
            {
                query["BaselineNameKey"] = request.BaselineNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageDigest))
            {
                query["ImageDigest"] = request.ImageDigest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageListWithBaselineName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageListWithBaselineNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about images in the results of image baseline checks.
         *
         * @param request DescribeImageListWithBaselineNameRequest
         * @return DescribeImageListWithBaselineNameResponse
         */
        public DescribeImageListWithBaselineNameResponse DescribeImageListWithBaselineName(DescribeImageListWithBaselineNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageListWithBaselineNameWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about images in the results of image baseline checks.
         *
         * @param request DescribeImageListWithBaselineNameRequest
         * @return DescribeImageListWithBaselineNameResponse
         */
        public async Task<DescribeImageListWithBaselineNameResponse> DescribeImageListWithBaselineNameAsync(DescribeImageListWithBaselineNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageListWithBaselineNameWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the filter conditions that are supported by the image repository.
         *
         * @param request DescribeImageRepoCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoCriteriaResponse
         */
        public DescribeImageRepoCriteriaResponse DescribeImageRepoCriteriaWithOptions(DescribeImageRepoCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the filter conditions that are supported by the image repository.
         *
         * @param request DescribeImageRepoCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoCriteriaResponse
         */
        public async Task<DescribeImageRepoCriteriaResponse> DescribeImageRepoCriteriaWithOptionsAsync(DescribeImageRepoCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the filter conditions that are supported by the image repository.
         *
         * @param request DescribeImageRepoCriteriaRequest
         * @return DescribeImageRepoCriteriaResponse
         */
        public DescribeImageRepoCriteriaResponse DescribeImageRepoCriteria(DescribeImageRepoCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageRepoCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the filter conditions that are supported by the image repository.
         *
         * @param request DescribeImageRepoCriteriaRequest
         * @return DescribeImageRepoCriteriaResponse
         */
        public async Task<DescribeImageRepoCriteriaResponse> DescribeImageRepoCriteriaAsync(DescribeImageRepoCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageRepoCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about image repositories.
         *
         * @param request DescribeImageRepoDetailListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoDetailListResponse
         */
        public DescribeImageRepoDetailListResponse DescribeImageRepoDetailListWithOptions(DescribeImageRepoDetailListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoDetailList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoDetailListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about image repositories.
         *
         * @param request DescribeImageRepoDetailListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoDetailListResponse
         */
        public async Task<DescribeImageRepoDetailListResponse> DescribeImageRepoDetailListWithOptionsAsync(DescribeImageRepoDetailListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoDetailList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoDetailListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about image repositories.
         *
         * @param request DescribeImageRepoDetailListRequest
         * @return DescribeImageRepoDetailListResponse
         */
        public DescribeImageRepoDetailListResponse DescribeImageRepoDetailList(DescribeImageRepoDetailListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageRepoDetailListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about image repositories.
         *
         * @param request DescribeImageRepoDetailListRequest
         * @return DescribeImageRepoDetailListResponse
         */
        public async Task<DescribeImageRepoDetailListResponse> DescribeImageRepoDetailListAsync(DescribeImageRepoDetailListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageRepoDetailListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics and configurations of the feature that protects images.
         *
         * @param request DescribeImageRepoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoListResponse
         */
        public DescribeImageRepoListResponse DescribeImageRepoListWithOptions(DescribeImageRepoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics and configurations of the feature that protects images.
         *
         * @param request DescribeImageRepoListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageRepoListResponse
         */
        public async Task<DescribeImageRepoListResponse> DescribeImageRepoListWithOptionsAsync(DescribeImageRepoListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageRepoList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageRepoListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics and configurations of the feature that protects images.
         *
         * @param request DescribeImageRepoListRequest
         * @return DescribeImageRepoListResponse
         */
        public DescribeImageRepoListResponse DescribeImageRepoList(DescribeImageRepoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageRepoListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics and configurations of the feature that protects images.
         *
         * @param request DescribeImageRepoListRequest
         * @return DescribeImageRepoListResponse
         */
        public async Task<DescribeImageRepoListResponse> DescribeImageRepoListAsync(DescribeImageRepoListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageRepoListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The quota for container image scan.
         *
         * @param request DescribeImageScanAuthCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageScanAuthCountResponse
         */
        public DescribeImageScanAuthCountResponse DescribeImageScanAuthCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageScanAuthCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageScanAuthCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The quota for container image scan.
         *
         * @param request DescribeImageScanAuthCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageScanAuthCountResponse
         */
        public async Task<DescribeImageScanAuthCountResponse> DescribeImageScanAuthCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageScanAuthCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageScanAuthCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The quota for container image scan.
         *
         * @return DescribeImageScanAuthCountResponse
         */
        public DescribeImageScanAuthCountResponse DescribeImageScanAuthCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageScanAuthCountWithOptions(runtime);
        }

        /**
         * @summary The quota for container image scan.
         *
         * @return DescribeImageScanAuthCountResponse
         */
        public async Task<DescribeImageScanAuthCountResponse> DescribeImageScanAuthCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageScanAuthCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries whether Security Center is authorized to scan images.
         *
         * @param request DescribeImageScanAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageScanAuthorizationResponse
         */
        public DescribeImageScanAuthorizationResponse DescribeImageScanAuthorizationWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageScanAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageScanAuthorizationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether Security Center is authorized to scan images.
         *
         * @param request DescribeImageScanAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageScanAuthorizationResponse
         */
        public async Task<DescribeImageScanAuthorizationResponse> DescribeImageScanAuthorizationWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageScanAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageScanAuthorizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether Security Center is authorized to scan images.
         *
         * @return DescribeImageScanAuthorizationResponse
         */
        public DescribeImageScanAuthorizationResponse DescribeImageScanAuthorization()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageScanAuthorizationWithOptions(runtime);
        }

        /**
         * @summary Queries whether Security Center is authorized to scan images.
         *
         * @return DescribeImageScanAuthorizationResponse
         */
        public async Task<DescribeImageScanAuthorizationResponse> DescribeImageScanAuthorizationAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageScanAuthorizationWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the sensitive files in an image.
         *
         * @param tmpReq DescribeImageSensitiveFileByKeyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageSensitiveFileByKeyResponse
         */
        public DescribeImageSensitiveFileByKeyResponse DescribeImageSensitiveFileByKeyWithOptions(DescribeImageSensitiveFileByKeyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageSensitiveFileByKeyShrinkRequest request = new DescribeImageSensitiveFileByKeyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageSensitiveFileByKey",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageSensitiveFileByKeyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the sensitive files in an image.
         *
         * @param tmpReq DescribeImageSensitiveFileByKeyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageSensitiveFileByKeyResponse
         */
        public async Task<DescribeImageSensitiveFileByKeyResponse> DescribeImageSensitiveFileByKeyWithOptionsAsync(DescribeImageSensitiveFileByKeyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageSensitiveFileByKeyShrinkRequest request = new DescribeImageSensitiveFileByKeyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageSensitiveFileByKey",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageSensitiveFileByKeyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the sensitive files in an image.
         *
         * @param request DescribeImageSensitiveFileByKeyRequest
         * @return DescribeImageSensitiveFileByKeyResponse
         */
        public DescribeImageSensitiveFileByKeyResponse DescribeImageSensitiveFileByKey(DescribeImageSensitiveFileByKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageSensitiveFileByKeyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the sensitive files in an image.
         *
         * @param request DescribeImageSensitiveFileByKeyRequest
         * @return DescribeImageSensitiveFileByKeyResponse
         */
        public async Task<DescribeImageSensitiveFileByKeyResponse> DescribeImageSensitiveFileByKeyAsync(DescribeImageSensitiveFileByKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageSensitiveFileByKeyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about sensitive files.
         *
         * @param tmpReq DescribeImageSensitiveFileListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageSensitiveFileListResponse
         */
        public DescribeImageSensitiveFileListResponse DescribeImageSensitiveFileListWithOptions(DescribeImageSensitiveFileListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageSensitiveFileListShrinkRequest request = new DescribeImageSensitiveFileListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageSensitiveFileList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageSensitiveFileListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about sensitive files.
         *
         * @param tmpReq DescribeImageSensitiveFileListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageSensitiveFileListResponse
         */
        public async Task<DescribeImageSensitiveFileListResponse> DescribeImageSensitiveFileListWithOptionsAsync(DescribeImageSensitiveFileListRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DescribeImageSensitiveFileListShrinkRequest request = new DescribeImageSensitiveFileListShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ScanRange))
            {
                request.ScanRangeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ScanRange, "ScanRange", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRangeShrink))
            {
                query["ScanRange"] = request.ScanRangeShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageSensitiveFileList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageSensitiveFileListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about sensitive files.
         *
         * @param request DescribeImageSensitiveFileListRequest
         * @return DescribeImageSensitiveFileListResponse
         */
        public DescribeImageSensitiveFileListResponse DescribeImageSensitiveFileList(DescribeImageSensitiveFileListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageSensitiveFileListWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about sensitive files.
         *
         * @param request DescribeImageSensitiveFileListRequest
         * @return DescribeImageSensitiveFileListResponse
         */
        public async Task<DescribeImageSensitiveFileListResponse> DescribeImageSensitiveFileListAsync(DescribeImageSensitiveFileListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageSensitiveFileListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the risk statistics on container images.
         *
         * @description Security Center can scan for security risks and collect statistics only for **Container Registry Enterprise Edition instances**.
         * >  Security Center cannot scan for security risks or collect statistics for **default** Container Registry instances.
         *
         * @param request DescribeImageStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageStatisticsResponse
         */
        public DescribeImageStatisticsResponse DescribeImageStatisticsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the risk statistics on container images.
         *
         * @description Security Center can scan for security risks and collect statistics only for **Container Registry Enterprise Edition instances**.
         * >  Security Center cannot scan for security risks or collect statistics for **default** Container Registry instances.
         *
         * @param request DescribeImageStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageStatisticsResponse
         */
        public async Task<DescribeImageStatisticsResponse> DescribeImageStatisticsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the risk statistics on container images.
         *
         * @description Security Center can scan for security risks and collect statistics only for **Container Registry Enterprise Edition instances**.
         * >  Security Center cannot scan for security risks or collect statistics for **default** Container Registry instances.
         *
         * @return DescribeImageStatisticsResponse
         */
        public DescribeImageStatisticsResponse DescribeImageStatistics()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageStatisticsWithOptions(runtime);
        }

        /**
         * @summary Queries the risk statistics on container images.
         *
         * @description Security Center can scan for security risks and collect statistics only for **Container Registry Enterprise Edition instances**.
         * >  Security Center cannot scan for security risks or collect statistics for **default** Container Registry instances.
         *
         * @return DescribeImageStatisticsResponse
         */
        public async Task<DescribeImageStatisticsResponse> DescribeImageStatisticsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageStatisticsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries information about the vulnerabilities that are detected by using container image scan and the affected images.
         *
         * @description To query the information about the recently detected image vulnerabilities, call the [PublicCreateImageScanTask](~~PublicCreateImageScanTask~~) operation. Wait 1 to 5 minutes until the call is successful and call the DescribeImageVulList operation.
         *
         * @param request DescribeImageVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageVulListResponse
         */
        public DescribeImageVulListResponse DescribeImageVulListWithOptions(DescribeImageVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageVulListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the vulnerabilities that are detected by using container image scan and the affected images.
         *
         * @description To query the information about the recently detected image vulnerabilities, call the [PublicCreateImageScanTask](~~PublicCreateImageScanTask~~) operation. Wait 1 to 5 minutes until the call is successful and call the DescribeImageVulList operation.
         *
         * @param request DescribeImageVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageVulListResponse
         */
        public async Task<DescribeImageVulListResponse> DescribeImageVulListWithOptionsAsync(DescribeImageVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerId))
            {
                query["ContainerId"] = request.ContainerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digest))
            {
                query["Digest"] = request.Digest;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Image))
            {
                query["Image"] = request.Image;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pod))
            {
                query["Pod"] = request.Pod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoId))
            {
                query["RepoId"] = request.RepoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoInstanceId))
            {
                query["RepoInstanceId"] = request.RepoInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoName))
            {
                query["RepoName"] = request.RepoName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespace))
            {
                query["RepoNamespace"] = request.RepoNamespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoRegionId))
            {
                query["RepoRegionId"] = request.RepoRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageVulListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the vulnerabilities that are detected by using container image scan and the affected images.
         *
         * @description To query the information about the recently detected image vulnerabilities, call the [PublicCreateImageScanTask](~~PublicCreateImageScanTask~~) operation. Wait 1 to 5 minutes until the call is successful and call the DescribeImageVulList operation.
         *
         * @param request DescribeImageVulListRequest
         * @return DescribeImageVulListResponse
         */
        public DescribeImageVulListResponse DescribeImageVulList(DescribeImageVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageVulListWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the vulnerabilities that are detected by using container image scan and the affected images.
         *
         * @description To query the information about the recently detected image vulnerabilities, call the [PublicCreateImageScanTask](~~PublicCreateImageScanTask~~) operation. Wait 1 to 5 minutes until the call is successful and call the DescribeImageVulList operation.
         *
         * @param request DescribeImageVulListRequest
         * @return DescribeImageVulListResponse
         */
        public async Task<DescribeImageVulListResponse> DescribeImageVulListAsync(DescribeImageVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageVulListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the whitelist of image vulnerabilities.
         *
         * @param request DescribeImageVulWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageVulWhiteListResponse
         */
        public DescribeImageVulWhiteListResponse DescribeImageVulWhiteListWithOptions(DescribeImageVulWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageVulWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageVulWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the whitelist of image vulnerabilities.
         *
         * @param request DescribeImageVulWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeImageVulWhiteListResponse
         */
        public async Task<DescribeImageVulWhiteListResponse> DescribeImageVulWhiteListWithOptionsAsync(DescribeImageVulWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeImageVulWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeImageVulWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the whitelist of image vulnerabilities.
         *
         * @param request DescribeImageVulWhiteListRequest
         * @return DescribeImageVulWhiteListResponse
         */
        public DescribeImageVulWhiteListResponse DescribeImageVulWhiteList(DescribeImageVulWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeImageVulWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the whitelist of image vulnerabilities.
         *
         * @param request DescribeImageVulWhiteListRequest
         * @return DescribeImageVulWhiteListResponse
         */
        public async Task<DescribeImageVulWhiteListResponse> DescribeImageVulWhiteListAsync(DescribeImageVulWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeImageVulWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the verification codes that are used to manually install the Security Center agent.
         *
         * @param request DescribeInstallCaptchaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCaptchaResponse
         */
        public DescribeInstallCaptchaResponse DescribeInstallCaptchaWithOptions(DescribeInstallCaptchaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Deadline))
            {
                query["Deadline"] = request.Deadline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCaptcha",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCaptchaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the verification codes that are used to manually install the Security Center agent.
         *
         * @param request DescribeInstallCaptchaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCaptchaResponse
         */
        public async Task<DescribeInstallCaptchaResponse> DescribeInstallCaptchaWithOptionsAsync(DescribeInstallCaptchaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Deadline))
            {
                query["Deadline"] = request.Deadline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCaptcha",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCaptchaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the verification codes that are used to manually install the Security Center agent.
         *
         * @param request DescribeInstallCaptchaRequest
         * @return DescribeInstallCaptchaResponse
         */
        public DescribeInstallCaptchaResponse DescribeInstallCaptcha(DescribeInstallCaptchaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstallCaptchaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the verification codes that are used to manually install the Security Center agent.
         *
         * @param request DescribeInstallCaptchaRequest
         * @return DescribeInstallCaptchaResponse
         */
        public async Task<DescribeInstallCaptchaResponse> DescribeInstallCaptchaAsync(DescribeInstallCaptchaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstallCaptchaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the installation verification code that is used to run the installation command of the Security Center agent.
         *
         * @param request DescribeInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCodeResponse
         */
        public DescribeInstallCodeResponse DescribeInstallCodeWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the installation verification code that is used to run the installation command of the Security Center agent.
         *
         * @param request DescribeInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCodeResponse
         */
        public async Task<DescribeInstallCodeResponse> DescribeInstallCodeWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the installation verification code that is used to run the installation command of the Security Center agent.
         *
         * @return DescribeInstallCodeResponse
         */
        public DescribeInstallCodeResponse DescribeInstallCode()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstallCodeWithOptions(runtime);
        }

        /**
         * @summary Queries the installation verification code that is used to run the installation command of the Security Center agent.
         *
         * @return DescribeInstallCodeResponse
         */
        public async Task<DescribeInstallCodeResponse> DescribeInstallCodeAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstallCodeWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the commands that are used to manually install the Security Center Agent.
         *
         * @description You can call this operation to query the commands that are used to manually install the Security Center agent on the server. The return result contains the installation verification code and the server information. If you want to manually install the Security Center agent on your server, you can call this operation to query installation commands.
         * ### QPS limit
         * You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.
         *
         * @param request DescribeInstallCodesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCodesResponse
         */
        public DescribeInstallCodesResponse DescribeInstallCodesWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCodes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCodesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the commands that are used to manually install the Security Center Agent.
         *
         * @description You can call this operation to query the commands that are used to manually install the Security Center agent on the server. The return result contains the installation verification code and the server information. If you want to manually install the Security Center agent on your server, you can call this operation to query installation commands.
         * ### QPS limit
         * You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.
         *
         * @param request DescribeInstallCodesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstallCodesResponse
         */
        public async Task<DescribeInstallCodesResponse> DescribeInstallCodesWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstallCodes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstallCodesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the commands that are used to manually install the Security Center Agent.
         *
         * @description You can call this operation to query the commands that are used to manually install the Security Center agent on the server. The return result contains the installation verification code and the server information. If you want to manually install the Security Center agent on your server, you can call this operation to query installation commands.
         * ### QPS limit
         * You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.
         *
         * @return DescribeInstallCodesResponse
         */
        public DescribeInstallCodesResponse DescribeInstallCodes()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstallCodesWithOptions(runtime);
        }

        /**
         * @summary Queries the commands that are used to manually install the Security Center Agent.
         *
         * @description You can call this operation to query the commands that are used to manually install the Security Center agent on the server. The return result contains the installation verification code and the server information. If you want to manually install the Security Center agent on your server, you can call this operation to query installation commands.
         * ### QPS limit
         * You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.
         *
         * @return DescribeInstallCodesResponse
         */
        public async Task<DescribeInstallCodesResponse> DescribeInstallCodesAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstallCodesWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about servers to which a defense rule against brute-force attacks is applied.
         *
         * @param request DescribeInstanceAntiBruteForceRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceAntiBruteForceRulesResponse
         */
        public DescribeInstanceAntiBruteForceRulesResponse DescribeInstanceAntiBruteForceRulesWithOptions(DescribeInstanceAntiBruteForceRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceAntiBruteForceRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceAntiBruteForceRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about servers to which a defense rule against brute-force attacks is applied.
         *
         * @param request DescribeInstanceAntiBruteForceRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceAntiBruteForceRulesResponse
         */
        public async Task<DescribeInstanceAntiBruteForceRulesResponse> DescribeInstanceAntiBruteForceRulesWithOptionsAsync(DescribeInstanceAntiBruteForceRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceAntiBruteForceRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceAntiBruteForceRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about servers to which a defense rule against brute-force attacks is applied.
         *
         * @param request DescribeInstanceAntiBruteForceRulesRequest
         * @return DescribeInstanceAntiBruteForceRulesResponse
         */
        public DescribeInstanceAntiBruteForceRulesResponse DescribeInstanceAntiBruteForceRules(DescribeInstanceAntiBruteForceRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstanceAntiBruteForceRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about servers to which a defense rule against brute-force attacks is applied.
         *
         * @param request DescribeInstanceAntiBruteForceRulesRequest
         * @return DescribeInstanceAntiBruteForceRulesResponse
         */
        public async Task<DescribeInstanceAntiBruteForceRulesResponse> DescribeInstanceAntiBruteForceRulesAsync(DescribeInstanceAntiBruteForceRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstanceAntiBruteForceRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status of the instance that you restart.
         *
         * @param request DescribeInstanceRebootStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceRebootStatusResponse
         */
        public DescribeInstanceRebootStatusResponse DescribeInstanceRebootStatusWithOptions(DescribeInstanceRebootStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceRebootStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceRebootStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status of the instance that you restart.
         *
         * @param request DescribeInstanceRebootStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceRebootStatusResponse
         */
        public async Task<DescribeInstanceRebootStatusResponse> DescribeInstanceRebootStatusWithOptionsAsync(DescribeInstanceRebootStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceRebootStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceRebootStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status of the instance that you restart.
         *
         * @param request DescribeInstanceRebootStatusRequest
         * @return DescribeInstanceRebootStatusResponse
         */
        public DescribeInstanceRebootStatusResponse DescribeInstanceRebootStatus(DescribeInstanceRebootStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstanceRebootStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status of the instance that you restart.
         *
         * @param request DescribeInstanceRebootStatusRequest
         * @return DescribeInstanceRebootStatusResponse
         */
        public async Task<DescribeInstanceRebootStatusResponse> DescribeInstanceRebootStatusAsync(DescribeInstanceRebootStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstanceRebootStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of assets that are protected by Security Center.
         *
         * @param request DescribeInstanceStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceStatisticsResponse
         */
        public DescribeInstanceStatisticsResponse DescribeInstanceStatisticsWithOptions(DescribeInstanceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of assets that are protected by Security Center.
         *
         * @param request DescribeInstanceStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeInstanceStatisticsResponse
         */
        public async Task<DescribeInstanceStatisticsResponse> DescribeInstanceStatisticsWithOptionsAsync(DescribeInstanceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeInstanceStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeInstanceStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of assets that are protected by Security Center.
         *
         * @param request DescribeInstanceStatisticsRequest
         * @return DescribeInstanceStatisticsResponse
         */
        public DescribeInstanceStatisticsResponse DescribeInstanceStatistics(DescribeInstanceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeInstanceStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of assets that are protected by Security Center.
         *
         * @param request DescribeInstanceStatisticsRequest
         * @return DescribeInstanceStatisticsResponse
         */
        public async Task<DescribeInstanceStatisticsResponse> DescribeInstanceStatisticsAsync(DescribeInstanceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeInstanceStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether an IP address is related to an alert event.
         *
         * @param request DescribeIpTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeIpTagsResponse
         */
        public DescribeIpTagsResponse DescribeIpTagsWithOptions(DescribeIpTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ip))
            {
                query["Ip"] = request.Ip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeIpTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeIpTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether an IP address is related to an alert event.
         *
         * @param request DescribeIpTagsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeIpTagsResponse
         */
        public async Task<DescribeIpTagsResponse> DescribeIpTagsWithOptionsAsync(DescribeIpTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ip))
            {
                query["Ip"] = request.Ip;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeIpTags",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeIpTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether an IP address is related to an alert event.
         *
         * @param request DescribeIpTagsRequest
         * @return DescribeIpTagsResponse
         */
        public DescribeIpTagsResponse DescribeIpTags(DescribeIpTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeIpTagsWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether an IP address is related to an alert event.
         *
         * @param request DescribeIpTagsRequest
         * @return DescribeIpTagsResponse
         */
        public async Task<DescribeIpTagsResponse> DescribeIpTagsAsync(DescribeIpTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeIpTagsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询最新病毒扫描
         *
         * @param request DescribeLatestScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLatestScanTaskResponse
         */
        public DescribeLatestScanTaskResponse DescribeLatestScanTaskWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLatestScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLatestScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询最新病毒扫描
         *
         * @param request DescribeLatestScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLatestScanTaskResponse
         */
        public async Task<DescribeLatestScanTaskResponse> DescribeLatestScanTaskWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLatestScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLatestScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询最新病毒扫描
         *
         * @return DescribeLatestScanTaskResponse
         */
        public DescribeLatestScanTaskResponse DescribeLatestScanTask()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLatestScanTaskWithOptions(runtime);
        }

        /**
         * @summary 查询最新病毒扫描
         *
         * @return DescribeLatestScanTaskResponse
         */
        public async Task<DescribeLatestScanTaskResponse> DescribeLatestScanTaskAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLatestScanTaskWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the configurations of the log analysis feature provided by Security Center.
         *
         * @param request DescribeLogMetaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogMetaResponse
         */
        public DescribeLogMetaResponse DescribeLogMetaWithOptions(DescribeLogMetaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogMeta",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogMetaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the log analysis feature provided by Security Center.
         *
         * @param request DescribeLogMetaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogMetaResponse
         */
        public async Task<DescribeLogMetaResponse> DescribeLogMetaWithOptionsAsync(DescribeLogMetaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogMeta",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogMetaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the log analysis feature provided by Security Center.
         *
         * @param request DescribeLogMetaRequest
         * @return DescribeLogMetaResponse
         */
        public DescribeLogMetaResponse DescribeLogMeta(DescribeLogMetaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLogMetaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the log analysis feature provided by Security Center.
         *
         * @param request DescribeLogMetaRequest
         * @return DescribeLogMetaResponse
         */
        public async Task<DescribeLogMetaResponse> DescribeLogMetaAsync(DescribeLogMetaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLogMetaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status information about the log analysis feature.
         *
         * @param request DescribeLogShipperStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogShipperStatusResponse
         */
        public DescribeLogShipperStatusResponse DescribeLogShipperStatusWithOptions(DescribeLogShipperStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogShipperStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogShipperStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status information about the log analysis feature.
         *
         * @param request DescribeLogShipperStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogShipperStatusResponse
         */
        public async Task<DescribeLogShipperStatusResponse> DescribeLogShipperStatusWithOptionsAsync(DescribeLogShipperStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogShipperStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogShipperStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status information about the log analysis feature.
         *
         * @param request DescribeLogShipperStatusRequest
         * @return DescribeLogShipperStatusResponse
         */
        public DescribeLogShipperStatusResponse DescribeLogShipperStatus(DescribeLogShipperStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLogShipperStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status information about the log analysis feature.
         *
         * @param request DescribeLogShipperStatusRequest
         * @return DescribeLogShipperStatusResponse
         */
        public async Task<DescribeLogShipperStatusResponse> DescribeLogShipperStatusAsync(DescribeLogShipperStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLogShipperStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the configurations that are used to detect unusual logons to your servers.
         *
         * @param request DescribeLoginBaseConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLoginBaseConfigsResponse
         */
        public DescribeLoginBaseConfigsResponse DescribeLoginBaseConfigsWithOptions(DescribeLoginBaseConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLoginBaseConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLoginBaseConfigsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the configurations that are used to detect unusual logons to your servers.
         *
         * @param request DescribeLoginBaseConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLoginBaseConfigsResponse
         */
        public async Task<DescribeLoginBaseConfigsResponse> DescribeLoginBaseConfigsWithOptionsAsync(DescribeLoginBaseConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLoginBaseConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLoginBaseConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the configurations that are used to detect unusual logons to your servers.
         *
         * @param request DescribeLoginBaseConfigsRequest
         * @return DescribeLoginBaseConfigsResponse
         */
        public DescribeLoginBaseConfigsResponse DescribeLoginBaseConfigs(DescribeLoginBaseConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLoginBaseConfigsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the configurations that are used to detect unusual logons to your servers.
         *
         * @param request DescribeLoginBaseConfigsRequest
         * @return DescribeLoginBaseConfigsResponse
         */
        public async Task<DescribeLoginBaseConfigsResponse> DescribeLoginBaseConfigsAsync(DescribeLoginBaseConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLoginBaseConfigsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alerting status for unapproved logon IP addresses, unapproved logon time ranges, or unapproved logon accounts.
         *
         * @param request DescribeLoginSwitchConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLoginSwitchConfigsResponse
         */
        public DescribeLoginSwitchConfigsResponse DescribeLoginSwitchConfigsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLoginSwitchConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLoginSwitchConfigsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alerting status for unapproved logon IP addresses, unapproved logon time ranges, or unapproved logon accounts.
         *
         * @param request DescribeLoginSwitchConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLoginSwitchConfigsResponse
         */
        public async Task<DescribeLoginSwitchConfigsResponse> DescribeLoginSwitchConfigsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLoginSwitchConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLoginSwitchConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alerting status for unapproved logon IP addresses, unapproved logon time ranges, or unapproved logon accounts.
         *
         * @return DescribeLoginSwitchConfigsResponse
         */
        public DescribeLoginSwitchConfigsResponse DescribeLoginSwitchConfigs()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLoginSwitchConfigsWithOptions(runtime);
        }

        /**
         * @summary Queries the alerting status for unapproved logon IP addresses, unapproved logon time ranges, or unapproved logon accounts.
         *
         * @return DescribeLoginSwitchConfigsResponse
         */
        public async Task<DescribeLoginSwitchConfigsResponse> DescribeLoginSwitchConfigsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLoginSwitchConfigsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the purchased log storage capacity.
         *
         * @param request DescribeLogstoreStorageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogstoreStorageResponse
         */
        public DescribeLogstoreStorageResponse DescribeLogstoreStorageWithOptions(DescribeLogstoreStorageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogstoreStorage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogstoreStorageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the purchased log storage capacity.
         *
         * @param request DescribeLogstoreStorageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeLogstoreStorageResponse
         */
        public async Task<DescribeLogstoreStorageResponse> DescribeLogstoreStorageWithOptionsAsync(DescribeLogstoreStorageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeLogstoreStorage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeLogstoreStorageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the purchased log storage capacity.
         *
         * @param request DescribeLogstoreStorageRequest
         * @return DescribeLogstoreStorageResponse
         */
        public DescribeLogstoreStorageResponse DescribeLogstoreStorage(DescribeLogstoreStorageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeLogstoreStorageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the purchased log storage capacity.
         *
         * @param request DescribeLogstoreStorageRequest
         * @return DescribeLogstoreStorageResponse
         */
        public async Task<DescribeLogstoreStorageResponse> DescribeLogstoreStorageAsync(DescribeLogstoreStorageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeLogstoreStorageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whether a server can be restarted after the vulnerabilities on the server are fixed. The fixes take effect only after the server is restarted.
         *
         * @param request DescribeMachineCanRebootRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMachineCanRebootResponse
         */
        public DescribeMachineCanRebootResponse DescribeMachineCanRebootWithOptions(DescribeMachineCanRebootRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMachineCanReboot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMachineCanRebootResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether a server can be restarted after the vulnerabilities on the server are fixed. The fixes take effect only after the server is restarted.
         *
         * @param request DescribeMachineCanRebootRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMachineCanRebootResponse
         */
        public async Task<DescribeMachineCanRebootResponse> DescribeMachineCanRebootWithOptionsAsync(DescribeMachineCanRebootRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMachineCanReboot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMachineCanRebootResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether a server can be restarted after the vulnerabilities on the server are fixed. The fixes take effect only after the server is restarted.
         *
         * @param request DescribeMachineCanRebootRequest
         * @return DescribeMachineCanRebootResponse
         */
        public DescribeMachineCanRebootResponse DescribeMachineCanReboot(DescribeMachineCanRebootRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeMachineCanRebootWithOptions(request, runtime);
        }

        /**
         * @summary Queries whether a server can be restarted after the vulnerabilities on the server are fixed. The fixes take effect only after the server is restarted.
         *
         * @param request DescribeMachineCanRebootRequest
         * @return DescribeMachineCanRebootResponse
         */
        public async Task<DescribeMachineCanRebootResponse> DescribeMachineCanRebootAsync(DescribeMachineCanRebootRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeMachineCanRebootWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of malicious image sample types.
         *
         * @param request DescribeMatchedMaliciousNamesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMatchedMaliciousNamesResponse
         */
        public DescribeMatchedMaliciousNamesResponse DescribeMatchedMaliciousNamesWithOptions(DescribeMatchedMaliciousNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMatchedMaliciousNames",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMatchedMaliciousNamesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of malicious image sample types.
         *
         * @param request DescribeMatchedMaliciousNamesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMatchedMaliciousNamesResponse
         */
        public async Task<DescribeMatchedMaliciousNamesResponse> DescribeMatchedMaliciousNamesWithOptionsAsync(DescribeMatchedMaliciousNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMatchedMaliciousNames",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMatchedMaliciousNamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of malicious image sample types.
         *
         * @param request DescribeMatchedMaliciousNamesRequest
         * @return DescribeMatchedMaliciousNamesResponse
         */
        public DescribeMatchedMaliciousNamesResponse DescribeMatchedMaliciousNames(DescribeMatchedMaliciousNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeMatchedMaliciousNamesWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of malicious image sample types.
         *
         * @param request DescribeMatchedMaliciousNamesRequest
         * @return DescribeMatchedMaliciousNamesResponse
         */
        public async Task<DescribeMatchedMaliciousNamesResponse> DescribeMatchedMaliciousNamesAsync(DescribeMatchedMaliciousNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeMatchedMaliciousNamesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the server.
         *
         * @param request DescribeModuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeModuleConfigResponse
         */
        public DescribeModuleConfigResponse DescribeModuleConfigWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeModuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeModuleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the server.
         *
         * @param request DescribeModuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeModuleConfigResponse
         */
        public async Task<DescribeModuleConfigResponse> DescribeModuleConfigWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeModuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeModuleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the server.
         *
         * @return DescribeModuleConfigResponse
         */
        public DescribeModuleConfigResponse DescribeModuleConfig()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeModuleConfigWithOptions(runtime);
        }

        /**
         * @summary The ID of the server.
         *
         * @return DescribeModuleConfigResponse
         */
        public async Task<DescribeModuleConfigResponse> DescribeModuleConfigAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeModuleConfigWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the list of accounts that are added to the multi-account management feature as members.
         *
         * @param request DescribeMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMonitorAccountsResponse
         */
        public DescribeMonitorAccountsResponse DescribeMonitorAccountsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMonitorAccountsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the list of accounts that are added to the multi-account management feature as members.
         *
         * @param request DescribeMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeMonitorAccountsResponse
         */
        public async Task<DescribeMonitorAccountsResponse> DescribeMonitorAccountsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeMonitorAccountsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the list of accounts that are added to the multi-account management feature as members.
         *
         * @return DescribeMonitorAccountsResponse
         */
        public DescribeMonitorAccountsResponse DescribeMonitorAccounts()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeMonitorAccountsWithOptions(runtime);
        }

        /**
         * @summary Queries the list of accounts that are added to the multi-account management feature as members.
         *
         * @return DescribeMonitorAccountsResponse
         */
        public async Task<DescribeMonitorAccountsResponse> DescribeMonitorAccountsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeMonitorAccountsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries notification settings.
         *
         * @param request DescribeNoticeConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeNoticeConfigResponse
         */
        public DescribeNoticeConfigResponse DescribeNoticeConfigWithOptions(DescribeNoticeConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeNoticeConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeNoticeConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries notification settings.
         *
         * @param request DescribeNoticeConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeNoticeConfigResponse
         */
        public async Task<DescribeNoticeConfigResponse> DescribeNoticeConfigWithOptionsAsync(DescribeNoticeConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeNoticeConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeNoticeConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries notification settings.
         *
         * @param request DescribeNoticeConfigRequest
         * @return DescribeNoticeConfigResponse
         */
        public DescribeNoticeConfigResponse DescribeNoticeConfig(DescribeNoticeConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeNoticeConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries notification settings.
         *
         * @param request DescribeNoticeConfigRequest
         * @return DescribeNoticeConfigResponse
         */
        public async Task<DescribeNoticeConfigResponse> DescribeNoticeConfigAsync(DescribeNoticeConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeNoticeConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about an alert type.
         *
         * @param request DescribeNsasSuspEventTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeNsasSuspEventTypeResponse
         */
        public DescribeNsasSuspEventTypeResponse DescribeNsasSuspEventTypeWithOptions(DescribeNsasSuspEventTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeNsasSuspEventType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeNsasSuspEventTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an alert type.
         *
         * @param request DescribeNsasSuspEventTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeNsasSuspEventTypeResponse
         */
        public async Task<DescribeNsasSuspEventTypeResponse> DescribeNsasSuspEventTypeWithOptionsAsync(DescribeNsasSuspEventTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeNsasSuspEventType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeNsasSuspEventTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an alert type.
         *
         * @param request DescribeNsasSuspEventTypeRequest
         * @return DescribeNsasSuspEventTypeResponse
         */
        public DescribeNsasSuspEventTypeResponse DescribeNsasSuspEventType(DescribeNsasSuspEventTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeNsasSuspEventTypeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about an alert type.
         *
         * @param request DescribeNsasSuspEventTypeRequest
         * @return DescribeNsasSuspEventTypeResponse
         */
        public async Task<DescribeNsasSuspEventTypeResponse> DescribeNsasSuspEventTypeAsync(DescribeNsasSuspEventTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeNsasSuspEventTypeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent status is Offline.
         *
         * @param request DescribeOfflineMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOfflineMachinesResponse
         */
        public DescribeOfflineMachinesResponse DescribeOfflineMachinesWithOptions(DescribeOfflineMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdStr))
            {
                query["RegionIdStr"] = request.RegionIdStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionNo))
            {
                query["RegionNo"] = request.RegionNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOfflineMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOfflineMachinesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent status is Offline.
         *
         * @param request DescribeOfflineMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOfflineMachinesResponse
         */
        public async Task<DescribeOfflineMachinesResponse> DescribeOfflineMachinesWithOptionsAsync(DescribeOfflineMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdStr))
            {
                query["RegionIdStr"] = request.RegionIdStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionNo))
            {
                query["RegionNo"] = request.RegionNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOfflineMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOfflineMachinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent status is Offline.
         *
         * @param request DescribeOfflineMachinesRequest
         * @return DescribeOfflineMachinesResponse
         */
        public DescribeOfflineMachinesResponse DescribeOfflineMachines(DescribeOfflineMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeOfflineMachinesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent status is Offline.
         *
         * @param request DescribeOfflineMachinesRequest
         * @return DescribeOfflineMachinesResponse
         */
        public async Task<DescribeOfflineMachinesResponse> DescribeOfflineMachinesAsync(DescribeOfflineMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeOfflineMachinesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries troubleshooting tasks for the Security Center agent.
         *
         * @param request DescribeOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOnceTaskResponse
         */
        public DescribeOnceTaskResponse DescribeOnceTaskWithOptions(DescribeOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeQuery))
            {
                query["EndTimeQuery"] = request.EndTimeQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeQuery))
            {
                query["StartTimeQuery"] = request.StartTimeQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOnceTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries troubleshooting tasks for the Security Center agent.
         *
         * @param request DescribeOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOnceTaskResponse
         */
        public async Task<DescribeOnceTaskResponse> DescribeOnceTaskWithOptionsAsync(DescribeOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeQuery))
            {
                query["EndTimeQuery"] = request.EndTimeQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeQuery))
            {
                query["StartTimeQuery"] = request.StartTimeQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOnceTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries troubleshooting tasks for the Security Center agent.
         *
         * @param request DescribeOnceTaskRequest
         * @return DescribeOnceTaskResponse
         */
        public DescribeOnceTaskResponse DescribeOnceTask(DescribeOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeOnceTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries troubleshooting tasks for the Security Center agent.
         *
         * @param request DescribeOnceTaskRequest
         * @return DescribeOnceTaskResponse
         */
        public async Task<DescribeOnceTaskResponse> DescribeOnceTaskAsync(DescribeOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeOnceTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the sub-task information of one-time scan task. A sub-task can be an image scan task or an image asset synchronization task.
         *
         * @param request DescribeOnceTaskLeafRecordPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOnceTaskLeafRecordPageResponse
         */
        public DescribeOnceTaskLeafRecordPageResponse DescribeOnceTaskLeafRecordPageWithOptions(DescribeOnceTaskLeafRecordPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RelateInfo))
            {
                query["RelateInfo"] = request.RelateInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOnceTaskLeafRecordPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOnceTaskLeafRecordPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the sub-task information of one-time scan task. A sub-task can be an image scan task or an image asset synchronization task.
         *
         * @param request DescribeOnceTaskLeafRecordPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeOnceTaskLeafRecordPageResponse
         */
        public async Task<DescribeOnceTaskLeafRecordPageResponse> DescribeOnceTaskLeafRecordPageWithOptionsAsync(DescribeOnceTaskLeafRecordPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RelateInfo))
            {
                query["RelateInfo"] = request.RelateInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeOnceTaskLeafRecordPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeOnceTaskLeafRecordPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the sub-task information of one-time scan task. A sub-task can be an image scan task or an image asset synchronization task.
         *
         * @param request DescribeOnceTaskLeafRecordPageRequest
         * @return DescribeOnceTaskLeafRecordPageResponse
         */
        public DescribeOnceTaskLeafRecordPageResponse DescribeOnceTaskLeafRecordPage(DescribeOnceTaskLeafRecordPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeOnceTaskLeafRecordPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the sub-task information of one-time scan task. A sub-task can be an image scan task or an image asset synchronization task.
         *
         * @param request DescribeOnceTaskLeafRecordPageRequest
         * @return DescribeOnceTaskLeafRecordPageResponse
         */
        public async Task<DescribeOnceTaskLeafRecordPageResponse> DescribeOnceTaskLeafRecordPageAsync(DescribeOnceTaskLeafRecordPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeOnceTaskLeafRecordPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of asset fingerprints. The assets include processes, ports, software, accounts, middleware, websites, web services, scheduled tasks, startup items, and databases.
         *
         * @param request DescribePropertyCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCountResponse
         */
        public DescribePropertyCountResponse DescribePropertyCountWithOptions(DescribePropertyCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of asset fingerprints. The assets include processes, ports, software, accounts, middleware, websites, web services, scheduled tasks, startup items, and databases.
         *
         * @param request DescribePropertyCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCountResponse
         */
        public async Task<DescribePropertyCountResponse> DescribePropertyCountWithOptionsAsync(DescribePropertyCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of asset fingerprints. The assets include processes, ports, software, accounts, middleware, websites, web services, scheduled tasks, startup items, and databases.
         *
         * @param request DescribePropertyCountRequest
         * @return DescribePropertyCountResponse
         */
        public DescribePropertyCountResponse DescribePropertyCount(DescribePropertyCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of asset fingerprints. The assets include processes, ports, software, accounts, middleware, websites, web services, scheduled tasks, startup items, and databases.
         *
         * @param request DescribePropertyCountRequest
         * @return DescribePropertyCountResponse
         */
        public async Task<DescribePropertyCountResponse> DescribePropertyCountAsync(DescribePropertyCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of scheduled tasks on the Host page.
         *
         * @param request DescribePropertyCronDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCronDetailResponse
         */
        public DescribePropertyCronDetailResponse DescribePropertyCronDetailWithOptions(DescribePropertyCronDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCronDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCronDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of scheduled tasks on the Host page.
         *
         * @param request DescribePropertyCronDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCronDetailResponse
         */
        public async Task<DescribePropertyCronDetailResponse> DescribePropertyCronDetailWithOptionsAsync(DescribePropertyCronDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCronDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCronDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of scheduled tasks on the Host page.
         *
         * @param request DescribePropertyCronDetailRequest
         * @return DescribePropertyCronDetailResponse
         */
        public DescribePropertyCronDetailResponse DescribePropertyCronDetail(DescribePropertyCronDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyCronDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of scheduled tasks on the Host page.
         *
         * @param request DescribePropertyCronDetailRequest
         * @return DescribePropertyCronDetailResponse
         */
        public async Task<DescribePropertyCronDetailResponse> DescribePropertyCronDetailAsync(DescribePropertyCronDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyCronDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the scheduled tasks of your assets.
         *
         * @param request DescribePropertyCronItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCronItemResponse
         */
        public DescribePropertyCronItemResponse DescribePropertyCronItemWithOptions(DescribePropertyCronItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCronItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCronItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the scheduled tasks of your assets.
         *
         * @param request DescribePropertyCronItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyCronItemResponse
         */
        public async Task<DescribePropertyCronItemResponse> DescribePropertyCronItemWithOptionsAsync(DescribePropertyCronItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyCronItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyCronItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the scheduled tasks of your assets.
         *
         * @param request DescribePropertyCronItemRequest
         * @return DescribePropertyCronItemResponse
         */
        public DescribePropertyCronItemResponse DescribePropertyCronItem(DescribePropertyCronItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyCronItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries the scheduled tasks of your assets.
         *
         * @param request DescribePropertyCronItemRequest
         * @return DescribePropertyCronItemResponse
         */
        public async Task<DescribePropertyCronItemResponse> DescribePropertyCronItemAsync(DescribePropertyCronItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyCronItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the fingerprints of ports on a specified server.
         *
         * @param request DescribePropertyPortDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyPortDetailResponse
         */
        public DescribePropertyPortDetailResponse DescribePropertyPortDetailWithOptions(DescribePropertyPortDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindIp))
            {
                query["BindIp"] = request.BindIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcName))
            {
                query["ProcName"] = request.ProcName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyPortDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyPortDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the fingerprints of ports on a specified server.
         *
         * @param request DescribePropertyPortDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyPortDetailResponse
         */
        public async Task<DescribePropertyPortDetailResponse> DescribePropertyPortDetailWithOptionsAsync(DescribePropertyPortDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindIp))
            {
                query["BindIp"] = request.BindIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcName))
            {
                query["ProcName"] = request.ProcName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyPortDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyPortDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the fingerprints of ports on a specified server.
         *
         * @param request DescribePropertyPortDetailRequest
         * @return DescribePropertyPortDetailResponse
         */
        public DescribePropertyPortDetailResponse DescribePropertyPortDetail(DescribePropertyPortDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyPortDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the fingerprints of ports on a specified server.
         *
         * @param request DescribePropertyPortDetailRequest
         * @return DescribePropertyPortDetailResponse
         */
        public async Task<DescribePropertyPortDetailResponse> DescribePropertyPortDetailAsync(DescribePropertyPortDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyPortDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about all ports.
         *
         * @param request DescribePropertyPortItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyPortItemResponse
         */
        public DescribePropertyPortItemResponse DescribePropertyPortItemWithOptions(DescribePropertyPortItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyPortItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyPortItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about all ports.
         *
         * @param request DescribePropertyPortItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyPortItemResponse
         */
        public async Task<DescribePropertyPortItemResponse> DescribePropertyPortItemWithOptionsAsync(DescribePropertyPortItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyPortItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyPortItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about all ports.
         *
         * @param request DescribePropertyPortItemRequest
         * @return DescribePropertyPortItemResponse
         */
        public DescribePropertyPortItemResponse DescribePropertyPortItem(DescribePropertyPortItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyPortItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about all ports.
         *
         * @param request DescribePropertyPortItemRequest
         * @return DescribePropertyPortItemResponse
         */
        public async Task<DescribePropertyPortItemResponse> DescribePropertyPortItemAsync(DescribePropertyPortItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyPortItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the fingerprints of processes on a specified server.
         *
         * @param request DescribePropertyProcDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyProcDetailResponse
         */
        public DescribePropertyProcDetailResponse DescribePropertyProcDetailWithOptions(DescribePropertyProcDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcTimeEnd))
            {
                query["ProcTimeEnd"] = request.ProcTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcTimeStart))
            {
                query["ProcTimeStart"] = request.ProcTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyProcDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyProcDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the fingerprints of processes on a specified server.
         *
         * @param request DescribePropertyProcDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyProcDetailResponse
         */
        public async Task<DescribePropertyProcDetailResponse> DescribePropertyProcDetailWithOptionsAsync(DescribePropertyProcDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcTimeEnd))
            {
                query["ProcTimeEnd"] = request.ProcTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcTimeStart))
            {
                query["ProcTimeStart"] = request.ProcTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyProcDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyProcDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the fingerprints of processes on a specified server.
         *
         * @param request DescribePropertyProcDetailRequest
         * @return DescribePropertyProcDetailResponse
         */
        public DescribePropertyProcDetailResponse DescribePropertyProcDetail(DescribePropertyProcDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyProcDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the fingerprints of processes on a specified server.
         *
         * @param request DescribePropertyProcDetailRequest
         * @return DescribePropertyProcDetailResponse
         */
        public async Task<DescribePropertyProcDetailResponse> DescribePropertyProcDetailAsync(DescribePropertyProcDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyProcDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about all processes.
         *
         * @param request DescribePropertyProcItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyProcItemResponse
         */
        public DescribePropertyProcItemResponse DescribePropertyProcItemWithOptions(DescribePropertyProcItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyProcItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyProcItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about all processes.
         *
         * @param request DescribePropertyProcItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyProcItemResponse
         */
        public async Task<DescribePropertyProcItemResponse> DescribePropertyProcItemWithOptionsAsync(DescribePropertyProcItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyProcItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyProcItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about all processes.
         *
         * @param request DescribePropertyProcItemRequest
         * @return DescribePropertyProcItemResponse
         */
        public DescribePropertyProcItemResponse DescribePropertyProcItem(DescribePropertyProcItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyProcItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about all processes.
         *
         * @param request DescribePropertyProcItemRequest
         * @return DescribePropertyProcItemResponse
         */
        public async Task<DescribePropertyProcItemResponse> DescribePropertyProcItemAsync(DescribePropertyProcItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyProcItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScaDetailResponse
         */
        public DescribePropertyScaDetailResponse DescribePropertyScaDetailWithOptions(DescribePropertyScaDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizType))
            {
                query["BizType"] = request.BizType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessStartedEnd))
            {
                query["ProcessStartedEnd"] = request.ProcessStartedEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessStartedStart))
            {
                query["ProcessStartedStart"] = request.ProcessStartedStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaName))
            {
                query["ScaName"] = request.ScaName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaNamePattern))
            {
                query["ScaNamePattern"] = request.ScaNamePattern;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaVersion))
            {
                query["ScaVersion"] = request.ScaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfoSub))
            {
                query["SearchInfoSub"] = request.SearchInfoSub;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItemSub))
            {
                query["SearchItemSub"] = request.SearchItemSub;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScaDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScaDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScaDetailResponse
         */
        public async Task<DescribePropertyScaDetailResponse> DescribePropertyScaDetailWithOptionsAsync(DescribePropertyScaDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizType))
            {
                query["BizType"] = request.BizType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessStartedEnd))
            {
                query["ProcessStartedEnd"] = request.ProcessStartedEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessStartedStart))
            {
                query["ProcessStartedStart"] = request.ProcessStartedStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaName))
            {
                query["ScaName"] = request.ScaName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaNamePattern))
            {
                query["ScaNamePattern"] = request.ScaNamePattern;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScaVersion))
            {
                query["ScaVersion"] = request.ScaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfoSub))
            {
                query["SearchInfoSub"] = request.SearchInfoSub;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItemSub))
            {
                query["SearchItemSub"] = request.SearchItemSub;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScaDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScaDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaDetailRequest
         * @return DescribePropertyScaDetailResponse
         */
        public DescribePropertyScaDetailResponse DescribePropertyScaDetail(DescribePropertyScaDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyScaDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaDetailRequest
         * @return DescribePropertyScaDetailResponse
         */
        public async Task<DescribePropertyScaDetailResponse> DescribePropertyScaDetailAsync(DescribePropertyScaDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyScaDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScaItemResponse
         */
        public DescribePropertyScaItemResponse DescribePropertyScaItemWithOptions(DescribePropertyScaItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScaItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScaItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScaItemResponse
         */
        public async Task<DescribePropertyScaItemResponse> DescribePropertyScaItemWithOptionsAsync(DescribePropertyScaItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScaItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScaItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaItemRequest
         * @return DescribePropertyScaItemResponse
         */
        public DescribePropertyScaItemResponse DescribePropertyScaItem(DescribePropertyScaItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyScaItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries middleware fingerprints.
         *
         * @param request DescribePropertyScaItemRequest
         * @return DescribePropertyScaItemResponse
         */
        public async Task<DescribePropertyScaItemResponse> DescribePropertyScaItemAsync(DescribePropertyScaItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyScaItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of scheduled tasks of asset fingerprint collection.
         *
         * @param request DescribePropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScheduleConfigResponse
         */
        public DescribePropertyScheduleConfigResponse DescribePropertyScheduleConfigWithOptions(DescribePropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScheduleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of scheduled tasks of asset fingerprint collection.
         *
         * @param request DescribePropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyScheduleConfigResponse
         */
        public async Task<DescribePropertyScheduleConfigResponse> DescribePropertyScheduleConfigWithOptionsAsync(DescribePropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyScheduleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of scheduled tasks of asset fingerprint collection.
         *
         * @param request DescribePropertyScheduleConfigRequest
         * @return DescribePropertyScheduleConfigResponse
         */
        public DescribePropertyScheduleConfigResponse DescribePropertyScheduleConfig(DescribePropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyScheduleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of scheduled tasks of asset fingerprint collection.
         *
         * @param request DescribePropertyScheduleConfigRequest
         * @return DescribePropertyScheduleConfigResponse
         */
        public async Task<DescribePropertyScheduleConfigResponse> DescribePropertyScheduleConfigAsync(DescribePropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyScheduleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a software asset.
         *
         * @param request DescribePropertySoftwareDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertySoftwareDetailResponse
         */
        public DescribePropertySoftwareDetailResponse DescribePropertySoftwareDetailWithOptions(DescribePropertySoftwareDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallTimeEnd))
            {
                query["InstallTimeEnd"] = request.InstallTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallTimeStart))
            {
                query["InstallTimeStart"] = request.InstallTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoftwareVersion))
            {
                query["SoftwareVersion"] = request.SoftwareVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertySoftwareDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertySoftwareDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a software asset.
         *
         * @param request DescribePropertySoftwareDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertySoftwareDetailResponse
         */
        public async Task<DescribePropertySoftwareDetailResponse> DescribePropertySoftwareDetailWithOptionsAsync(DescribePropertySoftwareDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallTimeEnd))
            {
                query["InstallTimeEnd"] = request.InstallTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallTimeStart))
            {
                query["InstallTimeStart"] = request.InstallTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoftwareVersion))
            {
                query["SoftwareVersion"] = request.SoftwareVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertySoftwareDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertySoftwareDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a software asset.
         *
         * @param request DescribePropertySoftwareDetailRequest
         * @return DescribePropertySoftwareDetailResponse
         */
        public DescribePropertySoftwareDetailResponse DescribePropertySoftwareDetail(DescribePropertySoftwareDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertySoftwareDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a software asset.
         *
         * @param request DescribePropertySoftwareDetailRequest
         * @return DescribePropertySoftwareDetailResponse
         */
        public async Task<DescribePropertySoftwareDetailResponse> DescribePropertySoftwareDetailAsync(DescribePropertySoftwareDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertySoftwareDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about all software assets.
         *
         * @param request DescribePropertySoftwareItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertySoftwareItemResponse
         */
        public DescribePropertySoftwareItemResponse DescribePropertySoftwareItemWithOptions(DescribePropertySoftwareItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertySoftwareItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertySoftwareItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about all software assets.
         *
         * @param request DescribePropertySoftwareItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertySoftwareItemResponse
         */
        public async Task<DescribePropertySoftwareItemResponse> DescribePropertySoftwareItemWithOptionsAsync(DescribePropertySoftwareItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertySoftwareItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertySoftwareItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about all software assets.
         *
         * @param request DescribePropertySoftwareItemRequest
         * @return DescribePropertySoftwareItemResponse
         */
        public DescribePropertySoftwareItemResponse DescribePropertySoftwareItem(DescribePropertySoftwareItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertySoftwareItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about all software assets.
         *
         * @param request DescribePropertySoftwareItemRequest
         * @return DescribePropertySoftwareItemResponse
         */
        public async Task<DescribePropertySoftwareItemResponse> DescribePropertySoftwareItemAsync(DescribePropertySoftwareItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertySoftwareItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries middleware types.
         *
         * @param request DescribePropertyTypeScaItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyTypeScaItemResponse
         */
        public DescribePropertyTypeScaItemResponse DescribePropertyTypeScaItemWithOptions(DescribePropertyTypeScaItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyTypeScaItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyTypeScaItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries middleware types.
         *
         * @param request DescribePropertyTypeScaItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyTypeScaItemResponse
         */
        public async Task<DescribePropertyTypeScaItemResponse> DescribePropertyTypeScaItemWithOptionsAsync(DescribePropertyTypeScaItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyTypeScaItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyTypeScaItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries middleware types.
         *
         * @param request DescribePropertyTypeScaItemRequest
         * @return DescribePropertyTypeScaItemResponse
         */
        public DescribePropertyTypeScaItemResponse DescribePropertyTypeScaItem(DescribePropertyTypeScaItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyTypeScaItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries middleware types.
         *
         * @param request DescribePropertyTypeScaItemRequest
         * @return DescribePropertyTypeScaItemResponse
         */
        public async Task<DescribePropertyTypeScaItemResponse> DescribePropertyTypeScaItemAsync(DescribePropertyTypeScaItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyTypeScaItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询资产指纹用户创建时间统计
         *
         * @param request DescribePropertyUsageNewestRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUsageNewestResponse
         */
        public DescribePropertyUsageNewestResponse DescribePropertyUsageNewestWithOptions(DescribePropertyUsageNewestRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUsageNewest",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUsageNewestResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询资产指纹用户创建时间统计
         *
         * @param request DescribePropertyUsageNewestRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUsageNewestResponse
         */
        public async Task<DescribePropertyUsageNewestResponse> DescribePropertyUsageNewestWithOptionsAsync(DescribePropertyUsageNewestRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUsageNewest",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUsageNewestResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询资产指纹用户创建时间统计
         *
         * @param request DescribePropertyUsageNewestRequest
         * @return DescribePropertyUsageNewestResponse
         */
        public DescribePropertyUsageNewestResponse DescribePropertyUsageNewest(DescribePropertyUsageNewestRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyUsageNewestWithOptions(request, runtime);
        }

        /**
         * @summary 查询资产指纹用户创建时间统计
         *
         * @param request DescribePropertyUsageNewestRequest
         * @return DescribePropertyUsageNewestResponse
         */
        public async Task<DescribePropertyUsageNewestResponse> DescribePropertyUsageNewestAsync(DescribePropertyUsageNewestRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyUsageNewestWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the asset fingerprints for an account to which a server belongs.
         *
         * @param request DescribePropertyUserDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUserDetailResponse
         */
        public DescribePropertyUserDetailResponse DescribePropertyUserDetailWithOptions(DescribePropertyUserDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsRoot))
            {
                query["IsRoot"] = request.IsRoot;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LastLoginTimeEnd))
            {
                query["LastLoginTimeEnd"] = request.LastLoginTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LastLoginTimeStart))
            {
                query["LastLoginTimeStart"] = request.LastLoginTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUserDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUserDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the asset fingerprints for an account to which a server belongs.
         *
         * @param request DescribePropertyUserDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUserDetailResponse
         */
        public async Task<DescribePropertyUserDetailResponse> DescribePropertyUserDetailWithOptionsAsync(DescribePropertyUserDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Extend))
            {
                query["Extend"] = request.Extend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsRoot))
            {
                query["IsRoot"] = request.IsRoot;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LastLoginTimeEnd))
            {
                query["LastLoginTimeEnd"] = request.LastLoginTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LastLoginTimeStart))
            {
                query["LastLoginTimeStart"] = request.LastLoginTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUserDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUserDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the asset fingerprints for an account to which a server belongs.
         *
         * @param request DescribePropertyUserDetailRequest
         * @return DescribePropertyUserDetailResponse
         */
        public DescribePropertyUserDetailResponse DescribePropertyUserDetail(DescribePropertyUserDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyUserDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the asset fingerprints for an account to which a server belongs.
         *
         * @param request DescribePropertyUserDetailRequest
         * @return DescribePropertyUserDetailResponse
         */
        public async Task<DescribePropertyUserDetailResponse> DescribePropertyUserDetailAsync(DescribePropertyUserDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyUserDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about an account.
         *
         * @param request DescribePropertyUserItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUserItemResponse
         */
        public DescribePropertyUserItemResponse DescribePropertyUserItemWithOptions(DescribePropertyUserItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUserItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUserItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about an account.
         *
         * @param request DescribePropertyUserItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePropertyUserItemResponse
         */
        public async Task<DescribePropertyUserItemResponse> DescribePropertyUserItemWithOptionsAsync(DescribePropertyUserItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.User))
            {
                query["User"] = request.User;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePropertyUserItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePropertyUserItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about an account.
         *
         * @param request DescribePropertyUserItemRequest
         * @return DescribePropertyUserItemResponse
         */
        public DescribePropertyUserItemResponse DescribePropertyUserItem(DescribePropertyUserItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePropertyUserItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about an account.
         *
         * @param request DescribePropertyUserItemRequest
         * @return DescribePropertyUserItemResponse
         */
        public async Task<DescribePropertyUserItemResponse> DescribePropertyUserItemAsync(DescribePropertyUserItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePropertyUserItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the download information about a quarantined file.
         *
         * @param request DescribeQuaraFileDownloadInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeQuaraFileDownloadInfoResponse
         */
        public DescribeQuaraFileDownloadInfoResponse DescribeQuaraFileDownloadInfoWithOptions(DescribeQuaraFileDownloadInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileId))
            {
                query["QuaraFileId"] = request.QuaraFileId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeQuaraFileDownloadInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeQuaraFileDownloadInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the download information about a quarantined file.
         *
         * @param request DescribeQuaraFileDownloadInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeQuaraFileDownloadInfoResponse
         */
        public async Task<DescribeQuaraFileDownloadInfoResponse> DescribeQuaraFileDownloadInfoWithOptionsAsync(DescribeQuaraFileDownloadInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileId))
            {
                query["QuaraFileId"] = request.QuaraFileId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeQuaraFileDownloadInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeQuaraFileDownloadInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the download information about a quarantined file.
         *
         * @param request DescribeQuaraFileDownloadInfoRequest
         * @return DescribeQuaraFileDownloadInfoResponse
         */
        public DescribeQuaraFileDownloadInfoResponse DescribeQuaraFileDownloadInfo(DescribeQuaraFileDownloadInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeQuaraFileDownloadInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the download information about a quarantined file.
         *
         * @param request DescribeQuaraFileDownloadInfoRequest
         * @return DescribeQuaraFileDownloadInfoResponse
         */
        public async Task<DescribeQuaraFileDownloadInfoResponse> DescribeQuaraFileDownloadInfoAsync(DescribeQuaraFileDownloadInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeQuaraFileDownloadInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about restoration tasks.
         *
         * @description If the data on your servers is encrypted by ransomware, you can create a restoration task to restore the data on your servers by using backup data in Security Center.
         * >  After you enable an anti-ransomware policy, the data on your servers is backed up based on the policy. For more information about anti-ransomware policies, see [Manage protection policies](https://help.aliyun.com/document_detail/164781.html).
         *
         * @param request DescribeRestoreJobsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRestoreJobsResponse
         */
        public DescribeRestoreJobsResponse DescribeRestoreJobsWithOptions(DescribeRestoreJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRestoreJobs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRestoreJobsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about restoration tasks.
         *
         * @description If the data on your servers is encrypted by ransomware, you can create a restoration task to restore the data on your servers by using backup data in Security Center.
         * >  After you enable an anti-ransomware policy, the data on your servers is backed up based on the policy. For more information about anti-ransomware policies, see [Manage protection policies](https://help.aliyun.com/document_detail/164781.html).
         *
         * @param request DescribeRestoreJobsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRestoreJobsResponse
         */
        public async Task<DescribeRestoreJobsResponse> DescribeRestoreJobsWithOptionsAsync(DescribeRestoreJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRestoreJobs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRestoreJobsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about restoration tasks.
         *
         * @description If the data on your servers is encrypted by ransomware, you can create a restoration task to restore the data on your servers by using backup data in Security Center.
         * >  After you enable an anti-ransomware policy, the data on your servers is backed up based on the policy. For more information about anti-ransomware policies, see [Manage protection policies](https://help.aliyun.com/document_detail/164781.html).
         *
         * @param request DescribeRestoreJobsRequest
         * @return DescribeRestoreJobsResponse
         */
        public DescribeRestoreJobsResponse DescribeRestoreJobs(DescribeRestoreJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRestoreJobsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about restoration tasks.
         *
         * @description If the data on your servers is encrypted by ransomware, you can create a restoration task to restore the data on your servers by using backup data in Security Center.
         * >  After you enable an anti-ransomware policy, the data on your servers is backed up based on the policy. For more information about anti-ransomware policies, see [Manage protection policies](https://help.aliyun.com/document_detail/164781.html).
         *
         * @param request DescribeRestoreJobsRequest
         * @return DescribeRestoreJobsResponse
         */
        public async Task<DescribeRestoreJobsResponse> DescribeRestoreJobsAsync(DescribeRestoreJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRestoreJobsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries restoration tasks.
         *
         * @param request DescribeRestorePlansRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRestorePlansResponse
         */
        public DescribeRestorePlansResponse DescribeRestorePlansWithOptions(DescribeRestorePlansRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRestorePlans",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRestorePlansResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries restoration tasks.
         *
         * @param request DescribeRestorePlansRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRestorePlansResponse
         */
        public async Task<DescribeRestorePlansResponse> DescribeRestorePlansWithOptionsAsync(DescribeRestorePlansRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRestorePlans",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRestorePlansResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries restoration tasks.
         *
         * @param request DescribeRestorePlansRequest
         * @return DescribeRestorePlansResponse
         */
        public DescribeRestorePlansResponse DescribeRestorePlans(DescribeRestorePlansRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRestorePlansWithOptions(request, runtime);
        }

        /**
         * @summary Queries restoration tasks.
         *
         * @param request DescribeRestorePlansRequest
         * @return DescribeRestorePlansResponse
         */
        public async Task<DescribeRestorePlansResponse> DescribeRestorePlansAsync(DescribeRestorePlansRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRestorePlansWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckItemResult is deprecated
         *
         * @summary Queries the assets that are affected by the risk item detected in configuration assessment based on a specified check item.
         *
         * @description This operation is phased out. You can use the ListCheckInstanceResult operation.
         *
         * @param request DescribeRiskCheckItemResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckItemResultResponse
         */
        // Deprecated
        public DescribeRiskCheckItemResultResponse DescribeRiskCheckItemResultWithOptions(DescribeRiskCheckItemResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemId))
            {
                query["ItemId"] = request.ItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckItemResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckItemResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckItemResult is deprecated
         *
         * @summary Queries the assets that are affected by the risk item detected in configuration assessment based on a specified check item.
         *
         * @description This operation is phased out. You can use the ListCheckInstanceResult operation.
         *
         * @param request DescribeRiskCheckItemResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckItemResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckItemResultResponse> DescribeRiskCheckItemResultWithOptionsAsync(DescribeRiskCheckItemResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemId))
            {
                query["ItemId"] = request.ItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckItemResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckItemResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckItemResult is deprecated
         *
         * @summary Queries the assets that are affected by the risk item detected in configuration assessment based on a specified check item.
         *
         * @description This operation is phased out. You can use the ListCheckInstanceResult operation.
         *
         * @param request DescribeRiskCheckItemResultRequest
         * @return DescribeRiskCheckItemResultResponse
         */
        // Deprecated
        public DescribeRiskCheckItemResultResponse DescribeRiskCheckItemResult(DescribeRiskCheckItemResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskCheckItemResultWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckItemResult is deprecated
         *
         * @summary Queries the assets that are affected by the risk item detected in configuration assessment based on a specified check item.
         *
         * @description This operation is phased out. You can use the ListCheckInstanceResult operation.
         *
         * @param request DescribeRiskCheckItemResultRequest
         * @return DescribeRiskCheckItemResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckItemResultResponse> DescribeRiskCheckItemResultAsync(DescribeRiskCheckItemResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskCheckItemResultWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckResult is deprecated
         *
         * @summary Queries the check results of cloud service configurations by check item type or name.
         *
         * @description This operation is phased out. You can use the [ListCheckResult](~~ListCheckResult~~) operation.
         *
         * @param request DescribeRiskCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckResultResponse
         */
        // Deprecated
        public DescribeRiskCheckResultResponse DescribeRiskCheckResultWithOptions(DescribeRiskCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemIds))
            {
                query["ItemIds"] = request.ItemIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryFlag))
            {
                query["QueryFlag"] = request.QueryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckResult is deprecated
         *
         * @summary Queries the check results of cloud service configurations by check item type or name.
         *
         * @description This operation is phased out. You can use the [ListCheckResult](~~ListCheckResult~~) operation.
         *
         * @param request DescribeRiskCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckResultResponse> DescribeRiskCheckResultWithOptionsAsync(DescribeRiskCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemIds))
            {
                query["ItemIds"] = request.ItemIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryFlag))
            {
                query["QueryFlag"] = request.QueryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckResult is deprecated
         *
         * @summary Queries the check results of cloud service configurations by check item type or name.
         *
         * @description This operation is phased out. You can use the [ListCheckResult](~~ListCheckResult~~) operation.
         *
         * @param request DescribeRiskCheckResultRequest
         * @return DescribeRiskCheckResultResponse
         */
        // Deprecated
        public DescribeRiskCheckResultResponse DescribeRiskCheckResult(DescribeRiskCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskCheckResultWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckResult is deprecated
         *
         * @summary Queries the check results of cloud service configurations by check item type or name.
         *
         * @description This operation is phased out. You can use the [ListCheckResult](~~ListCheckResult~~) operation.
         *
         * @param request DescribeRiskCheckResultRequest
         * @return DescribeRiskCheckResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckResultResponse> DescribeRiskCheckResultAsync(DescribeRiskCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskCheckResultWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckSummary is deprecated
         *
         * @summary Queries the summary information about the check results of cloud service configurations. The information includes the number of risk items, the risk rate, the number of affected assets, the check time, and the statistics for each type of check item.
         *
         * @description This operation is phased out. You can use the GetCheckSummary operation.
         *
         * @param request DescribeRiskCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckSummaryResponse
         */
        // Deprecated
        public DescribeRiskCheckSummaryResponse DescribeRiskCheckSummaryWithOptions(DescribeRiskCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckSummary is deprecated
         *
         * @summary Queries the summary information about the check results of cloud service configurations. The information includes the number of risk items, the risk rate, the number of affected assets, the check time, and the statistics for each type of check item.
         *
         * @description This operation is phased out. You can use the GetCheckSummary operation.
         *
         * @param request DescribeRiskCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskCheckSummaryResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckSummaryResponse> DescribeRiskCheckSummaryWithOptionsAsync(DescribeRiskCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskCheckSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckSummary is deprecated
         *
         * @summary Queries the summary information about the check results of cloud service configurations. The information includes the number of risk items, the risk rate, the number of affected assets, the check time, and the statistics for each type of check item.
         *
         * @description This operation is phased out. You can use the GetCheckSummary operation.
         *
         * @param request DescribeRiskCheckSummaryRequest
         * @return DescribeRiskCheckSummaryResponse
         */
        // Deprecated
        public DescribeRiskCheckSummaryResponse DescribeRiskCheckSummary(DescribeRiskCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskCheckSummaryWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskCheckSummary is deprecated
         *
         * @summary Queries the summary information about the check results of cloud service configurations. The information includes the number of risk items, the risk rate, the number of affected assets, the check time, and the statistics for each type of check item.
         *
         * @description This operation is phased out. You can use the GetCheckSummary operation.
         *
         * @param request DescribeRiskCheckSummaryRequest
         * @return DescribeRiskCheckSummaryResponse
         */
        // Deprecated
        public async Task<DescribeRiskCheckSummaryResponse> DescribeRiskCheckSummaryAsync(DescribeRiskCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskCheckSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskItemType is deprecated
         *
         * @summary Queries the types of check items in configuration assessment.
         *
         * @description This operation is phased out. You can use the ListCheckStandard operation instead.
         *
         * @param request DescribeRiskItemTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskItemTypeResponse
         */
        // Deprecated
        public DescribeRiskItemTypeResponse DescribeRiskItemTypeWithOptions(DescribeRiskItemTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskItemType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskItemTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskItemType is deprecated
         *
         * @summary Queries the types of check items in configuration assessment.
         *
         * @description This operation is phased out. You can use the ListCheckStandard operation instead.
         *
         * @param request DescribeRiskItemTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskItemTypeResponse
         */
        // Deprecated
        public async Task<DescribeRiskItemTypeResponse> DescribeRiskItemTypeWithOptionsAsync(DescribeRiskItemTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskItemType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskItemTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskItemType is deprecated
         *
         * @summary Queries the types of check items in configuration assessment.
         *
         * @description This operation is phased out. You can use the ListCheckStandard operation instead.
         *
         * @param request DescribeRiskItemTypeRequest
         * @return DescribeRiskItemTypeResponse
         */
        // Deprecated
        public DescribeRiskItemTypeResponse DescribeRiskItemType(DescribeRiskItemTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskItemTypeWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskItemType is deprecated
         *
         * @summary Queries the types of check items in configuration assessment.
         *
         * @description This operation is phased out. You can use the ListCheckStandard operation instead.
         *
         * @param request DescribeRiskItemTypeRequest
         * @return DescribeRiskItemTypeResponse
         */
        // Deprecated
        public async Task<DescribeRiskItemTypeResponse> DescribeRiskItemTypeAsync(DescribeRiskItemTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskItemTypeWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskListCheckResult is deprecated
         *
         * @summary Queries the number of risk items detected in the configuration assessment of one or more cloud services by using the instance IDs of the cloud services.
         *
         * @description This operation is phased out. You can use the ListCheckResult operation. When you call the ListCheckResult operation, set the Statuses parameter to NOT_PASS.
         *
         * @param request DescribeRiskListCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskListCheckResultResponse
         */
        // Deprecated
        public DescribeRiskListCheckResultResponse DescribeRiskListCheckResultWithOptions(DescribeRiskListCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskListCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskListCheckResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskListCheckResult is deprecated
         *
         * @summary Queries the number of risk items detected in the configuration assessment of one or more cloud services by using the instance IDs of the cloud services.
         *
         * @description This operation is phased out. You can use the ListCheckResult operation. When you call the ListCheckResult operation, set the Statuses parameter to NOT_PASS.
         *
         * @param request DescribeRiskListCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskListCheckResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskListCheckResultResponse> DescribeRiskListCheckResultWithOptionsAsync(DescribeRiskListCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskListCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskListCheckResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeRiskListCheckResult is deprecated
         *
         * @summary Queries the number of risk items detected in the configuration assessment of one or more cloud services by using the instance IDs of the cloud services.
         *
         * @description This operation is phased out. You can use the ListCheckResult operation. When you call the ListCheckResult operation, set the Statuses parameter to NOT_PASS.
         *
         * @param request DescribeRiskListCheckResultRequest
         * @return DescribeRiskListCheckResultResponse
         */
        // Deprecated
        public DescribeRiskListCheckResultResponse DescribeRiskListCheckResult(DescribeRiskListCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskListCheckResultWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeRiskListCheckResult is deprecated
         *
         * @summary Queries the number of risk items detected in the configuration assessment of one or more cloud services by using the instance IDs of the cloud services.
         *
         * @description This operation is phased out. You can use the ListCheckResult operation. When you call the ListCheckResult operation, set the Statuses parameter to NOT_PASS.
         *
         * @param request DescribeRiskListCheckResultRequest
         * @return DescribeRiskListCheckResultResponse
         */
        // Deprecated
        public async Task<DescribeRiskListCheckResultResponse> DescribeRiskListCheckResultAsync(DescribeRiskListCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskListCheckResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries baseline types.
         *
         * @param request DescribeRiskTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskTypeResponse
         */
        public DescribeRiskTypeResponse DescribeRiskTypeWithOptions(DescribeRiskTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries baseline types.
         *
         * @param request DescribeRiskTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRiskTypeResponse
         */
        public async Task<DescribeRiskTypeResponse> DescribeRiskTypeWithOptionsAsync(DescribeRiskTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRiskType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRiskTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries baseline types.
         *
         * @param request DescribeRiskTypeRequest
         * @return DescribeRiskTypeResponse
         */
        public DescribeRiskTypeResponse DescribeRiskType(DescribeRiskTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRiskTypeWithOptions(request, runtime);
        }

        /**
         * @summary Queries baseline types.
         *
         * @param request DescribeRiskTypeRequest
         * @return DescribeRiskTypeResponse
         */
        public async Task<DescribeRiskTypeResponse> DescribeRiskTypeAsync(DescribeRiskTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRiskTypeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about baselines based on baseline IDs or names.
         *
         * @param request DescribeRisksRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRisksResponse
         */
        public DescribeRisksResponse DescribeRisksWithOptions(DescribeRisksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRisks",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRisksResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about baselines based on baseline IDs or names.
         *
         * @param request DescribeRisksRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeRisksResponse
         */
        public async Task<DescribeRisksResponse> DescribeRisksWithOptionsAsync(DescribeRisksRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeRisks",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeRisksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about baselines based on baseline IDs or names.
         *
         * @param request DescribeRisksRequest
         * @return DescribeRisksResponse
         */
        public DescribeRisksResponse DescribeRisks(DescribeRisksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeRisksWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about baselines based on baseline IDs or names.
         *
         * @param request DescribeRisksRequest
         * @return DescribeRisksResponse
         */
        public async Task<DescribeRisksResponse> DescribeRisksAsync(DescribeRisksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeRisksWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the servers on which you want to install Cloud Assistant or the CloudMonitor agent.
         *
         * @param request DescribeSasPmAgentListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSasPmAgentListResponse
         */
        public DescribeSasPmAgentListResponse DescribeSasPmAgentListWithOptions(DescribeSasPmAgentListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSasPmAgentList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSasPmAgentListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which you want to install Cloud Assistant or the CloudMonitor agent.
         *
         * @param request DescribeSasPmAgentListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSasPmAgentListResponse
         */
        public async Task<DescribeSasPmAgentListResponse> DescribeSasPmAgentListWithOptionsAsync(DescribeSasPmAgentListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSasPmAgentList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSasPmAgentListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which you want to install Cloud Assistant or the CloudMonitor agent.
         *
         * @param request DescribeSasPmAgentListRequest
         * @return DescribeSasPmAgentListResponse
         */
        public DescribeSasPmAgentListResponse DescribeSasPmAgentList(DescribeSasPmAgentListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSasPmAgentListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the servers on which you want to install Cloud Assistant or the CloudMonitor agent.
         *
         * @param request DescribeSasPmAgentListRequest
         * @return DescribeSasPmAgentListResponse
         */
        public async Task<DescribeSasPmAgentListResponse> DescribeSasPmAgentListAsync(DescribeSasPmAgentListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSasPmAgentListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary DescribeScanTaskProgress
         *
         * @param request DescribeScanTaskProgressRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeScanTaskProgressResponse
         */
        public DescribeScanTaskProgressResponse DescribeScanTaskProgressWithOptions(DescribeScanTaskProgressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeScanTaskProgress",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeScanTaskProgressResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary DescribeScanTaskProgress
         *
         * @param request DescribeScanTaskProgressRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeScanTaskProgressResponse
         */
        public async Task<DescribeScanTaskProgressResponse> DescribeScanTaskProgressWithOptionsAsync(DescribeScanTaskProgressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeScanTaskProgress",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeScanTaskProgressResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary DescribeScanTaskProgress
         *
         * @param request DescribeScanTaskProgressRequest
         * @return DescribeScanTaskProgressResponse
         */
        public DescribeScanTaskProgressResponse DescribeScanTaskProgress(DescribeScanTaskProgressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeScanTaskProgressWithOptions(request, runtime);
        }

        /**
         * @summary DescribeScanTaskProgress
         *
         * @param request DescribeScanTaskProgressRequest
         * @return DescribeScanTaskProgressResponse
         */
        public async Task<DescribeScanTaskProgressResponse> DescribeScanTaskProgressAsync(DescribeScanTaskProgressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeScanTaskProgressWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of virus detection tasks.
         *
         * @param request DescribeScanTaskStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeScanTaskStatisticsResponse
         */
        public DescribeScanTaskStatisticsResponse DescribeScanTaskStatisticsWithOptions(DescribeScanTaskStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeScanTaskStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeScanTaskStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of virus detection tasks.
         *
         * @param request DescribeScanTaskStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeScanTaskStatisticsResponse
         */
        public async Task<DescribeScanTaskStatisticsResponse> DescribeScanTaskStatisticsWithOptionsAsync(DescribeScanTaskStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeScanTaskStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeScanTaskStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of virus detection tasks.
         *
         * @param request DescribeScanTaskStatisticsRequest
         * @return DescribeScanTaskStatisticsResponse
         */
        public DescribeScanTaskStatisticsResponse DescribeScanTaskStatistics(DescribeScanTaskStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeScanTaskStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of virus detection tasks.
         *
         * @param request DescribeScanTaskStatisticsRequest
         * @return DescribeScanTaskStatisticsResponse
         */
        public async Task<DescribeScanTaskStatisticsResponse> DescribeScanTaskStatisticsAsync(DescribeScanTaskStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeScanTaskStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询资产的筛选条件
         *
         * @param request DescribeSearchConditionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSearchConditionResponse
         */
        public DescribeSearchConditionResponse DescribeSearchConditionWithOptions(DescribeSearchConditionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSearchCondition",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSearchConditionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询资产的筛选条件
         *
         * @param request DescribeSearchConditionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSearchConditionResponse
         */
        public async Task<DescribeSearchConditionResponse> DescribeSearchConditionWithOptionsAsync(DescribeSearchConditionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSearchCondition",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSearchConditionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询资产的筛选条件
         *
         * @param request DescribeSearchConditionRequest
         * @return DescribeSearchConditionResponse
         */
        public DescribeSearchConditionResponse DescribeSearchCondition(DescribeSearchConditionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSearchConditionWithOptions(request, runtime);
        }

        /**
         * @summary 查询资产的筛选条件
         *
         * @param request DescribeSearchConditionRequest
         * @return DescribeSearchConditionResponse
         */
        public async Task<DescribeSearchConditionResponse> DescribeSearchConditionAsync(DescribeSearchConditionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSearchConditionWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries suggestions on how to handle the risks that affect the security score.
         *
         * @param request DescribeSecureSuggestionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecureSuggestionResponse
         */
        public DescribeSecureSuggestionResponse DescribeSecureSuggestionWithOptions(DescribeSecureSuggestionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecureSuggestion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecureSuggestionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries suggestions on how to handle the risks that affect the security score.
         *
         * @param request DescribeSecureSuggestionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecureSuggestionResponse
         */
        public async Task<DescribeSecureSuggestionResponse> DescribeSecureSuggestionWithOptionsAsync(DescribeSecureSuggestionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecureSuggestion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecureSuggestionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries suggestions on how to handle the risks that affect the security score.
         *
         * @param request DescribeSecureSuggestionRequest
         * @return DescribeSecureSuggestionResponse
         */
        public DescribeSecureSuggestionResponse DescribeSecureSuggestion(DescribeSecureSuggestionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecureSuggestionWithOptions(request, runtime);
        }

        /**
         * @summary Queries suggestions on how to handle the risks that affect the security score.
         *
         * @param request DescribeSecureSuggestionRequest
         * @return DescribeSecureSuggestionResponse
         */
        public async Task<DescribeSecureSuggestionResponse> DescribeSecureSuggestionAsync(DescribeSecureSuggestionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecureSuggestionWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeSecurityCheckScheduleConfig is deprecated
         *
         * @summary Queries the day of a week when custom check tasks are performed and the time range during which the custom check tasks are performed.
         *
         * @description This operation is phased out. You can use the GetCheckConfig operation.
         *
         * @param request DescribeSecurityCheckScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public DescribeSecurityCheckScheduleConfigResponse DescribeSecurityCheckScheduleConfigWithOptions(DescribeSecurityCheckScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityCheckScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityCheckScheduleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeSecurityCheckScheduleConfig is deprecated
         *
         * @summary Queries the day of a week when custom check tasks are performed and the time range during which the custom check tasks are performed.
         *
         * @description This operation is phased out. You can use the GetCheckConfig operation.
         *
         * @param request DescribeSecurityCheckScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public async Task<DescribeSecurityCheckScheduleConfigResponse> DescribeSecurityCheckScheduleConfigWithOptionsAsync(DescribeSecurityCheckScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityCheckScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityCheckScheduleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DescribeSecurityCheckScheduleConfig is deprecated
         *
         * @summary Queries the day of a week when custom check tasks are performed and the time range during which the custom check tasks are performed.
         *
         * @description This operation is phased out. You can use the GetCheckConfig operation.
         *
         * @param request DescribeSecurityCheckScheduleConfigRequest
         * @return DescribeSecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public DescribeSecurityCheckScheduleConfigResponse DescribeSecurityCheckScheduleConfig(DescribeSecurityCheckScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecurityCheckScheduleConfigWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DescribeSecurityCheckScheduleConfig is deprecated
         *
         * @summary Queries the day of a week when custom check tasks are performed and the time range during which the custom check tasks are performed.
         *
         * @description This operation is phased out. You can use the GetCheckConfig operation.
         *
         * @param request DescribeSecurityCheckScheduleConfigRequest
         * @return DescribeSecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public async Task<DescribeSecurityCheckScheduleConfigResponse> DescribeSecurityCheckScheduleConfigAsync(DescribeSecurityCheckScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecurityCheckScheduleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the list of whitelist rules.
         *
         * @param request DescribeSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventMarkMissListResponse
         */
        public DescribeSecurityEventMarkMissListResponse DescribeSecurityEventMarkMissListWithOptions(DescribeSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventMarkMissListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the list of whitelist rules.
         *
         * @param request DescribeSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventMarkMissListResponse
         */
        public async Task<DescribeSecurityEventMarkMissListResponse> DescribeSecurityEventMarkMissListWithOptionsAsync(DescribeSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventMarkMissListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the list of whitelist rules.
         *
         * @param request DescribeSecurityEventMarkMissListRequest
         * @return DescribeSecurityEventMarkMissListResponse
         */
        public DescribeSecurityEventMarkMissListResponse DescribeSecurityEventMarkMissList(DescribeSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecurityEventMarkMissListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the list of whitelist rules.
         *
         * @param request DescribeSecurityEventMarkMissListRequest
         * @return DescribeSecurityEventMarkMissListResponse
         */
        public async Task<DescribeSecurityEventMarkMissListResponse> DescribeSecurityEventMarkMissListAsync(DescribeSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecurityEventMarkMissListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert events that are triggered by the same IP address rule or of the same alert type as a specific alert event if you want to handle the specific alert event in batch operation mode.
         *
         * @param request DescribeSecurityEventOperationStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventOperationStatusResponse
         */
        public DescribeSecurityEventOperationStatusResponse DescribeSecurityEventOperationStatusWithOptions(DescribeSecurityEventOperationStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventOperationStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventOperationStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert events that are triggered by the same IP address rule or of the same alert type as a specific alert event if you want to handle the specific alert event in batch operation mode.
         *
         * @param request DescribeSecurityEventOperationStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventOperationStatusResponse
         */
        public async Task<DescribeSecurityEventOperationStatusResponse> DescribeSecurityEventOperationStatusWithOptionsAsync(DescribeSecurityEventOperationStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventOperationStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventOperationStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert events that are triggered by the same IP address rule or of the same alert type as a specific alert event if you want to handle the specific alert event in batch operation mode.
         *
         * @param request DescribeSecurityEventOperationStatusRequest
         * @return DescribeSecurityEventOperationStatusResponse
         */
        public DescribeSecurityEventOperationStatusResponse DescribeSecurityEventOperationStatus(DescribeSecurityEventOperationStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecurityEventOperationStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert events that are triggered by the same IP address rule or of the same alert type as a specific alert event if you want to handle the specific alert event in batch operation mode.
         *
         * @param request DescribeSecurityEventOperationStatusRequest
         * @return DescribeSecurityEventOperationStatusResponse
         */
        public async Task<DescribeSecurityEventOperationStatusResponse> DescribeSecurityEventOperationStatusAsync(DescribeSecurityEventOperationStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecurityEventOperationStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the operations that you can perform to handle an alert event.
         *
         * @param request DescribeSecurityEventOperationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventOperationsResponse
         */
        public DescribeSecurityEventOperationsResponse DescribeSecurityEventOperationsWithOptions(DescribeSecurityEventOperationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventOperations",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventOperationsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the operations that you can perform to handle an alert event.
         *
         * @param request DescribeSecurityEventOperationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityEventOperationsResponse
         */
        public async Task<DescribeSecurityEventOperationsResponse> DescribeSecurityEventOperationsWithOptionsAsync(DescribeSecurityEventOperationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityEventOperations",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityEventOperationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the operations that you can perform to handle an alert event.
         *
         * @param request DescribeSecurityEventOperationsRequest
         * @return DescribeSecurityEventOperationsResponse
         */
        public DescribeSecurityEventOperationsResponse DescribeSecurityEventOperations(DescribeSecurityEventOperationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecurityEventOperationsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the operations that you can perform to handle an alert event.
         *
         * @param request DescribeSecurityEventOperationsRequest
         * @return DescribeSecurityEventOperationsResponse
         */
        public async Task<DescribeSecurityEventOperationsResponse> DescribeSecurityEventOperationsAsync(DescribeSecurityEventOperationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecurityEventOperationsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of each security check item and the daily statistics in the trend chart based on each security check item.
         *
         * @param request DescribeSecurityStatInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityStatInfoResponse
         */
        public DescribeSecurityStatInfoResponse DescribeSecurityStatInfoWithOptions(DescribeSecurityStatInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityStatInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityStatInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of each security check item and the daily statistics in the trend chart based on each security check item.
         *
         * @param request DescribeSecurityStatInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSecurityStatInfoResponse
         */
        public async Task<DescribeSecurityStatInfoResponse> DescribeSecurityStatInfoWithOptionsAsync(DescribeSecurityStatInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSecurityStatInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSecurityStatInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of each security check item and the daily statistics in the trend chart based on each security check item.
         *
         * @param request DescribeSecurityStatInfoRequest
         * @return DescribeSecurityStatInfoResponse
         */
        public DescribeSecurityStatInfoResponse DescribeSecurityStatInfo(DescribeSecurityStatInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSecurityStatInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of each security check item and the daily statistics in the trend chart based on each security check item.
         *
         * @param request DescribeSecurityStatInfoRequest
         * @return DescribeSecurityStatInfoResponse
         */
        public async Task<DescribeSecurityStatInfoResponse> DescribeSecurityStatInfoAsync(DescribeSecurityStatInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSecurityStatInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether a service-linked role is created for Security Center.
         *
         * @param request DescribeServiceLinkedRoleStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeServiceLinkedRoleStatusResponse
         */
        public DescribeServiceLinkedRoleStatusResponse DescribeServiceLinkedRoleStatusWithOptions(DescribeServiceLinkedRoleStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceLinkedRole))
            {
                query["ServiceLinkedRole"] = request.ServiceLinkedRole;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeServiceLinkedRoleStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeServiceLinkedRoleStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether a service-linked role is created for Security Center.
         *
         * @param request DescribeServiceLinkedRoleStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeServiceLinkedRoleStatusResponse
         */
        public async Task<DescribeServiceLinkedRoleStatusResponse> DescribeServiceLinkedRoleStatusWithOptionsAsync(DescribeServiceLinkedRoleStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceLinkedRole))
            {
                query["ServiceLinkedRole"] = request.ServiceLinkedRole;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeServiceLinkedRoleStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeServiceLinkedRoleStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether a service-linked role is created for Security Center.
         *
         * @param request DescribeServiceLinkedRoleStatusRequest
         * @return DescribeServiceLinkedRoleStatusResponse
         */
        public DescribeServiceLinkedRoleStatusResponse DescribeServiceLinkedRoleStatus(DescribeServiceLinkedRoleStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeServiceLinkedRoleStatusWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether a service-linked role is created for Security Center.
         *
         * @param request DescribeServiceLinkedRoleStatusRequest
         * @return DescribeServiceLinkedRoleStatusResponse
         */
        public async Task<DescribeServiceLinkedRoleStatusResponse> DescribeServiceLinkedRoleStatusAsync(DescribeServiceLinkedRoleStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeServiceLinkedRoleStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Alibaba Cloud CLI is a tool used to manage and configure Alibaba Cloud resources. After simple installation and configuration, you can use Alibaba Cloud CLI to manage multiple Alibaba Cloud products and services and migrate your data and business to the cloud with ease.
         *
         * @param request DescribeSimilarEventScenariosRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSimilarEventScenariosResponse
         */
        public DescribeSimilarEventScenariosResponse DescribeSimilarEventScenariosWithOptions(DescribeSimilarEventScenariosRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSimilarEventScenarios",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSimilarEventScenariosResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Alibaba Cloud CLI is a tool used to manage and configure Alibaba Cloud resources. After simple installation and configuration, you can use Alibaba Cloud CLI to manage multiple Alibaba Cloud products and services and migrate your data and business to the cloud with ease.
         *
         * @param request DescribeSimilarEventScenariosRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSimilarEventScenariosResponse
         */
        public async Task<DescribeSimilarEventScenariosResponse> DescribeSimilarEventScenariosWithOptionsAsync(DescribeSimilarEventScenariosRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSimilarEventScenarios",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSimilarEventScenariosResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Alibaba Cloud CLI is a tool used to manage and configure Alibaba Cloud resources. After simple installation and configuration, you can use Alibaba Cloud CLI to manage multiple Alibaba Cloud products and services and migrate your data and business to the cloud with ease.
         *
         * @param request DescribeSimilarEventScenariosRequest
         * @return DescribeSimilarEventScenariosResponse
         */
        public DescribeSimilarEventScenariosResponse DescribeSimilarEventScenarios(DescribeSimilarEventScenariosRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSimilarEventScenariosWithOptions(request, runtime);
        }

        /**
         * @summary Alibaba Cloud CLI is a tool used to manage and configure Alibaba Cloud resources. After simple installation and configuration, you can use Alibaba Cloud CLI to manage multiple Alibaba Cloud products and services and migrate your data and business to the cloud with ease.
         *
         * @param request DescribeSimilarEventScenariosRequest
         * @return DescribeSimilarEventScenariosResponse
         */
        public async Task<DescribeSimilarEventScenariosResponse> DescribeSimilarEventScenariosAsync(DescribeSimilarEventScenariosRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSimilarEventScenariosWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request DescribeSimilarSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSimilarSecurityEventsResponse
         */
        public DescribeSimilarSecurityEventsResponse DescribeSimilarSecurityEventsWithOptions(DescribeSimilarSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSimilarSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSimilarSecurityEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request DescribeSimilarSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSimilarSecurityEventsResponse
         */
        public async Task<DescribeSimilarSecurityEventsResponse> DescribeSimilarSecurityEventsWithOptionsAsync(DescribeSimilarSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSimilarSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSimilarSecurityEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request DescribeSimilarSecurityEventsRequest
         * @return DescribeSimilarSecurityEventsResponse
         */
        public DescribeSimilarSecurityEventsResponse DescribeSimilarSecurityEvents(DescribeSimilarSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSimilarSecurityEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert events that are triggered by the same rule or of the same alert type.
         *
         * @param request DescribeSimilarSecurityEventsRequest
         * @return DescribeSimilarSecurityEventsResponse
         */
        public async Task<DescribeSimilarSecurityEventsResponse> DescribeSimilarSecurityEventsAsync(DescribeSimilarSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSimilarSecurityEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the backup snapshots that are created for anti-ransomware.
         *
         * @param request DescribeSnapshotsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSnapshotsResponse
         */
        public DescribeSnapshotsResponse DescribeSnapshotsWithOptions(DescribeSnapshotsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiVersion))
            {
                query["ApiVersion"] = request.ApiVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAliYunEcs))
            {
                query["IsAliYunEcs"] = request.IsAliYunEcs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRegion))
            {
                query["MachineRegion"] = request.MachineRegion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSnapshots",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSnapshotsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the backup snapshots that are created for anti-ransomware.
         *
         * @param request DescribeSnapshotsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSnapshotsResponse
         */
        public async Task<DescribeSnapshotsResponse> DescribeSnapshotsWithOptionsAsync(DescribeSnapshotsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiVersion))
            {
                query["ApiVersion"] = request.ApiVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAliYunEcs))
            {
                query["IsAliYunEcs"] = request.IsAliYunEcs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRegion))
            {
                query["MachineRegion"] = request.MachineRegion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSnapshots",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSnapshotsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the backup snapshots that are created for anti-ransomware.
         *
         * @param request DescribeSnapshotsRequest
         * @return DescribeSnapshotsResponse
         */
        public DescribeSnapshotsResponse DescribeSnapshots(DescribeSnapshotsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSnapshotsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the backup snapshots that are created for anti-ransomware.
         *
         * @param request DescribeSnapshotsRequest
         * @return DescribeSnapshotsResponse
         */
        public async Task<DescribeSnapshotsResponse> DescribeSnapshotsAsync(DescribeSnapshotsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSnapshotsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about baseline check policies.
         *
         * @param request DescribeStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyResponse
         */
        public DescribeStrategyResponse DescribeStrategyWithOptions(DescribeStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomType))
            {
                query["CustomType"] = request.CustomType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyIds))
            {
                query["StrategyIds"] = request.StrategyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about baseline check policies.
         *
         * @param request DescribeStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyResponse
         */
        public async Task<DescribeStrategyResponse> DescribeStrategyWithOptionsAsync(DescribeStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomType))
            {
                query["CustomType"] = request.CustomType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyIds))
            {
                query["StrategyIds"] = request.StrategyIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about baseline check policies.
         *
         * @param request DescribeStrategyRequest
         * @return DescribeStrategyResponse
         */
        public DescribeStrategyResponse DescribeStrategy(DescribeStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about baseline check policies.
         *
         * @param request DescribeStrategyRequest
         * @return DescribeStrategyResponse
         */
        public async Task<DescribeStrategyResponse> DescribeStrategyAsync(DescribeStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a baseline check policy.
         *
         * @param request DescribeStrategyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyDetailResponse
         */
        public DescribeStrategyDetailResponse DescribeStrategyDetailWithOptions(DescribeStrategyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a baseline check policy.
         *
         * @param request DescribeStrategyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyDetailResponse
         */
        public async Task<DescribeStrategyDetailResponse> DescribeStrategyDetailWithOptionsAsync(DescribeStrategyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a baseline check policy.
         *
         * @param request DescribeStrategyDetailRequest
         * @return DescribeStrategyDetailResponse
         */
        public DescribeStrategyDetailResponse DescribeStrategyDetail(DescribeStrategyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeStrategyDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a baseline check policy.
         *
         * @param request DescribeStrategyDetailRequest
         * @return DescribeStrategyDetailResponse
         */
        public async Task<DescribeStrategyDetailResponse> DescribeStrategyDetailAsync(DescribeStrategyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeStrategyDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询单个基线检查策略的检查结果
         *
         * @param request DescribeStrategyExecDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyExecDetailResponse
         */
        public DescribeStrategyExecDetailResponse DescribeStrategyExecDetailWithOptions(DescribeStrategyExecDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyExecDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyExecDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询单个基线检查策略的检查结果
         *
         * @param request DescribeStrategyExecDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyExecDetailResponse
         */
        public async Task<DescribeStrategyExecDetailResponse> DescribeStrategyExecDetailWithOptionsAsync(DescribeStrategyExecDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyExecDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyExecDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询单个基线检查策略的检查结果
         *
         * @param request DescribeStrategyExecDetailRequest
         * @return DescribeStrategyExecDetailResponse
         */
        public DescribeStrategyExecDetailResponse DescribeStrategyExecDetail(DescribeStrategyExecDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeStrategyExecDetailWithOptions(request, runtime);
        }

        /**
         * @summary 查询单个基线检查策略的检查结果
         *
         * @param request DescribeStrategyExecDetailRequest
         * @return DescribeStrategyExecDetailResponse
         */
        public async Task<DescribeStrategyExecDetailResponse> DescribeStrategyExecDetailAsync(DescribeStrategyExecDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeStrategyExecDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the assets to which a baseline check policy is applied.
         *
         * @param request DescribeStrategyTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyTargetResponse
         */
        public DescribeStrategyTargetResponse DescribeStrategyTargetWithOptions(DescribeStrategyTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the assets to which a baseline check policy is applied.
         *
         * @param request DescribeStrategyTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeStrategyTargetResponse
         */
        public async Task<DescribeStrategyTargetResponse> DescribeStrategyTargetWithOptionsAsync(DescribeStrategyTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeStrategyTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeStrategyTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the assets to which a baseline check policy is applied.
         *
         * @param request DescribeStrategyTargetRequest
         * @return DescribeStrategyTargetResponse
         */
        public DescribeStrategyTargetResponse DescribeStrategyTarget(DescribeStrategyTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeStrategyTargetWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the assets to which a baseline check policy is applied.
         *
         * @param request DescribeStrategyTargetRequest
         * @return DescribeStrategyTargetResponse
         */
        public async Task<DescribeStrategyTargetResponse> DescribeStrategyTargetAsync(DescribeStrategyTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeStrategyTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the security information about your assets. The information includes the security score and the numbers of protected and unprotected assets.
         *
         * @param request DescribeSummaryInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSummaryInfoResponse
         */
        public DescribeSummaryInfoResponse DescribeSummaryInfoWithOptions(DescribeSummaryInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSummaryInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSummaryInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the security information about your assets. The information includes the security score and the numbers of protected and unprotected assets.
         *
         * @param request DescribeSummaryInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSummaryInfoResponse
         */
        public async Task<DescribeSummaryInfoResponse> DescribeSummaryInfoWithOptionsAsync(DescribeSummaryInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSummaryInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSummaryInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the security information about your assets. The information includes the security score and the numbers of protected and unprotected assets.
         *
         * @param request DescribeSummaryInfoRequest
         * @return DescribeSummaryInfoResponse
         */
        public DescribeSummaryInfoResponse DescribeSummaryInfo(DescribeSummaryInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSummaryInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the security information about your assets. The information includes the security score and the numbers of protected and unprotected assets.
         *
         * @param request DescribeSummaryInfoRequest
         * @return DescribeSummaryInfoResponse
         */
        public async Task<DescribeSummaryInfoResponse> DescribeSummaryInfoAsync(DescribeSummaryInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSummaryInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询防勒索支持地域
         *
         * @param request DescribeSupportRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSupportRegionResponse
         */
        public DescribeSupportRegionResponse DescribeSupportRegionWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSupportRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSupportRegionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询防勒索支持地域
         *
         * @param request DescribeSupportRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSupportRegionResponse
         */
        public async Task<DescribeSupportRegionResponse> DescribeSupportRegionWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSupportRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSupportRegionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询防勒索支持地域
         *
         * @return DescribeSupportRegionResponse
         */
        public DescribeSupportRegionResponse DescribeSupportRegion()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSupportRegionWithOptions(runtime);
        }

        /**
         * @summary 查询防勒索支持地域
         *
         * @return DescribeSupportRegionResponse
         */
        public async Task<DescribeSupportRegionResponse> DescribeSupportRegionAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSupportRegionWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details of an exception. An alert event consists of an alert and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeSuspEventDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventDetailResponse
         */
        public DescribeSuspEventDetailResponse DescribeSuspEventDetailWithOptions(DescribeSuspEventDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuspiciousEventId))
            {
                query["SuspiciousEventId"] = request.SuspiciousEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an exception. An alert event consists of an alert and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeSuspEventDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventDetailResponse
         */
        public async Task<DescribeSuspEventDetailResponse> DescribeSuspEventDetailWithOptionsAsync(DescribeSuspEventDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuspiciousEventId))
            {
                query["SuspiciousEventId"] = request.SuspiciousEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an exception. An alert event consists of an alert and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeSuspEventDetailRequest
         * @return DescribeSuspEventDetailResponse
         */
        public DescribeSuspEventDetailResponse DescribeSuspEventDetail(DescribeSuspEventDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspEventDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an exception. An alert event consists of an alert and exceptions. Each alert event is associated with multiple exceptions.
         *
         * @param request DescribeSuspEventDetailRequest
         * @return DescribeSuspEventDetailResponse
         */
        public async Task<DescribeSuspEventDetailResponse> DescribeSuspEventDetailAsync(DescribeSuspEventDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspEventDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about an export task of exceptions.
         *
         * @param request DescribeSuspEventExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventExportInfoResponse
         */
        public DescribeSuspEventExportInfoResponse DescribeSuspEventExportInfoWithOptions(DescribeSuspEventExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an export task of exceptions.
         *
         * @param request DescribeSuspEventExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventExportInfoResponse
         */
        public async Task<DescribeSuspEventExportInfoResponse> DescribeSuspEventExportInfoWithOptionsAsync(DescribeSuspEventExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an export task of exceptions.
         *
         * @param request DescribeSuspEventExportInfoRequest
         * @return DescribeSuspEventExportInfoResponse
         */
        public DescribeSuspEventExportInfoResponse DescribeSuspEventExportInfo(DescribeSuspEventExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspEventExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about an export task of exceptions.
         *
         * @param request DescribeSuspEventExportInfoRequest
         * @return DescribeSuspEventExportInfoResponse
         */
        public async Task<DescribeSuspEventExportInfoResponse> DescribeSuspEventExportInfoAsync(DescribeSuspEventExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspEventExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries quarantined files by page.
         *
         * @param request DescribeSuspEventQuaraFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventQuaraFilesResponse
         */
        public DescribeSuspEventQuaraFilesResponse DescribeSuspEventQuaraFilesWithOptions(DescribeSuspEventQuaraFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupingId))
            {
                query["GroupingId"] = request.GroupingId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraTag))
            {
                query["QuaraTag"] = request.QuaraTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventQuaraFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventQuaraFilesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries quarantined files by page.
         *
         * @param request DescribeSuspEventQuaraFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventQuaraFilesResponse
         */
        public async Task<DescribeSuspEventQuaraFilesResponse> DescribeSuspEventQuaraFilesWithOptionsAsync(DescribeSuspEventQuaraFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupingId))
            {
                query["GroupingId"] = request.GroupingId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraTag))
            {
                query["QuaraTag"] = request.QuaraTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventQuaraFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventQuaraFilesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries quarantined files by page.
         *
         * @param request DescribeSuspEventQuaraFilesRequest
         * @return DescribeSuspEventQuaraFilesResponse
         */
        public DescribeSuspEventQuaraFilesResponse DescribeSuspEventQuaraFiles(DescribeSuspEventQuaraFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspEventQuaraFilesWithOptions(request, runtime);
        }

        /**
         * @summary Queries quarantined files by page.
         *
         * @param request DescribeSuspEventQuaraFilesRequest
         * @return DescribeSuspEventQuaraFilesResponse
         */
        public async Task<DescribeSuspEventQuaraFilesResponse> DescribeSuspEventQuaraFilesAsync(DescribeSuspEventQuaraFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspEventQuaraFilesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the user settings for exceptions.
         *
         * @param request DescribeSuspEventUserSettingRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventUserSettingResponse
         */
        public DescribeSuspEventUserSettingResponse DescribeSuspEventUserSettingWithOptions(DescribeSuspEventUserSettingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventUserSetting",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventUserSettingResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the user settings for exceptions.
         *
         * @param request DescribeSuspEventUserSettingRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventUserSettingResponse
         */
        public async Task<DescribeSuspEventUserSettingResponse> DescribeSuspEventUserSettingWithOptionsAsync(DescribeSuspEventUserSettingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEventUserSetting",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventUserSettingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the user settings for exceptions.
         *
         * @param request DescribeSuspEventUserSettingRequest
         * @return DescribeSuspEventUserSettingResponse
         */
        public DescribeSuspEventUserSettingResponse DescribeSuspEventUserSetting(DescribeSuspEventUserSettingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspEventUserSettingWithOptions(request, runtime);
        }

        /**
         * @summary Queries the user settings for exceptions.
         *
         * @param request DescribeSuspEventUserSettingRequest
         * @return DescribeSuspEventUserSettingResponse
         */
        public async Task<DescribeSuspEventUserSettingResponse> DescribeSuspEventUserSettingAsync(DescribeSuspEventUserSettingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspEventUserSettingWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of alert events that are generated without aggregation.
         *
         * @param request DescribeSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventsResponse
         */
        public DescribeSuspEventsResponse DescribeSuspEventsWithOptions(DescribeSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmUniqueInfo))
            {
                query["AlarmUniqueInfo"] = request.AlarmUniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetsTypeList))
            {
                query["AssetsTypeList"] = request.AssetsTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventNames))
            {
                query["EventNames"] = request.EventNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateErrorCodeList))
            {
                query["OperateErrorCodeList"] = request.OperateErrorCodeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTimeEnd))
            {
                query["OperateTimeEnd"] = request.OperateTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTimeStart))
            {
                query["OperateTimeStart"] = request.OperateTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventTypes))
            {
                query["ParentEventTypes"] = request.ParentEventTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortColumn))
            {
                query["SortColumn"] = request.SortColumn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortType))
            {
                query["SortType"] = request.SortType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrictMode))
            {
                query["StrictMode"] = request.StrictMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TacticId))
            {
                body["TacticId"] = request.TacticId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of alert events that are generated without aggregation.
         *
         * @param request DescribeSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspEventsResponse
         */
        public async Task<DescribeSuspEventsResponse> DescribeSuspEventsWithOptionsAsync(DescribeSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmUniqueInfo))
            {
                query["AlarmUniqueInfo"] = request.AlarmUniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetsTypeList))
            {
                query["AssetsTypeList"] = request.AssetsTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventNames))
            {
                query["EventNames"] = request.EventNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateErrorCodeList))
            {
                query["OperateErrorCodeList"] = request.OperateErrorCodeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTimeEnd))
            {
                query["OperateTimeEnd"] = request.OperateTimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTimeStart))
            {
                query["OperateTimeStart"] = request.OperateTimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventTypes))
            {
                query["ParentEventTypes"] = request.ParentEventTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortColumn))
            {
                query["SortColumn"] = request.SortColumn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortType))
            {
                query["SortType"] = request.SortType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrictMode))
            {
                query["StrictMode"] = request.StrictMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TacticId))
            {
                body["TacticId"] = request.TacticId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of alert events that are generated without aggregation.
         *
         * @param request DescribeSuspEventsRequest
         * @return DescribeSuspEventsResponse
         */
        public DescribeSuspEventsResponse DescribeSuspEvents(DescribeSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of alert events that are generated without aggregation.
         *
         * @param request DescribeSuspEventsRequest
         * @return DescribeSuspEventsResponse
         */
        public async Task<DescribeSuspEventsResponse> DescribeSuspEventsAsync(DescribeSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configuration of a specified feature.
         *
         * @param request DescribeSuspiciousOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspiciousOverallConfigResponse
         */
        public DescribeSuspiciousOverallConfigResponse DescribeSuspiciousOverallConfigWithOptions(DescribeSuspiciousOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspiciousOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspiciousOverallConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of a specified feature.
         *
         * @param request DescribeSuspiciousOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspiciousOverallConfigResponse
         */
        public async Task<DescribeSuspiciousOverallConfigResponse> DescribeSuspiciousOverallConfigWithOptionsAsync(DescribeSuspiciousOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspiciousOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspiciousOverallConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of a specified feature.
         *
         * @param request DescribeSuspiciousOverallConfigRequest
         * @return DescribeSuspiciousOverallConfigResponse
         */
        public DescribeSuspiciousOverallConfigResponse DescribeSuspiciousOverallConfig(DescribeSuspiciousOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspiciousOverallConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configuration of a specified feature.
         *
         * @param request DescribeSuspiciousOverallConfigRequest
         * @return DescribeSuspiciousOverallConfigResponse
         */
        public async Task<DescribeSuspiciousOverallConfigResponse> DescribeSuspiciousOverallConfigAsync(DescribeSuspiciousOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspiciousOverallConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the UUIDs of servers on which proactive defense of a specified type takes effect.
         *
         * @param request DescribeSuspiciousUUIDConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspiciousUUIDConfigResponse
         */
        public DescribeSuspiciousUUIDConfigResponse DescribeSuspiciousUUIDConfigWithOptions(DescribeSuspiciousUUIDConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspiciousUUIDConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspiciousUUIDConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the UUIDs of servers on which proactive defense of a specified type takes effect.
         *
         * @param request DescribeSuspiciousUUIDConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeSuspiciousUUIDConfigResponse
         */
        public async Task<DescribeSuspiciousUUIDConfigResponse> DescribeSuspiciousUUIDConfigWithOptionsAsync(DescribeSuspiciousUUIDConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeSuspiciousUUIDConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeSuspiciousUUIDConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the UUIDs of servers on which proactive defense of a specified type takes effect.
         *
         * @param request DescribeSuspiciousUUIDConfigRequest
         * @return DescribeSuspiciousUUIDConfigResponse
         */
        public DescribeSuspiciousUUIDConfigResponse DescribeSuspiciousUUIDConfig(DescribeSuspiciousUUIDConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeSuspiciousUUIDConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the UUIDs of servers on which proactive defense of a specified type takes effect.
         *
         * @param request DescribeSuspiciousUUIDConfigRequest
         * @return DescribeSuspiciousUUIDConfigResponse
         */
        public async Task<DescribeSuspiciousUUIDConfigResponse> DescribeSuspiciousUUIDConfigAsync(DescribeSuspiciousUUIDConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeSuspiciousUUIDConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the servers on which vulnerability scan is enabled.
         *
         * @param request DescribeTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTargetResponse
         */
        public DescribeTargetResponse DescribeTargetWithOptions(DescribeTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which vulnerability scan is enabled.
         *
         * @param request DescribeTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTargetResponse
         */
        public async Task<DescribeTargetResponse> DescribeTargetWithOptionsAsync(DescribeTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the servers on which vulnerability scan is enabled.
         *
         * @param request DescribeTargetRequest
         * @return DescribeTargetResponse
         */
        public DescribeTargetResponse DescribeTarget(DescribeTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTargetWithOptions(request, runtime);
        }

        /**
         * @summary Queries the servers on which vulnerability scan is enabled.
         *
         * @param request DescribeTargetRequest
         * @return DescribeTargetResponse
         */
        public async Task<DescribeTargetResponse> DescribeTargetAsync(DescribeTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the error logs on a task that failed to fix image vulnerabilities.
         *
         * @param request DescribeTaskErrorLogRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTaskErrorLogResponse
         */
        public DescribeTaskErrorLogResponse DescribeTaskErrorLogWithOptions(DescribeTaskErrorLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BuildTaskId))
            {
                query["BuildTaskId"] = request.BuildTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTaskErrorLog",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTaskErrorLogResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the error logs on a task that failed to fix image vulnerabilities.
         *
         * @param request DescribeTaskErrorLogRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTaskErrorLogResponse
         */
        public async Task<DescribeTaskErrorLogResponse> DescribeTaskErrorLogWithOptionsAsync(DescribeTaskErrorLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BuildTaskId))
            {
                query["BuildTaskId"] = request.BuildTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTaskErrorLog",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTaskErrorLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the error logs on a task that failed to fix image vulnerabilities.
         *
         * @param request DescribeTaskErrorLogRequest
         * @return DescribeTaskErrorLogResponse
         */
        public DescribeTaskErrorLogResponse DescribeTaskErrorLog(DescribeTaskErrorLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTaskErrorLogWithOptions(request, runtime);
        }

        /**
         * @summary Queries the error logs on a task that failed to fix image vulnerabilities.
         *
         * @param request DescribeTaskErrorLogRequest
         * @return DescribeTaskErrorLogResponse
         */
        public async Task<DescribeTaskErrorLogResponse> DescribeTaskErrorLogAsync(DescribeTaskErrorLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTaskErrorLogWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries event statistics.
         *
         * @param request DescribeTotalStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTotalStatisticsResponse
         */
        public DescribeTotalStatisticsResponse DescribeTotalStatisticsWithOptions(DescribeTotalStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTotalStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTotalStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries event statistics.
         *
         * @param request DescribeTotalStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTotalStatisticsResponse
         */
        public async Task<DescribeTotalStatisticsResponse> DescribeTotalStatisticsWithOptionsAsync(DescribeTotalStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTotalStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTotalStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries event statistics.
         *
         * @param request DescribeTotalStatisticsRequest
         * @return DescribeTotalStatisticsResponse
         */
        public DescribeTotalStatisticsResponse DescribeTotalStatistics(DescribeTotalStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTotalStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries event statistics.
         *
         * @param request DescribeTotalStatisticsRequest
         * @return DescribeTotalStatisticsResponse
         */
        public async Task<DescribeTotalStatisticsResponse> DescribeTotalStatisticsAsync(DescribeTotalStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTotalStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the trace information about alerts.
         *
         * @param request DescribeTraceInfoDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceInfoDetailResponse
         */
        public DescribeTraceInfoDetailResponse DescribeTraceInfoDetailWithOptions(DescribeTraceInfoDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentTime))
            {
                query["IncidentTime"] = request.IncidentTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                query["VertexId"] = request.VertexId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceInfoDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceInfoDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the trace information about alerts.
         *
         * @param request DescribeTraceInfoDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceInfoDetailResponse
         */
        public async Task<DescribeTraceInfoDetailResponse> DescribeTraceInfoDetailWithOptionsAsync(DescribeTraceInfoDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentTime))
            {
                query["IncidentTime"] = request.IncidentTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                query["VertexId"] = request.VertexId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceInfoDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceInfoDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the trace information about alerts.
         *
         * @param request DescribeTraceInfoDetailRequest
         * @return DescribeTraceInfoDetailResponse
         */
        public DescribeTraceInfoDetailResponse DescribeTraceInfoDetail(DescribeTraceInfoDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTraceInfoDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the trace information about alerts.
         *
         * @param request DescribeTraceInfoDetailRequest
         * @return DescribeTraceInfoDetailResponse
         */
        public async Task<DescribeTraceInfoDetailResponse> DescribeTraceInfoDetailAsync(DescribeTraceInfoDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTraceInfoDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about a trace node.
         *
         * @param request DescribeTraceInfoNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceInfoNodeResponse
         */
        public DescribeTraceInfoNodeResponse DescribeTraceInfoNodeWithOptions(DescribeTraceInfoNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentTime))
            {
                query["IncidentTime"] = request.IncidentTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                query["VertexId"] = request.VertexId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceInfoNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceInfoNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a trace node.
         *
         * @param request DescribeTraceInfoNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceInfoNodeResponse
         */
        public async Task<DescribeTraceInfoNodeResponse> DescribeTraceInfoNodeWithOptionsAsync(DescribeTraceInfoNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentTime))
            {
                query["IncidentTime"] = request.IncidentTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                query["VertexId"] = request.VertexId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceInfoNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceInfoNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a trace node.
         *
         * @param request DescribeTraceInfoNodeRequest
         * @return DescribeTraceInfoNodeResponse
         */
        public DescribeTraceInfoNodeResponse DescribeTraceInfoNode(DescribeTraceInfoNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTraceInfoNodeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a trace node.
         *
         * @param request DescribeTraceInfoNodeRequest
         * @return DescribeTraceInfoNodeResponse
         */
        public async Task<DescribeTraceInfoNodeResponse> DescribeTraceInfoNodeAsync(DescribeTraceInfoNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTraceInfoNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about databases for which anti-ransomware policies are created.
         *
         * @param request DescribeUniBackupDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupDatabaseResponse
         */
        public DescribeUniBackupDatabaseResponse DescribeUniBackupDatabaseWithOptions(DescribeUniBackupDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryType))
            {
                query["QueryType"] = request.QueryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupDatabaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about databases for which anti-ransomware policies are created.
         *
         * @param request DescribeUniBackupDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupDatabaseResponse
         */
        public async Task<DescribeUniBackupDatabaseResponse> DescribeUniBackupDatabaseWithOptionsAsync(DescribeUniBackupDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryType))
            {
                query["QueryType"] = request.QueryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupDatabaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about databases for which anti-ransomware policies are created.
         *
         * @param request DescribeUniBackupDatabaseRequest
         * @return DescribeUniBackupDatabaseResponse
         */
        public DescribeUniBackupDatabaseResponse DescribeUniBackupDatabase(DescribeUniBackupDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUniBackupDatabaseWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about databases for which anti-ransomware policies are created.
         *
         * @param request DescribeUniBackupDatabaseRequest
         * @return DescribeUniBackupDatabaseResponse
         */
        public async Task<DescribeUniBackupDatabaseResponse> DescribeUniBackupDatabaseAsync(DescribeUniBackupDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUniBackupDatabaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the anti-ransomware policies that are created for databases.
         *
         * @param request DescribeUniBackupPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupPoliciesResponse
         */
        public DescribeUniBackupPoliciesResponse DescribeUniBackupPoliciesWithOptions(DescribeUniBackupPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupPolicies",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the anti-ransomware policies that are created for databases.
         *
         * @param request DescribeUniBackupPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupPoliciesResponse
         */
        public async Task<DescribeUniBackupPoliciesResponse> DescribeUniBackupPoliciesWithOptionsAsync(DescribeUniBackupPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupPolicies",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the anti-ransomware policies that are created for databases.
         *
         * @param request DescribeUniBackupPoliciesRequest
         * @return DescribeUniBackupPoliciesResponse
         */
        public DescribeUniBackupPoliciesResponse DescribeUniBackupPolicies(DescribeUniBackupPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUniBackupPoliciesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the anti-ransomware policies that are created for databases.
         *
         * @param request DescribeUniBackupPoliciesRequest
         * @return DescribeUniBackupPoliciesResponse
         */
        public async Task<DescribeUniBackupPoliciesResponse> DescribeUniBackupPoliciesAsync(DescribeUniBackupPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUniBackupPoliciesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for databases.
         *
         * @param request DescribeUniBackupPolicyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupPolicyDetailResponse
         */
        public DescribeUniBackupPolicyDetailResponse DescribeUniBackupPolicyDetailWithOptions(DescribeUniBackupPolicyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupPolicyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupPolicyDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for databases.
         *
         * @param request DescribeUniBackupPolicyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniBackupPolicyDetailResponse
         */
        public async Task<DescribeUniBackupPolicyDetailResponse> DescribeUniBackupPolicyDetailWithOptionsAsync(DescribeUniBackupPolicyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniBackupPolicyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniBackupPolicyDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for databases.
         *
         * @param request DescribeUniBackupPolicyDetailRequest
         * @return DescribeUniBackupPolicyDetailResponse
         */
        public DescribeUniBackupPolicyDetailResponse DescribeUniBackupPolicyDetail(DescribeUniBackupPolicyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUniBackupPolicyDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an anti-ransomware policy for databases.
         *
         * @param request DescribeUniBackupPolicyDetailRequest
         * @return DescribeUniBackupPolicyDetailResponse
         */
        public async Task<DescribeUniBackupPolicyDetailResponse> DescribeUniBackupPolicyDetailAsync(DescribeUniBackupPolicyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUniBackupPolicyDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the backup snapshots from which the data of a database can be restored.
         *
         * @param request DescribeUniRecoverableListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniRecoverableListResponse
         */
        public DescribeUniRecoverableListResponse DescribeUniRecoverableListWithOptions(DescribeUniRecoverableListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Database))
            {
                query["Database"] = request.Database;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniRecoverableList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniRecoverableListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the backup snapshots from which the data of a database can be restored.
         *
         * @param request DescribeUniRecoverableListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniRecoverableListResponse
         */
        public async Task<DescribeUniRecoverableListResponse> DescribeUniRecoverableListWithOptionsAsync(DescribeUniRecoverableListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Database))
            {
                query["Database"] = request.Database;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniRecoverableList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniRecoverableListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the backup snapshots from which the data of a database can be restored.
         *
         * @param request DescribeUniRecoverableListRequest
         * @return DescribeUniRecoverableListResponse
         */
        public DescribeUniRecoverableListResponse DescribeUniRecoverableList(DescribeUniRecoverableListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUniRecoverableListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the backup snapshots from which the data of a database can be restored.
         *
         * @param request DescribeUniRecoverableListRequest
         * @return DescribeUniRecoverableListResponse
         */
        public async Task<DescribeUniRecoverableListResponse> DescribeUniRecoverableListAsync(DescribeUniRecoverableListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUniRecoverableListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the region that is supported by anti-ransomware for databases.
         *
         * @param request DescribeUniSupportRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniSupportRegionResponse
         */
        public DescribeUniSupportRegionResponse DescribeUniSupportRegionWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniSupportRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniSupportRegionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the region that is supported by anti-ransomware for databases.
         *
         * @param request DescribeUniSupportRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUniSupportRegionResponse
         */
        public async Task<DescribeUniSupportRegionResponse> DescribeUniSupportRegionWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUniSupportRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUniSupportRegionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the region that is supported by anti-ransomware for databases.
         *
         * @return DescribeUniSupportRegionResponse
         */
        public DescribeUniSupportRegionResponse DescribeUniSupportRegion()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUniSupportRegionWithOptions(runtime);
        }

        /**
         * @summary Queries the region that is supported by anti-ransomware for databases.
         *
         * @return DescribeUniSupportRegionResponse
         */
        public async Task<DescribeUniSupportRegionResponse> DescribeUniSupportRegionAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUniSupportRegionWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about the servers to which an anti-ransomware policy is applied.
         *
         * @param request DescribeUserBackupMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserBackupMachinesResponse
         */
        public DescribeUserBackupMachinesResponse DescribeUserBackupMachinesWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserBackupMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserBackupMachinesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers to which an anti-ransomware policy is applied.
         *
         * @param request DescribeUserBackupMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserBackupMachinesResponse
         */
        public async Task<DescribeUserBackupMachinesResponse> DescribeUserBackupMachinesWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserBackupMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserBackupMachinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers to which an anti-ransomware policy is applied.
         *
         * @return DescribeUserBackupMachinesResponse
         */
        public DescribeUserBackupMachinesResponse DescribeUserBackupMachines()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUserBackupMachinesWithOptions(runtime);
        }

        /**
         * @summary Queries the information about the servers to which an anti-ransomware policy is applied.
         *
         * @return DescribeUserBackupMachinesResponse
         */
        public async Task<DescribeUserBackupMachinesResponse> DescribeUserBackupMachinesAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUserBackupMachinesWithOptionsAsync(runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeUserBaselineAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserBaselineAuthorizationResponse
         */
        public DescribeUserBaselineAuthorizationResponse DescribeUserBaselineAuthorizationWithOptions(DescribeUserBaselineAuthorizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserBaselineAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserBaselineAuthorizationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeUserBaselineAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserBaselineAuthorizationResponse
         */
        public async Task<DescribeUserBaselineAuthorizationResponse> DescribeUserBaselineAuthorizationWithOptionsAsync(DescribeUserBaselineAuthorizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserBaselineAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserBaselineAuthorizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeUserBaselineAuthorizationRequest
         * @return DescribeUserBaselineAuthorizationResponse
         */
        public DescribeUserBaselineAuthorizationResponse DescribeUserBaselineAuthorization(DescribeUserBaselineAuthorizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUserBaselineAuthorizationWithOptions(request, runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request DescribeUserBaselineAuthorizationRequest
         * @return DescribeUserBaselineAuthorizationResponse
         */
        public async Task<DescribeUserBaselineAuthorizationResponse> DescribeUserBaselineAuthorizationAsync(DescribeUserBaselineAuthorizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUserBaselineAuthorizationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whether the brute-force attacks protection feature has been authorized. The brute-force attacks protection feature cannot be used without authorization.
         *
         * @param request DescribeUserLayoutAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserLayoutAuthorizationResponse
         */
        public DescribeUserLayoutAuthorizationResponse DescribeUserLayoutAuthorizationWithOptions(DescribeUserLayoutAuthorizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserLayoutAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserLayoutAuthorizationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether the brute-force attacks protection feature has been authorized. The brute-force attacks protection feature cannot be used without authorization.
         *
         * @param request DescribeUserLayoutAuthorizationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUserLayoutAuthorizationResponse
         */
        public async Task<DescribeUserLayoutAuthorizationResponse> DescribeUserLayoutAuthorizationWithOptionsAsync(DescribeUserLayoutAuthorizationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUserLayoutAuthorization",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUserLayoutAuthorizationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether the brute-force attacks protection feature has been authorized. The brute-force attacks protection feature cannot be used without authorization.
         *
         * @param request DescribeUserLayoutAuthorizationRequest
         * @return DescribeUserLayoutAuthorizationResponse
         */
        public DescribeUserLayoutAuthorizationResponse DescribeUserLayoutAuthorization(DescribeUserLayoutAuthorizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUserLayoutAuthorizationWithOptions(request, runtime);
        }

        /**
         * @summary Queries whether the brute-force attacks protection feature has been authorized. The brute-force attacks protection feature cannot be used without authorization.
         *
         * @param request DescribeUserLayoutAuthorizationRequest
         * @return DescribeUserLayoutAuthorizationResponse
         */
        public async Task<DescribeUserLayoutAuthorizationResponse> DescribeUserLayoutAuthorizationAsync(DescribeUserLayoutAuthorizationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUserLayoutAuthorizationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of assets that support fixing based on vulnerability names.
         *
         * @param request DescribeUuidsByVulNamesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUuidsByVulNamesResponse
         */
        public DescribeUuidsByVulNamesResponse DescribeUuidsByVulNamesWithOptions(DescribeUuidsByVulNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Level))
            {
                query["Level"] = request.Level;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNames))
            {
                query["VulNames"] = request.VulNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUuidsByVulNames",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUuidsByVulNamesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of assets that support fixing based on vulnerability names.
         *
         * @param request DescribeUuidsByVulNamesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeUuidsByVulNamesResponse
         */
        public async Task<DescribeUuidsByVulNamesResponse> DescribeUuidsByVulNamesWithOptionsAsync(DescribeUuidsByVulNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Level))
            {
                query["Level"] = request.Level;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNames))
            {
                query["VulNames"] = request.VulNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeUuidsByVulNames",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeUuidsByVulNamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of assets that support fixing based on vulnerability names.
         *
         * @param request DescribeUuidsByVulNamesRequest
         * @return DescribeUuidsByVulNamesResponse
         */
        public DescribeUuidsByVulNamesResponse DescribeUuidsByVulNames(DescribeUuidsByVulNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeUuidsByVulNamesWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of assets that support fixing based on vulnerability names.
         *
         * @param request DescribeUuidsByVulNamesRequest
         * @return DescribeUuidsByVulNamesResponse
         */
        public async Task<DescribeUuidsByVulNamesResponse> DescribeUuidsByVulNamesAsync(DescribeUuidsByVulNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeUuidsByVulNamesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the service providers whose assets can be added to Security Center.
         *
         * @param request DescribeVendorListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVendorListResponse
         */
        public DescribeVendorListResponse DescribeVendorListWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVendorList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVendorListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the service providers whose assets can be added to Security Center.
         *
         * @param request DescribeVendorListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVendorListResponse
         */
        public async Task<DescribeVendorListResponse> DescribeVendorListWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVendorList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVendorListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the service providers whose assets can be added to Security Center.
         *
         * @return DescribeVendorListResponse
         */
        public DescribeVendorListResponse DescribeVendorList()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVendorListWithOptions(runtime);
        }

        /**
         * @summary Queries the service providers whose assets can be added to Security Center.
         *
         * @return DescribeVendorListResponse
         */
        public async Task<DescribeVendorListResponse> DescribeVendorListAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVendorListWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details about the edition of purchased Security Center.
         *
         * @param request DescribeVersionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVersionConfigResponse
         */
        public DescribeVersionConfigResponse DescribeVersionConfigWithOptions(DescribeVersionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVersionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVersionConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the edition of purchased Security Center.
         *
         * @param request DescribeVersionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVersionConfigResponse
         */
        public async Task<DescribeVersionConfigResponse> DescribeVersionConfigWithOptionsAsync(DescribeVersionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVersionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVersionConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the edition of purchased Security Center.
         *
         * @param request DescribeVersionConfigRequest
         * @return DescribeVersionConfigResponse
         */
        public DescribeVersionConfigResponse DescribeVersionConfig(DescribeVersionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVersionConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about the edition of purchased Security Center.
         *
         * @param request DescribeVersionConfigRequest
         * @return DescribeVersionConfigResponse
         */
        public async Task<DescribeVersionConfigResponse> DescribeVersionConfigAsync(DescribeVersionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVersionConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the search conditions that can be used to query honeypots.
         *
         * @param request DescribeVpcHoneyPotCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcHoneyPotCriteriaResponse
         */
        public DescribeVpcHoneyPotCriteriaResponse DescribeVpcHoneyPotCriteriaWithOptions(DescribeVpcHoneyPotCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcHoneyPotCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcHoneyPotCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that can be used to query honeypots.
         *
         * @param request DescribeVpcHoneyPotCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcHoneyPotCriteriaResponse
         */
        public async Task<DescribeVpcHoneyPotCriteriaResponse> DescribeVpcHoneyPotCriteriaWithOptionsAsync(DescribeVpcHoneyPotCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcHoneyPotCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcHoneyPotCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the search conditions that can be used to query honeypots.
         *
         * @param request DescribeVpcHoneyPotCriteriaRequest
         * @return DescribeVpcHoneyPotCriteriaResponse
         */
        public DescribeVpcHoneyPotCriteriaResponse DescribeVpcHoneyPotCriteria(DescribeVpcHoneyPotCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVpcHoneyPotCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the search conditions that can be used to query honeypots.
         *
         * @param request DescribeVpcHoneyPotCriteriaRequest
         * @return DescribeVpcHoneyPotCriteriaResponse
         */
        public async Task<DescribeVpcHoneyPotCriteriaResponse> DescribeVpcHoneyPotCriteriaAsync(DescribeVpcHoneyPotCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVpcHoneyPotCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries virtual private clouds (VPCs) on which honeypots are deployed.
         *
         * @description If you specify only the Action request parameter in your request, Security Center returns the list of all VPCs regardless of whether a honeypot is deployed on a VPC.
         *
         * @param request DescribeVpcHoneyPotListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcHoneyPotListResponse
         */
        public DescribeVpcHoneyPotListResponse DescribeVpcHoneyPotListWithOptions(DescribeVpcHoneyPotListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneyPotExistence))
            {
                query["HoneyPotExistence"] = request.HoneyPotExistence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcName))
            {
                query["VpcName"] = request.VpcName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcRegionId))
            {
                query["VpcRegionId"] = request.VpcRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcHoneyPotList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcHoneyPotListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries virtual private clouds (VPCs) on which honeypots are deployed.
         *
         * @description If you specify only the Action request parameter in your request, Security Center returns the list of all VPCs regardless of whether a honeypot is deployed on a VPC.
         *
         * @param request DescribeVpcHoneyPotListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcHoneyPotListResponse
         */
        public async Task<DescribeVpcHoneyPotListResponse> DescribeVpcHoneyPotListWithOptionsAsync(DescribeVpcHoneyPotListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneyPotExistence))
            {
                query["HoneyPotExistence"] = request.HoneyPotExistence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcName))
            {
                query["VpcName"] = request.VpcName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcRegionId))
            {
                query["VpcRegionId"] = request.VpcRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcHoneyPotList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcHoneyPotListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries virtual private clouds (VPCs) on which honeypots are deployed.
         *
         * @description If you specify only the Action request parameter in your request, Security Center returns the list of all VPCs regardless of whether a honeypot is deployed on a VPC.
         *
         * @param request DescribeVpcHoneyPotListRequest
         * @return DescribeVpcHoneyPotListResponse
         */
        public DescribeVpcHoneyPotListResponse DescribeVpcHoneyPotList(DescribeVpcHoneyPotListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVpcHoneyPotListWithOptions(request, runtime);
        }

        /**
         * @summary Queries virtual private clouds (VPCs) on which honeypots are deployed.
         *
         * @description If you specify only the Action request parameter in your request, Security Center returns the list of all VPCs regardless of whether a honeypot is deployed on a VPC.
         *
         * @param request DescribeVpcHoneyPotListRequest
         * @return DescribeVpcHoneyPotListResponse
         */
        public async Task<DescribeVpcHoneyPotListResponse> DescribeVpcHoneyPotListAsync(DescribeVpcHoneyPotListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVpcHoneyPotListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about virtual private clouds (VPCs).
         *
         * @param request DescribeVpcListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcListResponse
         */
        public DescribeVpcListResponse DescribeVpcListWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about virtual private clouds (VPCs).
         *
         * @param request DescribeVpcListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVpcListResponse
         */
        public async Task<DescribeVpcListResponse> DescribeVpcListWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVpcList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVpcListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about virtual private clouds (VPCs).
         *
         * @return DescribeVpcListResponse
         */
        public DescribeVpcListResponse DescribeVpcList()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVpcListWithOptions(runtime);
        }

        /**
         * @summary Queries the information about virtual private clouds (VPCs).
         *
         * @return DescribeVpcListResponse
         */
        public async Task<DescribeVpcListResponse> DescribeVpcListAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVpcListWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the status information about vulnerability scan tasks on a server.
         *
         * @param request DescribeVulCheckTaskStatusDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulCheckTaskStatusDetailResponse
         */
        public DescribeVulCheckTaskStatusDetailResponse DescribeVulCheckTaskStatusDetailWithOptions(DescribeVulCheckTaskStatusDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulCheckTaskStatusDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulCheckTaskStatusDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status information about vulnerability scan tasks on a server.
         *
         * @param request DescribeVulCheckTaskStatusDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulCheckTaskStatusDetailResponse
         */
        public async Task<DescribeVulCheckTaskStatusDetailResponse> DescribeVulCheckTaskStatusDetailWithOptionsAsync(DescribeVulCheckTaskStatusDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulCheckTaskStatusDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulCheckTaskStatusDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status information about vulnerability scan tasks on a server.
         *
         * @param request DescribeVulCheckTaskStatusDetailRequest
         * @return DescribeVulCheckTaskStatusDetailResponse
         */
        public DescribeVulCheckTaskStatusDetailResponse DescribeVulCheckTaskStatusDetail(DescribeVulCheckTaskStatusDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulCheckTaskStatusDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status information about vulnerability scan tasks on a server.
         *
         * @param request DescribeVulCheckTaskStatusDetailRequest
         * @return DescribeVulCheckTaskStatusDetailResponse
         */
        public async Task<DescribeVulCheckTaskStatusDetailResponse> DescribeVulCheckTaskStatusDetailAsync(DescribeVulCheckTaskStatusDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulCheckTaskStatusDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of vulnerability management.
         *
         * @param request DescribeVulConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulConfigResponse
         */
        public DescribeVulConfigResponse DescribeVulConfigWithOptions(DescribeVulConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of vulnerability management.
         *
         * @param request DescribeVulConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulConfigResponse
         */
        public async Task<DescribeVulConfigResponse> DescribeVulConfigWithOptionsAsync(DescribeVulConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of vulnerability management.
         *
         * @param request DescribeVulConfigRequest
         * @return DescribeVulConfigResponse
         */
        public DescribeVulConfigResponse DescribeVulConfig(DescribeVulConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of vulnerability management.
         *
         * @param request DescribeVulConfigRequest
         * @return DescribeVulConfigResponse
         */
        public async Task<DescribeVulConfigResponse> DescribeVulConfigAsync(DescribeVulConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the vulnerability defense statistics in Security Center.
         *
         * @param request DescribeVulDefendCountStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulDefendCountStatisticsResponse
         */
        public DescribeVulDefendCountStatisticsResponse DescribeVulDefendCountStatisticsWithOptions(DescribeVulDefendCountStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulType))
            {
                query["VulType"] = request.VulType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulDefendCountStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulDefendCountStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the vulnerability defense statistics in Security Center.
         *
         * @param request DescribeVulDefendCountStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulDefendCountStatisticsResponse
         */
        public async Task<DescribeVulDefendCountStatisticsResponse> DescribeVulDefendCountStatisticsWithOptionsAsync(DescribeVulDefendCountStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulType))
            {
                query["VulType"] = request.VulType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulDefendCountStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulDefendCountStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the vulnerability defense statistics in Security Center.
         *
         * @param request DescribeVulDefendCountStatisticsRequest
         * @return DescribeVulDefendCountStatisticsResponse
         */
        public DescribeVulDefendCountStatisticsResponse DescribeVulDefendCountStatistics(DescribeVulDefendCountStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulDefendCountStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the vulnerability defense statistics in Security Center.
         *
         * @param request DescribeVulDefendCountStatisticsRequest
         * @return DescribeVulDefendCountStatisticsResponse
         */
        public async Task<DescribeVulDefendCountStatisticsResponse> DescribeVulDefendCountStatisticsAsync(DescribeVulDefendCountStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulDefendCountStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about a vulnerability.
         *
         * @param request DescribeVulDetailsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulDetailsResponse
         */
        public DescribeVulDetailsResponse DescribeVulDetailsWithOptions(DescribeVulDetailsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulDetails",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulDetailsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a vulnerability.
         *
         * @param request DescribeVulDetailsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulDetailsResponse
         */
        public async Task<DescribeVulDetailsResponse> DescribeVulDetailsWithOptionsAsync(DescribeVulDetailsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulDetails",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulDetailsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a vulnerability.
         *
         * @param request DescribeVulDetailsRequest
         * @return DescribeVulDetailsResponse
         */
        public DescribeVulDetailsResponse DescribeVulDetails(DescribeVulDetailsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulDetailsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a vulnerability.
         *
         * @param request DescribeVulDetailsRequest
         * @return DescribeVulDetailsResponse
         */
        public async Task<DescribeVulDetailsResponse> DescribeVulDetailsAsync(DescribeVulDetailsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulDetailsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the progress of a task that exports vulnerabilities.
         *
         * @description If the value of ExportStatus is success, the URL at which you can download the exported Excel file is returned.
         *
         * @param request DescribeVulExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulExportInfoResponse
         */
        public DescribeVulExportInfoResponse DescribeVulExportInfoWithOptions(DescribeVulExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a task that exports vulnerabilities.
         *
         * @description If the value of ExportStatus is success, the URL at which you can download the exported Excel file is returned.
         *
         * @param request DescribeVulExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulExportInfoResponse
         */
        public async Task<DescribeVulExportInfoResponse> DescribeVulExportInfoWithOptionsAsync(DescribeVulExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a task that exports vulnerabilities.
         *
         * @description If the value of ExportStatus is success, the URL at which you can download the exported Excel file is returned.
         *
         * @param request DescribeVulExportInfoRequest
         * @return DescribeVulExportInfoResponse
         */
        public DescribeVulExportInfoResponse DescribeVulExportInfo(DescribeVulExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the progress of a task that exports vulnerabilities.
         *
         * @description If the value of ExportStatus is success, the URL at which you can download the exported Excel file is returned.
         *
         * @param request DescribeVulExportInfoRequest
         * @return DescribeVulExportInfoResponse
         */
        public async Task<DescribeVulExportInfoResponse> DescribeVulExportInfoAsync(DescribeVulExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of vulnerability fixes.
         *
         * @param request DescribeVulFixStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulFixStatisticsResponse
         */
        public DescribeVulFixStatisticsResponse DescribeVulFixStatisticsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulFixStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulFixStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerability fixes.
         *
         * @param request DescribeVulFixStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulFixStatisticsResponse
         */
        public async Task<DescribeVulFixStatisticsResponse> DescribeVulFixStatisticsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulFixStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulFixStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerability fixes.
         *
         * @return DescribeVulFixStatisticsResponse
         */
        public DescribeVulFixStatisticsResponse DescribeVulFixStatistics()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulFixStatisticsWithOptions(runtime);
        }

        /**
         * @summary Queries the statistics of vulnerability fixes.
         *
         * @return DescribeVulFixStatisticsResponse
         */
        public async Task<DescribeVulFixStatisticsResponse> DescribeVulFixStatisticsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulFixStatisticsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries vulnerabilities by type.
         *
         * @param request DescribeVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulListResponse
         */
        public DescribeVulListResponse DescribeVulListWithOptions(DescribeVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries vulnerabilities by type.
         *
         * @param request DescribeVulListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulListResponse
         */
        public async Task<DescribeVulListResponse> DescribeVulListWithOptionsAsync(DescribeVulListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries vulnerabilities by type.
         *
         * @param request DescribeVulListRequest
         * @return DescribeVulListResponse
         */
        public DescribeVulListResponse DescribeVulList(DescribeVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulListWithOptions(request, runtime);
        }

        /**
         * @summary Queries vulnerabilities by type.
         *
         * @param request DescribeVulListRequest
         * @return DescribeVulListResponse
         */
        public async Task<DescribeVulListResponse> DescribeVulListAsync(DescribeVulListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the vulnerabilities that can be detected.
         *
         * @param request DescribeVulListPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulListPageResponse
         */
        public DescribeVulListPageResponse DescribeVulListPageWithOptions(DescribeVulListPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RaspDefend))
            {
                query["RaspDefend"] = request.RaspDefend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNameLike))
            {
                query["VulNameLike"] = request.VulNameLike;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulType))
            {
                query["VulType"] = request.VulType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulListPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulListPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the vulnerabilities that can be detected.
         *
         * @param request DescribeVulListPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulListPageResponse
         */
        public async Task<DescribeVulListPageResponse> DescribeVulListPageWithOptionsAsync(DescribeVulListPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RaspDefend))
            {
                query["RaspDefend"] = request.RaspDefend;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNameLike))
            {
                query["VulNameLike"] = request.VulNameLike;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulType))
            {
                query["VulType"] = request.VulType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulListPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulListPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the vulnerabilities that can be detected.
         *
         * @param request DescribeVulListPageRequest
         * @return DescribeVulListPageResponse
         */
        public DescribeVulListPageResponse DescribeVulListPage(DescribeVulListPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulListPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the vulnerabilities that can be detected.
         *
         * @param request DescribeVulListPageRequest
         * @return DescribeVulListPageResponse
         */
        public async Task<DescribeVulListPageResponse> DescribeVulListPageAsync(DescribeVulListPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulListPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities in Security Center.
         *
         * @param request DescribeVulMetaCountStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulMetaCountStatisticsResponse
         */
        public DescribeVulMetaCountStatisticsResponse DescribeVulMetaCountStatisticsWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulMetaCountStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulMetaCountStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities in Security Center.
         *
         * @param request DescribeVulMetaCountStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulMetaCountStatisticsResponse
         */
        public async Task<DescribeVulMetaCountStatisticsResponse> DescribeVulMetaCountStatisticsWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulMetaCountStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulMetaCountStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities in Security Center.
         *
         * @return DescribeVulMetaCountStatisticsResponse
         */
        public DescribeVulMetaCountStatisticsResponse DescribeVulMetaCountStatistics()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulMetaCountStatisticsWithOptions(runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities in Security Center.
         *
         * @return DescribeVulMetaCountStatisticsResponse
         */
        public async Task<DescribeVulMetaCountStatisticsResponse> DescribeVulMetaCountStatisticsAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulMetaCountStatisticsWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities.
         *
         * @param request DescribeVulNumStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulNumStatisticsResponse
         */
        public DescribeVulNumStatisticsResponse DescribeVulNumStatisticsWithOptions(DescribeVulNumStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulNumStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulNumStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities.
         *
         * @param request DescribeVulNumStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulNumStatisticsResponse
         */
        public async Task<DescribeVulNumStatisticsResponse> DescribeVulNumStatisticsWithOptionsAsync(DescribeVulNumStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulNumStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulNumStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of vulnerabilities.
         *
         * @param request DescribeVulNumStatisticsRequest
         * @return DescribeVulNumStatisticsResponse
         */
        public DescribeVulNumStatisticsResponse DescribeVulNumStatistics(DescribeVulNumStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulNumStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of vulnerabilities.
         *
         * @param request DescribeVulNumStatisticsRequest
         * @return DescribeVulNumStatisticsResponse
         */
        public async Task<DescribeVulNumStatisticsResponse> DescribeVulNumStatisticsAsync(DescribeVulNumStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulNumStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature for a server.
         *
         * @param request DescribeVulTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulTargetConfigResponse
         */
        public DescribeVulTargetConfigResponse DescribeVulTargetConfigWithOptions(DescribeVulTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulTargetConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature for a server.
         *
         * @param request DescribeVulTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulTargetConfigResponse
         */
        public async Task<DescribeVulTargetConfigResponse> DescribeVulTargetConfigWithOptionsAsync(DescribeVulTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulTargetConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature for a server.
         *
         * @param request DescribeVulTargetConfigRequest
         * @return DescribeVulTargetConfigResponse
         */
        public DescribeVulTargetConfigResponse DescribeVulTargetConfig(DescribeVulTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulTargetConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature for a server.
         *
         * @param request DescribeVulTargetConfigRequest
         * @return DescribeVulTargetConfigResponse
         */
        public async Task<DescribeVulTargetConfigResponse> DescribeVulTargetConfigAsync(DescribeVulTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulTargetConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature.
         *
         * @param request DescribeVulTargetStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulTargetStatisticsResponse
         */
        public DescribeVulTargetStatisticsResponse DescribeVulTargetStatisticsWithOptions(DescribeVulTargetStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulTargetStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulTargetStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature.
         *
         * @param request DescribeVulTargetStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulTargetStatisticsResponse
         */
        public async Task<DescribeVulTargetStatisticsResponse> DescribeVulTargetStatisticsWithOptionsAsync(DescribeVulTargetStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulTargetStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulTargetStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature.
         *
         * @param request DescribeVulTargetStatisticsRequest
         * @return DescribeVulTargetStatisticsResponse
         */
        public DescribeVulTargetStatisticsResponse DescribeVulTargetStatistics(DescribeVulTargetStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulTargetStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of the vulnerability scan feature.
         *
         * @param request DescribeVulTargetStatisticsRequest
         * @return DescribeVulTargetStatisticsResponse
         */
        public async Task<DescribeVulTargetStatisticsResponse> DescribeVulTargetStatisticsAsync(DescribeVulTargetStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulTargetStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the whitelist of vulnerabilities by page.
         *
         * @param request DescribeVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulWhitelistResponse
         */
        public DescribeVulWhitelistResponse DescribeVulWhitelistWithOptions(DescribeVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the whitelist of vulnerabilities by page.
         *
         * @param request DescribeVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeVulWhitelistResponse
         */
        public async Task<DescribeVulWhitelistResponse> DescribeVulWhitelistWithOptionsAsync(DescribeVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeVulWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the whitelist of vulnerabilities by page.
         *
         * @param request DescribeVulWhitelistRequest
         * @return DescribeVulWhitelistResponse
         */
        public DescribeVulWhitelistResponse DescribeVulWhitelist(DescribeVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeVulWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Queries the whitelist of vulnerabilities by page.
         *
         * @param request DescribeVulWhitelistRequest
         * @return DescribeVulWhitelistResponse
         */
        public async Task<DescribeVulWhitelistResponse> DescribeVulWhitelistAsync(DescribeVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeVulWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the progress of a export task for a baseline check result.
         *
         * @param request DescribeWarningExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWarningExportInfoResponse
         */
        public DescribeWarningExportInfoResponse DescribeWarningExportInfoWithOptions(DescribeWarningExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWarningExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWarningExportInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a export task for a baseline check result.
         *
         * @param request DescribeWarningExportInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWarningExportInfoResponse
         */
        public async Task<DescribeWarningExportInfoResponse> DescribeWarningExportInfoWithOptionsAsync(DescribeWarningExportInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportId))
            {
                query["ExportId"] = request.ExportId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWarningExportInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWarningExportInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a export task for a baseline check result.
         *
         * @param request DescribeWarningExportInfoRequest
         * @return DescribeWarningExportInfoResponse
         */
        public DescribeWarningExportInfoResponse DescribeWarningExportInfo(DescribeWarningExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWarningExportInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the progress of a export task for a baseline check result.
         *
         * @param request DescribeWarningExportInfoRequest
         * @return DescribeWarningExportInfoResponse
         */
        public async Task<DescribeWarningExportInfoResponse> DescribeWarningExportInfoAsync(DescribeWarningExportInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWarningExportInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about servers on which a baseline check is performed. The information includes the IDs of the servers, the statistics of a risk item, and the status of the risk item.
         *
         * @param request DescribeWarningMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWarningMachinesResponse
         */
        public DescribeWarningMachinesResponse DescribeWarningMachinesWithOptions(DescribeWarningMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HaveRisk))
            {
                query["HaveRisk"] = request.HaveRisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWarningMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWarningMachinesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about servers on which a baseline check is performed. The information includes the IDs of the servers, the statistics of a risk item, and the status of the risk item.
         *
         * @param request DescribeWarningMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWarningMachinesResponse
         */
        public async Task<DescribeWarningMachinesResponse> DescribeWarningMachinesWithOptionsAsync(DescribeWarningMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HaveRisk))
            {
                query["HaveRisk"] = request.HaveRisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWarningMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWarningMachinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about servers on which a baseline check is performed. The information includes the IDs of the servers, the statistics of a risk item, and the status of the risk item.
         *
         * @param request DescribeWarningMachinesRequest
         * @return DescribeWarningMachinesResponse
         */
        public DescribeWarningMachinesResponse DescribeWarningMachines(DescribeWarningMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWarningMachinesWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about servers on which a baseline check is performed. The information includes the IDs of the servers, the statistics of a risk item, and the status of the risk item.
         *
         * @param request DescribeWarningMachinesRequest
         * @return DescribeWarningMachinesResponse
         */
        public async Task<DescribeWarningMachinesResponse> DescribeWarningMachinesAsync(DescribeWarningMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWarningMachinesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the servers that have web tamper proofing enabled.
         *
         * @param request DescribeWebLockBindListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockBindListResponse
         */
        public DescribeWebLockBindListResponse DescribeWebLockBindListWithOptions(DescribeWebLockBindListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockBindList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockBindListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers that have web tamper proofing enabled.
         *
         * @param request DescribeWebLockBindListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockBindListResponse
         */
        public async Task<DescribeWebLockBindListResponse> DescribeWebLockBindListWithOptionsAsync(DescribeWebLockBindListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockBindList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockBindListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers that have web tamper proofing enabled.
         *
         * @param request DescribeWebLockBindListRequest
         * @return DescribeWebLockBindListResponse
         */
        public DescribeWebLockBindListResponse DescribeWebLockBindList(DescribeWebLockBindListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockBindListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the servers that have web tamper proofing enabled.
         *
         * @param request DescribeWebLockBindListRequest
         * @return DescribeWebLockBindListResponse
         */
        public async Task<DescribeWebLockBindListResponse> DescribeWebLockBindListAsync(DescribeWebLockBindListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockBindListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of web tamper proofing for a specified server.
         *
         * @param request DescribeWebLockConfigListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockConfigListResponse
         */
        public DescribeWebLockConfigListResponse DescribeWebLockConfigListWithOptions(DescribeWebLockConfigListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockConfigList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockConfigListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of web tamper proofing for a specified server.
         *
         * @param request DescribeWebLockConfigListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockConfigListResponse
         */
        public async Task<DescribeWebLockConfigListResponse> DescribeWebLockConfigListWithOptionsAsync(DescribeWebLockConfigListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockConfigList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockConfigListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of web tamper proofing for a specified server.
         *
         * @param request DescribeWebLockConfigListRequest
         * @return DescribeWebLockConfigListResponse
         */
        public DescribeWebLockConfigListResponse DescribeWebLockConfigList(DescribeWebLockConfigListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockConfigListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of web tamper proofing for a specified server.
         *
         * @param request DescribeWebLockConfigListRequest
         * @return DescribeWebLockConfigListResponse
         */
        public async Task<DescribeWebLockConfigListResponse> DescribeWebLockConfigListAsync(DescribeWebLockConfigListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockConfigListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询排除文件类型
         *
         * @param request DescribeWebLockExclusiveFileTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockExclusiveFileTypeResponse
         */
        public DescribeWebLockExclusiveFileTypeResponse DescribeWebLockExclusiveFileTypeWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockExclusiveFileType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockExclusiveFileTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询排除文件类型
         *
         * @param request DescribeWebLockExclusiveFileTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockExclusiveFileTypeResponse
         */
        public async Task<DescribeWebLockExclusiveFileTypeResponse> DescribeWebLockExclusiveFileTypeWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockExclusiveFileType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockExclusiveFileTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询排除文件类型
         *
         * @return DescribeWebLockExclusiveFileTypeResponse
         */
        public DescribeWebLockExclusiveFileTypeResponse DescribeWebLockExclusiveFileType()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockExclusiveFileTypeWithOptions(runtime);
        }

        /**
         * @summary 查询排除文件类型
         *
         * @return DescribeWebLockExclusiveFileTypeResponse
         */
        public async Task<DescribeWebLockExclusiveFileTypeResponse> DescribeWebLockExclusiveFileTypeAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockExclusiveFileTypeWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics on changes to the files that are protected by web tamper proofing.
         *
         * @param request DescribeWebLockFileChangeStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileChangeStatisticsResponse
         */
        public DescribeWebLockFileChangeStatisticsResponse DescribeWebLockFileChangeStatisticsWithOptions(DescribeWebLockFileChangeStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileChangeStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileChangeStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on changes to the files that are protected by web tamper proofing.
         *
         * @param request DescribeWebLockFileChangeStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileChangeStatisticsResponse
         */
        public async Task<DescribeWebLockFileChangeStatisticsResponse> DescribeWebLockFileChangeStatisticsWithOptionsAsync(DescribeWebLockFileChangeStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileChangeStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileChangeStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on changes to the files that are protected by web tamper proofing.
         *
         * @param request DescribeWebLockFileChangeStatisticsRequest
         * @return DescribeWebLockFileChangeStatisticsResponse
         */
        public DescribeWebLockFileChangeStatisticsResponse DescribeWebLockFileChangeStatistics(DescribeWebLockFileChangeStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockFileChangeStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on changes to the files that are protected by web tamper proofing.
         *
         * @param request DescribeWebLockFileChangeStatisticsRequest
         * @return DescribeWebLockFileChangeStatisticsResponse
         */
        public async Task<DescribeWebLockFileChangeStatisticsResponse> DescribeWebLockFileChangeStatisticsAsync(DescribeWebLockFileChangeStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockFileChangeStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries events on web tamper proofing.
         *
         * @param request DescribeWebLockFileEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileEventsResponse
         */
        public DescribeWebLockFileEventsResponse DescribeWebLockFileEventsWithOptions(DescribeWebLockFileEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessName))
            {
                query["ProcessName"] = request.ProcessName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TsBegin))
            {
                query["TsBegin"] = request.TsBegin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TsEnd))
            {
                query["TsEnd"] = request.TsEnd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries events on web tamper proofing.
         *
         * @param request DescribeWebLockFileEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileEventsResponse
         */
        public async Task<DescribeWebLockFileEventsResponse> DescribeWebLockFileEventsWithOptionsAsync(DescribeWebLockFileEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessName))
            {
                query["ProcessName"] = request.ProcessName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TsBegin))
            {
                query["TsBegin"] = request.TsBegin;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TsEnd))
            {
                query["TsEnd"] = request.TsEnd;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries events on web tamper proofing.
         *
         * @param request DescribeWebLockFileEventsRequest
         * @return DescribeWebLockFileEventsResponse
         */
        public DescribeWebLockFileEventsResponse DescribeWebLockFileEvents(DescribeWebLockFileEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockFileEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries events on web tamper proofing.
         *
         * @param request DescribeWebLockFileEventsRequest
         * @return DescribeWebLockFileEventsResponse
         */
        public async Task<DescribeWebLockFileEventsResponse> DescribeWebLockFileEventsAsync(DescribeWebLockFileEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockFileEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The number of attempts.
         *
         * @param request DescribeWebLockFileTypeSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileTypeSummaryResponse
         */
        public DescribeWebLockFileTypeSummaryResponse DescribeWebLockFileTypeSummaryWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileTypeSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileTypeSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The number of attempts.
         *
         * @param request DescribeWebLockFileTypeSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockFileTypeSummaryResponse
         */
        public async Task<DescribeWebLockFileTypeSummaryResponse> DescribeWebLockFileTypeSummaryWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockFileTypeSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockFileTypeSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The number of attempts.
         *
         * @return DescribeWebLockFileTypeSummaryResponse
         */
        public DescribeWebLockFileTypeSummaryResponse DescribeWebLockFileTypeSummary()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockFileTypeSummaryWithOptions(runtime);
        }

        /**
         * @summary The number of attempts.
         *
         * @return DescribeWebLockFileTypeSummaryResponse
         */
        public async Task<DescribeWebLockFileTypeSummaryResponse> DescribeWebLockFileTypeSummaryAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockFileTypeSummaryWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the types of files that can be protected by web tamper proofing.
         *
         * @param request DescribeWebLockInclusiveFileTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockInclusiveFileTypeResponse
         */
        public DescribeWebLockInclusiveFileTypeResponse DescribeWebLockInclusiveFileTypeWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockInclusiveFileType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockInclusiveFileTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the types of files that can be protected by web tamper proofing.
         *
         * @param request DescribeWebLockInclusiveFileTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockInclusiveFileTypeResponse
         */
        public async Task<DescribeWebLockInclusiveFileTypeResponse> DescribeWebLockInclusiveFileTypeWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockInclusiveFileType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockInclusiveFileTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the types of files that can be protected by web tamper proofing.
         *
         * @return DescribeWebLockInclusiveFileTypeResponse
         */
        public DescribeWebLockInclusiveFileTypeResponse DescribeWebLockInclusiveFileType()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockInclusiveFileTypeWithOptions(runtime);
        }

        /**
         * @summary Queries the types of files that can be protected by web tamper proofing.
         *
         * @return DescribeWebLockInclusiveFileTypeResponse
         */
        public async Task<DescribeWebLockInclusiveFileTypeResponse> DescribeWebLockInclusiveFileTypeAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockInclusiveFileTypeWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics on processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessBlockStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockProcessBlockStatisticsResponse
         */
        public DescribeWebLockProcessBlockStatisticsResponse DescribeWebLockProcessBlockStatisticsWithOptions(DescribeWebLockProcessBlockStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockProcessBlockStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockProcessBlockStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessBlockStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockProcessBlockStatisticsResponse
         */
        public async Task<DescribeWebLockProcessBlockStatisticsResponse> DescribeWebLockProcessBlockStatisticsWithOptionsAsync(DescribeWebLockProcessBlockStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockProcessBlockStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockProcessBlockStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessBlockStatisticsRequest
         * @return DescribeWebLockProcessBlockStatisticsResponse
         */
        public DescribeWebLockProcessBlockStatisticsResponse DescribeWebLockProcessBlockStatistics(DescribeWebLockProcessBlockStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockProcessBlockStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessBlockStatisticsRequest
         * @return DescribeWebLockProcessBlockStatisticsResponse
         */
        public async Task<DescribeWebLockProcessBlockStatisticsResponse> DescribeWebLockProcessBlockStatisticsAsync(DescribeWebLockProcessBlockStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockProcessBlockStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockProcessListResponse
         */
        public DescribeWebLockProcessListResponse DescribeWebLockProcessListWithOptions(DescribeWebLockProcessListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessName))
            {
                query["ProcessName"] = request.ProcessName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockProcessList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockProcessListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockProcessListResponse
         */
        public async Task<DescribeWebLockProcessListResponse> DescribeWebLockProcessListWithOptionsAsync(DescribeWebLockProcessListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessName))
            {
                query["ProcessName"] = request.ProcessName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockProcessList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockProcessListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessListRequest
         * @return DescribeWebLockProcessListResponse
         */
        public DescribeWebLockProcessListResponse DescribeWebLockProcessList(DescribeWebLockProcessListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockProcessListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the processes for web tamper proofing.
         *
         * @param request DescribeWebLockProcessListRequest
         * @return DescribeWebLockProcessListResponse
         */
        public async Task<DescribeWebLockProcessListResponse> DescribeWebLockProcessListAsync(DescribeWebLockProcessListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockProcessListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status of web tamper proofing.
         *
         * @param request DescribeWebLockStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockStatusResponse
         */
        public DescribeWebLockStatusResponse DescribeWebLockStatusWithOptions(DescribeWebLockStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status of web tamper proofing.
         *
         * @param request DescribeWebLockStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockStatusResponse
         */
        public async Task<DescribeWebLockStatusResponse> DescribeWebLockStatusWithOptionsAsync(DescribeWebLockStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status of web tamper proofing.
         *
         * @param request DescribeWebLockStatusRequest
         * @return DescribeWebLockStatusResponse
         */
        public DescribeWebLockStatusResponse DescribeWebLockStatus(DescribeWebLockStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status of web tamper proofing.
         *
         * @param request DescribeWebLockStatusRequest
         * @return DescribeWebLockStatusResponse
         */
        public async Task<DescribeWebLockStatusResponse> DescribeWebLockStatusAsync(DescribeWebLockStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of times that the files protected by web tamper proofing are changed.
         *
         * @param request DescribeWebLockTotalFileChangeCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockTotalFileChangeCountResponse
         */
        public DescribeWebLockTotalFileChangeCountResponse DescribeWebLockTotalFileChangeCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockTotalFileChangeCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockTotalFileChangeCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of times that the files protected by web tamper proofing are changed.
         *
         * @param request DescribeWebLockTotalFileChangeCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebLockTotalFileChangeCountResponse
         */
        public async Task<DescribeWebLockTotalFileChangeCountResponse> DescribeWebLockTotalFileChangeCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebLockTotalFileChangeCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebLockTotalFileChangeCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of times that the files protected by web tamper proofing are changed.
         *
         * @return DescribeWebLockTotalFileChangeCountResponse
         */
        public DescribeWebLockTotalFileChangeCountResponse DescribeWebLockTotalFileChangeCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebLockTotalFileChangeCountWithOptions(runtime);
        }

        /**
         * @summary Queries the number of times that the files protected by web tamper proofing are changed.
         *
         * @return DescribeWebLockTotalFileChangeCountResponse
         */
        public async Task<DescribeWebLockTotalFileChangeCountResponse> DescribeWebLockTotalFileChangeCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebLockTotalFileChangeCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the custom web directories that are scanned based on the alerting feature.
         *
         * @param request DescribeWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebPathResponse
         */
        public DescribeWebPathResponse DescribeWebPathWithOptions(DescribeWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebPathResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the custom web directories that are scanned based on the alerting feature.
         *
         * @param request DescribeWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebPathResponse
         */
        public async Task<DescribeWebPathResponse> DescribeWebPathWithOptionsAsync(DescribeWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebPathResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the custom web directories that are scanned based on the alerting feature.
         *
         * @param request DescribeWebPathRequest
         * @return DescribeWebPathResponse
         */
        public DescribeWebPathResponse DescribeWebPath(DescribeWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebPathWithOptions(request, runtime);
        }

        /**
         * @summary Queries the custom web directories that are scanned based on the alerting feature.
         *
         * @param request DescribeWebPathRequest
         * @return DescribeWebPathResponse
         */
        public async Task<DescribeWebPathResponse> DescribeWebPathAsync(DescribeWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebPathWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Disables an IP address blocking policy that is in effect.
         *
         * @param request DisableBruteForceRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DisableBruteForceRecordResponse
         */
        public DisableBruteForceRecordResponse DisableBruteForceRecordWithOptions(DisableBruteForceRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableBruteForceRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableBruteForceRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Disables an IP address blocking policy that is in effect.
         *
         * @param request DisableBruteForceRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DisableBruteForceRecordResponse
         */
        public async Task<DisableBruteForceRecordResponse> DisableBruteForceRecordWithOptionsAsync(DisableBruteForceRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableBruteForceRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableBruteForceRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Disables an IP address blocking policy that is in effect.
         *
         * @param request DisableBruteForceRecordRequest
         * @return DisableBruteForceRecordResponse
         */
        public DisableBruteForceRecordResponse DisableBruteForceRecord(DisableBruteForceRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableBruteForceRecordWithOptions(request, runtime);
        }

        /**
         * @summary Disables an IP address blocking policy that is in effect.
         *
         * @param request DisableBruteForceRecordRequest
         * @return DisableBruteForceRecordResponse
         */
        public async Task<DisableBruteForceRecordResponse> DisableBruteForceRecordAsync(DisableBruteForceRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableBruteForceRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Disables a custom IP address blocking policy for servers.
         *
         * @param request DisableCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DisableCustomBlockRecordResponse
         */
        public DisableCustomBlockRecordResponse DisableCustomBlockRecordWithOptions(DisableCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCustomBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Disables a custom IP address blocking policy for servers.
         *
         * @param request DisableCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DisableCustomBlockRecordResponse
         */
        public async Task<DisableCustomBlockRecordResponse> DisableCustomBlockRecordWithOptionsAsync(DisableCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableCustomBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Disables a custom IP address blocking policy for servers.
         *
         * @param request DisableCustomBlockRecordRequest
         * @return DisableCustomBlockRecordResponse
         */
        public DisableCustomBlockRecordResponse DisableCustomBlockRecord(DisableCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableCustomBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Disables a custom IP address blocking policy for servers.
         *
         * @param request DisableCustomBlockRecordRequest
         * @return DisableCustomBlockRecordResponse
         */
        public async Task<DisableCustomBlockRecordResponse> DisableCustomBlockRecordAsync(DisableCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableCustomBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables an IP address blocking policy for a specified server.
         *
         * @param request EnableBruteForceRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableBruteForceRecordResponse
         */
        public EnableBruteForceRecordResponse EnableBruteForceRecordWithOptions(EnableBruteForceRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableBruteForceRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableBruteForceRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables an IP address blocking policy for a specified server.
         *
         * @param request EnableBruteForceRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableBruteForceRecordResponse
         */
        public async Task<EnableBruteForceRecordResponse> EnableBruteForceRecordWithOptionsAsync(EnableBruteForceRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableBruteForceRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableBruteForceRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables an IP address blocking policy for a specified server.
         *
         * @param request EnableBruteForceRecordRequest
         * @return EnableBruteForceRecordResponse
         */
        public EnableBruteForceRecordResponse EnableBruteForceRecord(EnableBruteForceRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableBruteForceRecordWithOptions(request, runtime);
        }

        /**
         * @summary Enables an IP address blocking policy for a specified server.
         *
         * @param request EnableBruteForceRecordRequest
         * @return EnableBruteForceRecordResponse
         */
        public async Task<EnableBruteForceRecordResponse> EnableBruteForceRecordAsync(EnableBruteForceRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableBruteForceRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables a custom IP address blocking policy.
         *
         * @param request EnableCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableCustomBlockRecordResponse
         */
        public EnableCustomBlockRecordResponse EnableCustomBlockRecordWithOptions(EnableCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables a custom IP address blocking policy.
         *
         * @param request EnableCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableCustomBlockRecordResponse
         */
        public async Task<EnableCustomBlockRecordResponse> EnableCustomBlockRecordWithOptionsAsync(EnableCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables a custom IP address blocking policy.
         *
         * @param request EnableCustomBlockRecordRequest
         * @return EnableCustomBlockRecordResponse
         */
        public EnableCustomBlockRecordResponse EnableCustomBlockRecord(EnableCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableCustomBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Enables a custom IP address blocking policy.
         *
         * @param request EnableCustomBlockRecordRequest
         * @return EnableCustomBlockRecordResponse
         */
        public async Task<EnableCustomBlockRecordResponse> EnableCustomBlockRecordAsync(EnableCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableCustomBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables a custom rule for an instance.
         *
         * @param request EnableCustomInstanceBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableCustomInstanceBlockRecordResponse
         */
        public EnableCustomInstanceBlockRecordResponse EnableCustomInstanceBlockRecordWithOptions(EnableCustomInstanceBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomInstanceBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomInstanceBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables a custom rule for an instance.
         *
         * @param request EnableCustomInstanceBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableCustomInstanceBlockRecordResponse
         */
        public async Task<EnableCustomInstanceBlockRecordResponse> EnableCustomInstanceBlockRecordWithOptionsAsync(EnableCustomInstanceBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableCustomInstanceBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableCustomInstanceBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables a custom rule for an instance.
         *
         * @param request EnableCustomInstanceBlockRecordRequest
         * @return EnableCustomInstanceBlockRecordResponse
         */
        public EnableCustomInstanceBlockRecordResponse EnableCustomInstanceBlockRecord(EnableCustomInstanceBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableCustomInstanceBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Enables a custom rule for an instance.
         *
         * @param request EnableCustomInstanceBlockRecordRequest
         * @return EnableCustomInstanceBlockRecordResponse
         */
        public async Task<EnableCustomInstanceBlockRecordResponse> EnableCustomInstanceBlockRecordAsync(EnableCustomInstanceBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableCustomInstanceBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Performs a baseline check on servers to which a specified baseline check policy is applied.
         *
         * @param request ExecStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExecStrategyResponse
         */
        public ExecStrategyResponse ExecStrategyWithOptions(ExecStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExecStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExecStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Performs a baseline check on servers to which a specified baseline check policy is applied.
         *
         * @param request ExecStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExecStrategyResponse
         */
        public async Task<ExecStrategyResponse> ExecStrategyWithOptionsAsync(ExecStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExecStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExecStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Performs a baseline check on servers to which a specified baseline check policy is applied.
         *
         * @param request ExecStrategyRequest
         * @return ExecStrategyResponse
         */
        public ExecStrategyResponse ExecStrategy(ExecStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExecStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Performs a baseline check on servers to which a specified baseline check policy is applied.
         *
         * @param request ExecStrategyRequest
         * @return ExecStrategyResponse
         */
        public async Task<ExecStrategyResponse> ExecStrategyAsync(ExecStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExecStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Exports the check results on the Host, Cloud Platform Configuration Assessment, Image Security, Attack Awareness, and AK leak detection pages to Excel files.
         *
         * @description You can call the operation to export the following check result lists:
         * *   The list of servers on the Host page.
         * *   The lists of image system vulnerabilities, image application vulnerabilities, image baseline check results, and malicious image samples on the Image Security page.
         * *   The list of attack analysis data on the Attack Awareness page.
         * *   The list of check results for AccessKey pair leaks on the AK leak detection page.
         *
         * @param request ExportRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportRecordResponse
         */
        public ExportRecordResponse ExportRecordWithOptions(ExportRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportFileType))
            {
                query["ExportFileType"] = request.ExportFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Params))
            {
                query["Params"] = request.Params;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Exports the check results on the Host, Cloud Platform Configuration Assessment, Image Security, Attack Awareness, and AK leak detection pages to Excel files.
         *
         * @description You can call the operation to export the following check result lists:
         * *   The list of servers on the Host page.
         * *   The lists of image system vulnerabilities, image application vulnerabilities, image baseline check results, and malicious image samples on the Image Security page.
         * *   The list of attack analysis data on the Attack Awareness page.
         * *   The list of check results for AccessKey pair leaks on the AK leak detection page.
         *
         * @param request ExportRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportRecordResponse
         */
        public async Task<ExportRecordResponse> ExportRecordWithOptionsAsync(ExportRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportFileType))
            {
                query["ExportFileType"] = request.ExportFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Params))
            {
                query["Params"] = request.Params;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Exports the check results on the Host, Cloud Platform Configuration Assessment, Image Security, Attack Awareness, and AK leak detection pages to Excel files.
         *
         * @description You can call the operation to export the following check result lists:
         * *   The list of servers on the Host page.
         * *   The lists of image system vulnerabilities, image application vulnerabilities, image baseline check results, and malicious image samples on the Image Security page.
         * *   The list of attack analysis data on the Attack Awareness page.
         * *   The list of check results for AccessKey pair leaks on the AK leak detection page.
         *
         * @param request ExportRecordRequest
         * @return ExportRecordResponse
         */
        public ExportRecordResponse ExportRecord(ExportRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExportRecordWithOptions(request, runtime);
        }

        /**
         * @summary Exports the check results on the Host, Cloud Platform Configuration Assessment, Image Security, Attack Awareness, and AK leak detection pages to Excel files.
         *
         * @description You can call the operation to export the following check result lists:
         * *   The list of servers on the Host page.
         * *   The lists of image system vulnerabilities, image application vulnerabilities, image baseline check results, and malicious image samples on the Image Security page.
         * *   The list of attack analysis data on the Attack Awareness page.
         * *   The list of check results for AccessKey pair leaks on the AK leak detection page.
         *
         * @param request ExportRecordRequest
         * @return ExportRecordResponse
         */
        public async Task<ExportRecordResponse> ExportRecordAsync(ExportRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExportRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Exports the information about exceptions to a file.
         *
         * @param request ExportSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportSuspEventsResponse
         */
        public ExportSuspEventsResponse ExportSuspEventsWithOptions(ExportSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetsTypeList))
            {
                query["AssetsTypeList"] = request.AssetsTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateErrorCodeList))
            {
                query["OperateErrorCodeList"] = request.OperateErrorCodeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventTypes))
            {
                query["ParentEventTypes"] = request.ParentEventTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportSuspEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Exports the information about exceptions to a file.
         *
         * @param request ExportSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportSuspEventsResponse
         */
        public async Task<ExportSuspEventsResponse> ExportSuspEventsWithOptionsAsync(ExportSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetsTypeList))
            {
                query["AssetsTypeList"] = request.AssetsTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateErrorCodeList))
            {
                query["OperateErrorCodeList"] = request.OperateErrorCodeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventTypes))
            {
                query["ParentEventTypes"] = request.ParentEventTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniqueInfo))
            {
                query["UniqueInfo"] = request.UniqueInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportSuspEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Exports the information about exceptions to a file.
         *
         * @param request ExportSuspEventsRequest
         * @return ExportSuspEventsResponse
         */
        public ExportSuspEventsResponse ExportSuspEvents(ExportSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExportSuspEventsWithOptions(request, runtime);
        }

        /**
         * @summary Exports the information about exceptions to a file.
         *
         * @param request ExportSuspEventsRequest
         * @return ExportSuspEventsResponse
         */
        public async Task<ExportSuspEventsResponse> ExportSuspEventsAsync(ExportSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExportSuspEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Exports vulnerabilities.
         *
         * @description You can call the ExportVul operation to export the following types of vulnerabilities: Linux software vulnerabilities, Windows system vulnerabilities, Web-CMS vulnerabilities, application vulnerabilities, and urgent vulnerabilities.
         * You can use this operation together with the DescribeVulExportInfo operation. After you call the ExportVul operation to create a vulnerability export task, you can call the DescribeVulExportInfo operation to query the progress of the task by specifying the ID of the task.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ExportVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportVulResponse
         */
        public ExportVulResponse ExportVulWithOptions(ExportVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerName))
            {
                query["ContainerName"] = request.ContainerName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTsEnd))
            {
                query["CreateTsEnd"] = request.CreateTsEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTsStart))
            {
                query["CreateTsStart"] = request.CreateTsStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportVulResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Exports vulnerabilities.
         *
         * @description You can call the ExportVul operation to export the following types of vulnerabilities: Linux software vulnerabilities, Windows system vulnerabilities, Web-CMS vulnerabilities, application vulnerabilities, and urgent vulnerabilities.
         * You can use this operation together with the DescribeVulExportInfo operation. After you call the ExportVul operation to create a vulnerability export task, you can call the DescribeVulExportInfo operation to query the progress of the task by specifying the ID of the task.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ExportVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportVulResponse
         */
        public async Task<ExportVulResponse> ExportVulWithOptionsAsync(ExportVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AttachTypes))
            {
                query["AttachTypes"] = request.AttachTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerName))
            {
                query["ContainerName"] = request.ContainerName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTsEnd))
            {
                query["CreateTsEnd"] = request.CreateTsEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTsStart))
            {
                query["CreateTsStart"] = request.CreateTsStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CveId))
            {
                query["CveId"] = request.CveId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Necessity))
            {
                query["Necessity"] = request.Necessity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Path))
            {
                query["Path"] = request.Path;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchTags))
            {
                query["SearchTags"] = request.SearchTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcInstanceIds))
            {
                query["VpcInstanceIds"] = request.VpcInstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportVulResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Exports vulnerabilities.
         *
         * @description You can call the ExportVul operation to export the following types of vulnerabilities: Linux software vulnerabilities, Windows system vulnerabilities, Web-CMS vulnerabilities, application vulnerabilities, and urgent vulnerabilities.
         * You can use this operation together with the DescribeVulExportInfo operation. After you call the ExportVul operation to create a vulnerability export task, you can call the DescribeVulExportInfo operation to query the progress of the task by specifying the ID of the task.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ExportVulRequest
         * @return ExportVulResponse
         */
        public ExportVulResponse ExportVul(ExportVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExportVulWithOptions(request, runtime);
        }

        /**
         * @summary Exports vulnerabilities.
         *
         * @description You can call the ExportVul operation to export the following types of vulnerabilities: Linux software vulnerabilities, Windows system vulnerabilities, Web-CMS vulnerabilities, application vulnerabilities, and urgent vulnerabilities.
         * You can use this operation together with the DescribeVulExportInfo operation. After you call the ExportVul operation to create a vulnerability export task, you can call the DescribeVulExportInfo operation to query the progress of the task by specifying the ID of the task.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ExportVulRequest
         * @return ExportVulResponse
         */
        public async Task<ExportVulResponse> ExportVulAsync(ExportVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExportVulWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Exports baseline check results.
         *
         * @param request ExportWarningRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportWarningResponse
         */
        public ExportWarningResponse ExportWarningWithOptions(ExportWarningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsCleartextPwd))
            {
                query["IsCleartextPwd"] = request.IsCleartextPwd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsSummaryExport))
            {
                query["IsSummaryExport"] = request.IsSummaryExport;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskIds))
            {
                query["RiskIds"] = request.RiskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevels))
            {
                query["RiskLevels"] = request.RiskLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubTypeNames))
            {
                query["SubTypeNames"] = request.SubTypeNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeNames))
            {
                query["TypeNames"] = request.TypeNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportWarning",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportWarningResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Exports baseline check results.
         *
         * @param request ExportWarningRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ExportWarningResponse
         */
        public async Task<ExportWarningResponse> ExportWarningWithOptionsAsync(ExportWarningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExportType))
            {
                query["ExportType"] = request.ExportType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsCleartextPwd))
            {
                query["IsCleartextPwd"] = request.IsCleartextPwd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsSummaryExport))
            {
                query["IsSummaryExport"] = request.IsSummaryExport;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskIds))
            {
                query["RiskIds"] = request.RiskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevels))
            {
                query["RiskLevels"] = request.RiskLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskName))
            {
                query["RiskName"] = request.RiskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubTypeNames))
            {
                query["SubTypeNames"] = request.SubTypeNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeName))
            {
                query["TypeName"] = request.TypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeNames))
            {
                query["TypeNames"] = request.TypeNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ExportWarning",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ExportWarningResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Exports baseline check results.
         *
         * @param request ExportWarningRequest
         * @return ExportWarningResponse
         */
        public ExportWarningResponse ExportWarning(ExportWarningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ExportWarningWithOptions(request, runtime);
        }

        /**
         * @summary Exports baseline check results.
         *
         * @param request ExportWarningRequest
         * @return ExportWarningResponse
         */
        public async Task<ExportWarningResponse> ExportWarningAsync(ExportWarningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ExportWarningWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 容器网络连接
         *
         * @param tmpReq FindContainerNetworkConnectRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return FindContainerNetworkConnectResponse
         */
        public FindContainerNetworkConnectResponse FindContainerNetworkConnectWithOptions(FindContainerNetworkConnectRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            FindContainerNetworkConnectShrinkRequest request = new FindContainerNetworkConnectShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstNode))
            {
                request.DstNodeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstNode, "DstNode", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcNode))
            {
                request.SrcNodeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcNode, "SrcNode", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstNodeShrink))
            {
                query["DstNode"] = request.DstNodeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcNodeShrink))
            {
                query["SrcNode"] = request.SrcNodeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "FindContainerNetworkConnect",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<FindContainerNetworkConnectResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 容器网络连接
         *
         * @param tmpReq FindContainerNetworkConnectRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return FindContainerNetworkConnectResponse
         */
        public async Task<FindContainerNetworkConnectResponse> FindContainerNetworkConnectWithOptionsAsync(FindContainerNetworkConnectRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            FindContainerNetworkConnectShrinkRequest request = new FindContainerNetworkConnectShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstNode))
            {
                request.DstNodeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstNode, "DstNode", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcNode))
            {
                request.SrcNodeShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcNode, "SrcNode", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstNodeShrink))
            {
                query["DstNode"] = request.DstNodeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcNodeShrink))
            {
                query["SrcNode"] = request.SrcNodeShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "FindContainerNetworkConnect",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<FindContainerNetworkConnectResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 容器网络连接
         *
         * @param request FindContainerNetworkConnectRequest
         * @return FindContainerNetworkConnectResponse
         */
        public FindContainerNetworkConnectResponse FindContainerNetworkConnect(FindContainerNetworkConnectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return FindContainerNetworkConnectWithOptions(request, runtime);
        }

        /**
         * @summary 容器网络连接
         *
         * @param request FindContainerNetworkConnectRequest
         * @return FindContainerNetworkConnectResponse
         */
        public async Task<FindContainerNetworkConnectResponse> FindContainerNetworkConnectAsync(FindContainerNetworkConnectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await FindContainerNetworkConnectWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Fixes a baseline risk item.
         *
         * @param request FixCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return FixCheckWarningsResponse
         */
        public FixCheckWarningsResponse FixCheckWarningsWithOptions(FixCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckParams))
            {
                query["CheckParams"] = request.CheckParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "FixCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<FixCheckWarningsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Fixes a baseline risk item.
         *
         * @param request FixCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return FixCheckWarningsResponse
         */
        public async Task<FixCheckWarningsResponse> FixCheckWarningsWithOptionsAsync(FixCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckParams))
            {
                query["CheckParams"] = request.CheckParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "FixCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<FixCheckWarningsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Fixes a baseline risk item.
         *
         * @param request FixCheckWarningsRequest
         * @return FixCheckWarningsResponse
         */
        public FixCheckWarningsResponse FixCheckWarnings(FixCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return FixCheckWarningsWithOptions(request, runtime);
        }

        /**
         * @summary Fixes a baseline risk item.
         *
         * @param request FixCheckWarningsRequest
         * @return FixCheckWarningsResponse
         */
        public async Task<FixCheckWarningsResponse> FixCheckWarningsAsync(FixCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await FixCheckWarningsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Generates a command that is used to add a self-managed Kubernetes cluster.
         *
         * @param request GenerateK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GenerateK8sAccessInfoResponse
         */
        public GenerateK8sAccessInfoResponse GenerateK8sAccessInfoWithOptions(GenerateK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditLogStore))
            {
                query["AuditLogStore"] = request.AuditLogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditProject))
            {
                query["AuditProject"] = request.AuditProject;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditRegionId))
            {
                query["AuditRegionId"] = request.AuditRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireDate))
            {
                query["ExpireDate"] = request.ExpireDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateK8sAccessInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Generates a command that is used to add a self-managed Kubernetes cluster.
         *
         * @param request GenerateK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GenerateK8sAccessInfoResponse
         */
        public async Task<GenerateK8sAccessInfoResponse> GenerateK8sAccessInfoWithOptionsAsync(GenerateK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditLogStore))
            {
                query["AuditLogStore"] = request.AuditLogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditProject))
            {
                query["AuditProject"] = request.AuditProject;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuditRegionId))
            {
                query["AuditRegionId"] = request.AuditRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireDate))
            {
                query["ExpireDate"] = request.ExpireDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateK8sAccessInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Generates a command that is used to add a self-managed Kubernetes cluster.
         *
         * @param request GenerateK8sAccessInfoRequest
         * @return GenerateK8sAccessInfoResponse
         */
        public GenerateK8sAccessInfoResponse GenerateK8sAccessInfo(GenerateK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GenerateK8sAccessInfoWithOptions(request, runtime);
        }

        /**
         * @summary Generates a command that is used to add a self-managed Kubernetes cluster.
         *
         * @param request GenerateK8sAccessInfoRequest
         * @return GenerateK8sAccessInfoResponse
         */
        public async Task<GenerateK8sAccessInfoResponse> GenerateK8sAccessInfoAsync(GenerateK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GenerateK8sAccessInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a one-time scan task.
         *
         * @param request GenerateOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GenerateOnceTaskResponse
         */
        public GenerateOnceTaskResponse GenerateOnceTaskWithOptions(GenerateOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateOnceTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a one-time scan task.
         *
         * @param request GenerateOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GenerateOnceTaskResponse
         */
        public async Task<GenerateOnceTaskResponse> GenerateOnceTaskWithOptionsAsync(GenerateOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateOnceTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a one-time scan task.
         *
         * @param request GenerateOnceTaskRequest
         * @return GenerateOnceTaskResponse
         */
        public GenerateOnceTaskResponse GenerateOnceTask(GenerateOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GenerateOnceTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates a one-time scan task.
         *
         * @param request GenerateOnceTaskRequest
         * @return GenerateOnceTaskResponse
         */
        public async Task<GenerateOnceTaskResponse> GenerateOnceTaskAsync(GenerateOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GenerateOnceTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetAegisContainerPluginRuleCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAegisContainerPluginRuleCriteriaResponse
         */
        public GetAegisContainerPluginRuleCriteriaResponse GetAegisContainerPluginRuleCriteriaWithOptions(GetAegisContainerPluginRuleCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAegisContainerPluginRuleCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAegisContainerPluginRuleCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetAegisContainerPluginRuleCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAegisContainerPluginRuleCriteriaResponse
         */
        public async Task<GetAegisContainerPluginRuleCriteriaResponse> GetAegisContainerPluginRuleCriteriaWithOptionsAsync(GetAegisContainerPluginRuleCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAegisContainerPluginRuleCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAegisContainerPluginRuleCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetAegisContainerPluginRuleCriteriaRequest
         * @return GetAegisContainerPluginRuleCriteriaResponse
         */
        public GetAegisContainerPluginRuleCriteriaResponse GetAegisContainerPluginRuleCriteria(GetAegisContainerPluginRuleCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAegisContainerPluginRuleCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetAegisContainerPluginRuleCriteriaRequest
         * @return GetAegisContainerPluginRuleCriteriaResponse
         */
        public async Task<GetAegisContainerPluginRuleCriteriaResponse> GetAegisContainerPluginRuleCriteriaAsync(GetAegisContainerPluginRuleCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAegisContainerPluginRuleCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of agentless detection tasks.
         *
         * @param request GetAgentlessTaskCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAgentlessTaskCountResponse
         */
        public GetAgentlessTaskCountResponse GetAgentlessTaskCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAgentlessTaskCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAgentlessTaskCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of agentless detection tasks.
         *
         * @param request GetAgentlessTaskCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAgentlessTaskCountResponse
         */
        public async Task<GetAgentlessTaskCountResponse> GetAgentlessTaskCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAgentlessTaskCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAgentlessTaskCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of agentless detection tasks.
         *
         * @return GetAgentlessTaskCountResponse
         */
        public GetAgentlessTaskCountResponse GetAgentlessTaskCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAgentlessTaskCountWithOptions(runtime);
        }

        /**
         * @summary Queries the number of agentless detection tasks.
         *
         * @return GetAgentlessTaskCountResponse
         */
        public async Task<GetAgentlessTaskCountResponse> GetAgentlessTaskCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAgentlessTaskCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the number of servers on which alerts are generated.
         *
         * @param request GetAlarmMachineCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAlarmMachineCountResponse
         */
        public GetAlarmMachineCountResponse GetAlarmMachineCountWithOptions(GetAlarmMachineCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAlarmMachineCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAlarmMachineCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of servers on which alerts are generated.
         *
         * @param request GetAlarmMachineCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAlarmMachineCountResponse
         */
        public async Task<GetAlarmMachineCountResponse> GetAlarmMachineCountWithOptionsAsync(GetAlarmMachineCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAlarmMachineCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAlarmMachineCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of servers on which alerts are generated.
         *
         * @param request GetAlarmMachineCountRequest
         * @return GetAlarmMachineCountResponse
         */
        public GetAlarmMachineCountResponse GetAlarmMachineCount(GetAlarmMachineCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAlarmMachineCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the number of servers on which alerts are generated.
         *
         * @param request GetAlarmMachineCountRequest
         * @return GetAlarmMachineCountResponse
         */
        public async Task<GetAlarmMachineCountResponse> GetAlarmMachineCountAsync(GetAlarmMachineCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAlarmMachineCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the network topology between containerized applications.
         *
         * @param request GetAppNetworkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppNetworkResponse
         */
        public GetAppNetworkResponse GetAppNetworkWithOptions(GetAppNetworkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppNetwork",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppNetworkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the network topology between containerized applications.
         *
         * @param request GetAppNetworkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppNetworkResponse
         */
        public async Task<GetAppNetworkResponse> GetAppNetworkWithOptionsAsync(GetAppNetworkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppNetwork",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppNetworkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the network topology between containerized applications.
         *
         * @param request GetAppNetworkRequest
         * @return GetAppNetworkResponse
         */
        public GetAppNetworkResponse GetAppNetwork(GetAppNetworkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAppNetworkWithOptions(request, runtime);
        }

        /**
         * @summary Queries the network topology between containerized applications.
         *
         * @param request GetAppNetworkRequest
         * @return GetAppNetworkResponse
         */
        public async Task<GetAppNetworkResponse> GetAppNetworkAsync(GetAppNetworkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAppNetworkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request GetAssetDetailByUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetDetailByUuidResponse
         */
        public GetAssetDetailByUuidResponse GetAssetDetailByUuidWithOptions(GetAssetDetailByUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetDetailByUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetDetailByUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request GetAssetDetailByUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetDetailByUuidResponse
         */
        public async Task<GetAssetDetailByUuidResponse> GetAssetDetailByUuidWithOptionsAsync(GetAssetDetailByUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetDetailByUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetDetailByUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request GetAssetDetailByUuidRequest
         * @return GetAssetDetailByUuidResponse
         */
        public GetAssetDetailByUuidResponse GetAssetDetailByUuid(GetAssetDetailByUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAssetDetailByUuidWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a server and the extended information about the server by using the UUID of the server.
         *
         * @param request GetAssetDetailByUuidRequest
         * @return GetAssetDetailByUuidResponse
         */
        public async Task<GetAssetDetailByUuidResponse> GetAssetDetailByUuidAsync(GetAssetDetailByUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAssetDetailByUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries asset selection configurations.
         *
         * @param request GetAssetSelectionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetSelectionConfigResponse
         */
        public GetAssetSelectionConfigResponse GetAssetSelectionConfigWithOptions(GetAssetSelectionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetSelectionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetSelectionConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries asset selection configurations.
         *
         * @param request GetAssetSelectionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetSelectionConfigResponse
         */
        public async Task<GetAssetSelectionConfigResponse> GetAssetSelectionConfigWithOptionsAsync(GetAssetSelectionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetSelectionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetSelectionConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries asset selection configurations.
         *
         * @param request GetAssetSelectionConfigRequest
         * @return GetAssetSelectionConfigResponse
         */
        public GetAssetSelectionConfigResponse GetAssetSelectionConfig(GetAssetSelectionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAssetSelectionConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries asset selection configurations.
         *
         * @param request GetAssetSelectionConfigRequest
         * @return GetAssetSelectionConfigResponse
         */
        public async Task<GetAssetSelectionConfigResponse> GetAssetSelectionConfigAsync(GetAssetSelectionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAssetSelectionConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetsPropertyDetailResponse
         */
        public GetAssetsPropertyDetailResponse GetAssetsPropertyDetailWithOptions(GetAssetsPropertyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemName))
            {
                query["ItemName"] = request.ItemName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchCriteriaList))
            {
                query["SearchCriteriaList"] = request.SearchCriteriaList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetsPropertyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetsPropertyDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetsPropertyDetailResponse
         */
        public async Task<GetAssetsPropertyDetailResponse> GetAssetsPropertyDetailWithOptionsAsync(GetAssetsPropertyDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemName))
            {
                query["ItemName"] = request.ItemName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchCriteriaList))
            {
                query["SearchCriteriaList"] = request.SearchCriteriaList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetsPropertyDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetsPropertyDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyDetailRequest
         * @return GetAssetsPropertyDetailResponse
         */
        public GetAssetsPropertyDetailResponse GetAssetsPropertyDetail(GetAssetsPropertyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAssetsPropertyDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyDetailRequest
         * @return GetAssetsPropertyDetailResponse
         */
        public async Task<GetAssetsPropertyDetailResponse> GetAssetsPropertyDetailAsync(GetAssetsPropertyDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAssetsPropertyDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the aggregation information about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetsPropertyItemResponse
         */
        public GetAssetsPropertyItemResponse GetAssetsPropertyItemWithOptions(GetAssetsPropertyItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetsPropertyItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetsPropertyItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the aggregation information about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAssetsPropertyItemResponse
         */
        public async Task<GetAssetsPropertyItemResponse> GetAssetsPropertyItemWithOptionsAsync(GetAssetsPropertyItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Biz))
            {
                query["Biz"] = request.Biz;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForceFlush))
            {
                query["ForceFlush"] = request.ForceFlush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchInfo))
            {
                query["SearchInfo"] = request.SearchInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchItem))
            {
                query["SearchItem"] = request.SearchItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAssetsPropertyItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAssetsPropertyItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the aggregation information about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyItemRequest
         * @return GetAssetsPropertyItemResponse
         */
        public GetAssetsPropertyItemResponse GetAssetsPropertyItem(GetAssetsPropertyItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAssetsPropertyItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries the aggregation information about the asset fingerprints of the startup item, kernel module, or website type.
         *
         * @param request GetAssetsPropertyItemRequest
         * @return GetAssetsPropertyItemResponse
         */
        public async Task<GetAssetsPropertyItemResponse> GetAssetsPropertyItemAsync(GetAssetsPropertyItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAssetsPropertyItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics about the numbers of assets protected by each edition of Security Center.
         *
         * @param request GetAuthVersionStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAuthVersionStatisticResponse
         */
        public GetAuthVersionStatisticResponse GetAuthVersionStatisticWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAuthVersionStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAuthVersionStatisticResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about the numbers of assets protected by each edition of Security Center.
         *
         * @param request GetAuthVersionStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAuthVersionStatisticResponse
         */
        public async Task<GetAuthVersionStatisticResponse> GetAuthVersionStatisticWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAuthVersionStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAuthVersionStatisticResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about the numbers of assets protected by each edition of Security Center.
         *
         * @return GetAuthVersionStatisticResponse
         */
        public GetAuthVersionStatisticResponse GetAuthVersionStatistic()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAuthVersionStatisticWithOptions(runtime);
        }

        /**
         * @summary Queries the statistics about the numbers of assets protected by each edition of Security Center.
         *
         * @return GetAuthVersionStatisticResponse
         */
        public async Task<GetAuthVersionStatisticResponse> GetAuthVersionStatisticAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAuthVersionStatisticWithOptionsAsync(runtime);
        }

        /**
         * @summary 查询防勒索存储统计
         *
         * @param request GetBackupStorageCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetBackupStorageCountResponse
         */
        public GetBackupStorageCountResponse GetBackupStorageCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetBackupStorageCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetBackupStorageCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询防勒索存储统计
         *
         * @param request GetBackupStorageCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetBackupStorageCountResponse
         */
        public async Task<GetBackupStorageCountResponse> GetBackupStorageCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetBackupStorageCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetBackupStorageCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询防勒索存储统计
         *
         * @return GetBackupStorageCountResponse
         */
        public GetBackupStorageCountResponse GetBackupStorageCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetBackupStorageCountWithOptions(runtime);
        }

        /**
         * @summary 查询防勒索存储统计
         *
         * @return GetBackupStorageCountResponse
         */
        public async Task<GetBackupStorageCountResponse> GetBackupStorageCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetBackupStorageCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the information about an automatic configuration check on cloud services.
         *
         * @param request GetCheckConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckConfigResponse
         */
        public GetCheckConfigResponse GetCheckConfigWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an automatic configuration check on cloud services.
         *
         * @param request GetCheckConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckConfigResponse
         */
        public async Task<GetCheckConfigResponse> GetCheckConfigWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an automatic configuration check on cloud services.
         *
         * @return GetCheckConfigResponse
         */
        public GetCheckConfigResponse GetCheckConfig()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckConfigWithOptions(runtime);
        }

        /**
         * @summary Queries the information about an automatic configuration check on cloud services.
         *
         * @return GetCheckConfigResponse
         */
        public async Task<GetCheckConfigResponse> GetCheckConfigAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckConfigWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details about a check item that is used for configuration assessment.
         *
         * @param request GetCheckDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckDetailResponse
         */
        public GetCheckDetailResponse GetCheckDetailWithOptions(GetCheckDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a check item that is used for configuration assessment.
         *
         * @param request GetCheckDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckDetailResponse
         */
        public async Task<GetCheckDetailResponse> GetCheckDetailWithOptionsAsync(GetCheckDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a check item that is used for configuration assessment.
         *
         * @param request GetCheckDetailRequest
         * @return GetCheckDetailResponse
         */
        public GetCheckDetailResponse GetCheckDetail(GetCheckDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a check item that is used for configuration assessment.
         *
         * @param request GetCheckDetailRequest
         * @return GetCheckDetailResponse
         */
        public async Task<GetCheckDetailResponse> GetCheckDetailAsync(GetCheckDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the progress of a configuration check task on cloud services.
         *
         * @param request GetCheckProcessRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckProcessResponse
         */
        public GetCheckProcessResponse GetCheckProcessWithOptions(GetCheckProcessRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckProcess",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckProcessResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a configuration check task on cloud services.
         *
         * @param request GetCheckProcessRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckProcessResponse
         */
        public async Task<GetCheckProcessResponse> GetCheckProcessWithOptionsAsync(GetCheckProcessRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckProcess",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckProcessResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a configuration check task on cloud services.
         *
         * @param request GetCheckProcessRequest
         * @return GetCheckProcessResponse
         */
        public GetCheckProcessResponse GetCheckProcess(GetCheckProcessRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckProcessWithOptions(request, runtime);
        }

        /**
         * @summary Queries the progress of a configuration check task on cloud services.
         *
         * @param request GetCheckProcessRequest
         * @return GetCheckProcessResponse
         */
        public async Task<GetCheckProcessResponse> GetCheckProcessAsync(GetCheckProcessRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckProcessWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics on risk scenarios and check items that are used in the risk scenarios, including the statistics on low-risk, medium-risk, and high-risk items by baseline type.
         *
         * @param request GetCheckRiskStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckRiskStatisticsResponse
         */
        public GetCheckRiskStatisticsResponse GetCheckRiskStatisticsWithOptions(GetCheckRiskStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckRiskStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckRiskStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on risk scenarios and check items that are used in the risk scenarios, including the statistics on low-risk, medium-risk, and high-risk items by baseline type.
         *
         * @param request GetCheckRiskStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckRiskStatisticsResponse
         */
        public async Task<GetCheckRiskStatisticsResponse> GetCheckRiskStatisticsWithOptionsAsync(GetCheckRiskStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckRiskStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckRiskStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on risk scenarios and check items that are used in the risk scenarios, including the statistics on low-risk, medium-risk, and high-risk items by baseline type.
         *
         * @param request GetCheckRiskStatisticsRequest
         * @return GetCheckRiskStatisticsResponse
         */
        public GetCheckRiskStatisticsResponse GetCheckRiskStatistics(GetCheckRiskStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckRiskStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on risk scenarios and check items that are used in the risk scenarios, including the statistics on low-risk, medium-risk, and high-risk items by baseline type.
         *
         * @param request GetCheckRiskStatisticsRequest
         * @return GetCheckRiskStatisticsResponse
         */
        public async Task<GetCheckRiskStatisticsResponse> GetCheckRiskStatisticsAsync(GetCheckRiskStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckRiskStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the sales information about the configuration assessment feature, including the purchased quota and the consumed quota.
         *
         * @param request GetCheckSaleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckSaleResponse
         */
        public GetCheckSaleResponse GetCheckSaleWithOptions(GetCheckSaleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckSale",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckSaleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the sales information about the configuration assessment feature, including the purchased quota and the consumed quota.
         *
         * @param request GetCheckSaleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckSaleResponse
         */
        public async Task<GetCheckSaleResponse> GetCheckSaleWithOptionsAsync(GetCheckSaleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckSale",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckSaleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the sales information about the configuration assessment feature, including the purchased quota and the consumed quota.
         *
         * @param request GetCheckSaleRequest
         * @return GetCheckSaleResponse
         */
        public GetCheckSaleResponse GetCheckSale(GetCheckSaleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckSaleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the sales information about the configuration assessment feature, including the purchased quota and the consumed quota.
         *
         * @param request GetCheckSaleRequest
         * @return GetCheckSaleResponse
         */
        public async Task<GetCheckSaleResponse> GetCheckSaleAsync(GetCheckSaleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckSaleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the summary information about the configuration checks on cloud services.
         *
         * @param request GetCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckSummaryResponse
         */
        public GetCheckSummaryResponse GetCheckSummaryWithOptions(GetCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsItemStatistic))
            {
                query["IsItemStatistic"] = request.IsItemStatistic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the summary information about the configuration checks on cloud services.
         *
         * @param request GetCheckSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCheckSummaryResponse
         */
        public async Task<GetCheckSummaryResponse> GetCheckSummaryWithOptionsAsync(GetCheckSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsItemStatistic))
            {
                query["IsItemStatistic"] = request.IsItemStatistic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCheckSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCheckSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the summary information about the configuration checks on cloud services.
         *
         * @param request GetCheckSummaryRequest
         * @return GetCheckSummaryResponse
         */
        public GetCheckSummaryResponse GetCheckSummary(GetCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCheckSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the summary information about the configuration checks on cloud services.
         *
         * @param request GetCheckSummaryRequest
         * @return GetCheckSummaryResponse
         */
        public async Task<GetCheckSummaryResponse> GetCheckSummaryAsync(GetCheckSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCheckSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetClientInstallationStatistic is deprecated, please use Sas::2018-12-03::GetClientRatioStatistic instead.
         *
         * @summary Queries the installation rate of the client on cloud assets in the specified period of time.
         *
         * @param request GetClientInstallationStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientInstallationStatisticResponse
         */
        // Deprecated
        public GetClientInstallationStatisticResponse GetClientInstallationStatisticWithOptions(GetClientInstallationStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientInstallationStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientInstallationStatisticResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetClientInstallationStatistic is deprecated, please use Sas::2018-12-03::GetClientRatioStatistic instead.
         *
         * @summary Queries the installation rate of the client on cloud assets in the specified period of time.
         *
         * @param request GetClientInstallationStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientInstallationStatisticResponse
         */
        // Deprecated
        public async Task<GetClientInstallationStatisticResponse> GetClientInstallationStatisticWithOptionsAsync(GetClientInstallationStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientInstallationStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientInstallationStatisticResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetClientInstallationStatistic is deprecated, please use Sas::2018-12-03::GetClientRatioStatistic instead.
         *
         * @summary Queries the installation rate of the client on cloud assets in the specified period of time.
         *
         * @param request GetClientInstallationStatisticRequest
         * @return GetClientInstallationStatisticResponse
         */
        // Deprecated
        public GetClientInstallationStatisticResponse GetClientInstallationStatistic(GetClientInstallationStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientInstallationStatisticWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetClientInstallationStatistic is deprecated, please use Sas::2018-12-03::GetClientRatioStatistic instead.
         *
         * @summary Queries the installation rate of the client on cloud assets in the specified period of time.
         *
         * @param request GetClientInstallationStatisticRequest
         * @return GetClientInstallationStatisticResponse
         */
        // Deprecated
        public async Task<GetClientInstallationStatisticResponse> GetClientInstallationStatisticAsync(GetClientInstallationStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientInstallationStatisticWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the installation rate and online rate of the agent.
         *
         * @param request GetClientRatioStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientRatioStatisticResponse
         */
        public GetClientRatioStatisticResponse GetClientRatioStatisticWithOptions(GetClientRatioStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticTypes))
            {
                query["StatisticTypes"] = request.StatisticTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientRatioStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientRatioStatisticResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the installation rate and online rate of the agent.
         *
         * @param request GetClientRatioStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientRatioStatisticResponse
         */
        public async Task<GetClientRatioStatisticResponse> GetClientRatioStatisticWithOptionsAsync(GetClientRatioStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticTypes))
            {
                query["StatisticTypes"] = request.StatisticTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientRatioStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientRatioStatisticResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the installation rate and online rate of the agent.
         *
         * @param request GetClientRatioStatisticRequest
         * @return GetClientRatioStatisticResponse
         */
        public GetClientRatioStatisticResponse GetClientRatioStatistic(GetClientRatioStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientRatioStatisticWithOptions(request, runtime);
        }

        /**
         * @summary Queries the installation rate and online rate of the agent.
         *
         * @param request GetClientRatioStatisticRequest
         * @return GetClientRatioStatisticResponse
         */
        public async Task<GetClientRatioStatisticResponse> GetClientRatioStatisticAsync(GetClientRatioStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientRatioStatisticWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a custom defense rule.
         *
         * @param request GetClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientUserDefineRuleResponse
         */
        public GetClientUserDefineRuleResponse GetClientUserDefineRuleWithOptions(GetClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientUserDefineRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a custom defense rule.
         *
         * @param request GetClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClientUserDefineRuleResponse
         */
        public async Task<GetClientUserDefineRuleResponse> GetClientUserDefineRuleWithOptionsAsync(GetClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClientUserDefineRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a custom defense rule.
         *
         * @param request GetClientUserDefineRuleRequest
         * @return GetClientUserDefineRuleResponse
         */
        public GetClientUserDefineRuleResponse GetClientUserDefineRule(GetClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClientUserDefineRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a custom defense rule.
         *
         * @param request GetClientUserDefineRuleRequest
         * @return GetClientUserDefineRuleResponse
         */
        public async Task<GetClientUserDefineRuleResponse> GetClientUserDefineRuleAsync(GetClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClientUserDefineRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the filter conditions that are used to search for cloud assets.
         *
         * @param request GetCloudAssetCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetCriteriaResponse
         */
        public GetCloudAssetCriteriaResponse GetCloudAssetCriteriaWithOptions(GetCloudAssetCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetTypes))
            {
                query["CloudAssetTypes"] = request.CloudAssetTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the filter conditions that are used to search for cloud assets.
         *
         * @param request GetCloudAssetCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetCriteriaResponse
         */
        public async Task<GetCloudAssetCriteriaResponse> GetCloudAssetCriteriaWithOptionsAsync(GetCloudAssetCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetTypes))
            {
                query["CloudAssetTypes"] = request.CloudAssetTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the filter conditions that are used to search for cloud assets.
         *
         * @param request GetCloudAssetCriteriaRequest
         * @return GetCloudAssetCriteriaResponse
         */
        public GetCloudAssetCriteriaResponse GetCloudAssetCriteria(GetCloudAssetCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCloudAssetCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the filter conditions that are used to search for cloud assets.
         *
         * @param request GetCloudAssetCriteriaRequest
         * @return GetCloudAssetCriteriaResponse
         */
        public async Task<GetCloudAssetCriteriaResponse> GetCloudAssetCriteriaAsync(GetCloudAssetCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCloudAssetCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the details of cloud assets.
         *
         * @param request GetCloudAssetDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetDetailResponse
         */
        public GetCloudAssetDetailResponse GetCloudAssetDetailWithOptions(GetCloudAssetDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetSubType))
            {
                query["AssetSubType"] = request.AssetSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetInstances))
            {
                query["CloudAssetInstances"] = request.CloudAssetInstances;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the details of cloud assets.
         *
         * @param request GetCloudAssetDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetDetailResponse
         */
        public async Task<GetCloudAssetDetailResponse> GetCloudAssetDetailWithOptionsAsync(GetCloudAssetDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetSubType))
            {
                query["AssetSubType"] = request.AssetSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetInstances))
            {
                query["CloudAssetInstances"] = request.CloudAssetInstances;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the details of cloud assets.
         *
         * @param request GetCloudAssetDetailRequest
         * @return GetCloudAssetDetailResponse
         */
        public GetCloudAssetDetailResponse GetCloudAssetDetail(GetCloudAssetDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCloudAssetDetailWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the details of cloud assets.
         *
         * @param request GetCloudAssetDetailRequest
         * @return GetCloudAssetDetailResponse
         */
        public async Task<GetCloudAssetDetailResponse> GetCloudAssetDetailAsync(GetCloudAssetDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCloudAssetDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The total number of instances that are at risk.
         *
         * @param request GetCloudAssetSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetSummaryResponse
         */
        public GetCloudAssetSummaryResponse GetCloudAssetSummaryWithOptions(GetCloudAssetSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The total number of instances that are at risk.
         *
         * @param request GetCloudAssetSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudAssetSummaryResponse
         */
        public async Task<GetCloudAssetSummaryResponse> GetCloudAssetSummaryWithOptionsAsync(GetCloudAssetSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudAssetSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudAssetSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The total number of instances that are at risk.
         *
         * @param request GetCloudAssetSummaryRequest
         * @return GetCloudAssetSummaryResponse
         */
        public GetCloudAssetSummaryResponse GetCloudAssetSummary(GetCloudAssetSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCloudAssetSummaryWithOptions(request, runtime);
        }

        /**
         * @summary The total number of instances that are at risk.
         *
         * @param request GetCloudAssetSummaryRequest
         * @return GetCloudAssetSummaryResponse
         */
        public async Task<GetCloudAssetSummaryResponse> GetCloudAssetSummaryAsync(GetCloudAssetSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCloudAssetSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics on baseline risk items of container clusters.
         *
         * @param request GetClusterCheckItemWarningStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterCheckItemWarningStatisticsResponse
         */
        public GetClusterCheckItemWarningStatisticsResponse GetClusterCheckItemWarningStatisticsWithOptions(GetClusterCheckItemWarningStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterCheckItemWarningStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterCheckItemWarningStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on baseline risk items of container clusters.
         *
         * @param request GetClusterCheckItemWarningStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterCheckItemWarningStatisticsResponse
         */
        public async Task<GetClusterCheckItemWarningStatisticsResponse> GetClusterCheckItemWarningStatisticsWithOptionsAsync(GetClusterCheckItemWarningStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterCheckItemWarningStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterCheckItemWarningStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on baseline risk items of container clusters.
         *
         * @param request GetClusterCheckItemWarningStatisticsRequest
         * @return GetClusterCheckItemWarningStatisticsResponse
         */
        public GetClusterCheckItemWarningStatisticsResponse GetClusterCheckItemWarningStatistics(GetClusterCheckItemWarningStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClusterCheckItemWarningStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on baseline risk items of container clusters.
         *
         * @param request GetClusterCheckItemWarningStatisticsRequest
         * @return GetClusterCheckItemWarningStatisticsResponse
         */
        public async Task<GetClusterCheckItemWarningStatisticsResponse> GetClusterCheckItemWarningStatisticsAsync(GetClusterCheckItemWarningStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClusterCheckItemWarningStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the overall information about cluster defense rules that are configured for the container firewall feature.
         *
         * @param request GetClusterRuleSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterRuleSummaryResponse
         */
        public GetClusterRuleSummaryResponse GetClusterRuleSummaryWithOptions(GetClusterRuleSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterRuleSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterRuleSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the overall information about cluster defense rules that are configured for the container firewall feature.
         *
         * @param request GetClusterRuleSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterRuleSummaryResponse
         */
        public async Task<GetClusterRuleSummaryResponse> GetClusterRuleSummaryWithOptionsAsync(GetClusterRuleSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterRuleSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterRuleSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the overall information about cluster defense rules that are configured for the container firewall feature.
         *
         * @param request GetClusterRuleSummaryRequest
         * @return GetClusterRuleSummaryResponse
         */
        public GetClusterRuleSummaryResponse GetClusterRuleSummary(GetClusterRuleSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClusterRuleSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the overall information about cluster defense rules that are configured for the container firewall feature.
         *
         * @param request GetClusterRuleSummaryRequest
         * @return GetClusterRuleSummaryResponse
         */
        public async Task<GetClusterRuleSummaryResponse> GetClusterRuleSummaryAsync(GetClusterRuleSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClusterRuleSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of policies in each cluster.
         *
         * @param request GetClusterStrategyCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterStrategyCountResponse
         */
        public GetClusterStrategyCountResponse GetClusterStrategyCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterStrategyCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterStrategyCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of policies in each cluster.
         *
         * @param request GetClusterStrategyCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterStrategyCountResponse
         */
        public async Task<GetClusterStrategyCountResponse> GetClusterStrategyCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterStrategyCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterStrategyCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of policies in each cluster.
         *
         * @return GetClusterStrategyCountResponse
         */
        public GetClusterStrategyCountResponse GetClusterStrategyCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClusterStrategyCountWithOptions(runtime);
        }

        /**
         * @summary Queries the number of policies in each cluster.
         *
         * @return GetClusterStrategyCountResponse
         */
        public async Task<GetClusterStrategyCountResponse> GetClusterStrategyCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClusterStrategyCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics on alert events that are generated for containers.
         *
         * @param request GetClusterSuspEventStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterSuspEventStatisticsResponse
         */
        public GetClusterSuspEventStatisticsResponse GetClusterSuspEventStatisticsWithOptions(GetClusterSuspEventStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterSuspEventStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterSuspEventStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on alert events that are generated for containers.
         *
         * @param request GetClusterSuspEventStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterSuspEventStatisticsResponse
         */
        public async Task<GetClusterSuspEventStatisticsResponse> GetClusterSuspEventStatisticsWithOptionsAsync(GetClusterSuspEventStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterSuspEventStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterSuspEventStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on alert events that are generated for containers.
         *
         * @param request GetClusterSuspEventStatisticsRequest
         * @return GetClusterSuspEventStatisticsResponse
         */
        public GetClusterSuspEventStatisticsResponse GetClusterSuspEventStatistics(GetClusterSuspEventStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClusterSuspEventStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on alert events that are generated for containers.
         *
         * @param request GetClusterSuspEventStatisticsRequest
         * @return GetClusterSuspEventStatisticsResponse
         */
        public async Task<GetClusterSuspEventStatisticsResponse> GetClusterSuspEventStatisticsAsync(GetClusterSuspEventStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClusterSuspEventStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configuration of a common switch.
         *
         * @param request GetCommonSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCommonSwitchConfigResponse
         */
        public GetCommonSwitchConfigResponse GetCommonSwitchConfigWithOptions(GetCommonSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCommonSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCommonSwitchConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of a common switch.
         *
         * @param request GetCommonSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCommonSwitchConfigResponse
         */
        public async Task<GetCommonSwitchConfigResponse> GetCommonSwitchConfigWithOptionsAsync(GetCommonSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCommonSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCommonSwitchConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of a common switch.
         *
         * @param request GetCommonSwitchConfigRequest
         * @return GetCommonSwitchConfigResponse
         */
        public GetCommonSwitchConfigResponse GetCommonSwitchConfig(GetCommonSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCommonSwitchConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configuration of a common switch.
         *
         * @param request GetCommonSwitchConfigRequest
         * @return GetCommonSwitchConfigResponse
         */
        public async Task<GetCommonSwitchConfigResponse> GetCommonSwitchConfigAsync(GetCommonSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCommonSwitchConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a rule for non-image program defense.
         *
         * @param request GetContainerDefenseRuleDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetContainerDefenseRuleDetailResponse
         */
        public GetContainerDefenseRuleDetailResponse GetContainerDefenseRuleDetailWithOptions(GetContainerDefenseRuleDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetContainerDefenseRuleDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetContainerDefenseRuleDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a rule for non-image program defense.
         *
         * @param request GetContainerDefenseRuleDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetContainerDefenseRuleDetailResponse
         */
        public async Task<GetContainerDefenseRuleDetailResponse> GetContainerDefenseRuleDetailWithOptionsAsync(GetContainerDefenseRuleDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetContainerDefenseRuleDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetContainerDefenseRuleDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a rule for non-image program defense.
         *
         * @param request GetContainerDefenseRuleDetailRequest
         * @return GetContainerDefenseRuleDetailResponse
         */
        public GetContainerDefenseRuleDetailResponse GetContainerDefenseRuleDetail(GetContainerDefenseRuleDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetContainerDefenseRuleDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a rule for non-image program defense.
         *
         * @param request GetContainerDefenseRuleDetailRequest
         * @return GetContainerDefenseRuleDetailResponse
         */
        public async Task<GetContainerDefenseRuleDetailResponse> GetContainerDefenseRuleDetailAsync(GetContainerDefenseRuleDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetContainerDefenseRuleDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the usage information of the malicious file detection SDK.
         *
         * @param request GetFileDetectApiInvokeInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectApiInvokeInfoResponse
         */
        public GetFileDetectApiInvokeInfoResponse GetFileDetectApiInvokeInfoWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectApiInvokeInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectApiInvokeInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the usage information of the malicious file detection SDK.
         *
         * @param request GetFileDetectApiInvokeInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectApiInvokeInfoResponse
         */
        public async Task<GetFileDetectApiInvokeInfoResponse> GetFileDetectApiInvokeInfoWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectApiInvokeInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectApiInvokeInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the usage information of the malicious file detection SDK.
         *
         * @return GetFileDetectApiInvokeInfoResponse
         */
        public GetFileDetectApiInvokeInfoResponse GetFileDetectApiInvokeInfo()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileDetectApiInvokeInfoWithOptions(runtime);
        }

        /**
         * @summary Obtains the usage information of the malicious file detection SDK.
         *
         * @return GetFileDetectApiInvokeInfoResponse
         */
        public async Task<GetFileDetectApiInvokeInfoResponse> GetFileDetectApiInvokeInfoAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileDetectApiInvokeInfoWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the cloud sandbox check results of malicious files.
         *
         * @param request GetFileDetectReportRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectReportResponse
         */
        public GetFileDetectReportResponse GetFileDetectReportWithOptions(GetFileDetectReportRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileHash))
            {
                query["FileHash"] = request.FileHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectReport",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectReportResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the cloud sandbox check results of malicious files.
         *
         * @param request GetFileDetectReportRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectReportResponse
         */
        public async Task<GetFileDetectReportResponse> GetFileDetectReportWithOptionsAsync(GetFileDetectReportRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileHash))
            {
                query["FileHash"] = request.FileHash;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectReport",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectReportResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the cloud sandbox check results of malicious files.
         *
         * @param request GetFileDetectReportRequest
         * @return GetFileDetectReportResponse
         */
        public GetFileDetectReportResponse GetFileDetectReport(GetFileDetectReportRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileDetectReportWithOptions(request, runtime);
        }

        /**
         * @summary Queries the cloud sandbox check results of malicious files.
         *
         * @param request GetFileDetectReportRequest
         * @return GetFileDetectReportResponse
         */
        public async Task<GetFileDetectReportResponse> GetFileDetectReportAsync(GetFileDetectReportRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileDetectReportWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains file detection results.
         *
         * @description The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request GetFileDetectResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectResultResponse
         */
        public GetFileDetectResultResponse GetFileDetectResultWithOptions(GetFileDetectResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyList))
            {
                query["HashKeyList"] = request.HashKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains file detection results.
         *
         * @description The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request GetFileDetectResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileDetectResultResponse
         */
        public async Task<GetFileDetectResultResponse> GetFileDetectResultWithOptionsAsync(GetFileDetectResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKeyList))
            {
                query["HashKeyList"] = request.HashKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileDetectResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileDetectResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains file detection results.
         *
         * @description The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request GetFileDetectResultRequest
         * @return GetFileDetectResultResponse
         */
        public GetFileDetectResultResponse GetFileDetectResult(GetFileDetectResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileDetectResultWithOptions(request, runtime);
        }

        /**
         * @summary Obtains file detection results.
         *
         * @description The HashKey parameter is included in all API operations that are related to the file detection feature. The parameter specifies the unique identifier of a file. Only MD5 hash values are supported. Before you call this operation, calculate the MD5 hash value of the file.
         *
         * @param request GetFileDetectResultRequest
         * @return GetFileDetectResultResponse
         */
        public async Task<GetFileDetectResultResponse> GetFileDetectResultAsync(GetFileDetectResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileDetectResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the core file monitoring feature, including the number of effective rules and the installation status of the Security Center agent on servers.
         *
         * @param request GetFileProtectDashboardRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectDashboardResponse
         */
        public GetFileProtectDashboardResponse GetFileProtectDashboardWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectDashboard",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectDashboardResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the core file monitoring feature, including the number of effective rules and the installation status of the Security Center agent on servers.
         *
         * @param request GetFileProtectDashboardRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectDashboardResponse
         */
        public async Task<GetFileProtectDashboardResponse> GetFileProtectDashboardWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectDashboard",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectDashboardResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the core file monitoring feature, including the number of effective rules and the installation status of the Security Center agent on servers.
         *
         * @return GetFileProtectDashboardResponse
         */
        public GetFileProtectDashboardResponse GetFileProtectDashboard()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileProtectDashboardWithOptions(runtime);
        }

        /**
         * @summary Queries information about the core file monitoring feature, including the number of effective rules and the installation status of the Security Center agent on servers.
         *
         * @return GetFileProtectDashboardResponse
         */
        public async Task<GetFileProtectDashboardResponse> GetFileProtectDashboardAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileProtectDashboardWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries information about core file monitoring events.
         *
         * @param request GetFileProtectEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectEventResponse
         */
        public GetFileProtectEventResponse GetFileProtectEventWithOptions(GetFileProtectEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about core file monitoring events.
         *
         * @param request GetFileProtectEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectEventResponse
         */
        public async Task<GetFileProtectEventResponse> GetFileProtectEventWithOptionsAsync(GetFileProtectEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about core file monitoring events.
         *
         * @param request GetFileProtectEventRequest
         * @return GetFileProtectEventResponse
         */
        public GetFileProtectEventResponse GetFileProtectEvent(GetFileProtectEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileProtectEventWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about core file monitoring events.
         *
         * @param request GetFileProtectEventRequest
         * @return GetFileProtectEventResponse
         */
        public async Task<GetFileProtectEventResponse> GetFileProtectEventAsync(GetFileProtectEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileProtectEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the total number of core file monitoring events by filter condition.
         *
         * @param request GetFileProtectEventCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectEventCountResponse
         */
        public GetFileProtectEventCountResponse GetFileProtectEventCountWithOptions(GetFileProtectEventCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectEventCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectEventCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the total number of core file monitoring events by filter condition.
         *
         * @param request GetFileProtectEventCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectEventCountResponse
         */
        public async Task<GetFileProtectEventCountResponse> GetFileProtectEventCountWithOptionsAsync(GetFileProtectEventCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectEventCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectEventCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the total number of core file monitoring events by filter condition.
         *
         * @param request GetFileProtectEventCountRequest
         * @return GetFileProtectEventCountResponse
         */
        public GetFileProtectEventCountResponse GetFileProtectEventCount(GetFileProtectEventCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileProtectEventCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the total number of core file monitoring events by filter condition.
         *
         * @param request GetFileProtectEventCountRequest
         * @return GetFileProtectEventCountResponse
         */
        public async Task<GetFileProtectEventCountResponse> GetFileProtectEventCountAsync(GetFileProtectEventCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileProtectEventCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a core file monitoring rule based on the ID of the rule.
         *
         * @param request GetFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectRuleResponse
         */
        public GetFileProtectRuleResponse GetFileProtectRuleWithOptions(GetFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a core file monitoring rule based on the ID of the rule.
         *
         * @param request GetFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileProtectRuleResponse
         */
        public async Task<GetFileProtectRuleResponse> GetFileProtectRuleWithOptionsAsync(GetFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileProtectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a core file monitoring rule based on the ID of the rule.
         *
         * @param request GetFileProtectRuleRequest
         * @return GetFileProtectRuleResponse
         */
        public GetFileProtectRuleResponse GetFileProtectRule(GetFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileProtectRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a core file monitoring rule based on the ID of the rule.
         *
         * @param request GetFileProtectRuleRequest
         * @return GetFileProtectRuleResponse
         */
        public async Task<GetFileProtectRuleResponse> GetFileProtectRuleAsync(GetFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileProtectRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request GetFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileUploadLimitResponse
         */
        public GetFileUploadLimitResponse GetFileUploadLimitWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileUploadLimitResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request GetFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetFileUploadLimitResponse
         */
        public async Task<GetFileUploadLimitResponse> GetFileUploadLimitWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetFileUploadLimitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @return GetFileUploadLimitResponse
         */
        public GetFileUploadLimitResponse GetFileUploadLimit()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetFileUploadLimitWithOptions(runtime);
        }

        /**
         * @summary Queries the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @return GetFileUploadLimitResponse
         */
        public async Task<GetFileUploadLimitResponse> GetFileUploadLimitAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetFileUploadLimitWithOptionsAsync(runtime);
        }

        /**
         * @summary Obtains the URL that is used to upload a file to a honeypot.
         *
         * @param request GetHoneyPotUploadPolicyInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneyPotUploadPolicyInfoResponse
         */
        public GetHoneyPotUploadPolicyInfoResponse GetHoneyPotUploadPolicyInfoWithOptions(GetHoneyPotUploadPolicyInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneyPotUploadPolicyInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneyPotUploadPolicyInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the URL that is used to upload a file to a honeypot.
         *
         * @param request GetHoneyPotUploadPolicyInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneyPotUploadPolicyInfoResponse
         */
        public async Task<GetHoneyPotUploadPolicyInfoResponse> GetHoneyPotUploadPolicyInfoWithOptionsAsync(GetHoneyPotUploadPolicyInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneyPotUploadPolicyInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneyPotUploadPolicyInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the URL that is used to upload a file to a honeypot.
         *
         * @param request GetHoneyPotUploadPolicyInfoRequest
         * @return GetHoneyPotUploadPolicyInfoResponse
         */
        public GetHoneyPotUploadPolicyInfoResponse GetHoneyPotUploadPolicyInfo(GetHoneyPotUploadPolicyInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneyPotUploadPolicyInfoWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the URL that is used to upload a file to a honeypot.
         *
         * @param request GetHoneyPotUploadPolicyInfoRequest
         * @return GetHoneyPotUploadPolicyInfoResponse
         */
        public async Task<GetHoneyPotUploadPolicyInfoResponse> GetHoneyPotUploadPolicyInfoAsync(GetHoneyPotUploadPolicyInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneyPotUploadPolicyInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @param request GetHoneypotAttackStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotAttackStatisticsResponse
         */
        public GetHoneypotAttackStatisticsResponse GetHoneypotAttackStatisticsWithOptions(GetHoneypotAttackStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsType))
            {
                query["StatisticsType"] = request.StatisticsType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotAttackStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotAttackStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request GetHoneypotAttackStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotAttackStatisticsResponse
         */
        public async Task<GetHoneypotAttackStatisticsResponse> GetHoneypotAttackStatisticsWithOptionsAsync(GetHoneypotAttackStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatisticsType))
            {
                query["StatisticsType"] = request.StatisticsType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotAttackStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotAttackStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request GetHoneypotAttackStatisticsRequest
         * @return GetHoneypotAttackStatisticsResponse
         */
        public GetHoneypotAttackStatisticsResponse GetHoneypotAttackStatistics(GetHoneypotAttackStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotAttackStatisticsWithOptions(request, runtime);
        }

        /**
         * @param request GetHoneypotAttackStatisticsRequest
         * @return GetHoneypotAttackStatisticsResponse
         */
        public async Task<GetHoneypotAttackStatisticsResponse> GetHoneypotAttackStatisticsAsync(GetHoneypotAttackStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotAttackStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtain attack trend statistics for a single attack source.
         *
         * @param request GetHoneypotEventTrendRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotEventTrendResponse
         */
        public GetHoneypotEventTrendResponse GetHoneypotEventTrendWithOptions(GetHoneypotEventTrendRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotEventTrend",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotEventTrendResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtain attack trend statistics for a single attack source.
         *
         * @param request GetHoneypotEventTrendRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotEventTrendResponse
         */
        public async Task<GetHoneypotEventTrendResponse> GetHoneypotEventTrendWithOptionsAsync(GetHoneypotEventTrendRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotEventTrend",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotEventTrendResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtain attack trend statistics for a single attack source.
         *
         * @param request GetHoneypotEventTrendRequest
         * @return GetHoneypotEventTrendResponse
         */
        public GetHoneypotEventTrendResponse GetHoneypotEventTrend(GetHoneypotEventTrendRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotEventTrendWithOptions(request, runtime);
        }

        /**
         * @summary Obtain attack trend statistics for a single attack source.
         *
         * @param request GetHoneypotEventTrendRequest
         * @return GetHoneypotEventTrendResponse
         */
        public async Task<GetHoneypotEventTrendResponse> GetHoneypotEventTrendAsync(GetHoneypotEventTrendRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotEventTrendWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a specified management node.
         *
         * @param request GetHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotNodeResponse
         */
        public GetHoneypotNodeResponse GetHoneypotNodeWithOptions(GetHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a specified management node.
         *
         * @param request GetHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotNodeResponse
         */
        public async Task<GetHoneypotNodeResponse> GetHoneypotNodeWithOptionsAsync(GetHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a specified management node.
         *
         * @param request GetHoneypotNodeRequest
         * @return GetHoneypotNodeResponse
         */
        public GetHoneypotNodeResponse GetHoneypotNode(GetHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotNodeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a specified management node.
         *
         * @param request GetHoneypotNodeRequest
         * @return GetHoneypotNodeResponse
         */
        public async Task<GetHoneypotNodeResponse> GetHoneypotNodeAsync(GetHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the monitoring data of management nodes to which the cloud honeypot belongs.
         *
         * @param request GetHoneypotNodeMetricListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotNodeMetricListResponse
         */
        public GetHoneypotNodeMetricListResponse GetHoneypotNodeMetricListWithOptions(GetHoneypotNodeMetricListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Express))
            {
                query["Express"] = request.Express;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Length))
            {
                query["Length"] = request.Length;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricName))
            {
                query["MetricName"] = request.MetricName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotNodeMetricList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotNodeMetricListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring data of management nodes to which the cloud honeypot belongs.
         *
         * @param request GetHoneypotNodeMetricListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotNodeMetricListResponse
         */
        public async Task<GetHoneypotNodeMetricListResponse> GetHoneypotNodeMetricListWithOptionsAsync(GetHoneypotNodeMetricListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Express))
            {
                query["Express"] = request.Express;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Length))
            {
                query["Length"] = request.Length;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricName))
            {
                query["MetricName"] = request.MetricName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Period))
            {
                query["Period"] = request.Period;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotNodeMetricList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotNodeMetricListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring data of management nodes to which the cloud honeypot belongs.
         *
         * @param request GetHoneypotNodeMetricListRequest
         * @return GetHoneypotNodeMetricListResponse
         */
        public GetHoneypotNodeMetricListResponse GetHoneypotNodeMetricList(GetHoneypotNodeMetricListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotNodeMetricListWithOptions(request, runtime);
        }

        /**
         * @summary Queries the monitoring data of management nodes to which the cloud honeypot belongs.
         *
         * @param request GetHoneypotNodeMetricListRequest
         * @return GetHoneypotNodeMetricListResponse
         */
        public async Task<GetHoneypotNodeMetricListResponse> GetHoneypotNodeMetricListAsync(GetHoneypotNodeMetricListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotNodeMetricListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of a specified honeypot template.
         *
         * @param request GetHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotPresetResponse
         */
        public GetHoneypotPresetResponse GetHoneypotPresetWithOptions(GetHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotPresetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a specified honeypot template.
         *
         * @param request GetHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotPresetResponse
         */
        public async Task<GetHoneypotPresetResponse> GetHoneypotPresetWithOptionsAsync(GetHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotPresetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a specified honeypot template.
         *
         * @param request GetHoneypotPresetRequest
         * @return GetHoneypotPresetResponse
         */
        public GetHoneypotPresetResponse GetHoneypotPreset(GetHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotPresetWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of a specified honeypot template.
         *
         * @param request GetHoneypotPresetRequest
         * @return GetHoneypotPresetResponse
         */
        public async Task<GetHoneypotPresetResponse> GetHoneypotPresetAsync(GetHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotPresetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about a specified probe.
         *
         * @param request GetHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotProbeResponse
         */
        public GetHoneypotProbeResponse GetHoneypotProbeWithOptions(GetHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified probe.
         *
         * @param request GetHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotProbeResponse
         */
        public async Task<GetHoneypotProbeResponse> GetHoneypotProbeWithOptionsAsync(GetHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about a specified probe.
         *
         * @param request GetHoneypotProbeRequest
         * @return GetHoneypotProbeResponse
         */
        public GetHoneypotProbeResponse GetHoneypotProbe(GetHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotProbeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about a specified probe.
         *
         * @param request GetHoneypotProbeRequest
         * @return GetHoneypotProbeResponse
         */
        public async Task<GetHoneypotProbeResponse> GetHoneypotProbeAsync(GetHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取蜜罐使用量的统计数据
         *
         * @param request GetHoneypotStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotStatisticsResponse
         */
        public GetHoneypotStatisticsResponse GetHoneypotStatisticsWithOptions(GetHoneypotStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取蜜罐使用量的统计数据
         *
         * @param request GetHoneypotStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetHoneypotStatisticsResponse
         */
        public async Task<GetHoneypotStatisticsResponse> GetHoneypotStatisticsWithOptionsAsync(GetHoneypotStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetHoneypotStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetHoneypotStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取蜜罐使用量的统计数据
         *
         * @param request GetHoneypotStatisticsRequest
         * @return GetHoneypotStatisticsResponse
         */
        public GetHoneypotStatisticsResponse GetHoneypotStatistics(GetHoneypotStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetHoneypotStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary 获取蜜罐使用量的统计数据
         *
         * @param request GetHoneypotStatisticsRequest
         * @return GetHoneypotStatisticsResponse
         */
        public async Task<GetHoneypotStatisticsResponse> GetHoneypotStatisticsAsync(GetHoneypotStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetHoneypotStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert handling rules.
         *
         * @param request GetImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetImageEventOperationResponse
         */
        public GetImageEventOperationResponse GetImageEventOperationWithOptions(GetImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageEventOperationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert handling rules.
         *
         * @param request GetImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetImageEventOperationResponse
         */
        public async Task<GetImageEventOperationResponse> GetImageEventOperationWithOptionsAsync(GetImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageEventOperationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert handling rules.
         *
         * @param request GetImageEventOperationRequest
         * @return GetImageEventOperationResponse
         */
        public GetImageEventOperationResponse GetImageEventOperation(GetImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetImageEventOperationWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert handling rules.
         *
         * @param request GetImageEventOperationRequest
         * @return GetImageEventOperationResponse
         */
        public async Task<GetImageEventOperationResponse> GetImageEventOperationAsync(GetImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetImageEventOperationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of image scans that are performed within the last several days.
         *
         * @param request GetImageScanNumInPeriodRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetImageScanNumInPeriodResponse
         */
        public GetImageScanNumInPeriodResponse GetImageScanNumInPeriodWithOptions(GetImageScanNumInPeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PastDay))
            {
                query["PastDay"] = request.PastDay;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageScanNumInPeriod",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageScanNumInPeriodResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of image scans that are performed within the last several days.
         *
         * @param request GetImageScanNumInPeriodRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetImageScanNumInPeriodResponse
         */
        public async Task<GetImageScanNumInPeriodResponse> GetImageScanNumInPeriodWithOptionsAsync(GetImageScanNumInPeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PastDay))
            {
                query["PastDay"] = request.PastDay;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetImageScanNumInPeriod",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetImageScanNumInPeriodResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of image scans that are performed within the last several days.
         *
         * @param request GetImageScanNumInPeriodRequest
         * @return GetImageScanNumInPeriodResponse
         */
        public GetImageScanNumInPeriodResponse GetImageScanNumInPeriod(GetImageScanNumInPeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetImageScanNumInPeriodWithOptions(request, runtime);
        }

        /**
         * @summary Queries the number of image scans that are performed within the last several days.
         *
         * @param request GetImageScanNumInPeriodRequest
         * @return GetImageScanNumInPeriodResponse
         */
        public async Task<GetImageScanNumInPeriodResponse> GetImageScanNumInPeriodAsync(GetImageScanNumInPeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetImageScanNumInPeriodWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a microsegmentation defense rule.
         *
         * @param request GetInterceptionRuleDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionRuleDetailResponse
         */
        public GetInterceptionRuleDetailResponse GetInterceptionRuleDetailWithOptions(GetInterceptionRuleDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionRuleDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionRuleDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a microsegmentation defense rule.
         *
         * @param request GetInterceptionRuleDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionRuleDetailResponse
         */
        public async Task<GetInterceptionRuleDetailResponse> GetInterceptionRuleDetailWithOptionsAsync(GetInterceptionRuleDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionRuleDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionRuleDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a microsegmentation defense rule.
         *
         * @param request GetInterceptionRuleDetailRequest
         * @return GetInterceptionRuleDetailResponse
         */
        public GetInterceptionRuleDetailResponse GetInterceptionRuleDetail(GetInterceptionRuleDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetInterceptionRuleDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a microsegmentation defense rule.
         *
         * @param request GetInterceptionRuleDetailRequest
         * @return GetInterceptionRuleDetailResponse
         */
        public async Task<GetInterceptionRuleDetailResponse> GetInterceptionRuleDetailAsync(GetInterceptionRuleDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetInterceptionRuleDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics of the container firewall feature.
         *
         * @param request GetInterceptionSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionSummaryResponse
         */
        public GetInterceptionSummaryResponse GetInterceptionSummaryWithOptions(GetInterceptionSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of the container firewall feature.
         *
         * @param request GetInterceptionSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionSummaryResponse
         */
        public async Task<GetInterceptionSummaryResponse> GetInterceptionSummaryWithOptionsAsync(GetInterceptionSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics of the container firewall feature.
         *
         * @param request GetInterceptionSummaryRequest
         * @return GetInterceptionSummaryResponse
         */
        public GetInterceptionSummaryResponse GetInterceptionSummary(GetInterceptionSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetInterceptionSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics of the container firewall feature.
         *
         * @param request GetInterceptionSummaryRequest
         * @return GetInterceptionSummaryResponse
         */
        public async Task<GetInterceptionSummaryResponse> GetInterceptionSummaryAsync(GetInterceptionSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetInterceptionSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a specified network object that is protected by the container firewall feature.
         *
         * @param request GetInterceptionTargetDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionTargetDetailResponse
         */
        public GetInterceptionTargetDetailResponse GetInterceptionTargetDetailWithOptions(GetInterceptionTargetDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionTargetDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionTargetDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a specified network object that is protected by the container firewall feature.
         *
         * @param request GetInterceptionTargetDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetInterceptionTargetDetailResponse
         */
        public async Task<GetInterceptionTargetDetailResponse> GetInterceptionTargetDetailWithOptionsAsync(GetInterceptionTargetDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetInterceptionTargetDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetInterceptionTargetDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a specified network object that is protected by the container firewall feature.
         *
         * @param request GetInterceptionTargetDetailRequest
         * @return GetInterceptionTargetDetailResponse
         */
        public GetInterceptionTargetDetailResponse GetInterceptionTargetDetail(GetInterceptionTargetDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetInterceptionTargetDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a specified network object that is protected by the container firewall feature.
         *
         * @param request GetInterceptionTargetDetailRequest
         * @return GetInterceptionTargetDetailResponse
         */
        public async Task<GetInterceptionTargetDetailResponse> GetInterceptionTargetDetailAsync(GetInterceptionTargetDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetInterceptionTargetDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the latest scan task to determine whether the task is complete.
         *
         * @param request GetLastOnceTaskInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetLastOnceTaskInfoResponse
         */
        public GetLastOnceTaskInfoResponse GetLastOnceTaskInfoWithOptions(GetLastOnceTaskInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLastOnceTaskInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLastOnceTaskInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the latest scan task to determine whether the task is complete.
         *
         * @param request GetLastOnceTaskInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetLastOnceTaskInfoResponse
         */
        public async Task<GetLastOnceTaskInfoResponse> GetLastOnceTaskInfoWithOptionsAsync(GetLastOnceTaskInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLastOnceTaskInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLastOnceTaskInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the latest scan task to determine whether the task is complete.
         *
         * @param request GetLastOnceTaskInfoRequest
         * @return GetLastOnceTaskInfoResponse
         */
        public GetLastOnceTaskInfoResponse GetLastOnceTaskInfo(GetLastOnceTaskInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetLastOnceTaskInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the latest scan task to determine whether the task is complete.
         *
         * @param request GetLastOnceTaskInfoRequest
         * @return GetLastOnceTaskInfoResponse
         */
        public async Task<GetLastOnceTaskInfoResponse> GetLastOnceTaskInfoAsync(GetLastOnceTaskInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetLastOnceTaskInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status of a data shipping task of a log.
         *
         * @param request GetLogMetaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetLogMetaResponse
         */
        public GetLogMetaResponse GetLogMetaWithOptions(GetLogMetaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStore))
            {
                query["LogStore"] = request.LogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLogMeta",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLogMetaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status of a data shipping task of a log.
         *
         * @param request GetLogMetaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetLogMetaResponse
         */
        public async Task<GetLogMetaResponse> GetLogMetaWithOptionsAsync(GetLogMetaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStore))
            {
                query["LogStore"] = request.LogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLogMeta",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLogMetaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status of a data shipping task of a log.
         *
         * @param request GetLogMetaRequest
         * @return GetLogMetaResponse
         */
        public GetLogMetaResponse GetLogMeta(GetLogMetaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetLogMetaWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status of a data shipping task of a log.
         *
         * @param request GetLogMetaRequest
         * @return GetLogMetaResponse
         */
        public async Task<GetLogMetaResponse> GetLogMetaAsync(GetLogMetaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetLogMetaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request GetMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetMaliciousFileWhitelistConfigResponse
         */
        public GetMaliciousFileWhitelistConfigResponse GetMaliciousFileWhitelistConfigWithOptions(GetMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request GetMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetMaliciousFileWhitelistConfigResponse
         */
        public async Task<GetMaliciousFileWhitelistConfigResponse> GetMaliciousFileWhitelistConfigWithOptionsAsync(GetMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request GetMaliciousFileWhitelistConfigRequest
         * @return GetMaliciousFileWhitelistConfigResponse
         */
        public GetMaliciousFileWhitelistConfigResponse GetMaliciousFileWhitelistConfig(GetMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request GetMaliciousFileWhitelistConfigRequest
         * @return GetMaliciousFileWhitelistConfigResponse
         */
        public async Task<GetMaliciousFileWhitelistConfigResponse> GetMaliciousFileWhitelistConfigAsync(GetMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of a module.
         *
         * @param request GetModuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetModuleConfigResponse
         */
        public GetModuleConfigResponse GetModuleConfigWithOptions(GetModuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetModuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetModuleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a module.
         *
         * @param request GetModuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetModuleConfigResponse
         */
        public async Task<GetModuleConfigResponse> GetModuleConfigWithOptionsAsync(GetModuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetModuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetModuleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a module.
         *
         * @param request GetModuleConfigRequest
         * @return GetModuleConfigResponse
         */
        public GetModuleConfigResponse GetModuleConfig(GetModuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetModuleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of a module.
         *
         * @param request GetModuleConfigRequest
         * @return GetModuleConfigResponse
         */
        public async Task<GetModuleConfigResponse> GetModuleConfigAsync(GetModuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetModuleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the qualification information about the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request GetModuleTrialAuthInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetModuleTrialAuthInfoResponse
         */
        public GetModuleTrialAuthInfoResponse GetModuleTrialAuthInfoWithOptions(GetModuleTrialAuthInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleCode))
            {
                query["ModuleCode"] = request.ModuleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetModuleTrialAuthInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetModuleTrialAuthInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the qualification information about the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request GetModuleTrialAuthInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetModuleTrialAuthInfoResponse
         */
        public async Task<GetModuleTrialAuthInfoResponse> GetModuleTrialAuthInfoWithOptionsAsync(GetModuleTrialAuthInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleCode))
            {
                query["ModuleCode"] = request.ModuleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetModuleTrialAuthInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetModuleTrialAuthInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the qualification information about the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request GetModuleTrialAuthInfoRequest
         * @return GetModuleTrialAuthInfoResponse
         */
        public GetModuleTrialAuthInfoResponse GetModuleTrialAuthInfo(GetModuleTrialAuthInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetModuleTrialAuthInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the qualification information about the trial use of Security Center value-added features, including vulnerability fixing and threat analysis and response.
         *
         * @param request GetModuleTrialAuthInfoRequest
         * @return GetModuleTrialAuthInfoResponse
         */
        public async Task<GetModuleTrialAuthInfoResponse> GetModuleTrialAuthInfoAsync(GetModuleTrialAuthInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetModuleTrialAuthInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an alert event that is generated for a malicious object.
         *
         * @param request GetObjectScanEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetObjectScanEventResponse
         */
        public GetObjectScanEventResponse GetObjectScanEventWithOptions(GetObjectScanEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetObjectScanEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetObjectScanEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an alert event that is generated for a malicious object.
         *
         * @param request GetObjectScanEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetObjectScanEventResponse
         */
        public async Task<GetObjectScanEventResponse> GetObjectScanEventWithOptionsAsync(GetObjectScanEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetObjectScanEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetObjectScanEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an alert event that is generated for a malicious object.
         *
         * @param request GetObjectScanEventRequest
         * @return GetObjectScanEventResponse
         */
        public GetObjectScanEventResponse GetObjectScanEvent(GetObjectScanEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetObjectScanEventWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an alert event that is generated for a malicious object.
         *
         * @param request GetObjectScanEventRequest
         * @return GetObjectScanEventResponse
         */
        public async Task<GetObjectScanEventResponse> GetObjectScanEventAsync(GetObjectScanEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetObjectScanEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the execution result of a one-time scan task, such as asset fingerprint collection, vulnerability scan, and image security scan.
         *
         * @param request GetOnceTaskResultInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOnceTaskResultInfoResponse
         */
        public GetOnceTaskResultInfoResponse GetOnceTaskResultInfoWithOptions(GetOnceTaskResultInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOnceTaskResultInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOnceTaskResultInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the execution result of a one-time scan task, such as asset fingerprint collection, vulnerability scan, and image security scan.
         *
         * @param request GetOnceTaskResultInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOnceTaskResultInfoResponse
         */
        public async Task<GetOnceTaskResultInfoResponse> GetOnceTaskResultInfoWithOptionsAsync(GetOnceTaskResultInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOnceTaskResultInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOnceTaskResultInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the execution result of a one-time scan task, such as asset fingerprint collection, vulnerability scan, and image security scan.
         *
         * @param request GetOnceTaskResultInfoRequest
         * @return GetOnceTaskResultInfoResponse
         */
        public GetOnceTaskResultInfoResponse GetOnceTaskResultInfo(GetOnceTaskResultInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOnceTaskResultInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the execution result of a one-time scan task, such as asset fingerprint collection, vulnerability scan, and image security scan.
         *
         * @param request GetOnceTaskResultInfoRequest
         * @return GetOnceTaskResultInfoResponse
         */
        public async Task<GetOnceTaskResultInfoResponse> GetOnceTaskResultInfoAsync(GetOnceTaskResultInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOnceTaskResultInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the baselines that are supported by at-risk image blocking.
         *
         * @param request GetOpaClusterBaseLineListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterBaseLineListResponse
         */
        public GetOpaClusterBaseLineListResponse GetOpaClusterBaseLineListWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterBaseLineList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterBaseLineListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the baselines that are supported by at-risk image blocking.
         *
         * @param request GetOpaClusterBaseLineListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterBaseLineListResponse
         */
        public async Task<GetOpaClusterBaseLineListResponse> GetOpaClusterBaseLineListWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterBaseLineList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterBaseLineListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the baselines that are supported by at-risk image blocking.
         *
         * @return GetOpaClusterBaseLineListResponse
         */
        public GetOpaClusterBaseLineListResponse GetOpaClusterBaseLineList()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaClusterBaseLineListWithOptions(runtime);
        }

        /**
         * @summary Queries the baselines that are supported by at-risk image blocking.
         *
         * @return GetOpaClusterBaseLineListResponse
         */
        public async Task<GetOpaClusterBaseLineListResponse> GetOpaClusterBaseLineListAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaClusterBaseLineListWithOptionsAsync(runtime);
        }

        /**
         * @summary 查询集群镜像
         *
         * @param request GetOpaClusterImageListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterImageListResponse
         */
        public GetOpaClusterImageListResponse GetOpaClusterImageListWithOptions(GetOpaClusterImageListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterImageList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterImageListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询集群镜像
         *
         * @param request GetOpaClusterImageListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterImageListResponse
         */
        public async Task<GetOpaClusterImageListResponse> GetOpaClusterImageListWithOptionsAsync(GetOpaClusterImageListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterImageList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterImageListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询集群镜像
         *
         * @param request GetOpaClusterImageListRequest
         * @return GetOpaClusterImageListResponse
         */
        public GetOpaClusterImageListResponse GetOpaClusterImageList(GetOpaClusterImageListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaClusterImageListWithOptions(request, runtime);
        }

        /**
         * @summary 查询集群镜像
         *
         * @param request GetOpaClusterImageListRequest
         * @return GetOpaClusterImageListResponse
         */
        public async Task<GetOpaClusterImageListResponse> GetOpaClusterImageListAsync(GetOpaClusterImageListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaClusterImageListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the tags that are added to containers based on the feature of proactive defense for containers.
         *
         * @param request GetOpaClusterLabelListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterLabelListResponse
         */
        public GetOpaClusterLabelListResponse GetOpaClusterLabelListWithOptions(GetOpaClusterLabelListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterLabelList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterLabelListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the tags that are added to containers based on the feature of proactive defense for containers.
         *
         * @param request GetOpaClusterLabelListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterLabelListResponse
         */
        public async Task<GetOpaClusterLabelListResponse> GetOpaClusterLabelListWithOptionsAsync(GetOpaClusterLabelListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagName))
            {
                query["TagName"] = request.TagName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterLabelList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterLabelListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the tags that are added to containers based on the feature of proactive defense for containers.
         *
         * @param request GetOpaClusterLabelListRequest
         * @return GetOpaClusterLabelListResponse
         */
        public GetOpaClusterLabelListResponse GetOpaClusterLabelList(GetOpaClusterLabelListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaClusterLabelListWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the tags that are added to containers based on the feature of proactive defense for containers.
         *
         * @param request GetOpaClusterLabelListRequest
         * @return GetOpaClusterLabelListResponse
         */
        public async Task<GetOpaClusterLabelListResponse> GetOpaClusterLabelListAsync(GetOpaClusterLabelListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaClusterLabelListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the namespaces of clusters for which the rules of the at-risk image blocking type are configured in proactive defense for containers.
         *
         * @param request GetOpaClusterNamespaceListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterNamespaceListResponse
         */
        public GetOpaClusterNamespaceListResponse GetOpaClusterNamespaceListWithOptions(GetOpaClusterNamespaceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NameSpaceName))
            {
                query["NameSpaceName"] = request.NameSpaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterNamespaceList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterNamespaceListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the namespaces of clusters for which the rules of the at-risk image blocking type are configured in proactive defense for containers.
         *
         * @param request GetOpaClusterNamespaceListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaClusterNamespaceListResponse
         */
        public async Task<GetOpaClusterNamespaceListResponse> GetOpaClusterNamespaceListWithOptionsAsync(GetOpaClusterNamespaceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NameSpaceName))
            {
                query["NameSpaceName"] = request.NameSpaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaClusterNamespaceList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaClusterNamespaceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the namespaces of clusters for which the rules of the at-risk image blocking type are configured in proactive defense for containers.
         *
         * @param request GetOpaClusterNamespaceListRequest
         * @return GetOpaClusterNamespaceListResponse
         */
        public GetOpaClusterNamespaceListResponse GetOpaClusterNamespaceList(GetOpaClusterNamespaceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaClusterNamespaceListWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the namespaces of clusters for which the rules of the at-risk image blocking type are configured in proactive defense for containers.
         *
         * @param request GetOpaClusterNamespaceListRequest
         * @return GetOpaClusterNamespaceListResponse
         */
        public async Task<GetOpaClusterNamespaceListResponse> GetOpaClusterNamespaceListAsync(GetOpaClusterNamespaceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaClusterNamespaceListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the installation status of the components that are required for clusters protected by proactive defense for containers.
         *
         * @param request GetOpaPluginStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaPluginStatusResponse
         */
        public GetOpaPluginStatusResponse GetOpaPluginStatusWithOptions(GetOpaPluginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaPluginStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaPluginStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the installation status of the components that are required for clusters protected by proactive defense for containers.
         *
         * @param request GetOpaPluginStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaPluginStatusResponse
         */
        public async Task<GetOpaPluginStatusResponse> GetOpaPluginStatusWithOptionsAsync(GetOpaPluginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaPluginStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaPluginStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the installation status of the components that are required for clusters protected by proactive defense for containers.
         *
         * @param request GetOpaPluginStatusRequest
         * @return GetOpaPluginStatusResponse
         */
        public GetOpaPluginStatusResponse GetOpaPluginStatus(GetOpaPluginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaPluginStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the installation status of the components that are required for clusters protected by proactive defense for containers.
         *
         * @param request GetOpaPluginStatusRequest
         * @return GetOpaPluginStatusResponse
         */
        public async Task<GetOpaPluginStatusResponse> GetOpaPluginStatusAsync(GetOpaPluginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaPluginStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of the rule that is used to block at-risk images.
         *
         * @param request GetOpaStrategyDetailNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaStrategyDetailNewResponse
         */
        public GetOpaStrategyDetailNewResponse GetOpaStrategyDetailNewWithOptions(GetOpaStrategyDetailNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaStrategyDetailNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaStrategyDetailNewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the rule that is used to block at-risk images.
         *
         * @param request GetOpaStrategyDetailNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaStrategyDetailNewResponse
         */
        public async Task<GetOpaStrategyDetailNewResponse> GetOpaStrategyDetailNewWithOptionsAsync(GetOpaStrategyDetailNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaStrategyDetailNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaStrategyDetailNewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the rule that is used to block at-risk images.
         *
         * @param request GetOpaStrategyDetailNewRequest
         * @return GetOpaStrategyDetailNewResponse
         */
        public GetOpaStrategyDetailNewResponse GetOpaStrategyDetailNew(GetOpaStrategyDetailNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaStrategyDetailNewWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of the rule that is used to block at-risk images.
         *
         * @param request GetOpaStrategyDetailNewRequest
         * @return GetOpaStrategyDetailNewResponse
         */
        public async Task<GetOpaStrategyDetailNewResponse> GetOpaStrategyDetailNewAsync(GetOpaStrategyDetailNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaStrategyDetailNewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the usage statistics about the templates provided in the feature of proactive defense for containers for rules of the at-risk image blocking type.
         *
         * @param request GetOpaStrategyTemplateSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaStrategyTemplateSummaryResponse
         */
        public GetOpaStrategyTemplateSummaryResponse GetOpaStrategyTemplateSummaryWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaStrategyTemplateSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaStrategyTemplateSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the usage statistics about the templates provided in the feature of proactive defense for containers for rules of the at-risk image blocking type.
         *
         * @param request GetOpaStrategyTemplateSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOpaStrategyTemplateSummaryResponse
         */
        public async Task<GetOpaStrategyTemplateSummaryResponse> GetOpaStrategyTemplateSummaryWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOpaStrategyTemplateSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOpaStrategyTemplateSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the usage statistics about the templates provided in the feature of proactive defense for containers for rules of the at-risk image blocking type.
         *
         * @return GetOpaStrategyTemplateSummaryResponse
         */
        public GetOpaStrategyTemplateSummaryResponse GetOpaStrategyTemplateSummary()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOpaStrategyTemplateSummaryWithOptions(runtime);
        }

        /**
         * @summary Queries the usage statistics about the templates provided in the feature of proactive defense for containers for rules of the at-risk image blocking type.
         *
         * @return GetOpaStrategyTemplateSummaryResponse
         */
        public async Task<GetOpaStrategyTemplateSummaryResponse> GetOpaStrategyTemplateSummaryAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOpaStrategyTemplateSummaryWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics about an Object Storage Service (OSS) bucket check.
         *
         * @param request GetOssBucketScanStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOssBucketScanStatisticResponse
         */
        public GetOssBucketScanStatisticResponse GetOssBucketScanStatisticWithOptions(GetOssBucketScanStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOssBucketScanStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOssBucketScanStatisticResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about an Object Storage Service (OSS) bucket check.
         *
         * @param request GetOssBucketScanStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOssBucketScanStatisticResponse
         */
        public async Task<GetOssBucketScanStatisticResponse> GetOssBucketScanStatisticWithOptionsAsync(GetOssBucketScanStatisticRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOssBucketScanStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOssBucketScanStatisticResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about an Object Storage Service (OSS) bucket check.
         *
         * @param request GetOssBucketScanStatisticRequest
         * @return GetOssBucketScanStatisticResponse
         */
        public GetOssBucketScanStatisticResponse GetOssBucketScanStatistic(GetOssBucketScanStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOssBucketScanStatisticWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics about an Object Storage Service (OSS) bucket check.
         *
         * @param request GetOssBucketScanStatisticRequest
         * @return GetOssBucketScanStatisticResponse
         */
        public async Task<GetOssBucketScanStatisticResponse> GetOssBucketScanStatisticAsync(GetOssBucketScanStatisticRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOssBucketScanStatisticWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations of an Object Storage Service (OSS) bucket check policy.
         *
         * @param request GetOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOssScanConfigResponse
         */
        public GetOssScanConfigResponse GetOssScanConfigWithOptions(GetOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOssScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of an Object Storage Service (OSS) bucket check policy.
         *
         * @param request GetOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOssScanConfigResponse
         */
        public async Task<GetOssScanConfigResponse> GetOssScanConfigWithOptionsAsync(GetOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOssScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of an Object Storage Service (OSS) bucket check policy.
         *
         * @param request GetOssScanConfigRequest
         * @return GetOssScanConfigResponse
         */
        public GetOssScanConfigResponse GetOssScanConfig(GetOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOssScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of an Object Storage Service (OSS) bucket check policy.
         *
         * @param request GetOssScanConfigRequest
         * @return GetOssScanConfigResponse
         */
        public async Task<GetOssScanConfigResponse> GetOssScanConfigAsync(GetOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOssScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations for the collection frequency of asset fingerprints.
         *
         * @param request GetPropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPropertyScheduleConfigResponse
         */
        public GetPropertyScheduleConfigResponse GetPropertyScheduleConfigWithOptions(GetPropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPropertyScheduleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations for the collection frequency of asset fingerprints.
         *
         * @param request GetPropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPropertyScheduleConfigResponse
         */
        public async Task<GetPropertyScheduleConfigResponse> GetPropertyScheduleConfigWithOptionsAsync(GetPropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPropertyScheduleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations for the collection frequency of asset fingerprints.
         *
         * @param request GetPropertyScheduleConfigRequest
         * @return GetPropertyScheduleConfigResponse
         */
        public GetPropertyScheduleConfigResponse GetPropertyScheduleConfig(GetPropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPropertyScheduleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations for the collection frequency of asset fingerprints.
         *
         * @param request GetPropertyScheduleConfigRequest
         * @return GetPropertyScheduleConfigResponse
         */
        public async Task<GetPropertyScheduleConfigResponse> GetPropertyScheduleConfigAsync(GetPropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPropertyScheduleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the numbers of system defense rules and custom defense rules.
         *
         * @param request GetRulesCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRulesCountResponse
         */
        public GetRulesCountResponse GetRulesCountWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRulesCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRulesCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the numbers of system defense rules and custom defense rules.
         *
         * @param request GetRulesCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRulesCountResponse
         */
        public async Task<GetRulesCountResponse> GetRulesCountWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRulesCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRulesCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the numbers of system defense rules and custom defense rules.
         *
         * @return GetRulesCountResponse
         */
        public GetRulesCountResponse GetRulesCount()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRulesCountWithOptions(runtime);
        }

        /**
         * @summary Queries the numbers of system defense rules and custom defense rules.
         *
         * @return GetRulesCountResponse
         */
        public async Task<GetRulesCountResponse> GetRulesCountAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRulesCountWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the applications that are specified in a rule for container tamper-proofing.
         *
         * @param request GetSasContainerWebDefenseRuleApplicationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSasContainerWebDefenseRuleApplicationResponse
         */
        public GetSasContainerWebDefenseRuleApplicationResponse GetSasContainerWebDefenseRuleApplicationWithOptions(GetSasContainerWebDefenseRuleApplicationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSasContainerWebDefenseRuleApplication",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSasContainerWebDefenseRuleApplicationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the applications that are specified in a rule for container tamper-proofing.
         *
         * @param request GetSasContainerWebDefenseRuleApplicationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSasContainerWebDefenseRuleApplicationResponse
         */
        public async Task<GetSasContainerWebDefenseRuleApplicationResponse> GetSasContainerWebDefenseRuleApplicationWithOptionsAsync(GetSasContainerWebDefenseRuleApplicationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSasContainerWebDefenseRuleApplication",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSasContainerWebDefenseRuleApplicationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the applications that are specified in a rule for container tamper-proofing.
         *
         * @param request GetSasContainerWebDefenseRuleApplicationRequest
         * @return GetSasContainerWebDefenseRuleApplicationResponse
         */
        public GetSasContainerWebDefenseRuleApplicationResponse GetSasContainerWebDefenseRuleApplication(GetSasContainerWebDefenseRuleApplicationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSasContainerWebDefenseRuleApplicationWithOptions(request, runtime);
        }

        /**
         * @summary Queries the applications that are specified in a rule for container tamper-proofing.
         *
         * @param request GetSasContainerWebDefenseRuleApplicationRequest
         * @return GetSasContainerWebDefenseRuleApplicationResponse
         */
        public async Task<GetSasContainerWebDefenseRuleApplicationResponse> GetSasContainerWebDefenseRuleApplicationAsync(GetSasContainerWebDefenseRuleApplicationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSasContainerWebDefenseRuleApplicationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetSasContainerWebDefenseRuleCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSasContainerWebDefenseRuleCriteriaResponse
         */
        public GetSasContainerWebDefenseRuleCriteriaResponse GetSasContainerWebDefenseRuleCriteriaWithOptions(GetSasContainerWebDefenseRuleCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSasContainerWebDefenseRuleCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSasContainerWebDefenseRuleCriteriaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetSasContainerWebDefenseRuleCriteriaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSasContainerWebDefenseRuleCriteriaResponse
         */
        public async Task<GetSasContainerWebDefenseRuleCriteriaResponse> GetSasContainerWebDefenseRuleCriteriaWithOptionsAsync(GetSasContainerWebDefenseRuleCriteriaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSasContainerWebDefenseRuleCriteria",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSasContainerWebDefenseRuleCriteriaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetSasContainerWebDefenseRuleCriteriaRequest
         * @return GetSasContainerWebDefenseRuleCriteriaResponse
         */
        public GetSasContainerWebDefenseRuleCriteriaResponse GetSasContainerWebDefenseRuleCriteria(GetSasContainerWebDefenseRuleCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSasContainerWebDefenseRuleCriteriaWithOptions(request, runtime);
        }

        /**
         * @summary Queries search conditions that can be used to search for container file protection rules.
         *
         * @param request GetSasContainerWebDefenseRuleCriteriaRequest
         * @return GetSasContainerWebDefenseRuleCriteriaResponse
         */
        public async Task<GetSasContainerWebDefenseRuleCriteriaResponse> GetSasContainerWebDefenseRuleCriteriaAsync(GetSasContainerWebDefenseRuleCriteriaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSasContainerWebDefenseRuleCriteriaWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request GetSecurityScoreRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSecurityScoreRuleResponse
         */
        public GetSecurityScoreRuleResponse GetSecurityScoreRuleWithOptions(GetSecurityScoreRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSecurityScoreRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSecurityScoreRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request GetSecurityScoreRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSecurityScoreRuleResponse
         */
        public async Task<GetSecurityScoreRuleResponse> GetSecurityScoreRuleWithOptionsAsync(GetSecurityScoreRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSecurityScoreRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSecurityScoreRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request GetSecurityScoreRuleRequest
         * @return GetSecurityScoreRuleResponse
         */
        public GetSecurityScoreRuleResponse GetSecurityScoreRule(GetSecurityScoreRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSecurityScoreRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of the deduction modules of the security score feature, including custom settings.
         *
         * @param request GetSecurityScoreRuleRequest
         * @return GetSecurityScoreRuleResponse
         */
        public async Task<GetSecurityScoreRuleResponse> GetSecurityScoreRuleAsync(GetSecurityScoreRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSecurityScoreRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the check rules of sensitive files.
         *
         * @param request GetSensitiveDefineRuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSensitiveDefineRuleConfigResponse
         */
        public GetSensitiveDefineRuleConfigResponse GetSensitiveDefineRuleConfigWithOptions(GetSensitiveDefineRuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSensitiveDefineRuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSensitiveDefineRuleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the check rules of sensitive files.
         *
         * @param request GetSensitiveDefineRuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSensitiveDefineRuleConfigResponse
         */
        public async Task<GetSensitiveDefineRuleConfigResponse> GetSensitiveDefineRuleConfigWithOptionsAsync(GetSensitiveDefineRuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSensitiveDefineRuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSensitiveDefineRuleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the check rules of sensitive files.
         *
         * @param request GetSensitiveDefineRuleConfigRequest
         * @return GetSensitiveDefineRuleConfigResponse
         */
        public GetSensitiveDefineRuleConfigResponse GetSensitiveDefineRuleConfig(GetSensitiveDefineRuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSensitiveDefineRuleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the check rules of sensitive files.
         *
         * @param request GetSensitiveDefineRuleConfigRequest
         * @return GetSensitiveDefineRuleConfigResponse
         */
        public async Task<GetSensitiveDefineRuleConfigResponse> GetSensitiveDefineRuleConfigAsync(GetSensitiveDefineRuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSensitiveDefineRuleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the service trail that was delivered to ActionTrail.
         *
         * @param request GetServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetServiceTrailResponse
         */
        public GetServiceTrailResponse GetServiceTrailWithOptions(GetServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetServiceTrailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the service trail that was delivered to ActionTrail.
         *
         * @param request GetServiceTrailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetServiceTrailResponse
         */
        public async Task<GetServiceTrailResponse> GetServiceTrailWithOptionsAsync(GetServiceTrailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetServiceTrail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetServiceTrailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the service trail that was delivered to ActionTrail.
         *
         * @param request GetServiceTrailRequest
         * @return GetServiceTrailResponse
         */
        public GetServiceTrailResponse GetServiceTrail(GetServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetServiceTrailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the service trail that was delivered to ActionTrail.
         *
         * @param request GetServiceTrailRequest
         * @return GetServiceTrailResponse
         */
        public async Task<GetServiceTrailResponse> GetServiceTrailAsync(GetServiceTrailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetServiceTrailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the usage details of templates provided in the feature of proactive defense for containers for rules.
         *
         * @param request GetStrategyTemplateDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetStrategyTemplateDetailResponse
         */
        public GetStrategyTemplateDetailResponse GetStrategyTemplateDetailWithOptions(GetStrategyTemplateDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStrategyTemplateDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStrategyTemplateDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the usage details of templates provided in the feature of proactive defense for containers for rules.
         *
         * @param request GetStrategyTemplateDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetStrategyTemplateDetailResponse
         */
        public async Task<GetStrategyTemplateDetailResponse> GetStrategyTemplateDetailWithOptionsAsync(GetStrategyTemplateDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStrategyTemplateDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStrategyTemplateDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the usage details of templates provided in the feature of proactive defense for containers for rules.
         *
         * @param request GetStrategyTemplateDetailRequest
         * @return GetStrategyTemplateDetailResponse
         */
        public GetStrategyTemplateDetailResponse GetStrategyTemplateDetail(GetStrategyTemplateDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetStrategyTemplateDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the usage details of templates provided in the feature of proactive defense for containers for rules.
         *
         * @param request GetStrategyTemplateDetailRequest
         * @return GetStrategyTemplateDetailResponse
         */
        public async Task<GetStrategyTemplateDetailResponse> GetStrategyTemplateDetailAsync(GetStrategyTemplateDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetStrategyTemplateDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics on alerts in one or more asset groups.
         *
         * @param request GetSuspiciousStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSuspiciousStatisticsResponse
         */
        public GetSuspiciousStatisticsResponse GetSuspiciousStatisticsWithOptions(GetSuspiciousStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSuspiciousStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSuspiciousStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on alerts in one or more asset groups.
         *
         * @param request GetSuspiciousStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSuspiciousStatisticsResponse
         */
        public async Task<GetSuspiciousStatisticsResponse> GetSuspiciousStatisticsWithOptionsAsync(GetSuspiciousStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSuspiciousStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSuspiciousStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on alerts in one or more asset groups.
         *
         * @param request GetSuspiciousStatisticsRequest
         * @return GetSuspiciousStatisticsResponse
         */
        public GetSuspiciousStatisticsResponse GetSuspiciousStatistics(GetSuspiciousStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSuspiciousStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on alerts in one or more asset groups.
         *
         * @param request GetSuspiciousStatisticsRequest
         * @return GetSuspiciousStatisticsResponse
         */
        public async Task<GetSuspiciousStatisticsResponse> GetSuspiciousStatisticsAsync(GetSuspiciousStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSuspiciousStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status and progress of the task that is run to migrate a server from a region inside the Chinese mainland to the Singapore region.
         *
         * @param request GetSwitchRegionDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSwitchRegionDetailResponse
         */
        public GetSwitchRegionDetailResponse GetSwitchRegionDetailWithOptions(GetSwitchRegionDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSwitchRegionDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSwitchRegionDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status and progress of the task that is run to migrate a server from a region inside the Chinese mainland to the Singapore region.
         *
         * @param request GetSwitchRegionDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSwitchRegionDetailResponse
         */
        public async Task<GetSwitchRegionDetailResponse> GetSwitchRegionDetailWithOptionsAsync(GetSwitchRegionDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSwitchRegionDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSwitchRegionDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status and progress of the task that is run to migrate a server from a region inside the Chinese mainland to the Singapore region.
         *
         * @param request GetSwitchRegionDetailRequest
         * @return GetSwitchRegionDetailResponse
         */
        public GetSwitchRegionDetailResponse GetSwitchRegionDetail(GetSwitchRegionDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSwitchRegionDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status and progress of the task that is run to migrate a server from a region inside the Chinese mainland to the Singapore region.
         *
         * @param request GetSwitchRegionDetailRequest
         * @return GetSwitchRegionDetailResponse
         */
        public async Task<GetSwitchRegionDetailResponse> GetSwitchRegionDetailAsync(GetSwitchRegionDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSwitchRegionDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the language settings of log analysis.
         *
         * @param request GetUserLangRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetUserLangResponse
         */
        public GetUserLangResponse GetUserLangWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserLang",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserLangResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the language settings of log analysis.
         *
         * @param request GetUserLangRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetUserLangResponse
         */
        public async Task<GetUserLangResponse> GetUserLangWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetUserLang",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetUserLangResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the language settings of log analysis.
         *
         * @return GetUserLangResponse
         */
        public GetUserLangResponse GetUserLang()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetUserLangWithOptions(runtime);
        }

        /**
         * @summary Queries the language settings of log analysis.
         *
         * @return GetUserLangResponse
         */
        public async Task<GetUserLangResponse> GetUserLangAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetUserLangWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the configurations of a periodic virus scan task.
         *
         * @param request GetVirusScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVirusScanConfigResponse
         */
        public GetVirusScanConfigResponse GetVirusScanConfigWithOptions(GetVirusScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVirusScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVirusScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a periodic virus scan task.
         *
         * @param request GetVirusScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVirusScanConfigResponse
         */
        public async Task<GetVirusScanConfigResponse> GetVirusScanConfigWithOptionsAsync(GetVirusScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVirusScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVirusScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of a periodic virus scan task.
         *
         * @param request GetVirusScanConfigRequest
         * @return GetVirusScanConfigResponse
         */
        public GetVirusScanConfigResponse GetVirusScanConfig(GetVirusScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetVirusScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of a periodic virus scan task.
         *
         * @param request GetVirusScanConfigRequest
         * @return GetVirusScanConfigResponse
         */
        public async Task<GetVirusScanConfigResponse> GetVirusScanConfigAsync(GetVirusScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetVirusScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the latest virus scan task.
         *
         * @param request GetVirusScanLatestTaskStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVirusScanLatestTaskStatisticResponse
         */
        public GetVirusScanLatestTaskStatisticResponse GetVirusScanLatestTaskStatisticWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVirusScanLatestTaskStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVirusScanLatestTaskStatisticResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the latest virus scan task.
         *
         * @param request GetVirusScanLatestTaskStatisticRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVirusScanLatestTaskStatisticResponse
         */
        public async Task<GetVirusScanLatestTaskStatisticResponse> GetVirusScanLatestTaskStatisticWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVirusScanLatestTaskStatistic",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVirusScanLatestTaskStatisticResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the latest virus scan task.
         *
         * @return GetVirusScanLatestTaskStatisticResponse
         */
        public GetVirusScanLatestTaskStatisticResponse GetVirusScanLatestTaskStatistic()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetVirusScanLatestTaskStatisticWithOptions(runtime);
        }

        /**
         * @summary Queries the information about the latest virus scan task.
         *
         * @return GetVirusScanLatestTaskStatisticResponse
         */
        public async Task<GetVirusScanLatestTaskStatisticResponse> GetVirusScanLatestTaskStatisticAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetVirusScanLatestTaskStatisticWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the statistics on vulnerabilities in asset groups.
         *
         * @param request GetVulStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVulStatisticsResponse
         */
        public GetVulStatisticsResponse GetVulStatisticsWithOptions(GetVulStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVulStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVulStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on vulnerabilities in asset groups.
         *
         * @param request GetVulStatisticsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVulStatisticsResponse
         */
        public async Task<GetVulStatisticsResponse> GetVulStatisticsWithOptionsAsync(GetVulStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIdList))
            {
                query["GroupIdList"] = request.GroupIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeList))
            {
                query["TypeList"] = request.TypeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVulStatistics",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVulStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics on vulnerabilities in asset groups.
         *
         * @param request GetVulStatisticsRequest
         * @return GetVulStatisticsResponse
         */
        public GetVulStatisticsResponse GetVulStatistics(GetVulStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetVulStatisticsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics on vulnerabilities in asset groups.
         *
         * @param request GetVulStatisticsRequest
         * @return GetVulStatisticsResponse
         */
        public async Task<GetVulStatisticsResponse> GetVulStatisticsAsync(GetVulStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetVulStatisticsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about a vulnerability whitelist.
         *
         * @param request GetVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVulWhitelistResponse
         */
        public GetVulWhitelistResponse GetVulWhitelistWithOptions(GetVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulWhitelistId))
            {
                query["VulWhitelistId"] = request.VulWhitelistId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVulWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about a vulnerability whitelist.
         *
         * @param request GetVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetVulWhitelistResponse
         */
        public async Task<GetVulWhitelistResponse> GetVulWhitelistWithOptionsAsync(GetVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulWhitelistId))
            {
                query["VulWhitelistId"] = request.VulWhitelistId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetVulWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about a vulnerability whitelist.
         *
         * @param request GetVulWhitelistRequest
         * @return GetVulWhitelistResponse
         */
        public GetVulWhitelistResponse GetVulWhitelist(GetVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetVulWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about a vulnerability whitelist.
         *
         * @param request GetVulWhitelistRequest
         * @return GetVulWhitelistResponse
         */
        public async Task<GetVulWhitelistResponse> GetVulWhitelistAsync(GetVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetVulWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles alert events.
         *
         * @param request HandleSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return HandleSecurityEventsResponse
         */
        public HandleSecurityEventsResponse HandleSecurityEventsWithOptions(HandleSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkBatch))
            {
                query["MarkBatch"] = request.MarkBatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkMissParam))
            {
                query["MarkMissParam"] = request.MarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationParams))
            {
                query["OperationParams"] = request.OperationParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "HandleSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<HandleSecurityEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles alert events.
         *
         * @param request HandleSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return HandleSecurityEventsResponse
         */
        public async Task<HandleSecurityEventsResponse> HandleSecurityEventsWithOptionsAsync(HandleSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkBatch))
            {
                query["MarkBatch"] = request.MarkBatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkMissParam))
            {
                query["MarkMissParam"] = request.MarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationParams))
            {
                query["OperationParams"] = request.OperationParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "HandleSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<HandleSecurityEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles alert events.
         *
         * @param request HandleSecurityEventsRequest
         * @return HandleSecurityEventsResponse
         */
        public HandleSecurityEventsResponse HandleSecurityEvents(HandleSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return HandleSecurityEventsWithOptions(request, runtime);
        }

        /**
         * @summary Handles alert events.
         *
         * @param request HandleSecurityEventsRequest
         * @return HandleSecurityEventsResponse
         */
        public async Task<HandleSecurityEventsResponse> HandleSecurityEventsAsync(HandleSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await HandleSecurityEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles multiple alert events that are triggered by the same IP address rule or IP address rules of the same type at a time.
         *
         * @param request HandleSimilarSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return HandleSimilarSecurityEventsResponse
         */
        public HandleSimilarSecurityEventsResponse HandleSimilarSecurityEventsWithOptions(HandleSimilarSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkMissParam))
            {
                query["MarkMissParam"] = request.MarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationParams))
            {
                query["OperationParams"] = request.OperationParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "HandleSimilarSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<HandleSimilarSecurityEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles multiple alert events that are triggered by the same IP address rule or IP address rules of the same type at a time.
         *
         * @param request HandleSimilarSecurityEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return HandleSimilarSecurityEventsResponse
         */
        public async Task<HandleSimilarSecurityEventsResponse> HandleSimilarSecurityEventsWithOptionsAsync(HandleSimilarSecurityEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkMissParam))
            {
                query["MarkMissParam"] = request.MarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationParams))
            {
                query["OperationParams"] = request.OperationParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "HandleSimilarSecurityEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<HandleSimilarSecurityEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles multiple alert events that are triggered by the same IP address rule or IP address rules of the same type at a time.
         *
         * @param request HandleSimilarSecurityEventsRequest
         * @return HandleSimilarSecurityEventsResponse
         */
        public HandleSimilarSecurityEventsResponse HandleSimilarSecurityEvents(HandleSimilarSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return HandleSimilarSecurityEventsWithOptions(request, runtime);
        }

        /**
         * @summary Handles multiple alert events that are triggered by the same IP address rule or IP address rules of the same type at a time.
         *
         * @param request HandleSimilarSecurityEventsRequest
         * @return HandleSimilarSecurityEventsResponse
         */
        public async Task<HandleSimilarSecurityEventsResponse> HandleSimilarSecurityEventsAsync(HandleSimilarSecurityEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await HandleSimilarSecurityEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds risk items to the whitelist or removes risk items from the whitelist by specifying servers and risk items.
         *
         * @param request IgnoreCheckItemsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return IgnoreCheckItemsResponse
         */
        public IgnoreCheckItemsResponse IgnoreCheckItemsWithOptions(IgnoreCheckItemsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckAndRiskTypeList))
            {
                query["CheckAndRiskTypeList"] = request.CheckAndRiskTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "IgnoreCheckItems",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<IgnoreCheckItemsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds risk items to the whitelist or removes risk items from the whitelist by specifying servers and risk items.
         *
         * @param request IgnoreCheckItemsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return IgnoreCheckItemsResponse
         */
        public async Task<IgnoreCheckItemsResponse> IgnoreCheckItemsWithOptionsAsync(IgnoreCheckItemsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckAndRiskTypeList))
            {
                query["CheckAndRiskTypeList"] = request.CheckAndRiskTypeList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "IgnoreCheckItems",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<IgnoreCheckItemsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds risk items to the whitelist or removes risk items from the whitelist by specifying servers and risk items.
         *
         * @param request IgnoreCheckItemsRequest
         * @return IgnoreCheckItemsResponse
         */
        public IgnoreCheckItemsResponse IgnoreCheckItems(IgnoreCheckItemsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return IgnoreCheckItemsWithOptions(request, runtime);
        }

        /**
         * @summary Adds risk items to the whitelist or removes risk items from the whitelist by specifying servers and risk items.
         *
         * @param request IgnoreCheckItemsRequest
         * @return IgnoreCheckItemsResponse
         */
        public async Task<IgnoreCheckItemsResponse> IgnoreCheckItemsAsync(IgnoreCheckItemsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await IgnoreCheckItemsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Ignores multiple baseline risk items at a time or cancels the ignore action that is performed on multiple baseline risk items at a time.
         *
         * @param request IgnoreHcCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return IgnoreHcCheckWarningsResponse
         */
        public IgnoreHcCheckWarningsResponse IgnoreHcCheckWarningsWithOptions(IgnoreHcCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningIds))
            {
                query["CheckWarningIds"] = request.CheckWarningIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "IgnoreHcCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<IgnoreHcCheckWarningsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Ignores multiple baseline risk items at a time or cancels the ignore action that is performed on multiple baseline risk items at a time.
         *
         * @param request IgnoreHcCheckWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return IgnoreHcCheckWarningsResponse
         */
        public async Task<IgnoreHcCheckWarningsResponse> IgnoreHcCheckWarningsWithOptionsAsync(IgnoreHcCheckWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningIds))
            {
                query["CheckWarningIds"] = request.CheckWarningIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "IgnoreHcCheckWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<IgnoreHcCheckWarningsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Ignores multiple baseline risk items at a time or cancels the ignore action that is performed on multiple baseline risk items at a time.
         *
         * @param request IgnoreHcCheckWarningsRequest
         * @return IgnoreHcCheckWarningsResponse
         */
        public IgnoreHcCheckWarningsResponse IgnoreHcCheckWarnings(IgnoreHcCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return IgnoreHcCheckWarningsWithOptions(request, runtime);
        }

        /**
         * @summary Ignores multiple baseline risk items at a time or cancels the ignore action that is performed on multiple baseline risk items at a time.
         *
         * @param request IgnoreHcCheckWarningsRequest
         * @return IgnoreHcCheckWarningsResponse
         */
        public async Task<IgnoreHcCheckWarningsResponse> IgnoreHcCheckWarningsAsync(IgnoreHcCheckWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await IgnoreHcCheckWarningsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The UUID of the server on which you want to install the anti-ransomware agent. You can call the [DescribeCloudCenterInstances](~~DescribeCloudCenterInstances~~) operation to query the UUIDs of servers.
         * >  You must specify at least one of the UuidList and Uuid parameters.
         *
         * @param request InstallBackupClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallBackupClientResponse
         */
        public InstallBackupClientResponse InstallBackupClientWithOptions(InstallBackupClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallBackupClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallBackupClientResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The UUID of the server on which you want to install the anti-ransomware agent. You can call the [DescribeCloudCenterInstances](~~DescribeCloudCenterInstances~~) operation to query the UUIDs of servers.
         * >  You must specify at least one of the UuidList and Uuid parameters.
         *
         * @param request InstallBackupClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallBackupClientResponse
         */
        public async Task<InstallBackupClientResponse> InstallBackupClientWithOptionsAsync(InstallBackupClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallBackupClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallBackupClientResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The UUID of the server on which you want to install the anti-ransomware agent. You can call the [DescribeCloudCenterInstances](~~DescribeCloudCenterInstances~~) operation to query the UUIDs of servers.
         * >  You must specify at least one of the UuidList and Uuid parameters.
         *
         * @param request InstallBackupClientRequest
         * @return InstallBackupClientResponse
         */
        public InstallBackupClientResponse InstallBackupClient(InstallBackupClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallBackupClientWithOptions(request, runtime);
        }

        /**
         * @summary The UUID of the server on which you want to install the anti-ransomware agent. You can call the [DescribeCloudCenterInstances](~~DescribeCloudCenterInstances~~) operation to query the UUIDs of servers.
         * >  You must specify at least one of the UuidList and Uuid parameters.
         *
         * @param request InstallBackupClientRequest
         * @return InstallBackupClientResponse
         */
        public async Task<InstallBackupClientResponse> InstallBackupClientAsync(InstallBackupClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallBackupClientWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the CloudMonitor agent on specified servers.
         *
         * @description > Before you call this operation, make sure that the Security Center agent on your servers is online and the servers can access Alibaba Cloud services.
         *
         * @param request InstallCloudMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallCloudMonitorResponse
         */
        public InstallCloudMonitorResponse InstallCloudMonitorWithOptions(InstallCloudMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AgentAccessKey))
            {
                query["AgentAccessKey"] = request.AgentAccessKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AgentSecretKey))
            {
                query["AgentSecretKey"] = request.AgentSecretKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArgusVersion))
            {
                query["ArgusVersion"] = request.ArgusVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIdList))
            {
                query["InstanceIdList"] = request.InstanceIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallCloudMonitor",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallCloudMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the CloudMonitor agent on specified servers.
         *
         * @description > Before you call this operation, make sure that the Security Center agent on your servers is online and the servers can access Alibaba Cloud services.
         *
         * @param request InstallCloudMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallCloudMonitorResponse
         */
        public async Task<InstallCloudMonitorResponse> InstallCloudMonitorWithOptionsAsync(InstallCloudMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AgentAccessKey))
            {
                query["AgentAccessKey"] = request.AgentAccessKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AgentSecretKey))
            {
                query["AgentSecretKey"] = request.AgentSecretKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArgusVersion))
            {
                query["ArgusVersion"] = request.ArgusVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIdList))
            {
                query["InstanceIdList"] = request.InstanceIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallCloudMonitor",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallCloudMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the CloudMonitor agent on specified servers.
         *
         * @description > Before you call this operation, make sure that the Security Center agent on your servers is online and the servers can access Alibaba Cloud services.
         *
         * @param request InstallCloudMonitorRequest
         * @return InstallCloudMonitorResponse
         */
        public InstallCloudMonitorResponse InstallCloudMonitor(InstallCloudMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallCloudMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Installs the CloudMonitor agent on specified servers.
         *
         * @description > Before you call this operation, make sure that the Security Center agent on your servers is online and the servers can access Alibaba Cloud services.
         *
         * @param request InstallCloudMonitorRequest
         * @return InstallCloudMonitorResponse
         */
        public async Task<InstallCloudMonitorResponse> InstallCloudMonitorAsync(InstallCloudMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallCloudMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the Security Center agent on a proxy server in a hybrid cloud.
         *
         * @param request InstallHybridProxyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallHybridProxyResponse
         */
        public InstallHybridProxyResponse InstallHybridProxyWithOptions(InstallHybridProxyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallCode))
            {
                query["InstallCode"] = request.InstallCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.YundunUuids))
            {
                query["YundunUuids"] = request.YundunUuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallHybridProxy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallHybridProxyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the Security Center agent on a proxy server in a hybrid cloud.
         *
         * @param request InstallHybridProxyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallHybridProxyResponse
         */
        public async Task<InstallHybridProxyResponse> InstallHybridProxyWithOptionsAsync(InstallHybridProxyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstallCode))
            {
                query["InstallCode"] = request.InstallCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.YundunUuids))
            {
                query["YundunUuids"] = request.YundunUuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallHybridProxy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallHybridProxyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the Security Center agent on a proxy server in a hybrid cloud.
         *
         * @param request InstallHybridProxyRequest
         * @return InstallHybridProxyResponse
         */
        public InstallHybridProxyResponse InstallHybridProxy(InstallHybridProxyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallHybridProxyWithOptions(request, runtime);
        }

        /**
         * @summary Installs the Security Center agent on a proxy server in a hybrid cloud.
         *
         * @param request InstallHybridProxyRequest
         * @return InstallHybridProxyResponse
         */
        public async Task<InstallHybridProxyResponse> InstallHybridProxyAsync(InstallHybridProxyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallHybridProxyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the CloudMonitor agent on a server that is not deployed on Alibaba Cloud.
         *
         * @param request InstallPmAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallPmAgentResponse
         */
        public InstallPmAgentResponse InstallPmAgentWithOptions(InstallPmAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallPmAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallPmAgentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the CloudMonitor agent on a server that is not deployed on Alibaba Cloud.
         *
         * @param request InstallPmAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallPmAgentResponse
         */
        public async Task<InstallPmAgentResponse> InstallPmAgentWithOptionsAsync(InstallPmAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallPmAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallPmAgentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the CloudMonitor agent on a server that is not deployed on Alibaba Cloud.
         *
         * @param request InstallPmAgentRequest
         * @return InstallPmAgentResponse
         */
        public InstallPmAgentResponse InstallPmAgent(InstallPmAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallPmAgentWithOptions(request, runtime);
        }

        /**
         * @summary Installs the CloudMonitor agent on a server that is not deployed on Alibaba Cloud.
         *
         * @param request InstallPmAgentRequest
         * @return InstallPmAgentResponse
         */
        public async Task<InstallPmAgentResponse> InstallPmAgentAsync(InstallPmAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallPmAgentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the Runtime Application Self-Protection (RASP) agent on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request InstallRaspAttachRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallRaspAttachResponse
         */
        public InstallRaspAttachResponse InstallRaspAttachWithOptions(InstallRaspAttachRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallRaspAttach",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallRaspAttachResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the Runtime Application Self-Protection (RASP) agent on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request InstallRaspAttachRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallRaspAttachResponse
         */
        public async Task<InstallRaspAttachResponse> InstallRaspAttachWithOptionsAsync(InstallRaspAttachRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallRaspAttach",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallRaspAttachResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the Runtime Application Self-Protection (RASP) agent on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request InstallRaspAttachRequest
         * @return InstallRaspAttachResponse
         */
        public InstallRaspAttachResponse InstallRaspAttach(InstallRaspAttachRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallRaspAttachWithOptions(request, runtime);
        }

        /**
         * @summary Installs the Runtime Application Self-Protection (RASP) agent on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request InstallRaspAttachRequest
         * @return InstallRaspAttachResponse
         */
        public async Task<InstallRaspAttachResponse> InstallRaspAttachAsync(InstallRaspAttachRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallRaspAttachWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the anti-ransomware agent for databases.
         *
         * @param request InstallUniBackupAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallUniBackupAgentResponse
         */
        public InstallUniBackupAgentResponse InstallUniBackupAgentWithOptions(InstallUniBackupAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallUniBackupAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallUniBackupAgentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the anti-ransomware agent for databases.
         *
         * @param request InstallUniBackupAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallUniBackupAgentResponse
         */
        public async Task<InstallUniBackupAgentResponse> InstallUniBackupAgentWithOptionsAsync(InstallUniBackupAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallUniBackupAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallUniBackupAgentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the anti-ransomware agent for databases.
         *
         * @param request InstallUniBackupAgentRequest
         * @return InstallUniBackupAgentResponse
         */
        public InstallUniBackupAgentResponse InstallUniBackupAgent(InstallUniBackupAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallUniBackupAgentWithOptions(request, runtime);
        }

        /**
         * @summary Installs the anti-ransomware agent for databases.
         *
         * @param request InstallUniBackupAgentRequest
         * @return InstallUniBackupAgentResponse
         */
        public async Task<InstallUniBackupAgentResponse> InstallUniBackupAgentAsync(InstallUniBackupAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallUniBackupAgentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds processes to the process whitelist of web tamper proofing.
         *
         * @param request JoinWebLockProcessWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return JoinWebLockProcessWhiteListResponse
         */
        public JoinWebLockProcessWhiteListResponse JoinWebLockProcessWhiteListWithOptions(JoinWebLockProcessWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessPaths))
            {
                query["ProcessPaths"] = request.ProcessPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "JoinWebLockProcessWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<JoinWebLockProcessWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds processes to the process whitelist of web tamper proofing.
         *
         * @param request JoinWebLockProcessWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return JoinWebLockProcessWhiteListResponse
         */
        public async Task<JoinWebLockProcessWhiteListResponse> JoinWebLockProcessWhiteListWithOptionsAsync(JoinWebLockProcessWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessPaths))
            {
                query["ProcessPaths"] = request.ProcessPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "JoinWebLockProcessWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<JoinWebLockProcessWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds processes to the process whitelist of web tamper proofing.
         *
         * @param request JoinWebLockProcessWhiteListRequest
         * @return JoinWebLockProcessWhiteListResponse
         */
        public JoinWebLockProcessWhiteListResponse JoinWebLockProcessWhiteList(JoinWebLockProcessWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return JoinWebLockProcessWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Adds processes to the process whitelist of web tamper proofing.
         *
         * @param request JoinWebLockProcessWhiteListRequest
         * @return JoinWebLockProcessWhiteListResponse
         */
        public async Task<JoinWebLockProcessWhiteListResponse> JoinWebLockProcessWhiteListAsync(JoinWebLockProcessWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await JoinWebLockProcessWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries defense rules against container escapes.
         *
         * @param request ListAegisContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAegisContainerPluginRuleResponse
         */
        public ListAegisContainerPluginRuleResponse ListAegisContainerPluginRuleWithOptions(ListAegisContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAegisContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAegisContainerPluginRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries defense rules against container escapes.
         *
         * @param request ListAegisContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAegisContainerPluginRuleResponse
         */
        public async Task<ListAegisContainerPluginRuleResponse> ListAegisContainerPluginRuleWithOptionsAsync(ListAegisContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAegisContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAegisContainerPluginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries defense rules against container escapes.
         *
         * @param request ListAegisContainerPluginRuleRequest
         * @return ListAegisContainerPluginRuleResponse
         */
        public ListAegisContainerPluginRuleResponse ListAegisContainerPluginRule(ListAegisContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAegisContainerPluginRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries defense rules against container escapes.
         *
         * @param request ListAegisContainerPluginRuleRequest
         * @return ListAegisContainerPluginRuleResponse
         */
        public async Task<ListAegisContainerPluginRuleResponse> ListAegisContainerPluginRuleAsync(ListAegisContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAegisContainerPluginRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries malicious files that are detected by agentless detection tasks.
         *
         * @param request ListAgentlessMaliciousFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessMaliciousFilesResponse
         */
        public ListAgentlessMaliciousFilesResponse ListAgentlessMaliciousFilesWithOptions(ListAgentlessMaliciousFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyMaliciousName))
            {
                query["FuzzyMaliciousName"] = request.FuzzyMaliciousName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousType))
            {
                query["MaliciousType"] = request.MaliciousType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessMaliciousFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessMaliciousFilesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries malicious files that are detected by agentless detection tasks.
         *
         * @param request ListAgentlessMaliciousFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessMaliciousFilesResponse
         */
        public async Task<ListAgentlessMaliciousFilesResponse> ListAgentlessMaliciousFilesWithOptionsAsync(ListAgentlessMaliciousFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyMaliciousName))
            {
                query["FuzzyMaliciousName"] = request.FuzzyMaliciousName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Levels))
            {
                query["Levels"] = request.Levels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousMd5))
            {
                query["MaliciousMd5"] = request.MaliciousMd5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousType))
            {
                query["MaliciousType"] = request.MaliciousType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessMaliciousFiles",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessMaliciousFilesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries malicious files that are detected by agentless detection tasks.
         *
         * @param request ListAgentlessMaliciousFilesRequest
         * @return ListAgentlessMaliciousFilesResponse
         */
        public ListAgentlessMaliciousFilesResponse ListAgentlessMaliciousFiles(ListAgentlessMaliciousFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAgentlessMaliciousFilesWithOptions(request, runtime);
        }

        /**
         * @summary Queries malicious files that are detected by agentless detection tasks.
         *
         * @param request ListAgentlessMaliciousFilesRequest
         * @return ListAgentlessMaliciousFilesResponse
         */
        public async Task<ListAgentlessMaliciousFilesResponse> ListAgentlessMaliciousFilesAsync(ListAgentlessMaliciousFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAgentlessMaliciousFilesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the regions that are supported by the agentless detection feature.
         *
         * @param request ListAgentlessRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRegionResponse
         */
        public ListAgentlessRegionResponse ListAgentlessRegionWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRegionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the regions that are supported by the agentless detection feature.
         *
         * @param request ListAgentlessRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRegionResponse
         */
        public async Task<ListAgentlessRegionResponse> ListAgentlessRegionWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRegionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the regions that are supported by the agentless detection feature.
         *
         * @return ListAgentlessRegionResponse
         */
        public ListAgentlessRegionResponse ListAgentlessRegion()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAgentlessRegionWithOptions(runtime);
        }

        /**
         * @summary Queries the regions that are supported by the agentless detection feature.
         *
         * @return ListAgentlessRegionResponse
         */
        public async Task<ListAgentlessRegionResponse> ListAgentlessRegionAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAgentlessRegionWithOptionsAsync(runtime);
        }

        /**
         * @summary Obtains the risks associated with an agentless detection event.
         *
         * @param request ListAgentlessRelateMaliciousRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRelateMaliciousResponse
         */
        public ListAgentlessRelateMaliciousResponse ListAgentlessRelateMaliciousWithOptions(ListAgentlessRelateMaliciousRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRelateMalicious",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRelateMaliciousResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the risks associated with an agentless detection event.
         *
         * @param request ListAgentlessRelateMaliciousRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRelateMaliciousResponse
         */
        public async Task<ListAgentlessRelateMaliciousResponse> ListAgentlessRelateMaliciousWithOptionsAsync(ListAgentlessRelateMaliciousRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventId))
            {
                query["EventId"] = request.EventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRelateMalicious",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRelateMaliciousResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the risks associated with an agentless detection event.
         *
         * @param request ListAgentlessRelateMaliciousRequest
         * @return ListAgentlessRelateMaliciousResponse
         */
        public ListAgentlessRelateMaliciousResponse ListAgentlessRelateMalicious(ListAgentlessRelateMaliciousRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAgentlessRelateMaliciousWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the risks associated with an agentless detection event.
         *
         * @param request ListAgentlessRelateMaliciousRequest
         * @return ListAgentlessRelateMaliciousResponse
         */
        public async Task<ListAgentlessRelateMaliciousResponse> ListAgentlessRelateMaliciousAsync(ListAgentlessRelateMaliciousRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAgentlessRelateMaliciousWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries at-risk hosts that are detected by the agentless detection feature.
         *
         * @param request ListAgentlessRiskUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRiskUuidResponse
         */
        public ListAgentlessRiskUuidResponse ListAgentlessRiskUuidWithOptions(ListAgentlessRiskUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Risk))
            {
                query["Risk"] = request.Risk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRiskUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRiskUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries at-risk hosts that are detected by the agentless detection feature.
         *
         * @param request ListAgentlessRiskUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessRiskUuidResponse
         */
        public async Task<ListAgentlessRiskUuidResponse> ListAgentlessRiskUuidWithOptionsAsync(ListAgentlessRiskUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Risk))
            {
                query["Risk"] = request.Risk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessRiskUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessRiskUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries at-risk hosts that are detected by the agentless detection feature.
         *
         * @param request ListAgentlessRiskUuidRequest
         * @return ListAgentlessRiskUuidResponse
         */
        public ListAgentlessRiskUuidResponse ListAgentlessRiskUuid(ListAgentlessRiskUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAgentlessRiskUuidWithOptions(request, runtime);
        }

        /**
         * @summary Queries at-risk hosts that are detected by the agentless detection feature.
         *
         * @param request ListAgentlessRiskUuidRequest
         * @return ListAgentlessRiskUuidResponse
         */
        public async Task<ListAgentlessRiskUuidResponse> ListAgentlessRiskUuidAsync(ListAgentlessRiskUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAgentlessRiskUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries agentless detection tasks.
         *
         * @param request ListAgentlessTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessTaskResponse
         */
        public ListAgentlessTaskResponse ListAgentlessTaskWithOptions(ListAgentlessTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTask))
            {
                query["RootTask"] = request.RootTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries agentless detection tasks.
         *
         * @param request ListAgentlessTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAgentlessTaskResponse
         */
        public async Task<ListAgentlessTaskResponse> ListAgentlessTaskWithOptionsAsync(ListAgentlessTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTask))
            {
                query["RootTask"] = request.RootTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAgentlessTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAgentlessTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries agentless detection tasks.
         *
         * @param request ListAgentlessTaskRequest
         * @return ListAgentlessTaskResponse
         */
        public ListAgentlessTaskResponse ListAgentlessTask(ListAgentlessTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAgentlessTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries agentless detection tasks.
         *
         * @param request ListAgentlessTaskRequest
         * @return ListAgentlessTaskResponse
         */
        public async Task<ListAgentlessTaskResponse> ListAgentlessTaskAsync(ListAgentlessTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAgentlessTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ListAssetCleanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetCleanConfigResponse
         */
        public ListAssetCleanConfigResponse ListAssetCleanConfigWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetCleanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetCleanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ListAssetCleanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetCleanConfigResponse
         */
        public async Task<ListAssetCleanConfigResponse> ListAssetCleanConfigWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetCleanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetCleanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @return ListAssetCleanConfigResponse
         */
        public ListAssetCleanConfigResponse ListAssetCleanConfig()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAssetCleanConfigWithOptions(runtime);
        }

        /**
         * @summary Queries the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @return ListAssetCleanConfigResponse
         */
        public async Task<ListAssetCleanConfigResponse> ListAssetCleanConfigAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAssetCleanConfigWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the configurations of asset synchronization.
         *
         * @param request ListAssetRefreshTaskConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetRefreshTaskConfigResponse
         */
        public ListAssetRefreshTaskConfigResponse ListAssetRefreshTaskConfigWithOptions(ListAssetRefreshTaskConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RefreshConfigType))
            {
                query["RefreshConfigType"] = request.RefreshConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetRefreshTaskConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetRefreshTaskConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of asset synchronization.
         *
         * @param request ListAssetRefreshTaskConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetRefreshTaskConfigResponse
         */
        public async Task<ListAssetRefreshTaskConfigResponse> ListAssetRefreshTaskConfigWithOptionsAsync(ListAssetRefreshTaskConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RefreshConfigType))
            {
                query["RefreshConfigType"] = request.RefreshConfigType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetRefreshTaskConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetRefreshTaskConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configurations of asset synchronization.
         *
         * @param request ListAssetRefreshTaskConfigRequest
         * @return ListAssetRefreshTaskConfigResponse
         */
        public ListAssetRefreshTaskConfigResponse ListAssetRefreshTaskConfig(ListAssetRefreshTaskConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAssetRefreshTaskConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configurations of asset synchronization.
         *
         * @param request ListAssetRefreshTaskConfigRequest
         * @return ListAssetRefreshTaskConfigResponse
         */
        public async Task<ListAssetRefreshTaskConfigResponse> ListAssetRefreshTaskConfigAsync(ListAssetRefreshTaskConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAssetRefreshTaskConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the selected assets.
         *
         * @param request ListAssetSelectionSelectedTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetSelectionSelectedTargetResponse
         */
        public ListAssetSelectionSelectedTargetResponse ListAssetSelectionSelectedTargetWithOptions(ListAssetSelectionSelectedTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetList))
            {
                query["TargetList"] = request.TargetList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetSelectionSelectedTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetSelectionSelectedTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the selected assets.
         *
         * @param request ListAssetSelectionSelectedTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetSelectionSelectedTargetResponse
         */
        public async Task<ListAssetSelectionSelectedTargetResponse> ListAssetSelectionSelectedTargetWithOptionsAsync(ListAssetSelectionSelectedTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetList))
            {
                query["TargetList"] = request.TargetList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetSelectionSelectedTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetSelectionSelectedTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the selected assets.
         *
         * @param request ListAssetSelectionSelectedTargetRequest
         * @return ListAssetSelectionSelectedTargetResponse
         */
        public ListAssetSelectionSelectedTargetResponse ListAssetSelectionSelectedTarget(ListAssetSelectionSelectedTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAssetSelectionSelectedTargetWithOptions(request, runtime);
        }

        /**
         * @summary Queries the selected assets.
         *
         * @param request ListAssetSelectionSelectedTargetRequest
         * @return ListAssetSelectionSelectedTargetResponse
         */
        public async Task<ListAssetSelectionSelectedTargetResponse> ListAssetSelectionSelectedTargetAsync(ListAssetSelectionSelectedTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAssetSelectionSelectedTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the required asset.
         *
         * @param request ListAssetSelectionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetSelectionTargetResponse
         */
        public ListAssetSelectionTargetResponse ListAssetSelectionTargetWithOptions(ListAssetSelectionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetSelectionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetSelectionTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the required asset.
         *
         * @param request ListAssetSelectionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAssetSelectionTargetResponse
         */
        public async Task<ListAssetSelectionTargetResponse> ListAssetSelectionTargetWithOptionsAsync(ListAssetSelectionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAssetSelectionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAssetSelectionTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the required asset.
         *
         * @param request ListAssetSelectionTargetRequest
         * @return ListAssetSelectionTargetResponse
         */
        public ListAssetSelectionTargetResponse ListAssetSelectionTarget(ListAssetSelectionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAssetSelectionTargetWithOptions(request, runtime);
        }

        /**
         * @summary Queries the required asset.
         *
         * @param request ListAssetSelectionTargetRequest
         * @return ListAssetSelectionTargetResponse
         */
        public async Task<ListAssetSelectionTargetResponse> ListAssetSelectionTargetAsync(ListAssetSelectionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAssetSelectionTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about available honeypot templates.
         *
         * @param request ListAvailableHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAvailableHoneypotResponse
         */
        public ListAvailableHoneypotResponse ListAvailableHoneypotWithOptions(ListAvailableHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAvailableHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAvailableHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about available honeypot templates.
         *
         * @param request ListAvailableHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAvailableHoneypotResponse
         */
        public async Task<ListAvailableHoneypotResponse> ListAvailableHoneypotWithOptionsAsync(ListAvailableHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAvailableHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAvailableHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about available honeypot templates.
         *
         * @param request ListAvailableHoneypotRequest
         * @return ListAvailableHoneypotResponse
         */
        public ListAvailableHoneypotResponse ListAvailableHoneypot(ListAvailableHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAvailableHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about available honeypot templates.
         *
         * @param request ListAvailableHoneypotRequest
         * @return ListAvailableHoneypotResponse
         */
        public async Task<ListAvailableHoneypotResponse> ListAvailableHoneypotAsync(ListAvailableHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAvailableHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries backup records.
         *
         * @param request ListBackupRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListBackupRecordResponse
         */
        public ListBackupRecordResponse ListBackupRecordWithOptions(ListBackupRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BackupEndTime))
            {
                query["BackupEndTime"] = request.BackupEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BackupStartTime))
            {
                query["BackupStartTime"] = request.BackupStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListBackupRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListBackupRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries backup records.
         *
         * @param request ListBackupRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListBackupRecordResponse
         */
        public async Task<ListBackupRecordResponse> ListBackupRecordWithOptionsAsync(ListBackupRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BackupEndTime))
            {
                query["BackupEndTime"] = request.BackupEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BackupStartTime))
            {
                query["BackupStartTime"] = request.BackupStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineRemark))
            {
                query["MachineRemark"] = request.MachineRemark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListBackupRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListBackupRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries backup records.
         *
         * @param request ListBackupRecordRequest
         * @return ListBackupRecordResponse
         */
        public ListBackupRecordResponse ListBackupRecord(ListBackupRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListBackupRecordWithOptions(request, runtime);
        }

        /**
         * @summary Queries backup records.
         *
         * @param request ListBackupRecordRequest
         * @return ListBackupRecordResponse
         */
        public async Task<ListBackupRecordResponse> ListBackupRecordAsync(ListBackupRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListBackupRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the instances that failed a specified check item of configuration assessment.
         *
         * @param request ListCheckInstanceResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckInstanceResultResponse
         */
        public ListCheckInstanceResultResponse ListCheckInstanceResultWithOptions(ListCheckInstanceResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIdKey))
            {
                query["InstanceIdKey"] = request.InstanceIdKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceNameKey))
            {
                query["InstanceNameKey"] = request.InstanceNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdKey))
            {
                query["RegionIdKey"] = request.RegionIdKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortTypes))
            {
                query["SortTypes"] = request.SortTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Statuses))
            {
                query["Statuses"] = request.Statuses;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckInstanceResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckInstanceResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the instances that failed a specified check item of configuration assessment.
         *
         * @param request ListCheckInstanceResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckInstanceResultResponse
         */
        public async Task<ListCheckInstanceResultResponse> ListCheckInstanceResultWithOptionsAsync(ListCheckInstanceResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIdKey))
            {
                query["InstanceIdKey"] = request.InstanceIdKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceNameKey))
            {
                query["InstanceNameKey"] = request.InstanceNameKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdKey))
            {
                query["RegionIdKey"] = request.RegionIdKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortTypes))
            {
                query["SortTypes"] = request.SortTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Statuses))
            {
                query["Statuses"] = request.Statuses;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckInstanceResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckInstanceResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the instances that failed a specified check item of configuration assessment.
         *
         * @param request ListCheckInstanceResultRequest
         * @return ListCheckInstanceResultResponse
         */
        public ListCheckInstanceResultResponse ListCheckInstanceResult(ListCheckInstanceResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckInstanceResultWithOptions(request, runtime);
        }

        /**
         * @summary Queries the instances that failed a specified check item of configuration assessment.
         *
         * @param request ListCheckInstanceResultRequest
         * @return ListCheckInstanceResultResponse
         */
        public async Task<ListCheckInstanceResultResponse> ListCheckInstanceResultAsync(ListCheckInstanceResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckInstanceResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the check items that can be customized.
         *
         * @param request ListCheckItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemResponse
         */
        public ListCheckItemResponse ListCheckItemWithOptions(ListCheckItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the check items that can be customized.
         *
         * @param request ListCheckItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemResponse
         */
        public async Task<ListCheckItemResponse> ListCheckItemWithOptionsAsync(ListCheckItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the check items that can be customized.
         *
         * @param request ListCheckItemRequest
         * @return ListCheckItemResponse
         */
        public ListCheckItemResponse ListCheckItem(ListCheckItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries the check items that can be customized.
         *
         * @param request ListCheckItemRequest
         * @return ListCheckItemResponse
         */
        public async Task<ListCheckItemResponse> ListCheckItemAsync(ListCheckItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the servers that are affected by baseline risks.
         *
         * @param request ListCheckItemWarningMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemWarningMachineResponse
         */
        public ListCheckItemWarningMachineResponse ListCheckItemWarningMachineWithOptions(ListCheckItemWarningMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskType))
            {
                query["RiskType"] = request.RiskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItemWarningMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemWarningMachineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the servers that are affected by baseline risks.
         *
         * @param request ListCheckItemWarningMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemWarningMachineResponse
         */
        public async Task<ListCheckItemWarningMachineResponse> ListCheckItemWarningMachineWithOptionsAsync(ListCheckItemWarningMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskType))
            {
                query["RiskType"] = request.RiskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItemWarningMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemWarningMachineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the servers that are affected by baseline risks.
         *
         * @param request ListCheckItemWarningMachineRequest
         * @return ListCheckItemWarningMachineResponse
         */
        public ListCheckItemWarningMachineResponse ListCheckItemWarningMachine(ListCheckItemWarningMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckItemWarningMachineWithOptions(request, runtime);
        }

        /**
         * @summary Queries the servers that are affected by baseline risks.
         *
         * @param request ListCheckItemWarningMachineRequest
         * @return ListCheckItemWarningMachineResponse
         */
        public async Task<ListCheckItemWarningMachineResponse> ListCheckItemWarningMachineAsync(ListCheckItemWarningMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckItemWarningMachineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the risk statistics of check items by page.
         *
         * @param request ListCheckItemWarningSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemWarningSummaryResponse
         */
        public ListCheckItemWarningSummaryResponse ListCheckItemWarningSummaryWithOptions(ListCheckItemWarningSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckItemFuzzy))
            {
                query["CheckItemFuzzy"] = request.CheckItemFuzzy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckLevel))
            {
                query["CheckLevel"] = request.CheckLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningStatus))
            {
                query["CheckWarningStatus"] = request.CheckWarningStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskType))
            {
                query["RiskType"] = request.RiskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItemWarningSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemWarningSummaryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the risk statistics of check items by page.
         *
         * @param request ListCheckItemWarningSummaryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckItemWarningSummaryResponse
         */
        public async Task<ListCheckItemWarningSummaryResponse> ListCheckItemWarningSummaryWithOptionsAsync(ListCheckItemWarningSummaryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckItemFuzzy))
            {
                query["CheckItemFuzzy"] = request.CheckItemFuzzy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckLevel))
            {
                query["CheckLevel"] = request.CheckLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckType))
            {
                query["CheckType"] = request.CheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckWarningStatus))
            {
                query["CheckWarningStatus"] = request.CheckWarningStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldName))
            {
                query["ContainerFieldName"] = request.ContainerFieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerFieldValue))
            {
                query["ContainerFieldValue"] = request.ContainerFieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskType))
            {
                query["RiskType"] = request.RiskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckItemWarningSummary",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckItemWarningSummaryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the risk statistics of check items by page.
         *
         * @param request ListCheckItemWarningSummaryRequest
         * @return ListCheckItemWarningSummaryResponse
         */
        public ListCheckItemWarningSummaryResponse ListCheckItemWarningSummary(ListCheckItemWarningSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckItemWarningSummaryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the risk statistics of check items by page.
         *
         * @param request ListCheckItemWarningSummaryRequest
         * @return ListCheckItemWarningSummaryResponse
         */
        public async Task<ListCheckItemWarningSummaryResponse> ListCheckItemWarningSummaryAsync(ListCheckItemWarningSummaryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckItemWarningSummaryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of the risk items that are detected in the configuration checks on cloud services.
         *
         * @param request ListCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckResultResponse
         */
        public ListCheckResultResponse ListCheckResultWithOptions(ListCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckKey))
            {
                query["CheckKey"] = request.CheckKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomParam))
            {
                query["CustomParam"] = request.CustomParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceTypes))
            {
                query["InstanceTypes"] = request.InstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequirementIds))
            {
                query["RequirementIds"] = request.RequirementIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevels))
            {
                query["RiskLevels"] = request.RiskLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortTypes))
            {
                query["SortTypes"] = request.SortTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Statuses))
            {
                query["Statuses"] = request.Statuses;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the risk items that are detected in the configuration checks on cloud services.
         *
         * @param request ListCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckResultResponse
         */
        public async Task<ListCheckResultResponse> ListCheckResultWithOptionsAsync(ListCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckKey))
            {
                query["CheckKey"] = request.CheckKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomParam))
            {
                query["CustomParam"] = request.CustomParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceTypes))
            {
                query["InstanceTypes"] = request.InstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequirementIds))
            {
                query["RequirementIds"] = request.RequirementIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevels))
            {
                query["RiskLevels"] = request.RiskLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SortTypes))
            {
                query["SortTypes"] = request.SortTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Statuses))
            {
                query["Statuses"] = request.Statuses;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of the risk items that are detected in the configuration checks on cloud services.
         *
         * @param request ListCheckResultRequest
         * @return ListCheckResultResponse
         */
        public ListCheckResultResponse ListCheckResult(ListCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckResultWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of the risk items that are detected in the configuration checks on cloud services.
         *
         * @param request ListCheckResultRequest
         * @return ListCheckResultResponse
         */
        public async Task<ListCheckResultResponse> ListCheckResultAsync(ListCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the standards of configuration checks.
         *
         * @param request ListCheckStandardRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckStandardResponse
         */
        public ListCheckStandardResponse ListCheckStandardWithOptions(ListCheckStandardRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceSubTypes))
            {
                query["InstanceSubTypes"] = request.InstanceSubTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceTypes))
            {
                query["InstanceTypes"] = request.InstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckStandard",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckStandardResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the standards of configuration checks.
         *
         * @param request ListCheckStandardRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckStandardResponse
         */
        public async Task<ListCheckStandardResponse> ListCheckStandardWithOptionsAsync(ListCheckStandardRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceSubTypes))
            {
                query["InstanceSubTypes"] = request.InstanceSubTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceTypes))
            {
                query["InstanceTypes"] = request.InstanceTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendors))
            {
                query["Vendors"] = request.Vendors;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckStandard",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckStandardResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the standards of configuration checks.
         *
         * @param request ListCheckStandardRequest
         * @return ListCheckStandardResponse
         */
        public ListCheckStandardResponse ListCheckStandard(ListCheckStandardRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckStandardWithOptions(request, runtime);
        }

        /**
         * @summary Queries the standards of configuration checks.
         *
         * @param request ListCheckStandardRequest
         * @return ListCheckStandardResponse
         */
        public async Task<ListCheckStandardResponse> ListCheckStandardAsync(ListCheckStandardRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckStandardWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the types of check items that meet the specified conditions based on the ID of a baseline.
         *
         * @param request ListCheckTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckTypesResponse
         */
        public ListCheckTypesResponse ListCheckTypesWithOptions(ListCheckTypesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowChecks))
            {
                query["ShowChecks"] = request.ShowChecks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckTypesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the types of check items that meet the specified conditions based on the ID of a baseline.
         *
         * @param request ListCheckTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCheckTypesResponse
         */
        public async Task<ListCheckTypesResponse> ListCheckTypesWithOptionsAsync(ListCheckTypesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskId))
            {
                query["RiskId"] = request.RiskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowChecks))
            {
                query["ShowChecks"] = request.ShowChecks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCheckTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCheckTypesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the types of check items that meet the specified conditions based on the ID of a baseline.
         *
         * @param request ListCheckTypesRequest
         * @return ListCheckTypesResponse
         */
        public ListCheckTypesResponse ListCheckTypes(ListCheckTypesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCheckTypesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the types of check items that meet the specified conditions based on the ID of a baseline.
         *
         * @param request ListCheckTypesRequest
         * @return ListCheckTypesResponse
         */
        public async Task<ListCheckTypesResponse> ListCheckTypesAsync(ListCheckTypesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCheckTypesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert settings of assets. By default, the balanced mode is enabled. A detected list of assets can be returned only in strict mode.
         *
         * @param request ListClientAlertModeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientAlertModeResponse
         */
        public ListClientAlertModeResponse ListClientAlertModeWithOptions(ListClientAlertModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientAlertMode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientAlertModeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert settings of assets. By default, the balanced mode is enabled. A detected list of assets can be returned only in strict mode.
         *
         * @param request ListClientAlertModeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientAlertModeResponse
         */
        public async Task<ListClientAlertModeResponse> ListClientAlertModeWithOptionsAsync(ListClientAlertModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientAlertMode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientAlertModeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert settings of assets. By default, the balanced mode is enabled. A detected list of assets can be returned only in strict mode.
         *
         * @param request ListClientAlertModeRequest
         * @return ListClientAlertModeResponse
         */
        public ListClientAlertModeResponse ListClientAlertMode(ListClientAlertModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClientAlertModeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert settings of assets. By default, the balanced mode is enabled. A detected list of assets can be returned only in strict mode.
         *
         * @param request ListClientAlertModeRequest
         * @return ListClientAlertModeResponse
         */
        public async Task<ListClientAlertModeResponse> ListClientAlertModeAsync(ListClientAlertModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClientAlertModeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取客户端支持的所有用户自定义类型
         *
         * @param request ListClientUserDefineRuleTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientUserDefineRuleTypesResponse
         */
        public ListClientUserDefineRuleTypesResponse ListClientUserDefineRuleTypesWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientUserDefineRuleTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientUserDefineRuleTypesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取客户端支持的所有用户自定义类型
         *
         * @param request ListClientUserDefineRuleTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientUserDefineRuleTypesResponse
         */
        public async Task<ListClientUserDefineRuleTypesResponse> ListClientUserDefineRuleTypesWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientUserDefineRuleTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientUserDefineRuleTypesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取客户端支持的所有用户自定义类型
         *
         * @return ListClientUserDefineRuleTypesResponse
         */
        public ListClientUserDefineRuleTypesResponse ListClientUserDefineRuleTypes()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClientUserDefineRuleTypesWithOptions(runtime);
        }

        /**
         * @summary 获取客户端支持的所有用户自定义类型
         *
         * @return ListClientUserDefineRuleTypesResponse
         */
        public async Task<ListClientUserDefineRuleTypesResponse> ListClientUserDefineRuleTypesAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClientUserDefineRuleTypesWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries custom defense rules.
         *
         * @param request ListClientUserDefineRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientUserDefineRulesResponse
         */
        public ListClientUserDefineRulesResponse ListClientUserDefineRulesWithOptions(ListClientUserDefineRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientUserDefineRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientUserDefineRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries custom defense rules.
         *
         * @param request ListClientUserDefineRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClientUserDefineRulesResponse
         */
        public async Task<ListClientUserDefineRulesResponse> ListClientUserDefineRulesWithOptionsAsync(ListClientUserDefineRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClientUserDefineRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClientUserDefineRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries custom defense rules.
         *
         * @param request ListClientUserDefineRulesRequest
         * @return ListClientUserDefineRulesResponse
         */
        public ListClientUserDefineRulesResponse ListClientUserDefineRules(ListClientUserDefineRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClientUserDefineRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries custom defense rules.
         *
         * @param request ListClientUserDefineRulesRequest
         * @return ListClientUserDefineRulesResponse
         */
        public async Task<ListClientUserDefineRulesResponse> ListClientUserDefineRulesAsync(ListClientUserDefineRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClientUserDefineRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries cloud service assets.
         *
         * @param request ListCloudAssetInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCloudAssetInstancesResponse
         */
        public ListCloudAssetInstancesResponse ListCloudAssetInstancesWithOptions(ListCloudAssetInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetTypes))
            {
                query["CloudAssetTypes"] = request.CloudAssetTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCloudAssetInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCloudAssetInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries cloud service assets.
         *
         * @param request ListCloudAssetInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCloudAssetInstancesResponse
         */
        public async Task<ListCloudAssetInstancesResponse> ListCloudAssetInstancesWithOptionsAsync(ListCloudAssetInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetTypes))
            {
                query["CloudAssetTypes"] = request.CloudAssetTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCloudAssetInstances",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCloudAssetInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries cloud service assets.
         *
         * @param request ListCloudAssetInstancesRequest
         * @return ListCloudAssetInstancesResponse
         */
        public ListCloudAssetInstancesResponse ListCloudAssetInstances(ListCloudAssetInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCloudAssetInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries cloud service assets.
         *
         * @param request ListCloudAssetInstancesRequest
         * @return ListCloudAssetInstancesResponse
         */
        public async Task<ListCloudAssetInstancesResponse> ListCloudAssetInstancesAsync(ListCloudAssetInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCloudAssetInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the synchronization region configurations of other clouds on a site.
         *
         * @param request ListCloudVendorRegionsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCloudVendorRegionsResponse
         */
        public ListCloudVendorRegionsResponse ListCloudVendorRegionsWithOptions(ListCloudVendorRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCloudVendorRegions",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCloudVendorRegionsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the synchronization region configurations of other clouds on a site.
         *
         * @param request ListCloudVendorRegionsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCloudVendorRegionsResponse
         */
        public async Task<ListCloudVendorRegionsResponse> ListCloudVendorRegionsWithOptionsAsync(ListCloudVendorRegionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCloudVendorRegions",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCloudVendorRegionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the synchronization region configurations of other clouds on a site.
         *
         * @param request ListCloudVendorRegionsRequest
         * @return ListCloudVendorRegionsResponse
         */
        public ListCloudVendorRegionsResponse ListCloudVendorRegions(ListCloudVendorRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCloudVendorRegionsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the synchronization region configurations of other clouds on a site.
         *
         * @param request ListCloudVendorRegionsRequest
         * @return ListCloudVendorRegionsResponse
         */
        public async Task<ListCloudVendorRegionsResponse> ListCloudVendorRegionsAsync(ListCloudVendorRegionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCloudVendorRegionsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the protection status of the container firewall.
         *
         * @param request ListClusterCnnfStatusDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterCnnfStatusDetailResponse
         */
        public ListClusterCnnfStatusDetailResponse ListClusterCnnfStatusDetailWithOptions(ListClusterCnnfStatusDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterCnnfStatusDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterCnnfStatusDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the protection status of the container firewall.
         *
         * @param request ListClusterCnnfStatusDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterCnnfStatusDetailResponse
         */
        public async Task<ListClusterCnnfStatusDetailResponse> ListClusterCnnfStatusDetailWithOptionsAsync(ListClusterCnnfStatusDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterCnnfStatusDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterCnnfStatusDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the protection status of the container firewall.
         *
         * @param request ListClusterCnnfStatusDetailRequest
         * @return ListClusterCnnfStatusDetailResponse
         */
        public ListClusterCnnfStatusDetailResponse ListClusterCnnfStatusDetail(ListClusterCnnfStatusDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClusterCnnfStatusDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the protection status of the container firewall.
         *
         * @param request ListClusterCnnfStatusDetailRequest
         * @return ListClusterCnnfStatusDetailResponse
         */
        public async Task<ListClusterCnnfStatusDetailResponse> ListClusterCnnfStatusDetailAsync(ListClusterCnnfStatusDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClusterCnnfStatusDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the defense rules that are created for a cluster.
         *
         * @param request ListClusterInterceptionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterInterceptionConfigResponse
         */
        public ListClusterInterceptionConfigResponse ListClusterInterceptionConfigWithOptions(ListClusterInterceptionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterCNNFStatus))
            {
                query["ClusterCNNFStatus"] = request.ClusterCNNFStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterInterceptionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterInterceptionConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the defense rules that are created for a cluster.
         *
         * @param request ListClusterInterceptionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterInterceptionConfigResponse
         */
        public async Task<ListClusterInterceptionConfigResponse> ListClusterInterceptionConfigWithOptionsAsync(ListClusterInterceptionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterCNNFStatus))
            {
                query["ClusterCNNFStatus"] = request.ClusterCNNFStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterInterceptionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterInterceptionConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the defense rules that are created for a cluster.
         *
         * @param request ListClusterInterceptionConfigRequest
         * @return ListClusterInterceptionConfigResponse
         */
        public ListClusterInterceptionConfigResponse ListClusterInterceptionConfig(ListClusterInterceptionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClusterInterceptionConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the defense rules that are created for a cluster.
         *
         * @param request ListClusterInterceptionConfigRequest
         * @return ListClusterInterceptionConfigResponse
         */
        public async Task<ListClusterInterceptionConfigResponse> ListClusterInterceptionConfigAsync(ListClusterInterceptionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClusterInterceptionConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status of plug-ins on clusters.
         *
         * @param request ListClusterPluginInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterPluginInfoResponse
         */
        public ListClusterPluginInfoResponse ListClusterPluginInfoWithOptions(ListClusterPluginInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PluginName))
            {
                query["PluginName"] = request.PluginName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterPluginInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterPluginInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status of plug-ins on clusters.
         *
         * @param request ListClusterPluginInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterPluginInfoResponse
         */
        public async Task<ListClusterPluginInfoResponse> ListClusterPluginInfoWithOptionsAsync(ListClusterPluginInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PluginName))
            {
                query["PluginName"] = request.PluginName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterPluginInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterPluginInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status of plug-ins on clusters.
         *
         * @param request ListClusterPluginInfoRequest
         * @return ListClusterPluginInfoResponse
         */
        public ListClusterPluginInfoResponse ListClusterPluginInfo(ListClusterPluginInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClusterPluginInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status of plug-ins on clusters.
         *
         * @param request ListClusterPluginInfoRequest
         * @return ListClusterPluginInfoResponse
         */
        public async Task<ListClusterPluginInfoResponse> ListClusterPluginInfoAsync(ListClusterPluginInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClusterPluginInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取压缩包检测结果。
         *
         * @param request ListCompressFileDetectResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCompressFileDetectResultResponse
         */
        public ListCompressFileDetectResultResponse ListCompressFileDetectResultWithOptions(ListCompressFileDetectResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKey))
            {
                query["HashKey"] = request.HashKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCompressFileDetectResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCompressFileDetectResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取压缩包检测结果。
         *
         * @param request ListCompressFileDetectResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCompressFileDetectResultResponse
         */
        public async Task<ListCompressFileDetectResultResponse> ListCompressFileDetectResultWithOptionsAsync(ListCompressFileDetectResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HashKey))
            {
                query["HashKey"] = request.HashKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCompressFileDetectResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCompressFileDetectResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取压缩包检测结果。
         *
         * @param request ListCompressFileDetectResultRequest
         * @return ListCompressFileDetectResultResponse
         */
        public ListCompressFileDetectResultResponse ListCompressFileDetectResult(ListCompressFileDetectResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCompressFileDetectResultWithOptions(request, runtime);
        }

        /**
         * @summary 获取压缩包检测结果。
         *
         * @param request ListCompressFileDetectResultRequest
         * @return ListCompressFileDetectResultResponse
         */
        public async Task<ListCompressFileDetectResultResponse> ListCompressFileDetectResultAsync(ListCompressFileDetectResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCompressFileDetectResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of rules for non-image program defense.
         *
         * @param request ListContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListContainerDefenseRuleResponse
         */
        public ListContainerDefenseRuleResponse ListContainerDefenseRuleWithOptions(ListContainerDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Conditions))
            {
                query["Conditions"] = request.Conditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDefaultRule))
            {
                query["IsDefaultRule"] = request.IsDefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListContainerDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of rules for non-image program defense.
         *
         * @param request ListContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListContainerDefenseRuleResponse
         */
        public async Task<ListContainerDefenseRuleResponse> ListContainerDefenseRuleWithOptionsAsync(ListContainerDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Conditions))
            {
                query["Conditions"] = request.Conditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDefaultRule))
            {
                query["IsDefaultRule"] = request.IsDefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListContainerDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of rules for non-image program defense.
         *
         * @param request ListContainerDefenseRuleRequest
         * @return ListContainerDefenseRuleResponse
         */
        public ListContainerDefenseRuleResponse ListContainerDefenseRule(ListContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListContainerDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of rules for non-image program defense.
         *
         * @param request ListContainerDefenseRuleRequest
         * @return ListContainerDefenseRuleResponse
         */
        public async Task<ListContainerDefenseRuleResponse> ListContainerDefenseRuleAsync(ListContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListContainerDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of clusters that are included in a rule for non-image program defense.
         *
         * @param request ListContainerDefenseRuleClustersRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListContainerDefenseRuleClustersResponse
         */
        public ListContainerDefenseRuleClustersResponse ListContainerDefenseRuleClustersWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListContainerDefenseRuleClusters",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListContainerDefenseRuleClustersResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of clusters that are included in a rule for non-image program defense.
         *
         * @param request ListContainerDefenseRuleClustersRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListContainerDefenseRuleClustersResponse
         */
        public async Task<ListContainerDefenseRuleClustersResponse> ListContainerDefenseRuleClustersWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListContainerDefenseRuleClusters",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListContainerDefenseRuleClustersResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of clusters that are included in a rule for non-image program defense.
         *
         * @return ListContainerDefenseRuleClustersResponse
         */
        public ListContainerDefenseRuleClustersResponse ListContainerDefenseRuleClusters()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListContainerDefenseRuleClustersWithOptions(runtime);
        }

        /**
         * @summary Queries a list of clusters that are included in a rule for non-image program defense.
         *
         * @return ListContainerDefenseRuleClustersResponse
         */
        public async Task<ListContainerDefenseRuleClustersResponse> ListContainerDefenseRuleClustersAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListContainerDefenseRuleClustersWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the IDs and names of rules configured for proactive defense for containers.
         *
         * @param request ListCriteriaStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCriteriaStrategyResponse
         */
        public ListCriteriaStrategyResponse ListCriteriaStrategyWithOptions(ListCriteriaStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCriteriaStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCriteriaStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the IDs and names of rules configured for proactive defense for containers.
         *
         * @param request ListCriteriaStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCriteriaStrategyResponse
         */
        public async Task<ListCriteriaStrategyResponse> ListCriteriaStrategyWithOptionsAsync(ListCriteriaStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCriteriaStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCriteriaStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the IDs and names of rules configured for proactive defense for containers.
         *
         * @param request ListCriteriaStrategyRequest
         * @return ListCriteriaStrategyResponse
         */
        public ListCriteriaStrategyResponse ListCriteriaStrategy(ListCriteriaStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCriteriaStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Queries the IDs and names of rules configured for proactive defense for containers.
         *
         * @param request ListCriteriaStrategyRequest
         * @return ListCriteriaStrategyResponse
         */
        public async Task<ListCriteriaStrategyResponse> ListCriteriaStrategyAsync(ListCriteriaStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCriteriaStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries core file monitoring rules that meet the specified filter condition.
         *
         * @param request ListFileProtectEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectEventResponse
         */
        public ListFileProtectEventResponse ListFileProtectEventWithOptions(ListFileProtectEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevels))
            {
                query["AlertLevels"] = request.AlertLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries core file monitoring rules that meet the specified filter condition.
         *
         * @param request ListFileProtectEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectEventResponse
         */
        public async Task<ListFileProtectEventResponse> ListFileProtectEventWithOptionsAsync(ListFileProtectEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevels))
            {
                query["AlertLevels"] = request.AlertLevels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceName))
            {
                query["InstanceName"] = request.InstanceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries core file monitoring rules that meet the specified filter condition.
         *
         * @param request ListFileProtectEventRequest
         * @return ListFileProtectEventResponse
         */
        public ListFileProtectEventResponse ListFileProtectEvent(ListFileProtectEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListFileProtectEventWithOptions(request, runtime);
        }

        /**
         * @summary Queries core file monitoring rules that meet the specified filter condition.
         *
         * @param request ListFileProtectEventRequest
         * @return ListFileProtectEventResponse
         */
        public async Task<ListFileProtectEventResponse> ListFileProtectEventAsync(ListFileProtectEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListFileProtectEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about the Security Center agent installed on servers on which core file monitoring rules take effect. The information includes the installation status of the Security Center agent and whether the core file monitoring feature is supported.
         *
         * @param request ListFileProtectPluginStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectPluginStatusResponse
         */
        public ListFileProtectPluginStatusResponse ListFileProtectPluginStatusWithOptions(ListFileProtectPluginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchId))
            {
                query["SwitchId"] = request.SwitchId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectPluginStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectPluginStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about the Security Center agent installed on servers on which core file monitoring rules take effect. The information includes the installation status of the Security Center agent and whether the core file monitoring feature is supported.
         *
         * @param request ListFileProtectPluginStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectPluginStatusResponse
         */
        public async Task<ListFileProtectPluginStatusResponse> ListFileProtectPluginStatusWithOptionsAsync(ListFileProtectPluginStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchId))
            {
                query["SwitchId"] = request.SwitchId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectPluginStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectPluginStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about the Security Center agent installed on servers on which core file monitoring rules take effect. The information includes the installation status of the Security Center agent and whether the core file monitoring feature is supported.
         *
         * @param request ListFileProtectPluginStatusRequest
         * @return ListFileProtectPluginStatusResponse
         */
        public ListFileProtectPluginStatusResponse ListFileProtectPluginStatus(ListFileProtectPluginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListFileProtectPluginStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about the Security Center agent installed on servers on which core file monitoring rules take effect. The information includes the installation status of the Security Center agent and whether the core file monitoring feature is supported.
         *
         * @param request ListFileProtectPluginStatusRequest
         * @return ListFileProtectPluginStatusResponse
         */
        public async Task<ListFileProtectPluginStatusResponse> ListFileProtectPluginStatusAsync(ListFileProtectPluginStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListFileProtectPluginStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries core file monitoring rules.
         *
         * @param request ListFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectRuleResponse
         */
        public ListFileProtectRuleResponse ListFileProtectRuleWithOptions(ListFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries core file monitoring rules.
         *
         * @param request ListFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListFileProtectRuleResponse
         */
        public async Task<ListFileProtectRuleResponse> ListFileProtectRuleWithOptionsAsync(ListFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListFileProtectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries core file monitoring rules.
         *
         * @param request ListFileProtectRuleRequest
         * @return ListFileProtectRuleResponse
         */
        public ListFileProtectRuleResponse ListFileProtectRule(ListFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListFileProtectRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries core file monitoring rules.
         *
         * @param request ListFileProtectRuleRequest
         * @return ListFileProtectRuleResponse
         */
        public async Task<ListFileProtectRuleResponse> ListFileProtectRuleAsync(ListFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListFileProtectRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the server groups.
         *
         * @param request ListGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListGroupsResponse
         */
        public ListGroupsResponse ListGroupsWithOptions(ListGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGroups",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGroupsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the server groups.
         *
         * @param request ListGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListGroupsResponse
         */
        public async Task<ListGroupsResponse> ListGroupsWithOptionsAsync(ListGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UseNextToken))
            {
                query["UseNextToken"] = request.UseNextToken;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGroups",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGroupsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the server groups.
         *
         * @param request ListGroupsRequest
         * @return ListGroupsResponse
         */
        public ListGroupsResponse ListGroups(ListGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListGroupsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the server groups.
         *
         * @param request ListGroupsRequest
         * @return ListGroupsResponse
         */
        public async Task<ListGroupsResponse> ListGroupsAsync(ListGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListGroupsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about honeypots.
         *
         * @param request ListHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotResponse
         */
        public ListHoneypotResponse ListHoneypotWithOptions(ListHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotIds))
            {
                query["HoneypotIds"] = request.HoneypotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about honeypots.
         *
         * @param request ListHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotResponse
         */
        public async Task<ListHoneypotResponse> ListHoneypotWithOptionsAsync(ListHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotIds))
            {
                query["HoneypotIds"] = request.HoneypotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about honeypots.
         *
         * @param request ListHoneypotRequest
         * @return ListHoneypotResponse
         */
        public ListHoneypotResponse ListHoneypot(ListHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about honeypots.
         *
         * @param request ListHoneypotRequest
         * @return ListHoneypotResponse
         */
        public async Task<ListHoneypotResponse> ListHoneypotAsync(ListHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about alert events that are generated.
         *
         * @param request ListHoneypotAlarmEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAlarmEventsResponse
         */
        public ListHoneypotAlarmEventsResponse ListHoneypotAlarmEventsWithOptions(ListHoneypotAlarmEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAlarmEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAlarmEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about alert events that are generated.
         *
         * @param request ListHoneypotAlarmEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAlarmEventsResponse
         */
        public async Task<ListHoneypotAlarmEventsResponse> ListHoneypotAlarmEventsWithOptionsAsync(ListHoneypotAlarmEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAlarmEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAlarmEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about alert events that are generated.
         *
         * @param request ListHoneypotAlarmEventsRequest
         * @return ListHoneypotAlarmEventsResponse
         */
        public ListHoneypotAlarmEventsResponse ListHoneypotAlarmEvents(ListHoneypotAlarmEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotAlarmEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about alert events that are generated.
         *
         * @param request ListHoneypotAlarmEventsRequest
         * @return ListHoneypotAlarmEventsResponse
         */
        public async Task<ListHoneypotAlarmEventsResponse> ListHoneypotAlarmEventsAsync(ListHoneypotAlarmEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotAlarmEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the attacker profile based on the source IP address of the attack.
         *
         * @param request ListHoneypotAttackerPortraitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAttackerPortraitResponse
         */
        public ListHoneypotAttackerPortraitResponse ListHoneypotAttackerPortraitWithOptions(ListHoneypotAttackerPortraitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAttackerPortrait",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAttackerPortraitResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the attacker profile based on the source IP address of the attack.
         *
         * @param request ListHoneypotAttackerPortraitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAttackerPortraitResponse
         */
        public async Task<ListHoneypotAttackerPortraitResponse> ListHoneypotAttackerPortraitWithOptionsAsync(ListHoneypotAttackerPortraitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAttackerPortrait",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAttackerPortraitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the attacker profile based on the source IP address of the attack.
         *
         * @param request ListHoneypotAttackerPortraitRequest
         * @return ListHoneypotAttackerPortraitResponse
         */
        public ListHoneypotAttackerPortraitResponse ListHoneypotAttackerPortrait(ListHoneypotAttackerPortraitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotAttackerPortraitWithOptions(request, runtime);
        }

        /**
         * @summary Queries the attacker profile based on the source IP address of the attack.
         *
         * @param request ListHoneypotAttackerPortraitRequest
         * @return ListHoneypotAttackerPortraitResponse
         */
        public async Task<ListHoneypotAttackerPortraitResponse> ListHoneypotAttackerPortraitAsync(ListHoneypotAttackerPortraitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotAttackerPortraitWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the attack source IP addresses that are used to attack a honeypot.
         *
         * @param request ListHoneypotAttackerSourceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAttackerSourceResponse
         */
        public ListHoneypotAttackerSourceResponse ListHoneypotAttackerSourceWithOptions(ListHoneypotAttackerSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAttackerSource",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAttackerSourceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the attack source IP addresses that are used to attack a honeypot.
         *
         * @param request ListHoneypotAttackerSourceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotAttackerSourceResponse
         */
        public async Task<ListHoneypotAttackerSourceResponse> ListHoneypotAttackerSourceWithOptionsAsync(ListHoneypotAttackerSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTimeStamp))
            {
                query["EndTimeStamp"] = request.EndTimeStamp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevelList))
            {
                query["RiskLevelList"] = request.RiskLevelList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcIp))
            {
                query["SrcIp"] = request.SrcIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTimeStamp))
            {
                query["StartTimeStamp"] = request.StartTimeStamp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotAttackerSource",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotAttackerSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the attack source IP addresses that are used to attack a honeypot.
         *
         * @param request ListHoneypotAttackerSourceRequest
         * @return ListHoneypotAttackerSourceResponse
         */
        public ListHoneypotAttackerSourceResponse ListHoneypotAttackerSource(ListHoneypotAttackerSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotAttackerSourceWithOptions(request, runtime);
        }

        /**
         * @summary Queries the attack source IP addresses that are used to attack a honeypot.
         *
         * @param request ListHoneypotAttackerSourceRequest
         * @return ListHoneypotAttackerSourceResponse
         */
        public async Task<ListHoneypotAttackerSourceResponse> ListHoneypotAttackerSourceAsync(ListHoneypotAttackerSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotAttackerSourceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an intrusion event in a honeypot.
         *
         * @param request ListHoneypotEventFlowsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotEventFlowsResponse
         */
        public ListHoneypotEventFlowsResponse ListHoneypotEventFlowsWithOptions(ListHoneypotEventFlowsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestId))
            {
                query["RequestId"] = request.RequestId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotEventFlows",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotEventFlowsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an intrusion event in a honeypot.
         *
         * @param request ListHoneypotEventFlowsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotEventFlowsResponse
         */
        public async Task<ListHoneypotEventFlowsResponse> ListHoneypotEventFlowsWithOptionsAsync(ListHoneypotEventFlowsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dealed))
            {
                query["Dealed"] = request.Dealed;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestId))
            {
                query["RequestId"] = request.RequestId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventId))
            {
                query["SecurityEventId"] = request.SecurityEventId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotEventFlows",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotEventFlowsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an intrusion event in a honeypot.
         *
         * @param request ListHoneypotEventFlowsRequest
         * @return ListHoneypotEventFlowsResponse
         */
        public ListHoneypotEventFlowsResponse ListHoneypotEventFlows(ListHoneypotEventFlowsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotEventFlowsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an intrusion event in a honeypot.
         *
         * @param request ListHoneypotEventFlowsRequest
         * @return ListHoneypotEventFlowsResponse
         */
        public async Task<ListHoneypotEventFlowsResponse> ListHoneypotEventFlowsAsync(ListHoneypotEventFlowsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotEventFlowsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the intrusion events detected by honeypots.
         *
         * @param request ListHoneypotEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotEventsResponse
         */
        public ListHoneypotEventsResponse ListHoneypotEventsWithOptions(ListHoneypotEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the intrusion events detected by honeypots.
         *
         * @param request ListHoneypotEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotEventsResponse
         */
        public async Task<ListHoneypotEventsResponse> ListHoneypotEventsWithOptionsAsync(ListHoneypotEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the intrusion events detected by honeypots.
         *
         * @param request ListHoneypotEventsRequest
         * @return ListHoneypotEventsResponse
         */
        public ListHoneypotEventsResponse ListHoneypotEvents(ListHoneypotEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the intrusion events detected by honeypots.
         *
         * @param request ListHoneypotEventsRequest
         * @return ListHoneypotEventsResponse
         */
        public async Task<ListHoneypotEventsResponse> ListHoneypotEventsAsync(ListHoneypotEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about management nodes.
         *
         * @param request ListHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotNodeResponse
         */
        public ListHoneypotNodeResponse ListHoneypotNodeWithOptions(ListHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about management nodes.
         *
         * @param request ListHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotNodeResponse
         */
        public async Task<ListHoneypotNodeResponse> ListHoneypotNodeWithOptionsAsync(ListHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about management nodes.
         *
         * @param request ListHoneypotNodeRequest
         * @return ListHoneypotNodeResponse
         */
        public ListHoneypotNodeResponse ListHoneypotNode(ListHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotNodeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about management nodes.
         *
         * @param request ListHoneypotNodeRequest
         * @return ListHoneypotNodeResponse
         */
        public async Task<ListHoneypotNodeResponse> ListHoneypotNodeAsync(ListHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries honeypot templates.
         *
         * @param request ListHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotPresetResponse
         */
        public ListHoneypotPresetResponse ListHoneypotPresetWithOptions(ListHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotPresetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries honeypot templates.
         *
         * @param request ListHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotPresetResponse
         */
        public async Task<ListHoneypotPresetResponse> ListHoneypotPresetWithOptionsAsync(ListHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotPresetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries honeypot templates.
         *
         * @param request ListHoneypotPresetRequest
         * @return ListHoneypotPresetResponse
         */
        public ListHoneypotPresetResponse ListHoneypotPreset(ListHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotPresetWithOptions(request, runtime);
        }

        /**
         * @summary Queries honeypot templates.
         *
         * @param request ListHoneypotPresetRequest
         * @return ListHoneypotPresetResponse
         */
        public async Task<ListHoneypotPresetResponse> ListHoneypotPresetAsync(ListHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotPresetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries probes.
         *
         * @param request ListHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotProbeResponse
         */
        public ListHoneypotProbeResponse ListHoneypotProbeWithOptions(ListHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeStatus))
            {
                query["ProbeStatus"] = request.ProbeStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries probes.
         *
         * @param request ListHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotProbeResponse
         */
        public async Task<ListHoneypotProbeResponse> ListHoneypotProbeWithOptionsAsync(ListHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeStatus))
            {
                query["ProbeStatus"] = request.ProbeStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries probes.
         *
         * @param request ListHoneypotProbeRequest
         * @return ListHoneypotProbeResponse
         */
        public ListHoneypotProbeResponse ListHoneypotProbe(ListHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotProbeWithOptions(request, runtime);
        }

        /**
         * @summary Queries probes.
         *
         * @param request ListHoneypotProbeRequest
         * @return ListHoneypotProbeResponse
         */
        public async Task<ListHoneypotProbeResponse> ListHoneypotProbeAsync(ListHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询已安装的探针
         *
         * @param request ListHoneypotProbeUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotProbeUuidResponse
         */
        public ListHoneypotProbeUuidResponse ListHoneypotProbeUuidWithOptions(ListHoneypotProbeUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ControlNodeId))
            {
                query["ControlNodeId"] = request.ControlNodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotProbeUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotProbeUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询已安装的探针
         *
         * @param request ListHoneypotProbeUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListHoneypotProbeUuidResponse
         */
        public async Task<ListHoneypotProbeUuidResponse> ListHoneypotProbeUuidWithOptionsAsync(ListHoneypotProbeUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ControlNodeId))
            {
                query["ControlNodeId"] = request.ControlNodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeType))
            {
                query["ProbeType"] = request.ProbeType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListHoneypotProbeUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListHoneypotProbeUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询已安装的探针
         *
         * @param request ListHoneypotProbeUuidRequest
         * @return ListHoneypotProbeUuidResponse
         */
        public ListHoneypotProbeUuidResponse ListHoneypotProbeUuid(ListHoneypotProbeUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListHoneypotProbeUuidWithOptions(request, runtime);
        }

        /**
         * @summary 查询已安装的探针
         *
         * @param request ListHoneypotProbeUuidRequest
         * @return ListHoneypotProbeUuidResponse
         */
        public async Task<ListHoneypotProbeUuidResponse> ListHoneypotProbeUuidAsync(ListHoneypotProbeUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListHoneypotProbeUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the types of risky image build commands.
         *
         * @param request ListImageBuildRiskItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageBuildRiskItemResponse
         */
        public ListImageBuildRiskItemResponse ListImageBuildRiskItemWithOptions(ListImageBuildRiskItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageBuildRiskItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageBuildRiskItemResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the types of risky image build commands.
         *
         * @param request ListImageBuildRiskItemRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageBuildRiskItemResponse
         */
        public async Task<ListImageBuildRiskItemResponse> ListImageBuildRiskItemWithOptionsAsync(ListImageBuildRiskItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageBuildRiskItem",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageBuildRiskItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the types of risky image build commands.
         *
         * @param request ListImageBuildRiskItemRequest
         * @return ListImageBuildRiskItemResponse
         */
        public ListImageBuildRiskItemResponse ListImageBuildRiskItem(ListImageBuildRiskItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListImageBuildRiskItemWithOptions(request, runtime);
        }

        /**
         * @summary Queries the types of risky image build commands.
         *
         * @param request ListImageBuildRiskItemRequest
         * @return ListImageBuildRiskItemResponse
         */
        public async Task<ListImageBuildRiskItemResponse> ListImageBuildRiskItemAsync(ListImageBuildRiskItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListImageBuildRiskItemWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The region ID of the image.
         *
         * @param request ListImageRegistryRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageRegistryRegionResponse
         */
        public ListImageRegistryRegionResponse ListImageRegistryRegionWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageRegistryRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageRegistryRegionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The region ID of the image.
         *
         * @param request ListImageRegistryRegionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageRegistryRegionResponse
         */
        public async Task<ListImageRegistryRegionResponse> ListImageRegistryRegionWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageRegistryRegion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageRegistryRegionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The region ID of the image.
         *
         * @return ListImageRegistryRegionResponse
         */
        public ListImageRegistryRegionResponse ListImageRegistryRegion()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListImageRegistryRegionWithOptions(runtime);
        }

        /**
         * @summary The region ID of the image.
         *
         * @return ListImageRegistryRegionResponse
         */
        public async Task<ListImageRegistryRegionResponse> ListImageRegistryRegionAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListImageRegistryRegionWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries security information about a container image.
         *
         * @param request ListImageRiskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageRiskResponse
         */
        public ListImageRiskResponse ListImageRiskWithOptions(ListImageRiskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageRisk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageRiskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries security information about a container image.
         *
         * @param request ListImageRiskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListImageRiskResponse
         */
        public async Task<ListImageRiskResponse> ListImageRiskWithOptionsAsync(ListImageRiskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListImageRisk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListImageRiskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries security information about a container image.
         *
         * @param request ListImageRiskRequest
         * @return ListImageRiskResponse
         */
        public ListImageRiskResponse ListImageRisk(ListImageRiskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListImageRiskWithOptions(request, runtime);
        }

        /**
         * @summary Queries security information about a container image.
         *
         * @param request ListImageRiskRequest
         * @return ListImageRiskResponse
         */
        public async Task<ListImageRiskResponse> ListImageRiskAsync(ListImageRiskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListImageRiskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the asset types and asset subtypes for configuration assessment.
         *
         * @param request ListInstanceCatalogRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceCatalogResponse
         */
        public ListInstanceCatalogResponse ListInstanceCatalogWithOptions(ListInstanceCatalogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequirementIds))
            {
                query["RequirementIds"] = request.RequirementIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceCatalog",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceCatalogResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the asset types and asset subtypes for configuration assessment.
         *
         * @param request ListInstanceCatalogRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceCatalogResponse
         */
        public async Task<ListInstanceCatalogResponse> ListInstanceCatalogWithOptionsAsync(ListInstanceCatalogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequirementIds))
            {
                query["RequirementIds"] = request.RequirementIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StandardIds))
            {
                query["StandardIds"] = request.StandardIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceCatalog",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceCatalogResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the asset types and asset subtypes for configuration assessment.
         *
         * @param request ListInstanceCatalogRequest
         * @return ListInstanceCatalogResponse
         */
        public ListInstanceCatalogResponse ListInstanceCatalog(ListInstanceCatalogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInstanceCatalogWithOptions(request, runtime);
        }

        /**
         * @summary Queries the asset types and asset subtypes for configuration assessment.
         *
         * @param request ListInstanceCatalogRequest
         * @return ListInstanceCatalogResponse
         */
        public async Task<ListInstanceCatalogResponse> ListInstanceCatalogAsync(ListInstanceCatalogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInstanceCatalogWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the risk levels of instances.
         *
         * @param request ListInstanceRiskLevelsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceRiskLevelsResponse
         */
        public ListInstanceRiskLevelsResponse ListInstanceRiskLevelsWithOptions(ListInstanceRiskLevelsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceList))
            {
                query["InstanceList"] = request.InstanceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceRiskLevels",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceRiskLevelsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the risk levels of instances.
         *
         * @param request ListInstanceRiskLevelsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceRiskLevelsResponse
         */
        public async Task<ListInstanceRiskLevelsResponse> ListInstanceRiskLevelsWithOptionsAsync(ListInstanceRiskLevelsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceList))
            {
                query["InstanceList"] = request.InstanceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceRiskLevels",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceRiskLevelsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the risk levels of instances.
         *
         * @param request ListInstanceRiskLevelsRequest
         * @return ListInstanceRiskLevelsResponse
         */
        public ListInstanceRiskLevelsResponse ListInstanceRiskLevels(ListInstanceRiskLevelsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInstanceRiskLevelsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the risk levels of instances.
         *
         * @param request ListInstanceRiskLevelsRequest
         * @return ListInstanceRiskLevelsResponse
         */
        public async Task<ListInstanceRiskLevelsResponse> ListInstanceRiskLevelsAsync(ListInstanceRiskLevelsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInstanceRiskLevelsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the statistics about risks in instances.
         *
         * @param request ListInstanceRiskNumRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceRiskNumResponse
         */
        public ListInstanceRiskNumResponse ListInstanceRiskNumWithOptions(ListInstanceRiskNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceList))
            {
                query["InstanceList"] = request.InstanceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceRiskNum",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceRiskNumResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about risks in instances.
         *
         * @param request ListInstanceRiskNumRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInstanceRiskNumResponse
         */
        public async Task<ListInstanceRiskNumResponse> ListInstanceRiskNumWithOptionsAsync(ListInstanceRiskNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceList))
            {
                query["InstanceList"] = request.InstanceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInstanceRiskNum",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInstanceRiskNumResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the statistics about risks in instances.
         *
         * @param request ListInstanceRiskNumRequest
         * @return ListInstanceRiskNumResponse
         */
        public ListInstanceRiskNumResponse ListInstanceRiskNum(ListInstanceRiskNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInstanceRiskNumWithOptions(request, runtime);
        }

        /**
         * @summary Queries the statistics about risks in instances.
         *
         * @param request ListInstanceRiskNumRequest
         * @return ListInstanceRiskNumResponse
         */
        public async Task<ListInstanceRiskNumResponse> ListInstanceRiskNumAsync(ListInstanceRiskNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInstanceRiskNumWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alerts generated by defense rules.
         *
         * @param request ListInterceptionHistoryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionHistoryResponse
         */
        public ListInterceptionHistoryResponse ListInterceptionHistoryWithOptions(ListInterceptionHistoryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HistoryName))
            {
                query["HistoryName"] = request.HistoryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptionTypes))
            {
                query["InterceptionTypes"] = request.InterceptionTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionHistory",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionHistoryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alerts generated by defense rules.
         *
         * @param request ListInterceptionHistoryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionHistoryResponse
         */
        public async Task<ListInterceptionHistoryResponse> ListInterceptionHistoryWithOptionsAsync(ListInterceptionHistoryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HistoryName))
            {
                query["HistoryName"] = request.HistoryName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptionTypes))
            {
                query["InterceptionTypes"] = request.InterceptionTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionHistory",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionHistoryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alerts generated by defense rules.
         *
         * @param request ListInterceptionHistoryRequest
         * @return ListInterceptionHistoryResponse
         */
        public ListInterceptionHistoryResponse ListInterceptionHistory(ListInterceptionHistoryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInterceptionHistoryWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alerts generated by defense rules.
         *
         * @param request ListInterceptionHistoryRequest
         * @return ListInterceptionHistoryResponse
         */
        public async Task<ListInterceptionHistoryResponse> ListInterceptionHistoryAsync(ListInterceptionHistoryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInterceptionHistoryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries defense rules that are configured for the container firewall feature.
         *
         * @param request ListInterceptionRulePageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionRulePageResponse
         */
        public ListInterceptionRulePageResponse ListInterceptionRulePageWithOptions(ListInterceptionRulePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionRulePage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionRulePageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries defense rules that are configured for the container firewall feature.
         *
         * @param request ListInterceptionRulePageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionRulePageResponse
         */
        public async Task<ListInterceptionRulePageResponse> ListInterceptionRulePageWithOptionsAsync(ListInterceptionRulePageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CriteriaType))
            {
                query["CriteriaType"] = request.CriteriaType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionRulePage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionRulePageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries defense rules that are configured for the container firewall feature.
         *
         * @param request ListInterceptionRulePageRequest
         * @return ListInterceptionRulePageResponse
         */
        public ListInterceptionRulePageResponse ListInterceptionRulePage(ListInterceptionRulePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInterceptionRulePageWithOptions(request, runtime);
        }

        /**
         * @summary Queries defense rules that are configured for the container firewall feature.
         *
         * @param request ListInterceptionRulePageRequest
         * @return ListInterceptionRulePageResponse
         */
        public async Task<ListInterceptionRulePageResponse> ListInterceptionRulePageAsync(ListInterceptionRulePageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInterceptionRulePageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the network objects that are protected by the container firewall feature.
         *
         * @param request ListInterceptionTargetPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionTargetPageResponse
         */
        public ListInterceptionTargetPageResponse ListInterceptionTargetPageWithOptions(ListInterceptionTargetPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionTargetPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionTargetPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the network objects that are protected by the container firewall feature.
         *
         * @param request ListInterceptionTargetPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInterceptionTargetPageResponse
         */
        public async Task<ListInterceptionTargetPageResponse> ListInterceptionTargetPageWithOptionsAsync(ListInterceptionTargetPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInterceptionTargetPage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInterceptionTargetPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the network objects that are protected by the container firewall feature.
         *
         * @param request ListInterceptionTargetPageRequest
         * @return ListInterceptionTargetPageResponse
         */
        public ListInterceptionTargetPageResponse ListInterceptionTargetPage(ListInterceptionTargetPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInterceptionTargetPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the network objects that are protected by the container firewall feature.
         *
         * @param request ListInterceptionTargetPageRequest
         * @return ListInterceptionTargetPageResponse
         */
        public async Task<ListInterceptionTargetPageResponse> ListInterceptionTargetPageAsync(ListInterceptionTargetPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInterceptionTargetPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about Kubernetes clusters that are added to Security Center.
         *
         * @description You can use this operation to query the access information about Kubernetes clusters.
         *
         * @param request ListK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListK8sAccessInfoResponse
         */
        public ListK8sAccessInfoResponse ListK8sAccessInfoWithOptions(ListK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListK8sAccessInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about Kubernetes clusters that are added to Security Center.
         *
         * @description You can use this operation to query the access information about Kubernetes clusters.
         *
         * @param request ListK8sAccessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListK8sAccessInfoResponse
         */
        public async Task<ListK8sAccessInfoResponse> ListK8sAccessInfoWithOptionsAsync(ListK8sAccessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayApiName))
            {
                query["AliyunYundunGatewayApiName"] = request.AliyunYundunGatewayApiName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayPopName))
            {
                query["AliyunYundunGatewayPopName"] = request.AliyunYundunGatewayPopName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunYundunGatewayProjectName))
            {
                query["AliyunYundunGatewayProjectName"] = request.AliyunYundunGatewayProjectName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListK8sAccessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListK8sAccessInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about Kubernetes clusters that are added to Security Center.
         *
         * @description You can use this operation to query the access information about Kubernetes clusters.
         *
         * @param request ListK8sAccessInfoRequest
         * @return ListK8sAccessInfoResponse
         */
        public ListK8sAccessInfoResponse ListK8sAccessInfo(ListK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListK8sAccessInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about Kubernetes clusters that are added to Security Center.
         *
         * @description You can use this operation to query the access information about Kubernetes clusters.
         *
         * @param request ListK8sAccessInfoRequest
         * @return ListK8sAccessInfoResponse
         */
        public async Task<ListK8sAccessInfoResponse> ListK8sAccessInfoAsync(ListK8sAccessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListK8sAccessInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert whitelist rules of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request ListMaliciousFileWhitelistConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListMaliciousFileWhitelistConfigsResponse
         */
        public ListMaliciousFileWhitelistConfigsResponse ListMaliciousFileWhitelistConfigsWithOptions(ListMaliciousFileWhitelistConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListMaliciousFileWhitelistConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListMaliciousFileWhitelistConfigsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert whitelist rules of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request ListMaliciousFileWhitelistConfigsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListMaliciousFileWhitelistConfigsResponse
         */
        public async Task<ListMaliciousFileWhitelistConfigsResponse> ListMaliciousFileWhitelistConfigsWithOptionsAsync(ListMaliciousFileWhitelistConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListMaliciousFileWhitelistConfigs",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListMaliciousFileWhitelistConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert whitelist rules of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request ListMaliciousFileWhitelistConfigsRequest
         * @return ListMaliciousFileWhitelistConfigsResponse
         */
        public ListMaliciousFileWhitelistConfigsResponse ListMaliciousFileWhitelistConfigs(ListMaliciousFileWhitelistConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListMaliciousFileWhitelistConfigsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert whitelist rules of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request ListMaliciousFileWhitelistConfigsRequest
         * @return ListMaliciousFileWhitelistConfigsResponse
         */
        public async Task<ListMaliciousFileWhitelistConfigsResponse> ListMaliciousFileWhitelistConfigsAsync(ListMaliciousFileWhitelistConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListMaliciousFileWhitelistConfigsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alerts that are generated for malicious files.
         *
         * @param request ListObjectScanEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListObjectScanEventResponse
         */
        public ListObjectScanEventResponse ListObjectScanEventWithOptions(ListObjectScanEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5))
            {
                query["Md5"] = request.Md5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssKey))
            {
                query["OssKey"] = request.OssKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventId))
            {
                query["ParentEventId"] = request.ParentEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListObjectScanEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListObjectScanEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alerts that are generated for malicious files.
         *
         * @param request ListObjectScanEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListObjectScanEventResponse
         */
        public async Task<ListObjectScanEventResponse> ListObjectScanEventWithOptionsAsync(ListObjectScanEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5))
            {
                query["Md5"] = request.Md5;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OssKey))
            {
                query["OssKey"] = request.OssKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentEventId))
            {
                query["ParentEventId"] = request.ParentEventId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskLevel))
            {
                query["RiskLevel"] = request.RiskLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeEnd))
            {
                query["TimeEnd"] = request.TimeEnd;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeStart))
            {
                query["TimeStart"] = request.TimeStart;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListObjectScanEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListObjectScanEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alerts that are generated for malicious files.
         *
         * @param request ListObjectScanEventRequest
         * @return ListObjectScanEventResponse
         */
        public ListObjectScanEventResponse ListObjectScanEvent(ListObjectScanEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListObjectScanEventWithOptions(request, runtime);
        }

        /**
         * @summary Queries alerts that are generated for malicious files.
         *
         * @param request ListObjectScanEventRequest
         * @return ListObjectScanEventResponse
         */
        public async Task<ListObjectScanEventResponse> ListObjectScanEventAsync(ListObjectScanEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListObjectScanEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries at-risk image blocking rules.
         *
         * @param request ListOpaClusterStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOpaClusterStrategyNewResponse
         */
        public ListOpaClusterStrategyNewResponse ListOpaClusterStrategyNewWithOptions(ListOpaClusterStrategyNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOpaClusterStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOpaClusterStrategyNewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries at-risk image blocking rules.
         *
         * @param request ListOpaClusterStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOpaClusterStrategyNewResponse
         */
        public async Task<ListOpaClusterStrategyNewResponse> ListOpaClusterStrategyNewWithOptionsAsync(ListOpaClusterStrategyNewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOpaClusterStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOpaClusterStrategyNewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries at-risk image blocking rules.
         *
         * @param request ListOpaClusterStrategyNewRequest
         * @return ListOpaClusterStrategyNewResponse
         */
        public ListOpaClusterStrategyNewResponse ListOpaClusterStrategyNew(ListOpaClusterStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOpaClusterStrategyNewWithOptions(request, runtime);
        }

        /**
         * @summary Queries at-risk image blocking rules.
         *
         * @param request ListOpaClusterStrategyNewRequest
         * @return ListOpaClusterStrategyNewResponse
         */
        public async Task<ListOpaClusterStrategyNewResponse> ListOpaClusterStrategyNewAsync(ListOpaClusterStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOpaClusterStrategyNewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries Object Storage Service (OSS) buckets.
         *
         * @param request ListOssBucketRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssBucketResponse
         */
        public ListOssBucketResponse ListOssBucketWithOptions(ListOssBucketRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssBucket",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssBucketResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries Object Storage Service (OSS) buckets.
         *
         * @param request ListOssBucketRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssBucketResponse
         */
        public async Task<ListOssBucketResponse> ListOssBucketWithOptionsAsync(ListOssBucketRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssBucket",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssBucketResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries Object Storage Service (OSS) buckets.
         *
         * @param request ListOssBucketRequest
         * @return ListOssBucketResponse
         */
        public ListOssBucketResponse ListOssBucket(ListOssBucketRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOssBucketWithOptions(request, runtime);
        }

        /**
         * @summary Queries Object Storage Service (OSS) buckets.
         *
         * @param request ListOssBucketRequest
         * @return ListOssBucketResponse
         */
        public async Task<ListOssBucketResponse> ListOssBucketAsync(ListOssBucketRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOssBucketWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the risk information of an Object Storage Service (OSS) bucket.
         *
         * @param request ListOssBucketScanInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssBucketScanInfoResponse
         */
        public ListOssBucketScanInfoResponse ListOssBucketScanInfoWithOptions(ListOssBucketScanInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzBucketName))
            {
                query["FuzzBucketName"] = request.FuzzBucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HasRisk))
            {
                query["HasRisk"] = request.HasRisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssBucketScanInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssBucketScanInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the risk information of an Object Storage Service (OSS) bucket.
         *
         * @param request ListOssBucketScanInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssBucketScanInfoResponse
         */
        public async Task<ListOssBucketScanInfoResponse> ListOssBucketScanInfoWithOptionsAsync(ListOssBucketScanInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzBucketName))
            {
                query["FuzzBucketName"] = request.FuzzBucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HasRisk))
            {
                query["HasRisk"] = request.HasRisk;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssBucketScanInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssBucketScanInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the risk information of an Object Storage Service (OSS) bucket.
         *
         * @param request ListOssBucketScanInfoRequest
         * @return ListOssBucketScanInfoResponse
         */
        public ListOssBucketScanInfoResponse ListOssBucketScanInfo(ListOssBucketScanInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOssBucketScanInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the risk information of an Object Storage Service (OSS) bucket.
         *
         * @param request ListOssBucketScanInfoRequest
         * @return ListOssBucketScanInfoResponse
         */
        public async Task<ListOssBucketScanInfoResponse> ListOssBucketScanInfoAsync(ListOssBucketScanInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOssBucketScanInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request ListOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssScanConfigResponse
         */
        public ListOssScanConfigResponse ListOssScanConfigWithOptions(ListOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request ListOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOssScanConfigResponse
         */
        public async Task<ListOssScanConfigResponse> ListOssScanConfigWithOptionsAsync(ListOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOssScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request ListOssScanConfigRequest
         * @return ListOssScanConfigResponse
         */
        public ListOssScanConfigResponse ListOssScanConfig(ListOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOssScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the configuration of an Object Storage Service (OSS) file detection policy.
         *
         * @param request ListOssScanConfigRequest
         * @return ListOssScanConfigResponse
         */
        public async Task<ListOssScanConfigResponse> ListOssScanConfigAsync(ListOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOssScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about plug-ins on a server.
         *
         * @param tmpReq ListPluginForUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPluginForUuidResponse
         */
        public ListPluginForUuidResponse ListPluginForUuidWithOptions(ListPluginForUuidRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListPluginForUuidShrinkRequest request = new ListPluginForUuidShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Types))
            {
                request.TypesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Types, "Types", "simple");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypesShrink))
            {
                query["Types"] = request.TypesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPluginForUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPluginForUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about plug-ins on a server.
         *
         * @param tmpReq ListPluginForUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPluginForUuidResponse
         */
        public async Task<ListPluginForUuidResponse> ListPluginForUuidWithOptionsAsync(ListPluginForUuidRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListPluginForUuidShrinkRequest request = new ListPluginForUuidShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Types))
            {
                request.TypesShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Types, "Types", "simple");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypesShrink))
            {
                query["Types"] = request.TypesShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPluginForUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPluginForUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about plug-ins on a server.
         *
         * @param request ListPluginForUuidRequest
         * @return ListPluginForUuidResponse
         */
        public ListPluginForUuidResponse ListPluginForUuid(ListPluginForUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPluginForUuidWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about plug-ins on a server.
         *
         * @param request ListPluginForUuidRequest
         * @return ListPluginForUuidResponse
         */
        public async Task<ListPluginForUuidResponse> ListPluginForUuidAsync(ListPluginForUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPluginForUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the security risks of a pod.
         *
         * @param request ListPodRiskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPodRiskResponse
         */
        public ListPodRiskResponse ListPodRiskWithOptions(ListPodRiskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodName))
            {
                query["PodName"] = request.PodName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPodRisk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPodRiskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the security risks of a pod.
         *
         * @param request ListPodRiskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPodRiskResponse
         */
        public async Task<ListPodRiskResponse> ListPodRiskWithOptionsAsync(ListPodRiskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodName))
            {
                query["PodName"] = request.PodName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPodRisk",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPodRiskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the security risks of a pod.
         *
         * @param request ListPodRiskRequest
         * @return ListPodRiskResponse
         */
        public ListPodRiskResponse ListPodRisk(ListPodRiskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPodRiskWithOptions(request, runtime);
        }

        /**
         * @summary Queries the security risks of a pod.
         *
         * @param request ListPodRiskRequest
         * @return ListPodRiskResponse
         */
        public async Task<ListPodRiskResponse> ListPodRiskAsync(ListPodRiskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPodRiskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries image repositories.
         *
         * @param request ListPrivateRegistryListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrivateRegistryListResponse
         */
        public ListPrivateRegistryListResponse ListPrivateRegistryListWithOptions(ListPrivateRegistryListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                query["RegistryType"] = request.RegistryType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrivateRegistryList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrivateRegistryListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries image repositories.
         *
         * @param request ListPrivateRegistryListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrivateRegistryListResponse
         */
        public async Task<ListPrivateRegistryListResponse> ListPrivateRegistryListWithOptionsAsync(ListPrivateRegistryListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryType))
            {
                query["RegistryType"] = request.RegistryType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrivateRegistryList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrivateRegistryListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries image repositories.
         *
         * @param request ListPrivateRegistryListRequest
         * @return ListPrivateRegistryListResponse
         */
        public ListPrivateRegistryListResponse ListPrivateRegistryList(ListPrivateRegistryListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrivateRegistryListWithOptions(request, runtime);
        }

        /**
         * @summary Queries image repositories.
         *
         * @param request ListPrivateRegistryListRequest
         * @return ListPrivateRegistryListResponse
         */
        public async Task<ListPrivateRegistryListResponse> ListPrivateRegistryListAsync(ListPrivateRegistryListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrivateRegistryListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of image repositories of each type.
         *
         * @param request ListPrivateRegistryTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrivateRegistryTypeResponse
         */
        public ListPrivateRegistryTypeResponse ListPrivateRegistryTypeWithOptions(ListPrivateRegistryTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrivateRegistryType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrivateRegistryTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of image repositories of each type.
         *
         * @param request ListPrivateRegistryTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrivateRegistryTypeResponse
         */
        public async Task<ListPrivateRegistryTypeResponse> ListPrivateRegistryTypeWithOptionsAsync(ListPrivateRegistryTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrivateRegistryType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrivateRegistryTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of image repositories of each type.
         *
         * @param request ListPrivateRegistryTypeRequest
         * @return ListPrivateRegistryTypeResponse
         */
        public ListPrivateRegistryTypeResponse ListPrivateRegistryType(ListPrivateRegistryTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrivateRegistryTypeWithOptions(request, runtime);
        }

        /**
         * @summary Queries the number of image repositories of each type.
         *
         * @param request ListPrivateRegistryTypeRequest
         * @return ListPrivateRegistryTypeResponse
         */
        public async Task<ListPrivateRegistryTypeResponse> ListPrivateRegistryTypeAsync(ListPrivateRegistryTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrivateRegistryTypeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the installation information of one or more Runtime Application Self-protection-enabled (RASP-enabled) applications.
         *
         * @param request ListQueryRaspAppInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListQueryRaspAppInfoResponse
         */
        public ListQueryRaspAppInfoResponse ListQueryRaspAppInfoWithOptions(ListQueryRaspAppInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListQueryRaspAppInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListQueryRaspAppInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the installation information of one or more Runtime Application Self-protection-enabled (RASP-enabled) applications.
         *
         * @param request ListQueryRaspAppInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListQueryRaspAppInfoResponse
         */
        public async Task<ListQueryRaspAppInfoResponse> ListQueryRaspAppInfoWithOptionsAsync(ListQueryRaspAppInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListQueryRaspAppInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListQueryRaspAppInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the installation information of one or more Runtime Application Self-protection-enabled (RASP-enabled) applications.
         *
         * @param request ListQueryRaspAppInfoRequest
         * @return ListQueryRaspAppInfoResponse
         */
        public ListQueryRaspAppInfoResponse ListQueryRaspAppInfo(ListQueryRaspAppInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListQueryRaspAppInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the installation information of one or more Runtime Application Self-protection-enabled (RASP-enabled) applications.
         *
         * @param request ListQueryRaspAppInfoRequest
         * @return ListQueryRaspAppInfoResponse
         */
        public async Task<ListQueryRaspAppInfoResponse> ListQueryRaspAppInfoAsync(ListQueryRaspAppInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListQueryRaspAppInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the network objects based on which a specified cluster is protected.
         *
         * @param request ListRuleTargetAllRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListRuleTargetAllResponse
         */
        public ListRuleTargetAllResponse ListRuleTargetAllWithOptions(ListRuleTargetAllRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRuleTargetAll",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleTargetAllResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the network objects based on which a specified cluster is protected.
         *
         * @param request ListRuleTargetAllRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListRuleTargetAllResponse
         */
        public async Task<ListRuleTargetAllResponse> ListRuleTargetAllWithOptionsAsync(ListRuleTargetAllRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRuleTargetAll",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleTargetAllResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the network objects based on which a specified cluster is protected.
         *
         * @param request ListRuleTargetAllRequest
         * @return ListRuleTargetAllResponse
         */
        public ListRuleTargetAllResponse ListRuleTargetAll(ListRuleTargetAllRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRuleTargetAllWithOptions(request, runtime);
        }

        /**
         * @summary Queries the network objects based on which a specified cluster is protected.
         *
         * @param request ListRuleTargetAllRequest
         * @return ListRuleTargetAllResponse
         */
        public async Task<ListRuleTargetAllResponse> ListRuleTargetAllAsync(ListRuleTargetAllRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRuleTargetAllWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries rules for container tamper-proofing.
         *
         * @param request ListSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSasContainerWebDefenseRuleResponse
         */
        public ListSasContainerWebDefenseRuleResponse ListSasContainerWebDefenseRuleWithOptions(ListSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSasContainerWebDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries rules for container tamper-proofing.
         *
         * @param request ListSasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSasContainerWebDefenseRuleResponse
         */
        public async Task<ListSasContainerWebDefenseRuleResponse> ListSasContainerWebDefenseRuleWithOptionsAsync(ListSasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Criteria))
            {
                query["Criteria"] = request.Criteria;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogicalExp))
            {
                query["LogicalExp"] = request.LogicalExp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSasContainerWebDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries rules for container tamper-proofing.
         *
         * @param request ListSasContainerWebDefenseRuleRequest
         * @return ListSasContainerWebDefenseRuleResponse
         */
        public ListSasContainerWebDefenseRuleResponse ListSasContainerWebDefenseRule(ListSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSasContainerWebDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries rules for container tamper-proofing.
         *
         * @param request ListSasContainerWebDefenseRuleRequest
         * @return ListSasContainerWebDefenseRuleResponse
         */
        public async Task<ListSasContainerWebDefenseRuleResponse> ListSasContainerWebDefenseRuleAsync(ListSasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSasContainerWebDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries supported file suffixes.
         *
         * @param request ListSupportObjectSuffixRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSupportObjectSuffixResponse
         */
        public ListSupportObjectSuffixResponse ListSupportObjectSuffixWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSupportObjectSuffix",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSupportObjectSuffixResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries supported file suffixes.
         *
         * @param request ListSupportObjectSuffixRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSupportObjectSuffixResponse
         */
        public async Task<ListSupportObjectSuffixResponse> ListSupportObjectSuffixWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSupportObjectSuffix",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSupportObjectSuffixResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries supported file suffixes.
         *
         * @return ListSupportObjectSuffixResponse
         */
        public ListSupportObjectSuffixResponse ListSupportObjectSuffix()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSupportObjectSuffixWithOptions(runtime);
        }

        /**
         * @summary Queries supported file suffixes.
         *
         * @return ListSupportObjectSuffixResponse
         */
        public async Task<ListSupportObjectSuffixResponse> ListSupportObjectSuffixAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSupportObjectSuffixWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries the details about the aggregation types of system defense rules.
         *
         * @param request ListSystemAggregationRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemAggregationRulesResponse
         */
        public ListSystemAggregationRulesResponse ListSystemAggregationRulesWithOptions(ListSystemAggregationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemAggregationRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemAggregationRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the aggregation types of system defense rules.
         *
         * @param request ListSystemAggregationRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemAggregationRulesResponse
         */
        public async Task<ListSystemAggregationRulesResponse> ListSystemAggregationRulesWithOptionsAsync(ListSystemAggregationRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemAggregationRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemAggregationRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about the aggregation types of system defense rules.
         *
         * @param request ListSystemAggregationRulesRequest
         * @return ListSystemAggregationRulesResponse
         */
        public ListSystemAggregationRulesResponse ListSystemAggregationRules(ListSystemAggregationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSystemAggregationRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about the aggregation types of system defense rules.
         *
         * @param request ListSystemAggregationRulesRequest
         * @return ListSystemAggregationRulesResponse
         */
        public async Task<ListSystemAggregationRulesResponse> ListSystemAggregationRulesAsync(ListSystemAggregationRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSystemAggregationRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询对用户生效的系统规则类型
         *
         * @param request ListSystemClientRuleTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemClientRuleTypesResponse
         */
        public ListSystemClientRuleTypesResponse ListSystemClientRuleTypesWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemClientRuleTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemClientRuleTypesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询对用户生效的系统规则类型
         *
         * @param request ListSystemClientRuleTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemClientRuleTypesResponse
         */
        public async Task<ListSystemClientRuleTypesResponse> ListSystemClientRuleTypesWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemClientRuleTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemClientRuleTypesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询对用户生效的系统规则类型
         *
         * @return ListSystemClientRuleTypesResponse
         */
        public ListSystemClientRuleTypesResponse ListSystemClientRuleTypes()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSystemClientRuleTypesWithOptions(runtime);
        }

        /**
         * @summary 查询对用户生效的系统规则类型
         *
         * @return ListSystemClientRuleTypesResponse
         */
        public async Task<ListSystemClientRuleTypesResponse> ListSystemClientRuleTypesAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSystemClientRuleTypesWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries system defense rules.
         *
         * @param request ListSystemClientRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemClientRulesResponse
         */
        public ListSystemClientRulesResponse ListSystemClientRulesWithOptions(ListSystemClientRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AggregationIds))
            {
                query["AggregationIds"] = request.AggregationIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsContainer))
            {
                query["IsContainer"] = request.IsContainer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleTypes))
            {
                query["RuleTypes"] = request.RuleTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemType))
            {
                query["SystemType"] = request.SystemType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemClientRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemClientRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries system defense rules.
         *
         * @param request ListSystemClientRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemClientRulesResponse
         */
        public async Task<ListSystemClientRulesResponse> ListSystemClientRulesWithOptionsAsync(ListSystemClientRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AggregationIds))
            {
                query["AggregationIds"] = request.AggregationIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsContainer))
            {
                query["IsContainer"] = request.IsContainer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleTypes))
            {
                query["RuleTypes"] = request.RuleTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemType))
            {
                query["SystemType"] = request.SystemType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemClientRules",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemClientRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries system defense rules.
         *
         * @param request ListSystemClientRulesRequest
         * @return ListSystemClientRulesResponse
         */
        public ListSystemClientRulesResponse ListSystemClientRules(ListSystemClientRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSystemClientRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries system defense rules.
         *
         * @param request ListSystemClientRulesRequest
         * @return ListSystemClientRulesResponse
         */
        public async Task<ListSystemClientRulesResponse> ListSystemClientRulesAsync(ListSystemClientRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSystemClientRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the aggregation types of system defense rules.
         *
         * @param request ListSystemRuleAggregationTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemRuleAggregationTypesResponse
         */
        public ListSystemRuleAggregationTypesResponse ListSystemRuleAggregationTypesWithOptions(ListSystemRuleAggregationTypesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemRuleAggregationTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemRuleAggregationTypesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the aggregation types of system defense rules.
         *
         * @param request ListSystemRuleAggregationTypesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSystemRuleAggregationTypesResponse
         */
        public async Task<ListSystemRuleAggregationTypesResponse> ListSystemRuleAggregationTypesWithOptionsAsync(ListSystemRuleAggregationTypesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSystemRuleAggregationTypes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSystemRuleAggregationTypesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the aggregation types of system defense rules.
         *
         * @param request ListSystemRuleAggregationTypesRequest
         * @return ListSystemRuleAggregationTypesResponse
         */
        public ListSystemRuleAggregationTypesResponse ListSystemRuleAggregationTypes(ListSystemRuleAggregationTypesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSystemRuleAggregationTypesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the aggregation types of system defense rules.
         *
         * @param request ListSystemRuleAggregationTypesRequest
         * @return ListSystemRuleAggregationTypesResponse
         */
        public async Task<ListSystemRuleAggregationTypesResponse> ListSystemRuleAggregationTypesAsync(ListSystemRuleAggregationTypesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSystemRuleAggregationTypesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries tasks that are not complete by task type.
         *
         * @param request ListUnfinishedOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUnfinishedOnceTaskResponse
         */
        public ListUnfinishedOnceTaskResponse ListUnfinishedOnceTaskWithOptions(ListUnfinishedOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUnfinishedOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUnfinishedOnceTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries tasks that are not complete by task type.
         *
         * @param request ListUnfinishedOnceTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUnfinishedOnceTaskResponse
         */
        public async Task<ListUnfinishedOnceTaskResponse> ListUnfinishedOnceTaskWithOptionsAsync(ListUnfinishedOnceTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUnfinishedOnceTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUnfinishedOnceTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries tasks that are not complete by task type.
         *
         * @param request ListUnfinishedOnceTaskRequest
         * @return ListUnfinishedOnceTaskResponse
         */
        public ListUnfinishedOnceTaskResponse ListUnfinishedOnceTask(ListUnfinishedOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUnfinishedOnceTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries tasks that are not complete by task type.
         *
         * @param request ListUnfinishedOnceTaskRequest
         * @return ListUnfinishedOnceTaskResponse
         */
        public async Task<ListUnfinishedOnceTaskResponse> ListUnfinishedOnceTaskAsync(ListUnfinishedOnceTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUnfinishedOnceTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent is not installed.
         *
         * @param request ListUninstallAegisMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUninstallAegisMachinesResponse
         */
        public ListUninstallAegisMachinesResponse ListUninstallAegisMachinesWithOptions(ListUninstallAegisMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdStr))
            {
                query["RegionIdStr"] = request.RegionIdStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionNo))
            {
                query["RegionNo"] = request.RegionNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUninstallAegisMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUninstallAegisMachinesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent is not installed.
         *
         * @param request ListUninstallAegisMachinesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUninstallAegisMachinesResponse
         */
        public async Task<ListUninstallAegisMachinesResponse> ListUninstallAegisMachinesWithOptionsAsync(ListUninstallAegisMachinesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIdStr))
            {
                query["RegionIdStr"] = request.RegionIdStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionNo))
            {
                query["RegionNo"] = request.RegionNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUninstallAegisMachines",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUninstallAegisMachinesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent is not installed.
         *
         * @param request ListUninstallAegisMachinesRequest
         * @return ListUninstallAegisMachinesResponse
         */
        public ListUninstallAegisMachinesResponse ListUninstallAegisMachines(ListUninstallAegisMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUninstallAegisMachinesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about the servers whose Security Center agent is not installed.
         *
         * @param request ListUninstallAegisMachinesRequest
         * @return ListUninstallAegisMachinesResponse
         */
        public async Task<ListUninstallAegisMachinesResponse> ListUninstallAegisMachinesAsync(ListUninstallAegisMachinesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUninstallAegisMachinesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries protected assets by using the paths to specific web directories.
         *
         * @param request ListUuidsByWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUuidsByWebPathResponse
         */
        public ListUuidsByWebPathResponse ListUuidsByWebPathWithOptions(ListUuidsByWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebPath))
            {
                query["WebPath"] = request.WebPath;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUuidsByWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUuidsByWebPathResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries protected assets by using the paths to specific web directories.
         *
         * @param request ListUuidsByWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListUuidsByWebPathResponse
         */
        public async Task<ListUuidsByWebPathResponse> ListUuidsByWebPathWithOptionsAsync(ListUuidsByWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebPath))
            {
                query["WebPath"] = request.WebPath;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListUuidsByWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListUuidsByWebPathResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries protected assets by using the paths to specific web directories.
         *
         * @param request ListUuidsByWebPathRequest
         * @return ListUuidsByWebPathResponse
         */
        public ListUuidsByWebPathResponse ListUuidsByWebPath(ListUuidsByWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListUuidsByWebPathWithOptions(request, runtime);
        }

        /**
         * @summary Queries protected assets by using the paths to specific web directories.
         *
         * @param request ListUuidsByWebPathRequest
         * @return ListUuidsByWebPathResponse
         */
        public async Task<ListUuidsByWebPathResponse> ListUuidsByWebPathAsync(ListUuidsByWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListUuidsByWebPathWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries servers on which virus detection and removal tasks are performed.
         *
         * @param request ListVirusScanMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanMachineResponse
         */
        public ListVirusScanMachineResponse ListVirusScanMachineWithOptions(ListVirusScanMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanMachineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries servers on which virus detection and removal tasks are performed.
         *
         * @param request ListVirusScanMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanMachineResponse
         */
        public async Task<ListVirusScanMachineResponse> ListVirusScanMachineWithOptionsAsync(ListVirusScanMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanMachineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries servers on which virus detection and removal tasks are performed.
         *
         * @param request ListVirusScanMachineRequest
         * @return ListVirusScanMachineResponse
         */
        public ListVirusScanMachineResponse ListVirusScanMachine(ListVirusScanMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVirusScanMachineWithOptions(request, runtime);
        }

        /**
         * @summary Queries servers on which virus detection and removal tasks are performed.
         *
         * @param request ListVirusScanMachineRequest
         * @return ListVirusScanMachineResponse
         */
        public async Task<ListVirusScanMachineResponse> ListVirusScanMachineAsync(ListVirusScanMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVirusScanMachineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert events that are generated for viruses detected on a server.
         *
         * @param request ListVirusScanMachineEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanMachineEventResponse
         */
        public ListVirusScanMachineEventResponse ListVirusScanMachineEventWithOptions(ListVirusScanMachineEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTaskId))
            {
                query["OperateTaskId"] = request.OperateTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanMachineEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanMachineEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert events that are generated for viruses detected on a server.
         *
         * @param request ListVirusScanMachineEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanMachineEventResponse
         */
        public async Task<ListVirusScanMachineEventResponse> ListVirusScanMachineEventWithOptionsAsync(ListVirusScanMachineEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateTaskId))
            {
                query["OperateTaskId"] = request.OperateTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanMachineEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanMachineEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert events that are generated for viruses detected on a server.
         *
         * @param request ListVirusScanMachineEventRequest
         * @return ListVirusScanMachineEventResponse
         */
        public ListVirusScanMachineEventResponse ListVirusScanMachineEvent(ListVirusScanMachineEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVirusScanMachineEventWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert events that are generated for viruses detected on a server.
         *
         * @param request ListVirusScanMachineEventRequest
         * @return ListVirusScanMachineEventResponse
         */
        public async Task<ListVirusScanMachineEventResponse> ListVirusScanMachineEventAsync(ListVirusScanMachineEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVirusScanMachineEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries virus scan tasks based on conditions such as the task type, task status, and server information.
         *
         * @param request ListVirusScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanTaskResponse
         */
        public ListVirusScanTaskResponse ListVirusScanTaskWithOptions(ListVirusScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTask))
            {
                query["RootTask"] = request.RootTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries virus scan tasks based on conditions such as the task type, task status, and server information.
         *
         * @param request ListVirusScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVirusScanTaskResponse
         */
        public async Task<ListVirusScanTaskResponse> ListVirusScanTaskWithOptionsAsync(ListVirusScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InternetIp))
            {
                query["InternetIp"] = request.InternetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntranetIp))
            {
                query["IntranetIp"] = request.IntranetIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineName))
            {
                query["MachineName"] = request.MachineName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTask))
            {
                query["RootTask"] = request.RootTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RootTaskId))
            {
                query["RootTaskId"] = request.RootTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanType))
            {
                query["ScanType"] = request.ScanType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                query["StatusList"] = request.StatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVirusScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVirusScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries virus scan tasks based on conditions such as the task type, task status, and server information.
         *
         * @param request ListVirusScanTaskRequest
         * @return ListVirusScanTaskResponse
         */
        public ListVirusScanTaskResponse ListVirusScanTask(ListVirusScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVirusScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Queries virus scan tasks based on conditions such as the task type, task status, and server information.
         *
         * @param request ListVirusScanTaskRequest
         * @return ListVirusScanTaskResponse
         */
        public async Task<ListVirusScanTaskResponse> ListVirusScanTaskAsync(ListVirusScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVirusScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the existing configurations of vulnerabilities that can be automatically fixed.
         *
         * @param request ListVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVulAutoRepairConfigResponse
         */
        public ListVulAutoRepairConfigResponse ListVulAutoRepairConfigWithOptions(ListVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVulAutoRepairConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the existing configurations of vulnerabilities that can be automatically fixed.
         *
         * @param request ListVulAutoRepairConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVulAutoRepairConfigResponse
         */
        public async Task<ListVulAutoRepairConfigResponse> ListVulAutoRepairConfigWithOptionsAsync(ListVulAutoRepairConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVulAutoRepairConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVulAutoRepairConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the existing configurations of vulnerabilities that can be automatically fixed.
         *
         * @param request ListVulAutoRepairConfigRequest
         * @return ListVulAutoRepairConfigResponse
         */
        public ListVulAutoRepairConfigResponse ListVulAutoRepairConfig(ListVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVulAutoRepairConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the existing configurations of vulnerabilities that can be automatically fixed.
         *
         * @param request ListVulAutoRepairConfigRequest
         * @return ListVulAutoRepairConfigResponse
         */
        public async Task<ListVulAutoRepairConfigResponse> ListVulAutoRepairConfigAsync(ListVulAutoRepairConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVulAutoRepairConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the global configurations of vulnerability detection.
         *
         * @param request ListVulGlobalConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVulGlobalConfigResponse
         */
        public ListVulGlobalConfigResponse ListVulGlobalConfigWithOptions(ListVulGlobalConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigKey))
            {
                query["ConfigKey"] = request.ConfigKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVulGlobalConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVulGlobalConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the global configurations of vulnerability detection.
         *
         * @param request ListVulGlobalConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListVulGlobalConfigResponse
         */
        public async Task<ListVulGlobalConfigResponse> ListVulGlobalConfigWithOptionsAsync(ListVulGlobalConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigKey))
            {
                query["ConfigKey"] = request.ConfigKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListVulGlobalConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListVulGlobalConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the global configurations of vulnerability detection.
         *
         * @param request ListVulGlobalConfigRequest
         * @return ListVulGlobalConfigResponse
         */
        public ListVulGlobalConfigResponse ListVulGlobalConfig(ListVulGlobalConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListVulGlobalConfigWithOptions(request, runtime);
        }

        /**
         * @summary Queries the global configurations of vulnerability detection.
         *
         * @param request ListVulGlobalConfigRequest
         * @return ListVulGlobalConfigResponse
         */
        public async Task<ListVulGlobalConfigResponse> ListVulGlobalConfigAsync(ListVulGlobalConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListVulGlobalConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Marks members for multi-account management. You can call this operation to mark selected members as followed. In the Security Center console, the drop-down list above the left-side navigation pane displays the followed members.
         *
         * @param request MarkMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return MarkMonitorAccountsResponse
         */
        public MarkMonitorAccountsResponse MarkMonitorAccountsWithOptions(MarkMonitorAccountsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountIds))
            {
                query["AccountIds"] = request.AccountIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "MarkMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<MarkMonitorAccountsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Marks members for multi-account management. You can call this operation to mark selected members as followed. In the Security Center console, the drop-down list above the left-side navigation pane displays the followed members.
         *
         * @param request MarkMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return MarkMonitorAccountsResponse
         */
        public async Task<MarkMonitorAccountsResponse> MarkMonitorAccountsWithOptionsAsync(MarkMonitorAccountsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountIds))
            {
                query["AccountIds"] = request.AccountIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "MarkMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<MarkMonitorAccountsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Marks members for multi-account management. You can call this operation to mark selected members as followed. In the Security Center console, the drop-down list above the left-side navigation pane displays the followed members.
         *
         * @param request MarkMonitorAccountsRequest
         * @return MarkMonitorAccountsResponse
         */
        public MarkMonitorAccountsResponse MarkMonitorAccounts(MarkMonitorAccountsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return MarkMonitorAccountsWithOptions(request, runtime);
        }

        /**
         * @summary Marks members for multi-account management. You can call this operation to mark selected members as followed. In the Security Center console, the drop-down list above the left-side navigation pane displays the followed members.
         *
         * @param request MarkMonitorAccountsRequest
         * @return MarkMonitorAccountsResponse
         */
        public async Task<MarkMonitorAccountsResponse> MarkMonitorAccountsAsync(MarkMonitorAccountsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await MarkMonitorAccountsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles AccessKey pair leaks.
         *
         * @param request ModifyAccessKeyLeakDealRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAccessKeyLeakDealResponse
         */
        public ModifyAccessKeyLeakDealResponse ModifyAccessKeyLeakDealWithOptions(ModifyAccessKeyLeakDealRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IdList))
            {
                query["IdList"] = request.IdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAccessKeyLeakDeal",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAccessKeyLeakDealResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles AccessKey pair leaks.
         *
         * @param request ModifyAccessKeyLeakDealRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAccessKeyLeakDealResponse
         */
        public async Task<ModifyAccessKeyLeakDealResponse> ModifyAccessKeyLeakDealWithOptionsAsync(ModifyAccessKeyLeakDealRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IdList))
            {
                query["IdList"] = request.IdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAccessKeyLeakDeal",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAccessKeyLeakDealResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles AccessKey pair leaks.
         *
         * @param request ModifyAccessKeyLeakDealRequest
         * @return ModifyAccessKeyLeakDealResponse
         */
        public ModifyAccessKeyLeakDealResponse ModifyAccessKeyLeakDeal(ModifyAccessKeyLeakDealRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAccessKeyLeakDealWithOptions(request, runtime);
        }

        /**
         * @summary Handles AccessKey pair leaks.
         *
         * @param request ModifyAccessKeyLeakDealRequest
         * @return ModifyAccessKeyLeakDealResponse
         */
        public async Task<ModifyAccessKeyLeakDealResponse> ModifyAccessKeyLeakDealAsync(ModifyAccessKeyLeakDealRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAccessKeyLeakDealWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a defense rule against brute-force attacks.
         *
         * @param request ModifyAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAntiBruteForceRuleResponse
         */
        public ModifyAntiBruteForceRuleResponse ModifyAntiBruteForceRuleWithOptions(ModifyAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultRule))
            {
                query["DefaultRule"] = request.DefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FailCount))
            {
                query["FailCount"] = request.FailCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForbiddenTime))
            {
                query["ForbiddenTime"] = request.ForbiddenTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Span))
            {
                query["Span"] = request.Span;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAntiBruteForceRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a defense rule against brute-force attacks.
         *
         * @param request ModifyAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAntiBruteForceRuleResponse
         */
        public async Task<ModifyAntiBruteForceRuleResponse> ModifyAntiBruteForceRuleWithOptionsAsync(ModifyAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefaultRule))
            {
                query["DefaultRule"] = request.DefaultRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FailCount))
            {
                query["FailCount"] = request.FailCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ForbiddenTime))
            {
                query["ForbiddenTime"] = request.ForbiddenTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Span))
            {
                query["Span"] = request.Span;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAntiBruteForceRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a defense rule against brute-force attacks.
         *
         * @param request ModifyAntiBruteForceRuleRequest
         * @return ModifyAntiBruteForceRuleResponse
         */
        public ModifyAntiBruteForceRuleResponse ModifyAntiBruteForceRule(ModifyAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAntiBruteForceRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a defense rule against brute-force attacks.
         *
         * @param request ModifyAntiBruteForceRuleRequest
         * @return ModifyAntiBruteForceRuleResponse
         */
        public async Task<ModifyAntiBruteForceRuleResponse> ModifyAntiBruteForceRuleAsync(ModifyAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAntiBruteForceRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configures a scan cycle for application vulnerabilities.
         *
         * @param request ModifyAppVulScanCycleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAppVulScanCycleResponse
         */
        public ModifyAppVulScanCycleResponse ModifyAppVulScanCycleWithOptions(ModifyAppVulScanCycleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cycle))
            {
                query["Cycle"] = request.Cycle;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAppVulScanCycle",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAppVulScanCycleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configures a scan cycle for application vulnerabilities.
         *
         * @param request ModifyAppVulScanCycleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAppVulScanCycleResponse
         */
        public async Task<ModifyAppVulScanCycleResponse> ModifyAppVulScanCycleWithOptionsAsync(ModifyAppVulScanCycleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cycle))
            {
                query["Cycle"] = request.Cycle;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAppVulScanCycle",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAppVulScanCycleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configures a scan cycle for application vulnerabilities.
         *
         * @param request ModifyAppVulScanCycleRequest
         * @return ModifyAppVulScanCycleResponse
         */
        public ModifyAppVulScanCycleResponse ModifyAppVulScanCycle(ModifyAppVulScanCycleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAppVulScanCycleWithOptions(request, runtime);
        }

        /**
         * @summary Configures a scan cycle for application vulnerabilities.
         *
         * @param request ModifyAppVulScanCycleRequest
         * @return ModifyAppVulScanCycleResponse
         */
        public async Task<ModifyAppVulScanCycleResponse> ModifyAppVulScanCycleAsync(ModifyAppVulScanCycleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAppVulScanCycleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ModifyAssetCleanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetCleanConfigResponse
         */
        public ModifyAssetCleanConfigResponse ModifyAssetCleanConfigWithOptions(ModifyAssetCleanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetCleanConfigs))
            {
                query["AssetCleanConfigs"] = request.AssetCleanConfigs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetCleanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetCleanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ModifyAssetCleanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetCleanConfigResponse
         */
        public async Task<ModifyAssetCleanConfigResponse> ModifyAssetCleanConfigWithOptionsAsync(ModifyAssetCleanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetCleanConfigs))
            {
                query["AssetCleanConfigs"] = request.AssetCleanConfigs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetCleanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetCleanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ModifyAssetCleanConfigRequest
         * @return ModifyAssetCleanConfigResponse
         */
        public ModifyAssetCleanConfigResponse ModifyAssetCleanConfig(ModifyAssetCleanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAssetCleanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations for cleaning offline hosts whose provider cannot be identified.
         *
         * @param request ModifyAssetCleanConfigRequest
         * @return ModifyAssetCleanConfigResponse
         */
        public async Task<ModifyAssetCleanConfigResponse> ModifyAssetCleanConfigAsync(ModifyAssetCleanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAssetCleanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the server group to which specified servers belong.
         *
         * @description You can call the ModifyAssetGroup operation to change the server group to which one or more servers belong. After you create a server group by calling the [CreateOrUpdateAssetGroup](~~CreateOrUpdateAssetGroup~~) operation, you can call the ModifyAssetGroup operation to change the server group to which your servers belong.
         * ### Limits
         * You can call this API operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ModifyAssetGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetGroupResponse
         */
        public ModifyAssetGroupResponse ModifyAssetGroupWithOptions(ModifyAssetGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the server group to which specified servers belong.
         *
         * @description You can call the ModifyAssetGroup operation to change the server group to which one or more servers belong. After you create a server group by calling the [CreateOrUpdateAssetGroup](~~CreateOrUpdateAssetGroup~~) operation, you can call the ModifyAssetGroup operation to change the server group to which your servers belong.
         * ### Limits
         * You can call this API operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ModifyAssetGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetGroupResponse
         */
        public async Task<ModifyAssetGroupResponse> ModifyAssetGroupWithOptionsAsync(ModifyAssetGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetGroup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the server group to which specified servers belong.
         *
         * @description You can call the ModifyAssetGroup operation to change the server group to which one or more servers belong. After you create a server group by calling the [CreateOrUpdateAssetGroup](~~CreateOrUpdateAssetGroup~~) operation, you can call the ModifyAssetGroup operation to change the server group to which your servers belong.
         * ### Limits
         * You can call this API operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ModifyAssetGroupRequest
         * @return ModifyAssetGroupResponse
         */
        public ModifyAssetGroupResponse ModifyAssetGroup(ModifyAssetGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAssetGroupWithOptions(request, runtime);
        }

        /**
         * @summary Changes the server group to which specified servers belong.
         *
         * @description You can call the ModifyAssetGroup operation to change the server group to which one or more servers belong. After you create a server group by calling the [CreateOrUpdateAssetGroup](~~CreateOrUpdateAssetGroup~~) operation, you can call the ModifyAssetGroup operation to change the server group to which your servers belong.
         * ### Limits
         * You can call this API operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request ModifyAssetGroupRequest
         * @return ModifyAssetGroupResponse
         */
        public async Task<ModifyAssetGroupResponse> ModifyAssetGroupAsync(ModifyAssetGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAssetGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the importance of an asset.
         *
         * @param request ModifyAssetImportantRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetImportantResponse
         */
        public ModifyAssetImportantResponse ModifyAssetImportantWithOptions(ModifyAssetImportantRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImportantCode))
            {
                query["ImportantCode"] = request.ImportantCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetImportant",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetImportantResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the importance of an asset.
         *
         * @param request ModifyAssetImportantRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAssetImportantResponse
         */
        public async Task<ModifyAssetImportantResponse> ModifyAssetImportantWithOptionsAsync(ModifyAssetImportantRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImportantCode))
            {
                query["ImportantCode"] = request.ImportantCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAssetImportant",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAssetImportantResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the importance of an asset.
         *
         * @param request ModifyAssetImportantRequest
         * @return ModifyAssetImportantResponse
         */
        public ModifyAssetImportantResponse ModifyAssetImportant(ModifyAssetImportantRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAssetImportantWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the importance of an asset.
         *
         * @param request ModifyAssetImportantRequest
         * @return ModifyAssetImportantResponse
         */
        public async Task<ModifyAssetImportantResponse> ModifyAssetImportantAsync(ModifyAssetImportantRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAssetImportantWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Specifies the number of days after which a detected vulnerability is automatically deleted.
         *
         * @param request ModifyAutoDelConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAutoDelConfigResponse
         */
        public ModifyAutoDelConfigResponse ModifyAutoDelConfigWithOptions(ModifyAutoDelConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Days))
            {
                query["Days"] = request.Days;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAutoDelConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAutoDelConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Specifies the number of days after which a detected vulnerability is automatically deleted.
         *
         * @param request ModifyAutoDelConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyAutoDelConfigResponse
         */
        public async Task<ModifyAutoDelConfigResponse> ModifyAutoDelConfigWithOptionsAsync(ModifyAutoDelConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Days))
            {
                query["Days"] = request.Days;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyAutoDelConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyAutoDelConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Specifies the number of days after which a detected vulnerability is automatically deleted.
         *
         * @param request ModifyAutoDelConfigRequest
         * @return ModifyAutoDelConfigResponse
         */
        public ModifyAutoDelConfigResponse ModifyAutoDelConfig(ModifyAutoDelConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyAutoDelConfigWithOptions(request, runtime);
        }

        /**
         * @summary Specifies the number of days after which a detected vulnerability is automatically deleted.
         *
         * @param request ModifyAutoDelConfigRequest
         * @return ModifyAutoDelConfigResponse
         */
        public async Task<ModifyAutoDelConfigResponse> ModifyAutoDelConfigAsync(ModifyAutoDelConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyAutoDelConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies an anti-ransomware policy.
         *
         * @param tmpReq ModifyBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyBackupPolicyResponse
         */
        public ModifyBackupPolicyResponse ModifyBackupPolicyWithOptions(ModifyBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyBackupPolicyShrinkRequest request = new ModifyBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Policy))
            {
                request.PolicyShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Policy, "Policy", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyShrink))
            {
                query["Policy"] = request.PolicyShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyRegionId))
            {
                query["PolicyRegionId"] = request.PolicyRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies an anti-ransomware policy.
         *
         * @param tmpReq ModifyBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyBackupPolicyResponse
         */
        public async Task<ModifyBackupPolicyResponse> ModifyBackupPolicyWithOptionsAsync(ModifyBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyBackupPolicyShrinkRequest request = new ModifyBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Policy))
            {
                request.PolicyShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Policy, "Policy", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyShrink))
            {
                query["Policy"] = request.PolicyShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyRegionId))
            {
                query["PolicyRegionId"] = request.PolicyRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyRequest
         * @return ModifyBackupPolicyResponse
         */
        public ModifyBackupPolicyResponse ModifyBackupPolicy(ModifyBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Modifies an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyRequest
         * @return ModifyBackupPolicyResponse
         */
        public async Task<ModifyBackupPolicyResponse> ModifyBackupPolicyAsync(ModifyBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyBackupPolicyStatusResponse
         */
        public ModifyBackupPolicyStatusResponse ModifyBackupPolicyStatusWithOptions(ModifyBackupPolicyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyBackupPolicyStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyBackupPolicyStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyBackupPolicyStatusResponse
         */
        public async Task<ModifyBackupPolicyStatusResponse> ModifyBackupPolicyStatusWithOptionsAsync(ModifyBackupPolicyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyBackupPolicyStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyBackupPolicyStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyStatusRequest
         * @return ModifyBackupPolicyStatusResponse
         */
        public ModifyBackupPolicyStatusResponse ModifyBackupPolicyStatus(ModifyBackupPolicyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyBackupPolicyStatusWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables an anti-ransomware policy.
         *
         * @param request ModifyBackupPolicyStatusRequest
         * @return ModifyBackupPolicyStatusResponse
         */
        public async Task<ModifyBackupPolicyStatusResponse> ModifyBackupPolicyStatusAsync(ModifyBackupPolicyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyBackupPolicyStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 修改日志容量
         *
         * @param request ModifyClearLogstoreStorageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClearLogstoreStorageResponse
         */
        public ModifyClearLogstoreStorageResponse ModifyClearLogstoreStorageWithOptions(ModifyClearLogstoreStorageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLogStore))
            {
                query["UserLogStore"] = request.UserLogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserProject))
            {
                query["UserProject"] = request.UserProject;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClearLogstoreStorage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClearLogstoreStorageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 修改日志容量
         *
         * @param request ModifyClearLogstoreStorageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClearLogstoreStorageResponse
         */
        public async Task<ModifyClearLogstoreStorageResponse> ModifyClearLogstoreStorageWithOptionsAsync(ModifyClearLogstoreStorageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserLogStore))
            {
                query["UserLogStore"] = request.UserLogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserProject))
            {
                query["UserProject"] = request.UserProject;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClearLogstoreStorage",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClearLogstoreStorageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 修改日志容量
         *
         * @param request ModifyClearLogstoreStorageRequest
         * @return ModifyClearLogstoreStorageResponse
         */
        public ModifyClearLogstoreStorageResponse ModifyClearLogstoreStorage(ModifyClearLogstoreStorageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyClearLogstoreStorageWithOptions(request, runtime);
        }

        /**
         * @summary 修改日志容量
         *
         * @param request ModifyClearLogstoreStorageRequest
         * @return ModifyClearLogstoreStorageResponse
         */
        public async Task<ModifyClearLogstoreStorageResponse> ModifyClearLogstoreStorageAsync(ModifyClearLogstoreStorageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyClearLogstoreStorageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the resource configurations of the Security Center agent.
         *
         * @param request ModifyClientConfSetupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientConfSetupResponse
         */
        public ModifyClientConfSetupResponse ModifyClientConfSetupWithOptions(ModifyClientConfSetupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyConfig))
            {
                query["StrategyConfig"] = request.StrategyConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTag))
            {
                query["StrategyTag"] = request.StrategyTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTagValue))
            {
                query["StrategyTagValue"] = request.StrategyTagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientConfSetup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientConfSetupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the resource configurations of the Security Center agent.
         *
         * @param request ModifyClientConfSetupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientConfSetupResponse
         */
        public async Task<ModifyClientConfSetupResponse> ModifyClientConfSetupWithOptionsAsync(ModifyClientConfSetupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyConfig))
            {
                query["StrategyConfig"] = request.StrategyConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTag))
            {
                query["StrategyTag"] = request.StrategyTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTagValue))
            {
                query["StrategyTagValue"] = request.StrategyTagValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientConfSetup",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientConfSetupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the resource configurations of the Security Center agent.
         *
         * @param request ModifyClientConfSetupRequest
         * @return ModifyClientConfSetupResponse
         */
        public ModifyClientConfSetupResponse ModifyClientConfSetup(ModifyClientConfSetupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyClientConfSetupWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the resource configurations of the Security Center agent.
         *
         * @param request ModifyClientConfSetupRequest
         * @return ModifyClientConfSetupResponse
         */
        public async Task<ModifyClientConfSetupResponse> ModifyClientConfSetupAsync(ModifyClientConfSetupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyClientConfSetupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies an agent configuration policy.
         *
         * @param request ModifyClientConfStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientConfStrategyResponse
         */
        public ModifyClientConfStrategyResponse ModifyClientConfStrategyWithOptions(ModifyClientConfStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagExt))
            {
                query["TagExt"] = request.TagExt;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagValue))
            {
                query["TagValue"] = request.TagValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientConfStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientConfStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies an agent configuration policy.
         *
         * @param request ModifyClientConfStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientConfStrategyResponse
         */
        public async Task<ModifyClientConfStrategyResponse> ModifyClientConfStrategyWithOptionsAsync(ModifyClientConfStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagExt))
            {
                query["TagExt"] = request.TagExt;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagValue))
            {
                query["TagValue"] = request.TagValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientConfStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientConfStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies an agent configuration policy.
         *
         * @param request ModifyClientConfStrategyRequest
         * @return ModifyClientConfStrategyResponse
         */
        public ModifyClientConfStrategyResponse ModifyClientConfStrategy(ModifyClientConfStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyClientConfStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Modifies an agent configuration policy.
         *
         * @param request ModifyClientConfStrategyRequest
         * @return ModifyClientConfStrategyResponse
         */
        public async Task<ModifyClientConfStrategyResponse> ModifyClientConfStrategyAsync(ModifyClientConfStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyClientConfStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a custom defense rule.
         *
         * @param request ModifyClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientUserDefineRuleResponse
         */
        public ModifyClientUserDefineRuleResponse ModifyClientUserDefineRuleWithOptions(ModifyClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionType))
            {
                query["ActionType"] = request.ActionType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Domain))
            {
                query["Domain"] = request.Domain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePath))
            {
                query["FilePath"] = request.FilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IP))
            {
                query["IP"] = request.IP;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5List))
            {
                query["Md5List"] = request.Md5List;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewFilePath))
            {
                query["NewFilePath"] = request.NewFilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentCmdline))
            {
                query["ParentCmdline"] = request.ParentCmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentProcPath))
            {
                query["ParentProcPath"] = request.ParentProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Platform))
            {
                query["Platform"] = request.Platform;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PortStr))
            {
                query["PortStr"] = request.PortStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPath))
            {
                query["ProcPath"] = request.ProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryContent))
            {
                query["RegistryContent"] = request.RegistryContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryKey))
            {
                query["RegistryKey"] = request.RegistryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientUserDefineRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom defense rule.
         *
         * @param request ModifyClientUserDefineRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClientUserDefineRuleResponse
         */
        public async Task<ModifyClientUserDefineRuleResponse> ModifyClientUserDefineRuleWithOptionsAsync(ModifyClientUserDefineRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionType))
            {
                query["ActionType"] = request.ActionType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Cmdline))
            {
                query["Cmdline"] = request.Cmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Domain))
            {
                query["Domain"] = request.Domain;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePath))
            {
                query["FilePath"] = request.FilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IP))
            {
                query["IP"] = request.IP;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Md5List))
            {
                query["Md5List"] = request.Md5List;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewFilePath))
            {
                query["NewFilePath"] = request.NewFilePath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentCmdline))
            {
                query["ParentCmdline"] = request.ParentCmdline;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParentProcPath))
            {
                query["ParentProcPath"] = request.ParentProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Platform))
            {
                query["Platform"] = request.Platform;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Port))
            {
                query["Port"] = request.Port;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PortStr))
            {
                query["PortStr"] = request.PortStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPath))
            {
                query["ProcPath"] = request.ProcPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryContent))
            {
                query["RegistryContent"] = request.RegistryContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryKey))
            {
                query["RegistryKey"] = request.RegistryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClientUserDefineRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClientUserDefineRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom defense rule.
         *
         * @param request ModifyClientUserDefineRuleRequest
         * @return ModifyClientUserDefineRuleResponse
         */
        public ModifyClientUserDefineRuleResponse ModifyClientUserDefineRule(ModifyClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyClientUserDefineRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a custom defense rule.
         *
         * @param request ModifyClientUserDefineRuleRequest
         * @return ModifyClientUserDefineRuleResponse
         */
        public async Task<ModifyClientUserDefineRuleResponse> ModifyClientUserDefineRuleAsync(ModifyClientUserDefineRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyClientUserDefineRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Fixes the blocking status of clusters whose status is Normal to be confirmed.
         *
         * @param request ModifyClusterCnnfStatusUserConfirmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClusterCnnfStatusUserConfirmResponse
         */
        public ModifyClusterCnnfStatusUserConfirmResponse ModifyClusterCnnfStatusUserConfirmWithOptions(ModifyClusterCnnfStatusUserConfirmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserConfirm))
            {
                query["UserConfirm"] = request.UserConfirm;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClusterCnnfStatusUserConfirm",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClusterCnnfStatusUserConfirmResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Fixes the blocking status of clusters whose status is Normal to be confirmed.
         *
         * @param request ModifyClusterCnnfStatusUserConfirmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyClusterCnnfStatusUserConfirmResponse
         */
        public async Task<ModifyClusterCnnfStatusUserConfirmResponse> ModifyClusterCnnfStatusUserConfirmWithOptionsAsync(ModifyClusterCnnfStatusUserConfirmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserConfirm))
            {
                query["UserConfirm"] = request.UserConfirm;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyClusterCnnfStatusUserConfirm",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyClusterCnnfStatusUserConfirmResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Fixes the blocking status of clusters whose status is Normal to be confirmed.
         *
         * @param request ModifyClusterCnnfStatusUserConfirmRequest
         * @return ModifyClusterCnnfStatusUserConfirmResponse
         */
        public ModifyClusterCnnfStatusUserConfirmResponse ModifyClusterCnnfStatusUserConfirm(ModifyClusterCnnfStatusUserConfirmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyClusterCnnfStatusUserConfirmWithOptions(request, runtime);
        }

        /**
         * @summary Fixes the blocking status of clusters whose status is Normal to be confirmed.
         *
         * @param request ModifyClusterCnnfStatusUserConfirmRequest
         * @return ModifyClusterCnnfStatusUserConfirmResponse
         */
        public async Task<ModifyClusterCnnfStatusUserConfirmResponse> ModifyClusterCnnfStatusUserConfirmAsync(ModifyClusterCnnfStatusUserConfirmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyClusterCnnfStatusUserConfirmWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the priority to fix vulnerabilities.
         *
         * @param request ModifyConcernNecessityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyConcernNecessityResponse
         */
        public ModifyConcernNecessityResponse ModifyConcernNecessityWithOptions(ModifyConcernNecessityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConcernNecessity))
            {
                query["ConcernNecessity"] = request.ConcernNecessity;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyConcernNecessity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyConcernNecessityResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the priority to fix vulnerabilities.
         *
         * @param request ModifyConcernNecessityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyConcernNecessityResponse
         */
        public async Task<ModifyConcernNecessityResponse> ModifyConcernNecessityWithOptionsAsync(ModifyConcernNecessityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConcernNecessity))
            {
                query["ConcernNecessity"] = request.ConcernNecessity;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyConcernNecessity",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyConcernNecessityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the priority to fix vulnerabilities.
         *
         * @param request ModifyConcernNecessityRequest
         * @return ModifyConcernNecessityResponse
         */
        public ModifyConcernNecessityResponse ModifyConcernNecessity(ModifyConcernNecessityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyConcernNecessityWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the priority to fix vulnerabilities.
         *
         * @param request ModifyConcernNecessityRequest
         * @return ModifyConcernNecessityResponse
         */
        public async Task<ModifyConcernNecessityResponse> ModifyConcernNecessityAsync(ModifyConcernNecessityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyConcernNecessityWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a rule for non-image program defense.
         *
         * @param tmpReq ModifyContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerDefenseRuleResponse
         */
        public ModifyContainerDefenseRuleResponse ModifyContainerDefenseRuleWithOptions(ModifyContainerDefenseRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyContainerDefenseRuleShrinkRequest request = new ModifyContainerDefenseRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Whitelist))
            {
                request.WhitelistShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Whitelist, "Whitelist", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scope))
            {
                query["Scope"] = request.Scope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhitelistShrink))
            {
                query["Whitelist"] = request.WhitelistShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a rule for non-image program defense.
         *
         * @param tmpReq ModifyContainerDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerDefenseRuleResponse
         */
        public async Task<ModifyContainerDefenseRuleResponse> ModifyContainerDefenseRuleWithOptionsAsync(ModifyContainerDefenseRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyContainerDefenseRuleShrinkRequest request = new ModifyContainerDefenseRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Whitelist))
            {
                request.WhitelistShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Whitelist, "Whitelist", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scope))
            {
                query["Scope"] = request.Scope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhitelistShrink))
            {
                query["Whitelist"] = request.WhitelistShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a rule for non-image program defense.
         *
         * @param request ModifyContainerDefenseRuleRequest
         * @return ModifyContainerDefenseRuleResponse
         */
        public ModifyContainerDefenseRuleResponse ModifyContainerDefenseRule(ModifyContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyContainerDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a rule for non-image program defense.
         *
         * @param request ModifyContainerDefenseRuleRequest
         * @return ModifyContainerDefenseRuleResponse
         */
        public async Task<ModifyContainerDefenseRuleResponse> ModifyContainerDefenseRuleAsync(ModifyContainerDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyContainerDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the status of non-image program defense rules.
         *
         * @param request ModifyContainerDefenseRuleSwitchRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerDefenseRuleSwitchResponse
         */
        public ModifyContainerDefenseRuleSwitchResponse ModifyContainerDefenseRuleSwitchWithOptions(ModifyContainerDefenseRuleSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerDefenseRuleSwitch",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerDefenseRuleSwitchResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the status of non-image program defense rules.
         *
         * @param request ModifyContainerDefenseRuleSwitchRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerDefenseRuleSwitchResponse
         */
        public async Task<ModifyContainerDefenseRuleSwitchResponse> ModifyContainerDefenseRuleSwitchWithOptionsAsync(ModifyContainerDefenseRuleSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerDefenseRuleSwitch",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerDefenseRuleSwitchResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the status of non-image program defense rules.
         *
         * @param request ModifyContainerDefenseRuleSwitchRequest
         * @return ModifyContainerDefenseRuleSwitchResponse
         */
        public ModifyContainerDefenseRuleSwitchResponse ModifyContainerDefenseRuleSwitch(ModifyContainerDefenseRuleSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyContainerDefenseRuleSwitchWithOptions(request, runtime);
        }

        /**
         * @summary Changes the status of non-image program defense rules.
         *
         * @param request ModifyContainerDefenseRuleSwitchRequest
         * @return ModifyContainerDefenseRuleSwitchResponse
         */
        public async Task<ModifyContainerDefenseRuleSwitchResponse> ModifyContainerDefenseRuleSwitchAsync(ModifyContainerDefenseRuleSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyContainerDefenseRuleSwitchWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the defense rule against container escapes.
         *
         * @param request ModifyContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerPluginRuleResponse
         */
        public ModifyContainerPluginRuleResponse ModifyContainerPluginRuleWithOptions(ModifyContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectedPolicy))
            {
                query["SelectedPolicy"] = request.SelectedPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteImages))
            {
                query["WhiteImages"] = request.WhiteImages;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerPluginRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the defense rule against container escapes.
         *
         * @param request ModifyContainerPluginRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerPluginRuleResponse
         */
        public async Task<ModifyContainerPluginRuleResponse> ModifyContainerPluginRuleWithOptionsAsync(ModifyContainerPluginRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleType))
            {
                query["RuleType"] = request.RuleType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectedPolicy))
            {
                query["SelectedPolicy"] = request.SelectedPolicy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteImages))
            {
                query["WhiteImages"] = request.WhiteImages;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerPluginRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerPluginRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the defense rule against container escapes.
         *
         * @param request ModifyContainerPluginRuleRequest
         * @return ModifyContainerPluginRuleResponse
         */
        public ModifyContainerPluginRuleResponse ModifyContainerPluginRule(ModifyContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyContainerPluginRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the defense rule against container escapes.
         *
         * @param request ModifyContainerPluginRuleRequest
         * @return ModifyContainerPluginRuleResponse
         */
        public async Task<ModifyContainerPluginRuleResponse> ModifyContainerPluginRuleAsync(ModifyContainerPluginRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyContainerPluginRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of vulnerability scan for a running container.
         *
         * @param request ModifyContainerScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerScanConfigResponse
         */
        public ModifyContainerScanConfigResponse ModifyContainerScanConfigWithOptions(ModifyContainerScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppNames))
            {
                query["AppNames"] = request.AppNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of vulnerability scan for a running container.
         *
         * @param request ModifyContainerScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyContainerScanConfigResponse
         */
        public async Task<ModifyContainerScanConfigResponse> ModifyContainerScanConfigWithOptionsAsync(ModifyContainerScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppNames))
            {
                query["AppNames"] = request.AppNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyContainerScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyContainerScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of vulnerability scan for a running container.
         *
         * @param request ModifyContainerScanConfigRequest
         * @return ModifyContainerScanConfigResponse
         */
        public ModifyContainerScanConfigResponse ModifyContainerScanConfig(ModifyContainerScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyContainerScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of vulnerability scan for a running container.
         *
         * @param request ModifyContainerScanConfigRequest
         * @return ModifyContainerScanConfigResponse
         */
        public async Task<ModifyContainerScanConfigResponse> ModifyContainerScanConfigAsync(ModifyContainerScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyContainerScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds vulnerabilities to the whitelist. After you add the vulnerabilities to the whitelist, Security Center no longer generates alerts for the vulnerabilities.
         *
         * @param request ModifyCreateVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCreateVulWhitelistResponse
         */
        public ModifyCreateVulWhitelistResponse ModifyCreateVulWhitelistWithOptions(ModifyCreateVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCreateVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCreateVulWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds vulnerabilities to the whitelist. After you add the vulnerabilities to the whitelist, Security Center no longer generates alerts for the vulnerabilities.
         *
         * @param request ModifyCreateVulWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCreateVulWhitelistResponse
         */
        public async Task<ModifyCreateVulWhitelistResponse> ModifyCreateVulWhitelistWithOptionsAsync(ModifyCreateVulWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Whitelist))
            {
                query["Whitelist"] = request.Whitelist;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCreateVulWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCreateVulWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds vulnerabilities to the whitelist. After you add the vulnerabilities to the whitelist, Security Center no longer generates alerts for the vulnerabilities.
         *
         * @param request ModifyCreateVulWhitelistRequest
         * @return ModifyCreateVulWhitelistResponse
         */
        public ModifyCreateVulWhitelistResponse ModifyCreateVulWhitelist(ModifyCreateVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCreateVulWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Adds vulnerabilities to the whitelist. After you add the vulnerabilities to the whitelist, Security Center no longer generates alerts for the vulnerabilities.
         *
         * @param request ModifyCreateVulWhitelistRequest
         * @return ModifyCreateVulWhitelistResponse
         */
        public async Task<ModifyCreateVulWhitelistResponse> ModifyCreateVulWhitelistAsync(ModifyCreateVulWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCreateVulWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a custom IP address blocking policy.
         *
         * @param request ModifyCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCustomBlockRecordResponse
         */
        public ModifyCustomBlockRecordResponse ModifyCustomBlockRecordWithOptions(ModifyCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireTime))
            {
                query["ExpireTime"] = request.ExpireTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCustomBlockRecordResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom IP address blocking policy.
         *
         * @param request ModifyCustomBlockRecordRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCustomBlockRecordResponse
         */
        public async Task<ModifyCustomBlockRecordResponse> ModifyCustomBlockRecordWithOptionsAsync(ModifyCustomBlockRecordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BlockIp))
            {
                query["BlockIp"] = request.BlockIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Bound))
            {
                query["Bound"] = request.Bound;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExpireTime))
            {
                query["ExpireTime"] = request.ExpireTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCustomBlockRecord",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCustomBlockRecordResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom IP address blocking policy.
         *
         * @param request ModifyCustomBlockRecordRequest
         * @return ModifyCustomBlockRecordResponse
         */
        public ModifyCustomBlockRecordResponse ModifyCustomBlockRecord(ModifyCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCustomBlockRecordWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a custom IP address blocking policy.
         *
         * @param request ModifyCustomBlockRecordRequest
         * @return ModifyCustomBlockRecordResponse
         */
        public async Task<ModifyCustomBlockRecordResponse> ModifyCustomBlockRecordAsync(ModifyCustomBlockRecordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCustomBlockRecordWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the execution cycle of periodic tasks, including image scan, urgent vulnerability scan, and virus detection tasks.
         *
         * @param request ModifyCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCycleTaskResponse
         */
        public ModifyCycleTaskResponse ModifyCycleTaskWithOptions(ModifyCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirstDateStr))
            {
                query["FirstDateStr"] = request.FirstDateStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalPeriod))
            {
                query["IntervalPeriod"] = request.IntervalPeriod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodUnit))
            {
                query["PeriodUnit"] = request.PeriodUnit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetEndTime))
            {
                query["TargetEndTime"] = request.TargetEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetStartTime))
            {
                query["TargetStartTime"] = request.TargetStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCycleTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the execution cycle of periodic tasks, including image scan, urgent vulnerability scan, and virus detection tasks.
         *
         * @param request ModifyCycleTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyCycleTaskResponse
         */
        public async Task<ModifyCycleTaskResponse> ModifyCycleTaskWithOptionsAsync(ModifyCycleTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirstDateStr))
            {
                query["FirstDateStr"] = request.FirstDateStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalPeriod))
            {
                query["IntervalPeriod"] = request.IntervalPeriod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodUnit))
            {
                query["PeriodUnit"] = request.PeriodUnit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetEndTime))
            {
                query["TargetEndTime"] = request.TargetEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetStartTime))
            {
                query["TargetStartTime"] = request.TargetStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyCycleTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyCycleTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the execution cycle of periodic tasks, including image scan, urgent vulnerability scan, and virus detection tasks.
         *
         * @param request ModifyCycleTaskRequest
         * @return ModifyCycleTaskResponse
         */
        public ModifyCycleTaskResponse ModifyCycleTask(ModifyCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyCycleTaskWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the execution cycle of periodic tasks, including image scan, urgent vulnerability scan, and virus detection tasks.
         *
         * @param request ModifyCycleTaskRequest
         * @return ModifyCycleTaskResponse
         */
        public async Task<ModifyCycleTaskResponse> ModifyCycleTaskAsync(ModifyCycleTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyCycleTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Runs a scan task for urgent vulnerabilities.
         *
         * @param request ModifyEmgVulSubmitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyEmgVulSubmitResponse
         */
        public ModifyEmgVulSubmitResponse ModifyEmgVulSubmitWithOptions(ModifyEmgVulSubmitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserAgreement))
            {
                query["UserAgreement"] = request.UserAgreement;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyEmgVulSubmit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyEmgVulSubmitResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Runs a scan task for urgent vulnerabilities.
         *
         * @param request ModifyEmgVulSubmitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyEmgVulSubmitResponse
         */
        public async Task<ModifyEmgVulSubmitResponse> ModifyEmgVulSubmitWithOptionsAsync(ModifyEmgVulSubmitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserAgreement))
            {
                query["UserAgreement"] = request.UserAgreement;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyEmgVulSubmit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyEmgVulSubmitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Runs a scan task for urgent vulnerabilities.
         *
         * @param request ModifyEmgVulSubmitRequest
         * @return ModifyEmgVulSubmitResponse
         */
        public ModifyEmgVulSubmitResponse ModifyEmgVulSubmit(ModifyEmgVulSubmitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyEmgVulSubmitWithOptions(request, runtime);
        }

        /**
         * @summary Runs a scan task for urgent vulnerabilities.
         *
         * @param request ModifyEmgVulSubmitRequest
         * @return ModifyEmgVulSubmitResponse
         */
        public async Task<ModifyEmgVulSubmitResponse> ModifyEmgVulSubmitAsync(ModifyEmgVulSubmitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyEmgVulSubmitWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the name of a server group.
         *
         * @param request ModifyGroupPropertyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyGroupPropertyResponse
         */
        public ModifyGroupPropertyResponse ModifyGroupPropertyWithOptions(ModifyGroupPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Data))
            {
                query["Data"] = request.Data;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyGroupProperty",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyGroupPropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the name of a server group.
         *
         * @param request ModifyGroupPropertyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyGroupPropertyResponse
         */
        public async Task<ModifyGroupPropertyResponse> ModifyGroupPropertyWithOptionsAsync(ModifyGroupPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Data))
            {
                query["Data"] = request.Data;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyGroupProperty",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyGroupPropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the name of a server group.
         *
         * @param request ModifyGroupPropertyRequest
         * @return ModifyGroupPropertyResponse
         */
        public ModifyGroupPropertyResponse ModifyGroupProperty(ModifyGroupPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyGroupPropertyWithOptions(request, runtime);
        }

        /**
         * @summary Changes the name of a server group.
         *
         * @param request ModifyGroupPropertyRequest
         * @return ModifyGroupPropertyResponse
         */
        public async Task<ModifyGroupPropertyResponse> ModifyGroupPropertyAsync(ModifyGroupPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyGroupPropertyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of a scheduled image fix.
         *
         * @param request ModifyImageFixCycleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyImageFixCycleConfigResponse
         */
        public ModifyImageFixCycleConfigResponse ModifyImageFixCycleConfigWithOptions(ModifyImageFixCycleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixCycle))
            {
                body["ImageFixCycle"] = request.ImageFixCycle;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixSwitch))
            {
                body["ImageFixSwitch"] = request.ImageFixSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixTarget))
            {
                body["ImageFixTarget"] = request.ImageFixTarget;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTimeRange))
            {
                body["ImageTimeRange"] = request.ImageTimeRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyImageFixCycleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyImageFixCycleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of a scheduled image fix.
         *
         * @param request ModifyImageFixCycleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyImageFixCycleConfigResponse
         */
        public async Task<ModifyImageFixCycleConfigResponse> ModifyImageFixCycleConfigWithOptionsAsync(ModifyImageFixCycleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixCycle))
            {
                body["ImageFixCycle"] = request.ImageFixCycle;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixSwitch))
            {
                body["ImageFixSwitch"] = request.ImageFixSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageFixTarget))
            {
                body["ImageFixTarget"] = request.ImageFixTarget;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageTimeRange))
            {
                body["ImageTimeRange"] = request.ImageTimeRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyImageFixCycleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyImageFixCycleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of a scheduled image fix.
         *
         * @param request ModifyImageFixCycleConfigRequest
         * @return ModifyImageFixCycleConfigResponse
         */
        public ModifyImageFixCycleConfigResponse ModifyImageFixCycleConfig(ModifyImageFixCycleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyImageFixCycleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of a scheduled image fix.
         *
         * @param request ModifyImageFixCycleConfigRequest
         * @return ModifyImageFixCycleConfigResponse
         */
        public async Task<ModifyImageFixCycleConfigResponse> ModifyImageFixCycleConfigAsync(ModifyImageFixCycleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyImageFixCycleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the transfer time of an image repository.
         *
         * @param request ModifyImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyImageRegistryResponse
         */
        public ModifyImageRegistryResponse ModifyImageRegistryWithOptions(ModifyImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                body["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                body["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                body["UserName"] = request.UserName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyImageRegistryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the transfer time of an image repository.
         *
         * @param request ModifyImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyImageRegistryResponse
         */
        public async Task<ModifyImageRegistryResponse> ModifyImageRegistryWithOptionsAsync(ModifyImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                body["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TransPerHour))
            {
                body["TransPerHour"] = request.TransPerHour;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserName))
            {
                body["UserName"] = request.UserName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyImageRegistryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the transfer time of an image repository.
         *
         * @param request ModifyImageRegistryRequest
         * @return ModifyImageRegistryResponse
         */
        public ModifyImageRegistryResponse ModifyImageRegistry(ModifyImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyImageRegistryWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the transfer time of an image repository.
         *
         * @param request ModifyImageRegistryRequest
         * @return ModifyImageRegistryResponse
         */
        public async Task<ModifyImageRegistryResponse> ModifyImageRegistryAsync(ModifyImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyImageRegistryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the defense rule against brute-force attacks that is applied to a specified server.
         *
         * @param request ModifyInstanceAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInstanceAntiBruteForceRuleResponse
         */
        public ModifyInstanceAntiBruteForceRuleResponse ModifyInstanceAntiBruteForceRuleWithOptions(ModifyInstanceAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewRuleId))
            {
                query["NewRuleId"] = request.NewRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInstanceAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInstanceAntiBruteForceRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the defense rule against brute-force attacks that is applied to a specified server.
         *
         * @param request ModifyInstanceAntiBruteForceRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInstanceAntiBruteForceRuleResponse
         */
        public async Task<ModifyInstanceAntiBruteForceRuleResponse> ModifyInstanceAntiBruteForceRuleWithOptionsAsync(ModifyInstanceAntiBruteForceRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewRuleId))
            {
                query["NewRuleId"] = request.NewRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInstanceAntiBruteForceRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInstanceAntiBruteForceRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the defense rule against brute-force attacks that is applied to a specified server.
         *
         * @param request ModifyInstanceAntiBruteForceRuleRequest
         * @return ModifyInstanceAntiBruteForceRuleResponse
         */
        public ModifyInstanceAntiBruteForceRuleResponse ModifyInstanceAntiBruteForceRule(ModifyInstanceAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyInstanceAntiBruteForceRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the defense rule against brute-force attacks that is applied to a specified server.
         *
         * @param request ModifyInstanceAntiBruteForceRuleRequest
         * @return ModifyInstanceAntiBruteForceRuleResponse
         */
        public async Task<ModifyInstanceAntiBruteForceRuleResponse> ModifyInstanceAntiBruteForceRuleAsync(ModifyInstanceAntiBruteForceRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyInstanceAntiBruteForceRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a proactive defense rule for containers.
         *
         * @param tmpReq ModifyInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionRuleResponse
         */
        public ModifyInterceptionRuleResponse ModifyInterceptionRuleWithOptions(ModifyInterceptionRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyInterceptionRuleShrinkRequest request = new ModifyInterceptionRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstTarget))
            {
                request.DstTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstTarget, "DstTarget", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcTarget))
            {
                request.SrcTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcTarget, "SrcTarget", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTargetShrink))
            {
                query["DstTarget"] = request.DstTargetShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptType))
            {
                query["InterceptType"] = request.InterceptType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderIndex))
            {
                query["OrderIndex"] = request.OrderIndex;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTargetShrink))
            {
                query["SrcTarget"] = request.SrcTargetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a proactive defense rule for containers.
         *
         * @param tmpReq ModifyInterceptionRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionRuleResponse
         */
        public async Task<ModifyInterceptionRuleResponse> ModifyInterceptionRuleWithOptionsAsync(ModifyInterceptionRuleRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyInterceptionRuleShrinkRequest request = new ModifyInterceptionRuleShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DstTarget))
            {
                request.DstTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DstTarget, "DstTarget", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SrcTarget))
            {
                request.SrcTargetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SrcTarget, "SrcTarget", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTargetShrink))
            {
                query["DstTarget"] = request.DstTargetShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InterceptType))
            {
                query["InterceptType"] = request.InterceptType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderIndex))
            {
                query["OrderIndex"] = request.OrderIndex;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTargetShrink))
            {
                query["SrcTarget"] = request.SrcTargetShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleRequest
         * @return ModifyInterceptionRuleResponse
         */
        public ModifyInterceptionRuleResponse ModifyInterceptionRule(ModifyInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyInterceptionRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleRequest
         * @return ModifyInterceptionRuleResponse
         */
        public async Task<ModifyInterceptionRuleResponse> ModifyInterceptionRuleAsync(ModifyInterceptionRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyInterceptionRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleSwitchRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionRuleSwitchResponse
         */
        public ModifyInterceptionRuleSwitchResponse ModifyInterceptionRuleSwitchWithOptions(ModifyInterceptionRuleSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionRuleSwitch",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionRuleSwitchResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleSwitchRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionRuleSwitchResponse
         */
        public async Task<ModifyInterceptionRuleSwitchResponse> ModifyInterceptionRuleSwitchWithOptionsAsync(ModifyInterceptionRuleSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleIds))
            {
                query["RuleIds"] = request.RuleIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleSwitch))
            {
                query["RuleSwitch"] = request.RuleSwitch;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionRuleSwitch",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionRuleSwitchResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleSwitchRequest
         * @return ModifyInterceptionRuleSwitchResponse
         */
        public ModifyInterceptionRuleSwitchResponse ModifyInterceptionRuleSwitch(ModifyInterceptionRuleSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyInterceptionRuleSwitchWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables a proactive defense rule for containers.
         *
         * @param request ModifyInterceptionRuleSwitchRequest
         * @return ModifyInterceptionRuleSwitchResponse
         */
        public async Task<ModifyInterceptionRuleSwitchResponse> ModifyInterceptionRuleSwitchAsync(ModifyInterceptionRuleSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyInterceptionRuleSwitchWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the information about a network object of the container firewall feature.
         *
         * @param request ModifyInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionTargetResponse
         */
        public ModifyInterceptionTargetResponse ModifyInterceptionTargetWithOptions(ModifyInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about a network object of the container firewall feature.
         *
         * @param request ModifyInterceptionTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyInterceptionTargetResponse
         */
        public async Task<ModifyInterceptionTargetResponse> ModifyInterceptionTargetWithOptionsAsync(ModifyInterceptionTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageList))
            {
                query["ImageList"] = request.ImageList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetId))
            {
                query["TargetId"] = request.TargetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetName))
            {
                query["TargetName"] = request.TargetName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyInterceptionTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyInterceptionTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about a network object of the container firewall feature.
         *
         * @param request ModifyInterceptionTargetRequest
         * @return ModifyInterceptionTargetResponse
         */
        public ModifyInterceptionTargetResponse ModifyInterceptionTarget(ModifyInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyInterceptionTargetWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the information about a network object of the container firewall feature.
         *
         * @param request ModifyInterceptionTargetRequest
         * @return ModifyInterceptionTargetResponse
         */
        public async Task<ModifyInterceptionTargetResponse> ModifyInterceptionTargetAsync(ModifyInterceptionTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyInterceptionTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables the log analysis feature.
         *
         * @param request ModifyLogMetaStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLogMetaStatusResponse
         */
        public ModifyLogMetaStatusResponse ModifyLogMetaStatusWithOptions(ModifyLogMetaStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStore))
            {
                query["LogStore"] = request.LogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Project))
            {
                query["Project"] = request.Project;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLogMetaStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLogMetaStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the log analysis feature.
         *
         * @param request ModifyLogMetaStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLogMetaStatusResponse
         */
        public async Task<ModifyLogMetaStatusResponse> ModifyLogMetaStatusWithOptionsAsync(ModifyLogMetaStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LogStore))
            {
                query["LogStore"] = request.LogStore;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Project))
            {
                query["Project"] = request.Project;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLogMetaStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLogMetaStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the log analysis feature.
         *
         * @param request ModifyLogMetaStatusRequest
         * @return ModifyLogMetaStatusResponse
         */
        public ModifyLogMetaStatusResponse ModifyLogMetaStatus(ModifyLogMetaStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyLogMetaStatusWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables the log analysis feature.
         *
         * @param request ModifyLogMetaStatusRequest
         * @return ModifyLogMetaStatusResponse
         */
        public async Task<ModifyLogMetaStatusResponse> ModifyLogMetaStatusAsync(ModifyLogMetaStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyLogMetaStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the logon configuration for a specified asset.
         *
         * @param request ModifyLoginBaseConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLoginBaseConfigResponse
         */
        public ModifyLoginBaseConfigResponse ModifyLoginBaseConfigWithOptions(ModifyLoginBaseConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLoginBaseConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLoginBaseConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the logon configuration for a specified asset.
         *
         * @param request ModifyLoginBaseConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLoginBaseConfigResponse
         */
        public async Task<ModifyLoginBaseConfigResponse> ModifyLoginBaseConfigWithOptionsAsync(ModifyLoginBaseConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLoginBaseConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLoginBaseConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the logon configuration for a specified asset.
         *
         * @param request ModifyLoginBaseConfigRequest
         * @return ModifyLoginBaseConfigResponse
         */
        public ModifyLoginBaseConfigResponse ModifyLoginBaseConfig(ModifyLoginBaseConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyLoginBaseConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the logon configuration for a specified asset.
         *
         * @param request ModifyLoginBaseConfigRequest
         * @return ModifyLoginBaseConfigResponse
         */
        public async Task<ModifyLoginBaseConfigResponse> ModifyLoginBaseConfigAsync(ModifyLoginBaseConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyLoginBaseConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables the logon security settings for an asset.
         *
         * @param request ModifyLoginSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLoginSwitchConfigResponse
         */
        public ModifyLoginSwitchConfigResponse ModifyLoginSwitchConfigWithOptions(ModifyLoginSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Item))
            {
                query["Item"] = request.Item;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLoginSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLoginSwitchConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the logon security settings for an asset.
         *
         * @param request ModifyLoginSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyLoginSwitchConfigResponse
         */
        public async Task<ModifyLoginSwitchConfigResponse> ModifyLoginSwitchConfigWithOptionsAsync(ModifyLoginSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Item))
            {
                query["Item"] = request.Item;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyLoginSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyLoginSwitchConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the logon security settings for an asset.
         *
         * @param request ModifyLoginSwitchConfigRequest
         * @return ModifyLoginSwitchConfigResponse
         */
        public ModifyLoginSwitchConfigResponse ModifyLoginSwitchConfig(ModifyLoginSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyLoginSwitchConfigWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables the logon security settings for an asset.
         *
         * @param request ModifyLoginSwitchConfigRequest
         * @return ModifyLoginSwitchConfigResponse
         */
        public async Task<ModifyLoginSwitchConfigResponse> ModifyLoginSwitchConfigAsync(ModifyLoginSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyLoginSwitchConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies notification settings.
         *
         * @param request ModifyNoticeConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyNoticeConfigResponse
         */
        public ModifyNoticeConfigResponse ModifyNoticeConfigWithOptions(ModifyNoticeConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Project))
            {
                query["Project"] = request.Project;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Route))
            {
                query["Route"] = request.Route;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeLimit))
            {
                query["TimeLimit"] = request.TimeLimit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyNoticeConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyNoticeConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies notification settings.
         *
         * @param request ModifyNoticeConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyNoticeConfigResponse
         */
        public async Task<ModifyNoticeConfigResponse> ModifyNoticeConfigWithOptionsAsync(ModifyNoticeConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Project))
            {
                query["Project"] = request.Project;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Route))
            {
                query["Route"] = request.Route;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeLimit))
            {
                query["TimeLimit"] = request.TimeLimit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyNoticeConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyNoticeConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies notification settings.
         *
         * @param request ModifyNoticeConfigRequest
         * @return ModifyNoticeConfigResponse
         */
        public ModifyNoticeConfigResponse ModifyNoticeConfig(ModifyNoticeConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyNoticeConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies notification settings.
         *
         * @param request ModifyNoticeConfigRequest
         * @return ModifyNoticeConfigResponse
         */
        public async Task<ModifyNoticeConfigResponse> ModifyNoticeConfigAsync(ModifyNoticeConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyNoticeConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Activates Simple Log Service.
         *
         * @description **Prerequisites** [Simple Log Service](https://www.alibabacloud.com/help/en/log-service/latest/billable-items) is activated. A service-linked role for Security Center is created, and Security Center is authorized to access cloud resources. You can call the [CreateServiceLinkedRole](~~CreateServiceLinkedRole~~) operation to create a service-linked role for Security Center and authorize Security Center to access cloud resources. **Scenarios** Before you use the log analysis feature of Security Center, you must call the [ModifyOpenLogShipper](~~ModifyOpenLogShipper~~) operation to activate Simple Log Service.
         *
         * @param request ModifyOpenLogShipperRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyOpenLogShipperResponse
         */
        public ModifyOpenLogShipperResponse ModifyOpenLogShipperWithOptions(ModifyOpenLogShipperRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOpenLogShipper",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOpenLogShipperResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Activates Simple Log Service.
         *
         * @description **Prerequisites** [Simple Log Service](https://www.alibabacloud.com/help/en/log-service/latest/billable-items) is activated. A service-linked role for Security Center is created, and Security Center is authorized to access cloud resources. You can call the [CreateServiceLinkedRole](~~CreateServiceLinkedRole~~) operation to create a service-linked role for Security Center and authorize Security Center to access cloud resources. **Scenarios** Before you use the log analysis feature of Security Center, you must call the [ModifyOpenLogShipper](~~ModifyOpenLogShipper~~) operation to activate Simple Log Service.
         *
         * @param request ModifyOpenLogShipperRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyOpenLogShipperResponse
         */
        public async Task<ModifyOpenLogShipperResponse> ModifyOpenLogShipperWithOptionsAsync(ModifyOpenLogShipperRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceDirectoryAccountId))
            {
                query["ResourceDirectoryAccountId"] = request.ResourceDirectoryAccountId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOpenLogShipper",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOpenLogShipperResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Activates Simple Log Service.
         *
         * @description **Prerequisites** [Simple Log Service](https://www.alibabacloud.com/help/en/log-service/latest/billable-items) is activated. A service-linked role for Security Center is created, and Security Center is authorized to access cloud resources. You can call the [CreateServiceLinkedRole](~~CreateServiceLinkedRole~~) operation to create a service-linked role for Security Center and authorize Security Center to access cloud resources. **Scenarios** Before you use the log analysis feature of Security Center, you must call the [ModifyOpenLogShipper](~~ModifyOpenLogShipper~~) operation to activate Simple Log Service.
         *
         * @param request ModifyOpenLogShipperRequest
         * @return ModifyOpenLogShipperResponse
         */
        public ModifyOpenLogShipperResponse ModifyOpenLogShipper(ModifyOpenLogShipperRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyOpenLogShipperWithOptions(request, runtime);
        }

        /**
         * @summary Activates Simple Log Service.
         *
         * @description **Prerequisites** [Simple Log Service](https://www.alibabacloud.com/help/en/log-service/latest/billable-items) is activated. A service-linked role for Security Center is created, and Security Center is authorized to access cloud resources. You can call the [CreateServiceLinkedRole](~~CreateServiceLinkedRole~~) operation to create a service-linked role for Security Center and authorize Security Center to access cloud resources. **Scenarios** Before you use the log analysis feature of Security Center, you must call the [ModifyOpenLogShipper](~~ModifyOpenLogShipper~~) operation to activate Simple Log Service.
         *
         * @param request ModifyOpenLogShipperRequest
         * @return ModifyOpenLogShipperResponse
         */
        public async Task<ModifyOpenLogShipperResponse> ModifyOpenLogShipperAsync(ModifyOpenLogShipperRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyOpenLogShipperWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles detected vulnerabilities. You can fix, check, or ignore the vulnerabilities.
         *
         * @param request ModifyOperateVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyOperateVulResponse
         */
        public ModifyOperateVulResponse ModifyOperateVulWithOptions(ModifyOperateVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOperateVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOperateVulResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles detected vulnerabilities. You can fix, check, or ignore the vulnerabilities.
         *
         * @param request ModifyOperateVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyOperateVulResponse
         */
        public async Task<ModifyOperateVulResponse> ModifyOperateVulWithOptionsAsync(ModifyOperateVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOperateVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOperateVulResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles detected vulnerabilities. You can fix, check, or ignore the vulnerabilities.
         *
         * @param request ModifyOperateVulRequest
         * @return ModifyOperateVulResponse
         */
        public ModifyOperateVulResponse ModifyOperateVul(ModifyOperateVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyOperateVulWithOptions(request, runtime);
        }

        /**
         * @summary Handles detected vulnerabilities. You can fix, check, or ignore the vulnerabilities.
         *
         * @param request ModifyOperateVulRequest
         * @return ModifyOperateVulResponse
         */
        public async Task<ModifyOperateVulResponse> ModifyOperateVulAsync(ModifyOperateVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyOperateVulWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The new collection frequency of asset fingerprints. Valid values:
         * *   **0**: disabled, which indicates that the asset fingerprints are not automatically or periodically collected.
         * *   **1**: collects asset fingerprints once an hour.
         * *   **3**: collects asset fingerprints once every 3 hours.
         * *   **12**: collects asset fingerprints once every 12 hours.
         * *   **24**: collects asset fingerprints once a day.
         * *   **168**: collects asset fingerprints once every 7 days.
         *
         * @param request ModifyPropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyPropertyScheduleConfigResponse
         */
        public ModifyPropertyScheduleConfigResponse ModifyPropertyScheduleConfigWithOptions(ModifyPropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleTime))
            {
                query["ScheduleTime"] = request.ScheduleTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyPropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyPropertyScheduleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The new collection frequency of asset fingerprints. Valid values:
         * *   **0**: disabled, which indicates that the asset fingerprints are not automatically or periodically collected.
         * *   **1**: collects asset fingerprints once an hour.
         * *   **3**: collects asset fingerprints once every 3 hours.
         * *   **12**: collects asset fingerprints once every 12 hours.
         * *   **24**: collects asset fingerprints once a day.
         * *   **168**: collects asset fingerprints once every 7 days.
         *
         * @param request ModifyPropertyScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyPropertyScheduleConfigResponse
         */
        public async Task<ModifyPropertyScheduleConfigResponse> ModifyPropertyScheduleConfigWithOptionsAsync(ModifyPropertyScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleTime))
            {
                query["ScheduleTime"] = request.ScheduleTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyPropertyScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyPropertyScheduleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The new collection frequency of asset fingerprints. Valid values:
         * *   **0**: disabled, which indicates that the asset fingerprints are not automatically or periodically collected.
         * *   **1**: collects asset fingerprints once an hour.
         * *   **3**: collects asset fingerprints once every 3 hours.
         * *   **12**: collects asset fingerprints once every 12 hours.
         * *   **24**: collects asset fingerprints once a day.
         * *   **168**: collects asset fingerprints once every 7 days.
         *
         * @param request ModifyPropertyScheduleConfigRequest
         * @return ModifyPropertyScheduleConfigResponse
         */
        public ModifyPropertyScheduleConfigResponse ModifyPropertyScheduleConfig(ModifyPropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyPropertyScheduleConfigWithOptions(request, runtime);
        }

        /**
         * @summary The new collection frequency of asset fingerprints. Valid values:
         * *   **0**: disabled, which indicates that the asset fingerprints are not automatically or periodically collected.
         * *   **1**: collects asset fingerprints once an hour.
         * *   **3**: collects asset fingerprints once every 3 hours.
         * *   **12**: collects asset fingerprints once every 12 hours.
         * *   **24**: collects asset fingerprints once a day.
         * *   **168**: collects asset fingerprints once every 7 days.
         *
         * @param request ModifyPropertyScheduleConfigRequest
         * @return ModifyPropertyScheduleConfigResponse
         */
        public async Task<ModifyPropertyScheduleConfigResponse> ModifyPropertyScheduleConfigAsync(ModifyPropertyScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyPropertyScheduleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Performs security check tasks on servers with a few clicks.
         *
         * @param request ModifyPushAllTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyPushAllTaskResponse
         */
        public ModifyPushAllTaskResponse ModifyPushAllTaskWithOptions(ModifyPushAllTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tasks))
            {
                query["Tasks"] = request.Tasks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyPushAllTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyPushAllTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Performs security check tasks on servers with a few clicks.
         *
         * @param request ModifyPushAllTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyPushAllTaskResponse
         */
        public async Task<ModifyPushAllTaskResponse> ModifyPushAllTaskWithOptionsAsync(ModifyPushAllTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tasks))
            {
                query["Tasks"] = request.Tasks;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyPushAllTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyPushAllTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Performs security check tasks on servers with a few clicks.
         *
         * @param request ModifyPushAllTaskRequest
         * @return ModifyPushAllTaskResponse
         */
        public ModifyPushAllTaskResponse ModifyPushAllTask(ModifyPushAllTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyPushAllTaskWithOptions(request, runtime);
        }

        /**
         * @summary Performs security check tasks on servers with a few clicks.
         *
         * @param request ModifyPushAllTaskRequest
         * @return ModifyPushAllTaskResponse
         */
        public async Task<ModifyPushAllTaskResponse> ModifyPushAllTaskAsync(ModifyPushAllTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyPushAllTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Refreshes the list of processes that are associated with a Linux software vulnerability.
         *
         * @param request ModifyRefreshProcessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRefreshProcessInfoResponse
         */
        public ModifyRefreshProcessInfoResponse ModifyRefreshProcessInfoWithOptions(ModifyRefreshProcessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRefreshProcessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRefreshProcessInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Refreshes the list of processes that are associated with a Linux software vulnerability.
         *
         * @param request ModifyRefreshProcessInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRefreshProcessInfoResponse
         */
        public async Task<ModifyRefreshProcessInfoResponse> ModifyRefreshProcessInfoWithOptionsAsync(ModifyRefreshProcessInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRefreshProcessInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRefreshProcessInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Refreshes the list of processes that are associated with a Linux software vulnerability.
         *
         * @param request ModifyRefreshProcessInfoRequest
         * @return ModifyRefreshProcessInfoResponse
         */
        public ModifyRefreshProcessInfoResponse ModifyRefreshProcessInfo(ModifyRefreshProcessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyRefreshProcessInfoWithOptions(request, runtime);
        }

        /**
         * @summary Refreshes the list of processes that are associated with a Linux software vulnerability.
         *
         * @param request ModifyRefreshProcessInfoRequest
         * @return ModifyRefreshProcessInfoResponse
         */
        public async Task<ModifyRefreshProcessInfoResponse> ModifyRefreshProcessInfoAsync(ModifyRefreshProcessInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyRefreshProcessInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifyRiskCheckStatus is deprecated
         *
         * @summary Changes the status of a check item in the results of a check task. You can ignore or cancel ignoring a check item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a check item**, use the AddCheckResultWhiteList operation.
         * \\-To **cancel ignoring a check item**, use the RemoveCheckResultWhiteList operation.
         *
         * @param request ModifyRiskCheckStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRiskCheckStatusResponse
         */
        // Deprecated
        public ModifyRiskCheckStatusResponse ModifyRiskCheckStatusWithOptions(ModifyRiskCheckStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemId))
            {
                query["ItemId"] = request.ItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRiskCheckStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRiskCheckStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifyRiskCheckStatus is deprecated
         *
         * @summary Changes the status of a check item in the results of a check task. You can ignore or cancel ignoring a check item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a check item**, use the AddCheckResultWhiteList operation.
         * \\-To **cancel ignoring a check item**, use the RemoveCheckResultWhiteList operation.
         *
         * @param request ModifyRiskCheckStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRiskCheckStatusResponse
         */
        // Deprecated
        public async Task<ModifyRiskCheckStatusResponse> ModifyRiskCheckStatusWithOptionsAsync(ModifyRiskCheckStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemId))
            {
                query["ItemId"] = request.ItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRiskCheckStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRiskCheckStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifyRiskCheckStatus is deprecated
         *
         * @summary Changes the status of a check item in the results of a check task. You can ignore or cancel ignoring a check item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a check item**, use the AddCheckResultWhiteList operation.
         * \\-To **cancel ignoring a check item**, use the RemoveCheckResultWhiteList operation.
         *
         * @param request ModifyRiskCheckStatusRequest
         * @return ModifyRiskCheckStatusResponse
         */
        // Deprecated
        public ModifyRiskCheckStatusResponse ModifyRiskCheckStatus(ModifyRiskCheckStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyRiskCheckStatusWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifyRiskCheckStatus is deprecated
         *
         * @summary Changes the status of a check item in the results of a check task. You can ignore or cancel ignoring a check item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a check item**, use the AddCheckResultWhiteList operation.
         * \\-To **cancel ignoring a check item**, use the RemoveCheckResultWhiteList operation.
         *
         * @param request ModifyRiskCheckStatusRequest
         * @return ModifyRiskCheckStatusResponse
         */
        // Deprecated
        public async Task<ModifyRiskCheckStatusResponse> ModifyRiskCheckStatusAsync(ModifyRiskCheckStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyRiskCheckStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifyRiskSingleResultStatus is deprecated
         *
         * @summary Modifies the status of a risk item that affects your assets. You can ignore the risk item or cancel ignoring the risk item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a risk item**, use the AddCheckInstanceResultWhiteList operation.
         * \\-To **cancel ignoring a risk item**, use the RemoveCheckInstanceResultWhiteList operation.
         *
         * @param request ModifyRiskSingleResultStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRiskSingleResultStatusResponse
         */
        // Deprecated
        public ModifyRiskSingleResultStatusResponse ModifyRiskSingleResultStatusWithOptions(ModifyRiskSingleResultStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRiskSingleResultStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRiskSingleResultStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifyRiskSingleResultStatus is deprecated
         *
         * @summary Modifies the status of a risk item that affects your assets. You can ignore the risk item or cancel ignoring the risk item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a risk item**, use the AddCheckInstanceResultWhiteList operation.
         * \\-To **cancel ignoring a risk item**, use the RemoveCheckInstanceResultWhiteList operation.
         *
         * @param request ModifyRiskSingleResultStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyRiskSingleResultStatusResponse
         */
        // Deprecated
        public async Task<ModifyRiskSingleResultStatusResponse> ModifyRiskSingleResultStatusWithOptionsAsync(ModifyRiskSingleResultStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyRiskSingleResultStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyRiskSingleResultStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifyRiskSingleResultStatus is deprecated
         *
         * @summary Modifies the status of a risk item that affects your assets. You can ignore the risk item or cancel ignoring the risk item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a risk item**, use the AddCheckInstanceResultWhiteList operation.
         * \\-To **cancel ignoring a risk item**, use the RemoveCheckInstanceResultWhiteList operation.
         *
         * @param request ModifyRiskSingleResultStatusRequest
         * @return ModifyRiskSingleResultStatusResponse
         */
        // Deprecated
        public ModifyRiskSingleResultStatusResponse ModifyRiskSingleResultStatus(ModifyRiskSingleResultStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyRiskSingleResultStatusWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifyRiskSingleResultStatus is deprecated
         *
         * @summary Modifies the status of a risk item that affects your assets. You can ignore the risk item or cancel ignoring the risk item.
         *
         * @description This operation is phased out. You can use the following operations:
         * \\-To **ignore a risk item**, use the AddCheckInstanceResultWhiteList operation.
         * \\-To **cancel ignoring a risk item**, use the RemoveCheckInstanceResultWhiteList operation.
         *
         * @param request ModifyRiskSingleResultStatusRequest
         * @return ModifyRiskSingleResultStatusResponse
         */
        // Deprecated
        public async Task<ModifyRiskSingleResultStatusResponse> ModifyRiskSingleResultStatusAsync(ModifyRiskSingleResultStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyRiskSingleResultStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a rule for container tamper-proofing.
         *
         * @param request ModifySasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySasContainerWebDefenseRuleResponse
         */
        public ModifySasContainerWebDefenseRuleResponse ModifySasContainerWebDefenseRuleWithOptions(ModifySasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PathConfDTOList))
            {
                query["PathConfDTOList"] = request.PathConfDTOList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySasContainerWebDefenseRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a rule for container tamper-proofing.
         *
         * @param request ModifySasContainerWebDefenseRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySasContainerWebDefenseRuleResponse
         */
        public async Task<ModifySasContainerWebDefenseRuleResponse> ModifySasContainerWebDefenseRuleWithOptionsAsync(ModifySasContainerWebDefenseRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PathConfDTOList))
            {
                query["PathConfDTOList"] = request.PathConfDTOList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySasContainerWebDefenseRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySasContainerWebDefenseRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a rule for container tamper-proofing.
         *
         * @param request ModifySasContainerWebDefenseRuleRequest
         * @return ModifySasContainerWebDefenseRuleResponse
         */
        public ModifySasContainerWebDefenseRuleResponse ModifySasContainerWebDefenseRule(ModifySasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifySasContainerWebDefenseRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a rule for container tamper-proofing.
         *
         * @param request ModifySasContainerWebDefenseRuleRequest
         * @return ModifySasContainerWebDefenseRuleResponse
         */
        public async Task<ModifySasContainerWebDefenseRuleResponse> ModifySasContainerWebDefenseRuleAsync(ModifySasContainerWebDefenseRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifySasContainerWebDefenseRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifySecurityCheckScheduleConfig is deprecated
         *
         * @summary Specifies the time when an automatic configuration check is performed on cloud services.
         *
         * @description This operation is phased out. You can use the ChangeCheckConfig operation.
         *
         * @param request ModifySecurityCheckScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public ModifySecurityCheckScheduleConfigResponse ModifySecurityCheckScheduleConfigWithOptions(ModifySecurityCheckScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DaysOfWeek))
            {
                query["DaysOfWeek"] = request.DaysOfWeek;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySecurityCheckScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySecurityCheckScheduleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifySecurityCheckScheduleConfig is deprecated
         *
         * @summary Specifies the time when an automatic configuration check is performed on cloud services.
         *
         * @description This operation is phased out. You can use the ChangeCheckConfig operation.
         *
         * @param request ModifySecurityCheckScheduleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public async Task<ModifySecurityCheckScheduleConfigResponse> ModifySecurityCheckScheduleConfigWithOptionsAsync(ModifySecurityCheckScheduleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DaysOfWeek))
            {
                query["DaysOfWeek"] = request.DaysOfWeek;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySecurityCheckScheduleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySecurityCheckScheduleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ModifySecurityCheckScheduleConfig is deprecated
         *
         * @summary Specifies the time when an automatic configuration check is performed on cloud services.
         *
         * @description This operation is phased out. You can use the ChangeCheckConfig operation.
         *
         * @param request ModifySecurityCheckScheduleConfigRequest
         * @return ModifySecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public ModifySecurityCheckScheduleConfigResponse ModifySecurityCheckScheduleConfig(ModifySecurityCheckScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifySecurityCheckScheduleConfigWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI ModifySecurityCheckScheduleConfig is deprecated
         *
         * @summary Specifies the time when an automatic configuration check is performed on cloud services.
         *
         * @description This operation is phased out. You can use the ChangeCheckConfig operation.
         *
         * @param request ModifySecurityCheckScheduleConfigRequest
         * @return ModifySecurityCheckScheduleConfigResponse
         */
        // Deprecated
        public async Task<ModifySecurityCheckScheduleConfigResponse> ModifySecurityCheckScheduleConfigAsync(ModifySecurityCheckScheduleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifySecurityCheckScheduleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the alert handling rule for alerts that are added to the whitelist by asset.
         *
         * @param request ModifySecurityEventMarkMissIndividuallyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySecurityEventMarkMissIndividuallyResponse
         */
        public ModifySecurityEventMarkMissIndividuallyResponse ModifySecurityEventMarkMissIndividuallyWithOptions(ModifySecurityEventMarkMissIndividuallyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteMarkMissParam))
            {
                body["DeleteMarkMissParam"] = request.DeleteMarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsertMarkMissParam))
            {
                body["InsertMarkMissParam"] = request.InsertMarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySecurityEventMarkMissIndividually",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySecurityEventMarkMissIndividuallyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the alert handling rule for alerts that are added to the whitelist by asset.
         *
         * @param request ModifySecurityEventMarkMissIndividuallyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifySecurityEventMarkMissIndividuallyResponse
         */
        public async Task<ModifySecurityEventMarkMissIndividuallyResponse> ModifySecurityEventMarkMissIndividuallyWithOptionsAsync(ModifySecurityEventMarkMissIndividuallyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteMarkMissParam))
            {
                body["DeleteMarkMissParam"] = request.DeleteMarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsertMarkMissParam))
            {
                body["InsertMarkMissParam"] = request.InsertMarkMissParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifySecurityEventMarkMissIndividually",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifySecurityEventMarkMissIndividuallyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the alert handling rule for alerts that are added to the whitelist by asset.
         *
         * @param request ModifySecurityEventMarkMissIndividuallyRequest
         * @return ModifySecurityEventMarkMissIndividuallyResponse
         */
        public ModifySecurityEventMarkMissIndividuallyResponse ModifySecurityEventMarkMissIndividually(ModifySecurityEventMarkMissIndividuallyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifySecurityEventMarkMissIndividuallyWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the alert handling rule for alerts that are added to the whitelist by asset.
         *
         * @param request ModifySecurityEventMarkMissIndividuallyRequest
         * @return ModifySecurityEventMarkMissIndividuallyResponse
         */
        public async Task<ModifySecurityEventMarkMissIndividuallyResponse> ModifySecurityEventMarkMissIndividuallyAsync(ModifySecurityEventMarkMissIndividuallyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifySecurityEventMarkMissIndividuallyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables the quick scan feature. You can also enable the feature on the Vulnerabilities page of the Security Center console.
         *
         * @param request ModifyStartVulScanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStartVulScanResponse
         */
        public ModifyStartVulScanResponse ModifyStartVulScanWithOptions(ModifyStartVulScanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStartVulScan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStartVulScanResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables the quick scan feature. You can also enable the feature on the Vulnerabilities page of the Security Center console.
         *
         * @param request ModifyStartVulScanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStartVulScanResponse
         */
        public async Task<ModifyStartVulScanResponse> ModifyStartVulScanWithOptionsAsync(ModifyStartVulScanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStartVulScan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStartVulScanResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables the quick scan feature. You can also enable the feature on the Vulnerabilities page of the Security Center console.
         *
         * @param request ModifyStartVulScanRequest
         * @return ModifyStartVulScanResponse
         */
        public ModifyStartVulScanResponse ModifyStartVulScan(ModifyStartVulScanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyStartVulScanWithOptions(request, runtime);
        }

        /**
         * @summary Enables the quick scan feature. You can also enable the feature on the Vulnerabilities page of the Security Center console.
         *
         * @param request ModifyStartVulScanRequest
         * @return ModifyStartVulScanResponse
         */
        public async Task<ModifyStartVulScanResponse> ModifyStartVulScanAsync(ModifyStartVulScanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyStartVulScanWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a baseline check policy.
         *
         * @param request ModifyStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStrategyResponse
         */
        public ModifyStrategyResponse ModifyStrategyWithOptions(ModifyStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomType))
            {
                query["CustomType"] = request.CustomType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleDays))
            {
                query["CycleDays"] = request.CycleDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleStartTime))
            {
                query["CycleStartTime"] = request.CycleStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskCustomParams))
            {
                query["RiskCustomParams"] = request.RiskCustomParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskSubTypeName))
            {
                query["RiskSubTypeName"] = request.RiskSubTypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a baseline check policy.
         *
         * @param request ModifyStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStrategyResponse
         */
        public async Task<ModifyStrategyResponse> ModifyStrategyWithOptionsAsync(ModifyStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomType))
            {
                query["CustomType"] = request.CustomType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleDays))
            {
                query["CycleDays"] = request.CycleDays;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CycleStartTime))
            {
                query["CycleStartTime"] = request.CycleStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskCustomParams))
            {
                query["RiskCustomParams"] = request.RiskCustomParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskSubTypeName))
            {
                query["RiskSubTypeName"] = request.RiskSubTypeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a baseline check policy.
         *
         * @param request ModifyStrategyRequest
         * @return ModifyStrategyResponse
         */
        public ModifyStrategyResponse ModifyStrategy(ModifyStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a baseline check policy.
         *
         * @param request ModifyStrategyRequest
         * @return ModifyStrategyResponse
         */
        public async Task<ModifyStrategyResponse> ModifyStrategyAsync(ModifyStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request ModifyStrategyTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStrategyTargetResponse
         */
        public ModifyStrategyTargetResponse ModifyStrategyTargetWithOptions(ModifyStrategyTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStrategyTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStrategyTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request ModifyStrategyTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyStrategyTargetResponse
         */
        public async Task<ModifyStrategyTargetResponse> ModifyStrategyTargetWithOptionsAsync(ModifyStrategyTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyStrategyTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyStrategyTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request ModifyStrategyTargetRequest
         * @return ModifyStrategyTargetResponse
         */
        public ModifyStrategyTargetResponse ModifyStrategyTarget(ModifyStrategyTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyStrategyTargetWithOptions(request, runtime);
        }

        /**
         * @summary The source IP address of the request.
         *
         * @param request ModifyStrategyTargetRequest
         * @return ModifyStrategyTargetResponse
         */
        public async Task<ModifyStrategyTargetResponse> ModifyStrategyTargetAsync(ModifyStrategyTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyStrategyTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the names of the tags that are added to assets, or modifies the tags for assets.
         *
         * @param request ModifyTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyTagWithUuidResponse
         */
        public ModifyTagWithUuidResponse ModifyTagWithUuidWithOptions(ModifyTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagId))
            {
                query["TagId"] = request.TagId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTagWithUuidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the names of the tags that are added to assets, or modifies the tags for assets.
         *
         * @param request ModifyTagWithUuidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyTagWithUuidResponse
         */
        public async Task<ModifyTagWithUuidResponse> ModifyTagWithUuidWithOptionsAsync(ModifyTagWithUuidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MachineTypes))
            {
                query["MachineTypes"] = request.MachineTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagId))
            {
                query["TagId"] = request.TagId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagList))
            {
                query["TagList"] = request.TagList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyTagWithUuid",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyTagWithUuidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the names of the tags that are added to assets, or modifies the tags for assets.
         *
         * @param request ModifyTagWithUuidRequest
         * @return ModifyTagWithUuidResponse
         */
        public ModifyTagWithUuidResponse ModifyTagWithUuid(ModifyTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyTagWithUuidWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the names of the tags that are added to assets, or modifies the tags for assets.
         *
         * @param request ModifyTagWithUuidRequest
         * @return ModifyTagWithUuidResponse
         */
        public async Task<ModifyTagWithUuidResponse> ModifyTagWithUuidAsync(ModifyTagWithUuidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyTagWithUuidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies an anti-ransomware policy for databases.
         *
         * @param tmpReq ModifyUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyUniBackupPolicyResponse
         */
        public ModifyUniBackupPolicyResponse ModifyUniBackupPolicyWithOptions(ModifyUniBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyUniBackupPolicyShrinkRequest request = new ModifyUniBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FullPlan))
            {
                request.FullPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FullPlan, "FullPlan", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.IncPlan))
            {
                request.IncPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.IncPlan, "IncPlan", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountName))
            {
                query["AccountName"] = request.AccountName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountPassword))
            {
                query["AccountPassword"] = request.AccountPassword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullPlanShrink))
            {
                query["FullPlan"] = request.FullPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncPlanShrink))
            {
                query["IncPlan"] = request.IncPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyStatus))
            {
                query["PolicyStatus"] = request.PolicyStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retention))
            {
                query["Retention"] = request.Retention;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeedLimiter))
            {
                query["SpeedLimiter"] = request.SpeedLimiter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyUniBackupPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies an anti-ransomware policy for databases.
         *
         * @param tmpReq ModifyUniBackupPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyUniBackupPolicyResponse
         */
        public async Task<ModifyUniBackupPolicyResponse> ModifyUniBackupPolicyWithOptionsAsync(ModifyUniBackupPolicyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ModifyUniBackupPolicyShrinkRequest request = new ModifyUniBackupPolicyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FullPlan))
            {
                request.FullPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FullPlan, "FullPlan", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.IncPlan))
            {
                request.IncPlanShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.IncPlan, "IncPlan", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountName))
            {
                query["AccountName"] = request.AccountName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountPassword))
            {
                query["AccountPassword"] = request.AccountPassword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FullPlanShrink))
            {
                query["FullPlan"] = request.FullPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncPlanShrink))
            {
                query["IncPlan"] = request.IncPlanShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyName))
            {
                query["PolicyName"] = request.PolicyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyStatus))
            {
                query["PolicyStatus"] = request.PolicyStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retention))
            {
                query["Retention"] = request.Retention;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeedLimiter))
            {
                query["SpeedLimiter"] = request.SpeedLimiter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyUniBackupPolicy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyUniBackupPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies an anti-ransomware policy for databases.
         *
         * @param request ModifyUniBackupPolicyRequest
         * @return ModifyUniBackupPolicyResponse
         */
        public ModifyUniBackupPolicyResponse ModifyUniBackupPolicy(ModifyUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyUniBackupPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Modifies an anti-ransomware policy for databases.
         *
         * @param request ModifyUniBackupPolicyRequest
         * @return ModifyUniBackupPolicyResponse
         */
        public async Task<ModifyUniBackupPolicyResponse> ModifyUniBackupPolicyAsync(ModifyUniBackupPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyUniBackupPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables a honeypot.
         *
         * @param request ModifyVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVpcHoneyPotResponse
         */
        public ModifyVpcHoneyPotResponse ModifyVpcHoneyPotWithOptions(ModifyVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneyPotAction))
            {
                query["HoneyPotAction"] = request.HoneyPotAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVpcHoneyPotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a honeypot.
         *
         * @param request ModifyVpcHoneyPotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVpcHoneyPotResponse
         */
        public async Task<ModifyVpcHoneyPotResponse> ModifyVpcHoneyPotWithOptionsAsync(ModifyVpcHoneyPotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneyPotAction))
            {
                query["HoneyPotAction"] = request.HoneyPotAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVpcHoneyPot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVpcHoneyPotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a honeypot.
         *
         * @param request ModifyVpcHoneyPotRequest
         * @return ModifyVpcHoneyPotResponse
         */
        public ModifyVpcHoneyPotResponse ModifyVpcHoneyPot(ModifyVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyVpcHoneyPotWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables a honeypot.
         *
         * @param request ModifyVpcHoneyPotRequest
         * @return ModifyVpcHoneyPotResponse
         */
        public async Task<ModifyVpcHoneyPotResponse> ModifyVpcHoneyPotAsync(ModifyVpcHoneyPotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyVpcHoneyPotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature.
         *
         * @param request ModifyVulConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulConfigResponse
         */
        public ModifyVulConfigResponse ModifyVulConfigWithOptions(ModifyVulConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature.
         *
         * @param request ModifyVulConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulConfigResponse
         */
        public async Task<ModifyVulConfigResponse> ModifyVulConfigWithOptionsAsync(ModifyVulConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature.
         *
         * @param request ModifyVulConfigRequest
         * @return ModifyVulConfigResponse
         */
        public ModifyVulConfigResponse ModifyVulConfig(ModifyVulConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyVulConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature.
         *
         * @param request ModifyVulConfigRequest
         * @return ModifyVulConfigResponse
         */
        public async Task<ModifyVulConfigResponse> ModifyVulConfigAsync(ModifyVulConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyVulConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature for a server.
         *
         * @param request ModifyVulTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulTargetResponse
         */
        public ModifyVulTargetResponse ModifyVulTargetWithOptions(ModifyVulTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature for a server.
         *
         * @param request ModifyVulTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulTargetResponse
         */
        public async Task<ModifyVulTargetResponse> ModifyVulTargetWithOptionsAsync(ModifyVulTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature for a server.
         *
         * @param request ModifyVulTargetRequest
         * @return ModifyVulTargetResponse
         */
        public ModifyVulTargetResponse ModifyVulTarget(ModifyVulTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyVulTargetWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the vulnerability scan feature for a server.
         *
         * @param request ModifyVulTargetRequest
         * @return ModifyVulTargetResponse
         */
        public async Task<ModifyVulTargetResponse> ModifyVulTargetAsync(ModifyVulTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyVulTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configures vulnerability scan for a server.
         *
         * @param request ModifyVulTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulTargetConfigResponse
         */
        public ModifyVulTargetConfigResponse ModifyVulTargetConfigWithOptions(ModifyVulTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulTargetConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configures vulnerability scan for a server.
         *
         * @param request ModifyVulTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulTargetConfigResponse
         */
        public async Task<ModifyVulTargetConfigResponse> ModifyVulTargetConfigWithOptionsAsync(ModifyVulTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulTargetConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configures vulnerability scan for a server.
         *
         * @param request ModifyVulTargetConfigRequest
         * @return ModifyVulTargetConfigResponse
         */
        public ModifyVulTargetConfigResponse ModifyVulTargetConfig(ModifyVulTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyVulTargetConfigWithOptions(request, runtime);
        }

        /**
         * @summary Configures vulnerability scan for a server.
         *
         * @param request ModifyVulTargetConfigRequest
         * @return ModifyVulTargetConfigResponse
         */
        public async Task<ModifyVulTargetConfigResponse> ModifyVulTargetConfigAsync(ModifyVulTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyVulTargetConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the servers that are added to a vulnerability whitelist.
         *
         * @param request ModifyVulWhitelistTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulWhitelistTargetResponse
         */
        public ModifyVulWhitelistTargetResponse ModifyVulWhitelistTargetWithOptions(ModifyVulWhitelistTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulWhitelistTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulWhitelistTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the servers that are added to a vulnerability whitelist.
         *
         * @param request ModifyVulWhitelistTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyVulWhitelistTargetResponse
         */
        public async Task<ModifyVulWhitelistTargetResponse> ModifyVulWhitelistTargetWithOptionsAsync(ModifyVulWhitelistTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyVulWhitelistTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyVulWhitelistTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the servers that are added to a vulnerability whitelist.
         *
         * @param request ModifyVulWhitelistTargetRequest
         * @return ModifyVulWhitelistTargetResponse
         */
        public ModifyVulWhitelistTargetResponse ModifyVulWhitelistTarget(ModifyVulWhitelistTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyVulWhitelistTargetWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the servers that are added to a vulnerability whitelist.
         *
         * @param request ModifyVulWhitelistTargetRequest
         * @return ModifyVulWhitelistTargetResponse
         */
        public async Task<ModifyVulWhitelistTargetResponse> ModifyVulWhitelistTargetAsync(ModifyVulWhitelistTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyVulWhitelistTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a directory to protect for a specified server.
         *
         * @param request ModifyWebLockCreateConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockCreateConfigResponse
         */
        public ModifyWebLockCreateConfigResponse ModifyWebLockCreateConfigWithOptions(ModifyWebLockCreateConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFile))
            {
                query["InclusiveFile"] = request.InclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockCreateConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockCreateConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a directory to protect for a specified server.
         *
         * @param request ModifyWebLockCreateConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockCreateConfigResponse
         */
        public async Task<ModifyWebLockCreateConfigResponse> ModifyWebLockCreateConfigWithOptionsAsync(ModifyWebLockCreateConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFile))
            {
                query["InclusiveFile"] = request.InclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockCreateConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockCreateConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a directory to protect for a specified server.
         *
         * @param request ModifyWebLockCreateConfigRequest
         * @return ModifyWebLockCreateConfigResponse
         */
        public ModifyWebLockCreateConfigResponse ModifyWebLockCreateConfig(ModifyWebLockCreateConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockCreateConfigWithOptions(request, runtime);
        }

        /**
         * @summary Adds a directory to protect for a specified server.
         *
         * @param request ModifyWebLockCreateConfigRequest
         * @return ModifyWebLockCreateConfigResponse
         */
        public async Task<ModifyWebLockCreateConfigResponse> ModifyWebLockCreateConfigAsync(ModifyWebLockCreateConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockCreateConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a directory on a specified server from the protected directories of web tamper proofing.
         *
         * @description After you delete a directory that has web tamper proofing enabled on a server, files in the directory are no longer protected by web tamper proofing. The information about the websites that are hosted on the server may be maliciously modified by attackers. Proceed with caution.
         *
         * @param request ModifyWebLockDeleteConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockDeleteConfigResponse
         */
        public ModifyWebLockDeleteConfigResponse ModifyWebLockDeleteConfigWithOptions(ModifyWebLockDeleteConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockDeleteConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockDeleteConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a directory on a specified server from the protected directories of web tamper proofing.
         *
         * @description After you delete a directory that has web tamper proofing enabled on a server, files in the directory are no longer protected by web tamper proofing. The information about the websites that are hosted on the server may be maliciously modified by attackers. Proceed with caution.
         *
         * @param request ModifyWebLockDeleteConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockDeleteConfigResponse
         */
        public async Task<ModifyWebLockDeleteConfigResponse> ModifyWebLockDeleteConfigWithOptionsAsync(ModifyWebLockDeleteConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockDeleteConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockDeleteConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a directory on a specified server from the protected directories of web tamper proofing.
         *
         * @description After you delete a directory that has web tamper proofing enabled on a server, files in the directory are no longer protected by web tamper proofing. The information about the websites that are hosted on the server may be maliciously modified by attackers. Proceed with caution.
         *
         * @param request ModifyWebLockDeleteConfigRequest
         * @return ModifyWebLockDeleteConfigResponse
         */
        public ModifyWebLockDeleteConfigResponse ModifyWebLockDeleteConfig(ModifyWebLockDeleteConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockDeleteConfigWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a directory on a specified server from the protected directories of web tamper proofing.
         *
         * @description After you delete a directory that has web tamper proofing enabled on a server, files in the directory are no longer protected by web tamper proofing. The information about the websites that are hosted on the server may be maliciously modified by attackers. Proceed with caution.
         *
         * @param request ModifyWebLockDeleteConfigRequest
         * @return ModifyWebLockDeleteConfigResponse
         */
        public async Task<ModifyWebLockDeleteConfigResponse> ModifyWebLockDeleteConfigAsync(ModifyWebLockDeleteConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockDeleteConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the status of processes for web tamper proofing.
         *
         * @param request ModifyWebLockProcessStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockProcessStatusResponse
         */
        public ModifyWebLockProcessStatusResponse ModifyWebLockProcessStatusWithOptions(ModifyWebLockProcessStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DealAll))
            {
                query["DealAll"] = request.DealAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateInfo))
            {
                query["OperateInfo"] = request.OperateInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessPath))
            {
                query["ProcessPath"] = request.ProcessPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockProcessStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockProcessStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the status of processes for web tamper proofing.
         *
         * @param request ModifyWebLockProcessStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockProcessStatusResponse
         */
        public async Task<ModifyWebLockProcessStatusResponse> ModifyWebLockProcessStatusWithOptionsAsync(ModifyWebLockProcessStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DealAll))
            {
                query["DealAll"] = request.DealAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateInfo))
            {
                query["OperateInfo"] = request.OperateInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcessPath))
            {
                query["ProcessPath"] = request.ProcessPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockProcessStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockProcessStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the status of processes for web tamper proofing.
         *
         * @param request ModifyWebLockProcessStatusRequest
         * @return ModifyWebLockProcessStatusResponse
         */
        public ModifyWebLockProcessStatusResponse ModifyWebLockProcessStatus(ModifyWebLockProcessStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockProcessStatusWithOptions(request, runtime);
        }

        /**
         * @summary Changes the status of processes for web tamper proofing.
         *
         * @param request ModifyWebLockProcessStatusRequest
         * @return ModifyWebLockProcessStatusResponse
         */
        public async Task<ModifyWebLockProcessStatusResponse> ModifyWebLockProcessStatusAsync(ModifyWebLockProcessStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockProcessStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockStartRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockStartResponse
         */
        public ModifyWebLockStartResponse ModifyWebLockStartWithOptions(ModifyWebLockStartRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockStart",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockStartResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockStartRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockStartResponse
         */
        public async Task<ModifyWebLockStartResponse> ModifyWebLockStartWithOptionsAsync(ModifyWebLockStartRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockStart",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockStartResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockStartRequest
         * @return ModifyWebLockStartResponse
         */
        public ModifyWebLockStartResponse ModifyWebLockStart(ModifyWebLockStartRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockStartWithOptions(request, runtime);
        }

        /**
         * @summary Enables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockStartRequest
         * @return ModifyWebLockStartResponse
         */
        public async Task<ModifyWebLockStartResponse> ModifyWebLockStartAsync(ModifyWebLockStartRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockStartWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables web tamper proofing for a server.
         *
         * @param request ModifyWebLockStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockStatusResponse
         */
        public ModifyWebLockStatusResponse ModifyWebLockStatusWithOptions(ModifyWebLockStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables web tamper proofing for a server.
         *
         * @param request ModifyWebLockStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockStatusResponse
         */
        public async Task<ModifyWebLockStatusResponse> ModifyWebLockStatusWithOptionsAsync(ModifyWebLockStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables web tamper proofing for a server.
         *
         * @param request ModifyWebLockStatusRequest
         * @return ModifyWebLockStatusResponse
         */
        public ModifyWebLockStatusResponse ModifyWebLockStatus(ModifyWebLockStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockStatusWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables web tamper proofing for a server.
         *
         * @param request ModifyWebLockStatusRequest
         * @return ModifyWebLockStatusResponse
         */
        public async Task<ModifyWebLockStatusResponse> ModifyWebLockStatusAsync(ModifyWebLockStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Disables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockUnbindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockUnbindResponse
         */
        public ModifyWebLockUnbindResponse ModifyWebLockUnbindWithOptions(ModifyWebLockUnbindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockUnbind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockUnbindResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Disables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockUnbindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockUnbindResponse
         */
        public async Task<ModifyWebLockUnbindResponse> ModifyWebLockUnbindWithOptionsAsync(ModifyWebLockUnbindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockUnbind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockUnbindResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Disables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockUnbindRequest
         * @return ModifyWebLockUnbindResponse
         */
        public ModifyWebLockUnbindResponse ModifyWebLockUnbind(ModifyWebLockUnbindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockUnbindWithOptions(request, runtime);
        }

        /**
         * @summary Disables web tamper proofing for a specified server.
         *
         * @param request ModifyWebLockUnbindRequest
         * @return ModifyWebLockUnbindResponse
         */
        public async Task<ModifyWebLockUnbindResponse> ModifyWebLockUnbindAsync(ModifyWebLockUnbindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockUnbindWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the protection policy for a specified server.
         *
         * @param request ModifyWebLockUpdateConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockUpdateConfigResponse
         */
        public ModifyWebLockUpdateConfigResponse ModifyWebLockUpdateConfigWithOptions(ModifyWebLockUpdateConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFile))
            {
                query["InclusiveFile"] = request.InclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockUpdateConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockUpdateConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the protection policy for a specified server.
         *
         * @param request ModifyWebLockUpdateConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebLockUpdateConfigResponse
         */
        public async Task<ModifyWebLockUpdateConfigResponse> ModifyWebLockUpdateConfigWithOptionsAsync(ModifyWebLockUpdateConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DefenceMode))
            {
                query["DefenceMode"] = request.DefenceMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dir))
            {
                query["Dir"] = request.Dir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveDir))
            {
                query["ExclusiveDir"] = request.ExclusiveDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFile))
            {
                query["ExclusiveFile"] = request.ExclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusiveFileType))
            {
                query["ExclusiveFileType"] = request.ExclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFile))
            {
                query["InclusiveFile"] = request.InclusiveFile;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InclusiveFileType))
            {
                query["InclusiveFileType"] = request.InclusiveFileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LocalBackupDir))
            {
                query["LocalBackupDir"] = request.LocalBackupDir;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebLockUpdateConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebLockUpdateConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the protection policy for a specified server.
         *
         * @param request ModifyWebLockUpdateConfigRequest
         * @return ModifyWebLockUpdateConfigResponse
         */
        public ModifyWebLockUpdateConfigResponse ModifyWebLockUpdateConfig(ModifyWebLockUpdateConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebLockUpdateConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the protection policy for a specified server.
         *
         * @param request ModifyWebLockUpdateConfigRequest
         * @return ModifyWebLockUpdateConfigResponse
         */
        public async Task<ModifyWebLockUpdateConfigResponse> ModifyWebLockUpdateConfigAsync(ModifyWebLockUpdateConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebLockUpdateConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a custom web directory.
         *
         * @param request ModifyWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebPathResponse
         */
        public ModifyWebPathResponse ModifyWebPathWithOptions(ModifyWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebPathResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom web directory.
         *
         * @param request ModifyWebPathRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ModifyWebPathResponse
         */
        public async Task<ModifyWebPathResponse> ModifyWebPathWithOptionsAsync(ModifyWebPathRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyWebPath",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyWebPathResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a custom web directory.
         *
         * @param request ModifyWebPathRequest
         * @return ModifyWebPathResponse
         */
        public ModifyWebPathResponse ModifyWebPath(ModifyWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyWebPathWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a custom web directory.
         *
         * @param request ModifyWebPathRequest
         * @return ModifyWebPathResponse
         */
        public async Task<ModifyWebPathResponse> ModifyWebPathAsync(ModifyWebPathRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyWebPathWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 开启按量购买。
         *
         * @param request OpenPartialBuyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenPartialBuyResponse
         */
        public OpenPartialBuyResponse OpenPartialBuyWithOptions(OpenPartialBuyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenPartialBuy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenPartialBuyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 开启按量购买。
         *
         * @param request OpenPartialBuyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenPartialBuyResponse
         */
        public async Task<OpenPartialBuyResponse> OpenPartialBuyWithOptionsAsync(OpenPartialBuyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenPartialBuy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenPartialBuyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 开启按量购买。
         *
         * @param request OpenPartialBuyRequest
         * @return OpenPartialBuyResponse
         */
        public OpenPartialBuyResponse OpenPartialBuy(OpenPartialBuyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenPartialBuyWithOptions(request, runtime);
        }

        /**
         * @summary 开启按量购买。
         *
         * @param request OpenPartialBuyRequest
         * @return OpenPartialBuyResponse
         */
        public async Task<OpenPartialBuyResponse> OpenPartialBuyAsync(OpenPartialBuyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenPartialBuyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables sensitive file scan.
         *
         * @param request OpenSensitiveFileScanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenSensitiveFileScanResponse
         */
        public OpenSensitiveFileScanResponse OpenSensitiveFileScanWithOptions(OpenSensitiveFileScanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchOn))
            {
                query["SwitchOn"] = request.SwitchOn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenSensitiveFileScan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenSensitiveFileScanResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables sensitive file scan.
         *
         * @param request OpenSensitiveFileScanRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenSensitiveFileScanResponse
         */
        public async Task<OpenSensitiveFileScanResponse> OpenSensitiveFileScanWithOptionsAsync(OpenSensitiveFileScanRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchOn))
            {
                query["SwitchOn"] = request.SwitchOn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenSensitiveFileScan",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenSensitiveFileScanResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables sensitive file scan.
         *
         * @param request OpenSensitiveFileScanRequest
         * @return OpenSensitiveFileScanResponse
         */
        public OpenSensitiveFileScanResponse OpenSensitiveFileScan(OpenSensitiveFileScanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenSensitiveFileScanWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables sensitive file scan.
         *
         * @param request OpenSensitiveFileScanRequest
         * @return OpenSensitiveFileScanResponse
         */
        public async Task<OpenSensitiveFileScanResponse> OpenSensitiveFileScanAsync(OpenSensitiveFileScanRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenSensitiveFileScanWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs the Security Center agent on servers.
         *
         * @param request OperateAgentClientInstallRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateAgentClientInstallResponse
         */
        public OperateAgentClientInstallResponse OperateAgentClientInstallWithOptions(OperateAgentClientInstallRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateAgentClientInstall",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateAgentClientInstallResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs the Security Center agent on servers.
         *
         * @param request OperateAgentClientInstallRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateAgentClientInstallResponse
         */
        public async Task<OperateAgentClientInstallResponse> OperateAgentClientInstallWithOptionsAsync(OperateAgentClientInstallRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Os))
            {
                query["Os"] = request.Os;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateAgentClientInstall",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateAgentClientInstallResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs the Security Center agent on servers.
         *
         * @param request OperateAgentClientInstallRequest
         * @return OperateAgentClientInstallResponse
         */
        public OperateAgentClientInstallResponse OperateAgentClientInstall(OperateAgentClientInstallRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateAgentClientInstallWithOptions(request, runtime);
        }

        /**
         * @summary Installs the Security Center agent on servers.
         *
         * @param request OperateAgentClientInstallRequest
         * @return OperateAgentClientInstallResponse
         */
        public async Task<OperateAgentClientInstallResponse> OperateAgentClientInstallAsync(OperateAgentClientInstallRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateAgentClientInstallWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds or deletes container applications for tamper proofing.
         *
         * @param request OperateApplicationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateApplicationResponse
         */
        public OperateApplicationResponse OperateApplicationWithOptions(OperateApplicationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerWebDefenseApplicationDTOS))
            {
                query["ContainerWebDefenseApplicationDTOS"] = request.ContainerWebDefenseApplicationDTOS;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateApplication",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateApplicationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds or deletes container applications for tamper proofing.
         *
         * @param request OperateApplicationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateApplicationResponse
         */
        public async Task<OperateApplicationResponse> OperateApplicationWithOptionsAsync(OperateApplicationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerWebDefenseApplicationDTOS))
            {
                query["ContainerWebDefenseApplicationDTOS"] = request.ContainerWebDefenseApplicationDTOS;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateApplication",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateApplicationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds or deletes container applications for tamper proofing.
         *
         * @param request OperateApplicationRequest
         * @return OperateApplicationResponse
         */
        public OperateApplicationResponse OperateApplication(OperateApplicationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateApplicationWithOptions(request, runtime);
        }

        /**
         * @summary Adds or deletes container applications for tamper proofing.
         *
         * @param request OperateApplicationRequest
         * @return OperateApplicationResponse
         */
        public async Task<OperateApplicationResponse> OperateApplicationAsync(OperateApplicationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateApplicationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Manages an Object Storage Service (OSS) bucket check task.
         *
         * @param request OperateBucketScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateBucketScanTaskResponse
         */
        public OperateBucketScanTaskResponse OperateBucketScanTaskWithOptions(OperateBucketScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCode))
            {
                query["OperateCode"] = request.OperateCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateBucketScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateBucketScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Manages an Object Storage Service (OSS) bucket check task.
         *
         * @param request OperateBucketScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateBucketScanTaskResponse
         */
        public async Task<OperateBucketScanTaskResponse> OperateBucketScanTaskWithOptionsAsync(OperateBucketScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketName))
            {
                query["BucketName"] = request.BucketName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateCode))
            {
                query["OperateCode"] = request.OperateCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateBucketScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateBucketScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Manages an Object Storage Service (OSS) bucket check task.
         *
         * @param request OperateBucketScanTaskRequest
         * @return OperateBucketScanTaskResponse
         */
        public OperateBucketScanTaskResponse OperateBucketScanTask(OperateBucketScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateBucketScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Manages an Object Storage Service (OSS) bucket check task.
         *
         * @param request OperateBucketScanTaskRequest
         * @return OperateBucketScanTaskResponse
         */
        public async Task<OperateBucketScanTaskResponse> OperateBucketScanTaskAsync(OperateBucketScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateBucketScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables a feature by type.
         *
         * @param request OperateCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateCommonOverallConfigResponse
         */
        public OperateCommonOverallConfigResponse OperateCommonOverallConfigWithOptions(OperateCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoTargetAsOn))
            {
                query["NoTargetAsOn"] = request.NoTargetAsOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateCommonOverallConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a feature by type.
         *
         * @param request OperateCommonOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateCommonOverallConfigResponse
         */
        public async Task<OperateCommonOverallConfigResponse> OperateCommonOverallConfigWithOptionsAsync(OperateCommonOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoTargetAsOn))
            {
                query["NoTargetAsOn"] = request.NoTargetAsOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateCommonOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateCommonOverallConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a feature by type.
         *
         * @param request OperateCommonOverallConfigRequest
         * @return OperateCommonOverallConfigResponse
         */
        public OperateCommonOverallConfigResponse OperateCommonOverallConfig(OperateCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateCommonOverallConfigWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables a feature by type.
         *
         * @param request OperateCommonOverallConfigRequest
         * @return OperateCommonOverallConfigResponse
         */
        public async Task<OperateCommonOverallConfigResponse> OperateCommonOverallConfigAsync(OperateCommonOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateCommonOverallConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configures features by type. The features include container image scan, local file detection, container network visualization, and container escape prevention.
         *
         * @param request OperateCommonTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateCommonTargetConfigResponse
         */
        public OperateCommonTargetConfigResponse OperateCommonTargetConfigWithOptions(OperateCommonTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperations))
            {
                query["TargetOperations"] = request.TargetOperations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateCommonTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateCommonTargetConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configures features by type. The features include container image scan, local file detection, container network visualization, and container escape prevention.
         *
         * @param request OperateCommonTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateCommonTargetConfigResponse
         */
        public async Task<OperateCommonTargetConfigResponse> OperateCommonTargetConfigWithOptionsAsync(OperateCommonTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldName))
            {
                query["FieldName"] = request.FieldName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperations))
            {
                query["TargetOperations"] = request.TargetOperations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateCommonTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateCommonTargetConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configures features by type. The features include container image scan, local file detection, container network visualization, and container escape prevention.
         *
         * @param request OperateCommonTargetConfigRequest
         * @return OperateCommonTargetConfigResponse
         */
        public OperateCommonTargetConfigResponse OperateCommonTargetConfig(OperateCommonTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateCommonTargetConfigWithOptions(request, runtime);
        }

        /**
         * @summary Configures features by type. The features include container image scan, local file detection, container network visualization, and container escape prevention.
         *
         * @param request OperateCommonTargetConfigRequest
         * @return OperateCommonTargetConfigResponse
         */
        public async Task<OperateCommonTargetConfigResponse> OperateCommonTargetConfigAsync(OperateCommonTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateCommonTargetConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a check item of an image baseline to the whitelist, or removes a check item of an image baseline from the whitelist.
         *
         * @param request OperateImageBaselineWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateImageBaselineWhitelistResponse
         */
        public OperateImageBaselineWhitelistResponse OperateImageBaselineWhitelistWithOptions(OperateImageBaselineWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemKeyList))
            {
                query["BaselineItemKeyList"] = request.BaselineItemKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateImageBaselineWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateImageBaselineWhitelistResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a check item of an image baseline to the whitelist, or removes a check item of an image baseline from the whitelist.
         *
         * @param request OperateImageBaselineWhitelistRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateImageBaselineWhitelistResponse
         */
        public async Task<OperateImageBaselineWhitelistResponse> OperateImageBaselineWhitelistWithOptionsAsync(OperateImageBaselineWhitelistRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemKeyList))
            {
                query["BaselineItemKeyList"] = request.BaselineItemKeyList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuid))
            {
                query["ImageUuid"] = request.ImageUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateImageBaselineWhitelist",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateImageBaselineWhitelistResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a check item of an image baseline to the whitelist, or removes a check item of an image baseline from the whitelist.
         *
         * @param request OperateImageBaselineWhitelistRequest
         * @return OperateImageBaselineWhitelistResponse
         */
        public OperateImageBaselineWhitelistResponse OperateImageBaselineWhitelist(OperateImageBaselineWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateImageBaselineWhitelistWithOptions(request, runtime);
        }

        /**
         * @summary Adds a check item of an image baseline to the whitelist, or removes a check item of an image baseline from the whitelist.
         *
         * @param request OperateImageBaselineWhitelistRequest
         * @return OperateImageBaselineWhitelistResponse
         */
        public async Task<OperateImageBaselineWhitelistResponse> OperateImageBaselineWhitelistAsync(OperateImageBaselineWhitelistRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateImageBaselineWhitelistWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles an image vulnerability, such as fixing the image vulnerability, verifying the fix of the image vulnerability, ignoring the image vulnerability, or canceling ignoring the image vulnerability.
         *
         * @param request OperateImageVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateImageVulResponse
         */
        public OperateImageVulResponse OperateImageVulWithOptions(OperateImageVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateImageVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateImageVulResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles an image vulnerability, such as fixing the image vulnerability, verifying the fix of the image vulnerability, ignoring the image vulnerability, or canceling ignoring the image vulnerability.
         *
         * @param request OperateImageVulRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateImageVulResponse
         */
        public async Task<OperateImageVulResponse> OperateImageVulWithOptionsAsync(OperateImageVulRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Info))
            {
                query["Info"] = request.Info;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateImageVul",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateImageVulResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles an image vulnerability, such as fixing the image vulnerability, verifying the fix of the image vulnerability, ignoring the image vulnerability, or canceling ignoring the image vulnerability.
         *
         * @param request OperateImageVulRequest
         * @return OperateImageVulResponse
         */
        public OperateImageVulResponse OperateImageVul(OperateImageVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateImageVulWithOptions(request, runtime);
        }

        /**
         * @summary Handles an image vulnerability, such as fixing the image vulnerability, verifying the fix of the image vulnerability, ignoring the image vulnerability, or canceling ignoring the image vulnerability.
         *
         * @param request OperateImageVulRequest
         * @return OperateImageVulResponse
         */
        public async Task<OperateImageVulResponse> OperateImageVulAsync(OperateImageVulRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateImageVulWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables a feature that detects exceptions.
         *
         * @param request OperateSuspiciousOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSuspiciousOverallConfigResponse
         */
        public OperateSuspiciousOverallConfigResponse OperateSuspiciousOverallConfigWithOptions(OperateSuspiciousOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoTargetAsOn))
            {
                query["NoTargetAsOn"] = request.NoTargetAsOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSuspiciousOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSuspiciousOverallConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a feature that detects exceptions.
         *
         * @param request OperateSuspiciousOverallConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSuspiciousOverallConfigResponse
         */
        public async Task<OperateSuspiciousOverallConfigResponse> OperateSuspiciousOverallConfigWithOptionsAsync(OperateSuspiciousOverallConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NoTargetAsOn))
            {
                query["NoTargetAsOn"] = request.NoTargetAsOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSuspiciousOverallConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSuspiciousOverallConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables a feature that detects exceptions.
         *
         * @param request OperateSuspiciousOverallConfigRequest
         * @return OperateSuspiciousOverallConfigResponse
         */
        public OperateSuspiciousOverallConfigResponse OperateSuspiciousOverallConfig(OperateSuspiciousOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateSuspiciousOverallConfigWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables a feature that detects exceptions.
         *
         * @param request OperateSuspiciousOverallConfigRequest
         * @return OperateSuspiciousOverallConfigResponse
         */
        public async Task<OperateSuspiciousOverallConfigResponse> OperateSuspiciousOverallConfigAsync(OperateSuspiciousOverallConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateSuspiciousOverallConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configures the scope on which proactive defense takes effect.
         *
         * @param request OperateSuspiciousTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSuspiciousTargetConfigResponse
         */
        public OperateSuspiciousTargetConfigResponse OperateSuspiciousTargetConfigWithOptions(OperateSuspiciousTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperations))
            {
                query["TargetOperations"] = request.TargetOperations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSuspiciousTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSuspiciousTargetConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configures the scope on which proactive defense takes effect.
         *
         * @param request OperateSuspiciousTargetConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSuspiciousTargetConfigResponse
         */
        public async Task<OperateSuspiciousTargetConfigResponse> OperateSuspiciousTargetConfigWithOptionsAsync(OperateSuspiciousTargetConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetOperations))
            {
                query["TargetOperations"] = request.TargetOperations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSuspiciousTargetConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSuspiciousTargetConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configures the scope on which proactive defense takes effect.
         *
         * @param request OperateSuspiciousTargetConfigRequest
         * @return OperateSuspiciousTargetConfigResponse
         */
        public OperateSuspiciousTargetConfigResponse OperateSuspiciousTargetConfig(OperateSuspiciousTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateSuspiciousTargetConfigWithOptions(request, runtime);
        }

        /**
         * @summary Configures the scope on which proactive defense takes effect.
         *
         * @param request OperateSuspiciousTargetConfigRequest
         * @return OperateSuspiciousTargetConfigResponse
         */
        public async Task<OperateSuspiciousTargetConfigResponse> OperateSuspiciousTargetConfigAsync(OperateSuspiciousTargetConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateSuspiciousTargetConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the status of a rule for container tamper-proofing.
         *
         * @param request OperateSwitchStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSwitchStatusResponse
         */
        public OperateSwitchStatusResponse OperateSwitchStatusWithOptions(OperateSwitchStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSwitchStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSwitchStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the status of a rule for container tamper-proofing.
         *
         * @param request OperateSwitchStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateSwitchStatusResponse
         */
        public async Task<OperateSwitchStatusResponse> OperateSwitchStatusWithOptionsAsync(OperateSwitchStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateSwitchStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateSwitchStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the status of a rule for container tamper-proofing.
         *
         * @param request OperateSwitchStatusRequest
         * @return OperateSwitchStatusResponse
         */
        public OperateSwitchStatusResponse OperateSwitchStatus(OperateSwitchStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateSwitchStatusWithOptions(request, runtime);
        }

        /**
         * @summary Changes the status of a rule for container tamper-proofing.
         *
         * @param request OperateSwitchStatusRequest
         * @return OperateSwitchStatusResponse
         */
        public async Task<OperateSwitchStatusResponse> OperateSwitchStatusAsync(OperateSwitchStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateSwitchStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles alert events that are generated by the antivirus feature. You can perform in-depth detection and removal, add alert events to the whitelist, ignore alert events, or manually handle alert events.
         *
         * @param request OperateVirusEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateVirusEventsResponse
         */
        public OperateVirusEventsResponse OperateVirusEventsWithOptions(OperateVirusEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationAll))
            {
                query["OperationAll"] = request.OperationAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationRange))
            {
                query["OperationRange"] = request.OperationRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateVirusEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateVirusEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles alert events that are generated by the antivirus feature. You can perform in-depth detection and removal, add alert events to the whitelist, ignore alert events, or manually handle alert events.
         *
         * @param request OperateVirusEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateVirusEventsResponse
         */
        public async Task<OperateVirusEventsResponse> OperateVirusEventsWithOptionsAsync(OperateVirusEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationAll))
            {
                query["OperationAll"] = request.OperationAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationRange))
            {
                query["OperationRange"] = request.OperationRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateVirusEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateVirusEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles alert events that are generated by the antivirus feature. You can perform in-depth detection and removal, add alert events to the whitelist, ignore alert events, or manually handle alert events.
         *
         * @param request OperateVirusEventsRequest
         * @return OperateVirusEventsResponse
         */
        public OperateVirusEventsResponse OperateVirusEvents(OperateVirusEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateVirusEventsWithOptions(request, runtime);
        }

        /**
         * @summary Handles alert events that are generated by the antivirus feature. You can perform in-depth detection and removal, add alert events to the whitelist, ignore alert events, or manually handle alert events.
         *
         * @param request OperateVirusEventsRequest
         * @return OperateVirusEventsResponse
         */
        public async Task<OperateVirusEventsResponse> OperateVirusEventsAsync(OperateVirusEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateVirusEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Fixes Linux software vulnerabilities.
         *
         * @param request OperateVulsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateVulsResponse
         */
        public OperateVulsResponse OperateVulsWithOptions(OperateVulsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNames))
            {
                query["VulNames"] = request.VulNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateVuls",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateVulsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Fixes Linux software vulnerabilities.
         *
         * @param request OperateVulsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateVulsResponse
         */
        public async Task<OperateVulsResponse> OperateVulsWithOptionsAsync(OperateVulsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperateType))
            {
                query["OperateType"] = request.OperateType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VulNames))
            {
                query["VulNames"] = request.VulNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateVuls",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateVulsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Fixes Linux software vulnerabilities.
         *
         * @param request OperateVulsRequest
         * @return OperateVulsResponse
         */
        public OperateVulsResponse OperateVuls(OperateVulsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateVulsWithOptions(request, runtime);
        }

        /**
         * @summary Fixes Linux software vulnerabilities.
         *
         * @param request OperateVulsRequest
         * @return OperateVulsResponse
         */
        public async Task<OperateVulsResponse> OperateVulsAsync(OperateVulsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateVulsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles alert events that are generated for web tamper proofing.
         *
         * @param request OperateWebLockFileEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateWebLockFileEventsResponse
         */
        public OperateWebLockFileEventsResponse OperateWebLockFileEventsWithOptions(OperateWebLockFileEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DealAll))
            {
                query["DealAll"] = request.DealAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventIds))
            {
                query["EventIds"] = request.EventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateWebLockFileEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateWebLockFileEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles alert events that are generated for web tamper proofing.
         *
         * @param request OperateWebLockFileEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperateWebLockFileEventsResponse
         */
        public async Task<OperateWebLockFileEventsResponse> OperateWebLockFileEventsWithOptionsAsync(OperateWebLockFileEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DealAll))
            {
                query["DealAll"] = request.DealAll;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventIds))
            {
                query["EventIds"] = request.EventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                query["OperationCode"] = request.OperationCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperateWebLockFileEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperateWebLockFileEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles alert events that are generated for web tamper proofing.
         *
         * @param request OperateWebLockFileEventsRequest
         * @return OperateWebLockFileEventsResponse
         */
        public OperateWebLockFileEventsResponse OperateWebLockFileEvents(OperateWebLockFileEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperateWebLockFileEventsWithOptions(request, runtime);
        }

        /**
         * @summary Handles alert events that are generated for web tamper proofing.
         *
         * @param request OperateWebLockFileEventsRequest
         * @return OperateWebLockFileEventsResponse
         */
        public async Task<OperateWebLockFileEventsResponse> OperateWebLockFileEventsAsync(OperateWebLockFileEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperateWebLockFileEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Cancels ignoring alert events.
         *
         * @param request OperationCancelIgnoreSuspEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperationCancelIgnoreSuspEventResponse
         */
        public OperationCancelIgnoreSuspEventResponse OperationCancelIgnoreSuspEventWithOptions(OperationCancelIgnoreSuspEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperationCancelIgnoreSuspEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperationCancelIgnoreSuspEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Cancels ignoring alert events.
         *
         * @param request OperationCancelIgnoreSuspEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperationCancelIgnoreSuspEventResponse
         */
        public async Task<OperationCancelIgnoreSuspEventResponse> OperationCancelIgnoreSuspEventWithOptionsAsync(OperationCancelIgnoreSuspEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityEventIds))
            {
                query["SecurityEventIds"] = request.SecurityEventIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperationCancelIgnoreSuspEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperationCancelIgnoreSuspEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Cancels ignoring alert events.
         *
         * @param request OperationCancelIgnoreSuspEventRequest
         * @return OperationCancelIgnoreSuspEventResponse
         */
        public OperationCancelIgnoreSuspEventResponse OperationCancelIgnoreSuspEvent(OperationCancelIgnoreSuspEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperationCancelIgnoreSuspEventWithOptions(request, runtime);
        }

        /**
         * @summary Cancels ignoring alert events.
         *
         * @param request OperationCancelIgnoreSuspEventRequest
         * @return OperationCancelIgnoreSuspEventResponse
         */
        public async Task<OperationCancelIgnoreSuspEventResponse> OperationCancelIgnoreSuspEventAsync(OperationCancelIgnoreSuspEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperationCancelIgnoreSuspEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Handles multiple exceptions at a time.
         *
         * @param request OperationSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperationSuspEventsResponse
         */
        public OperationSuspEventsResponse OperationSuspEventsWithOptions(OperationSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubOperation))
            {
                query["SubOperation"] = request.SubOperation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuspiciousEventIds))
            {
                query["SuspiciousEventIds"] = request.SuspiciousEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WarnType))
            {
                query["WarnType"] = request.WarnType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperationSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperationSuspEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Handles multiple exceptions at a time.
         *
         * @param request OperationSuspEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OperationSuspEventsResponse
         */
        public async Task<OperationSuspEventsResponse> OperationSuspEventsWithOptionsAsync(OperationSuspEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubOperation))
            {
                query["SubOperation"] = request.SubOperation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuspiciousEventIds))
            {
                query["SuspiciousEventIds"] = request.SuspiciousEventIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WarnType))
            {
                query["WarnType"] = request.WarnType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OperationSuspEvents",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OperationSuspEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Handles multiple exceptions at a time.
         *
         * @param request OperationSuspEventsRequest
         * @return OperationSuspEventsResponse
         */
        public OperationSuspEventsResponse OperationSuspEvents(OperationSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OperationSuspEventsWithOptions(request, runtime);
        }

        /**
         * @summary Handles multiple exceptions at a time.
         *
         * @param request OperationSuspEventsRequest
         * @return OperationSuspEventsResponse
         */
        public async Task<OperationSuspEventsResponse> OperationSuspEventsAsync(OperationSuspEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OperationSuspEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries image repositories by page.
         *
         * @param request PageImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PageImageRegistryResponse
         */
        public PageImageRegistryResponse PageImageRegistryWithOptions(PageImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                body["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryNameLike))
            {
                body["RegistryNameLike"] = request.RegistryNameLike;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypeInList))
            {
                body["RegistryTypeInList"] = request.RegistryTypeInList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypeNotInList))
            {
                body["RegistryTypeNotInList"] = request.RegistryTypeNotInList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageImageRegistryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries image repositories by page.
         *
         * @param request PageImageRegistryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PageImageRegistryResponse
         */
        public async Task<PageImageRegistryResponse> PageImageRegistryWithOptionsAsync(PageImageRegistryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                body["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryNameLike))
            {
                body["RegistryNameLike"] = request.RegistryNameLike;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypeInList))
            {
                body["RegistryTypeInList"] = request.RegistryTypeInList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypeNotInList))
            {
                body["RegistryTypeNotInList"] = request.RegistryTypeNotInList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageImageRegistry",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageImageRegistryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries image repositories by page.
         *
         * @param request PageImageRegistryRequest
         * @return PageImageRegistryResponse
         */
        public PageImageRegistryResponse PageImageRegistry(PageImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PageImageRegistryWithOptions(request, runtime);
        }

        /**
         * @summary Queries image repositories by page.
         *
         * @param request PageImageRegistryRequest
         * @return PageImageRegistryResponse
         */
        public async Task<PageImageRegistryResponse> PageImageRegistryAsync(PageImageRegistryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PageImageRegistryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables or disables the Security Center agent.
         *
         * @param request PauseClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PauseClientResponse
         */
        public PauseClientResponse PauseClientWithOptions(PauseClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PauseClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PauseClientResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the Security Center agent.
         *
         * @param request PauseClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PauseClientResponse
         */
        public async Task<PauseClientResponse> PauseClientWithOptionsAsync(PauseClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Value))
            {
                query["Value"] = request.Value;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PauseClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PauseClientResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables or disables the Security Center agent.
         *
         * @param request PauseClientRequest
         * @return PauseClientResponse
         */
        public PauseClientResponse PauseClient(PauseClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PauseClientWithOptions(request, runtime);
        }

        /**
         * @summary Enables or disables the Security Center agent.
         *
         * @param request PauseClientRequest
         * @return PauseClientResponse
         */
        public async Task<PauseClientResponse> PauseClientAsync(PauseClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PauseClientWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an image scan task.
         *
         * @description Before you call the PublicCreateImageScanTask operation, we recommend that you call the [PublicPreCheckImageScanTask](~~PublicPreCheckImageScanTask~~) operation to query the number of images to scan and the quota for container image scan to be consumed by the image scan task. Make sure that the remaining quota for container image scan is sufficient. This prevents the task from being stopped due to an insufficient quota.
         *
         * @param request PublicCreateImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicCreateImageScanTaskResponse
         */
        public PublicCreateImageScanTaskResponse PublicCreateImageScanTaskWithOptions(PublicCreateImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digests))
            {
                query["Digests"] = request.Digests;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIds))
            {
                query["RegionIds"] = request.RegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypes))
            {
                query["RegistryTypes"] = request.RegistryTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoIds))
            {
                query["RepoIds"] = request.RepoIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNames))
            {
                query["RepoNames"] = request.RepoNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespaces))
            {
                query["RepoNamespaces"] = request.RepoNamespaces;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicCreateImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicCreateImageScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an image scan task.
         *
         * @description Before you call the PublicCreateImageScanTask operation, we recommend that you call the [PublicPreCheckImageScanTask](~~PublicPreCheckImageScanTask~~) operation to query the number of images to scan and the quota for container image scan to be consumed by the image scan task. Make sure that the remaining quota for container image scan is sufficient. This prevents the task from being stopped due to an insufficient quota.
         *
         * @param request PublicCreateImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicCreateImageScanTaskResponse
         */
        public async Task<PublicCreateImageScanTaskResponse> PublicCreateImageScanTaskWithOptionsAsync(PublicCreateImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digests))
            {
                query["Digests"] = request.Digests;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIds))
            {
                query["RegionIds"] = request.RegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypes))
            {
                query["RegistryTypes"] = request.RegistryTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoIds))
            {
                query["RepoIds"] = request.RepoIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNames))
            {
                query["RepoNames"] = request.RepoNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespaces))
            {
                query["RepoNamespaces"] = request.RepoNamespaces;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicCreateImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicCreateImageScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an image scan task.
         *
         * @description Before you call the PublicCreateImageScanTask operation, we recommend that you call the [PublicPreCheckImageScanTask](~~PublicPreCheckImageScanTask~~) operation to query the number of images to scan and the quota for container image scan to be consumed by the image scan task. Make sure that the remaining quota for container image scan is sufficient. This prevents the task from being stopped due to an insufficient quota.
         *
         * @param request PublicCreateImageScanTaskRequest
         * @return PublicCreateImageScanTaskResponse
         */
        public PublicCreateImageScanTaskResponse PublicCreateImageScanTask(PublicCreateImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublicCreateImageScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Creates an image scan task.
         *
         * @description Before you call the PublicCreateImageScanTask operation, we recommend that you call the [PublicPreCheckImageScanTask](~~PublicPreCheckImageScanTask~~) operation to query the number of images to scan and the quota for container image scan to be consumed by the image scan task. Make sure that the remaining quota for container image scan is sufficient. This prevents the task from being stopped due to an insufficient quota.
         *
         * @param request PublicCreateImageScanTaskRequest
         * @return PublicCreateImageScanTaskResponse
         */
        public async Task<PublicCreateImageScanTaskResponse> PublicCreateImageScanTaskAsync(PublicCreateImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublicCreateImageScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 预检测，不会实际创建扫描任务，返回本次扫描涉及的镜像数量和消耗授权数量。
         *
         * @param request PublicPreCheckImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicPreCheckImageScanTaskResponse
         */
        public PublicPreCheckImageScanTaskResponse PublicPreCheckImageScanTaskWithOptions(PublicPreCheckImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digests))
            {
                query["Digests"] = request.Digests;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIds))
            {
                query["RegionIds"] = request.RegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypes))
            {
                query["RegistryTypes"] = request.RegistryTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoIds))
            {
                query["RepoIds"] = request.RepoIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNames))
            {
                query["RepoNames"] = request.RepoNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespaces))
            {
                query["RepoNamespaces"] = request.RepoNamespaces;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicPreCheckImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicPreCheckImageScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 预检测，不会实际创建扫描任务，返回本次扫描涉及的镜像数量和消耗授权数量。
         *
         * @param request PublicPreCheckImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicPreCheckImageScanTaskResponse
         */
        public async Task<PublicPreCheckImageScanTaskResponse> PublicPreCheckImageScanTaskWithOptionsAsync(PublicPreCheckImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Digests))
            {
                query["Digests"] = request.Digests;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionIds))
            {
                query["RegionIds"] = request.RegionIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryTypes))
            {
                query["RegistryTypes"] = request.RegistryTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoIds))
            {
                query["RepoIds"] = request.RepoIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNames))
            {
                query["RepoNames"] = request.RepoNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepoNamespaces))
            {
                query["RepoNamespaces"] = request.RepoNamespaces;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicPreCheckImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicPreCheckImageScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 预检测，不会实际创建扫描任务，返回本次扫描涉及的镜像数量和消耗授权数量。
         *
         * @param request PublicPreCheckImageScanTaskRequest
         * @return PublicPreCheckImageScanTaskResponse
         */
        public PublicPreCheckImageScanTaskResponse PublicPreCheckImageScanTask(PublicPreCheckImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublicPreCheckImageScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary 预检测，不会实际创建扫描任务，返回本次扫描涉及的镜像数量和消耗授权数量。
         *
         * @param request PublicPreCheckImageScanTaskRequest
         * @return PublicPreCheckImageScanTaskResponse
         */
        public async Task<PublicPreCheckImageScanTaskResponse> PublicPreCheckImageScanTaskAsync(PublicPreCheckImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublicPreCheckImageScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds images to Security Center and creates an image scan task to scan the images.
         *
         * @param request PublicSyncAndCreateImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicSyncAndCreateImageScanTaskResponse
         */
        public PublicSyncAndCreateImageScanTaskResponse PublicSyncAndCreateImageScanTaskWithOptions(PublicSyncAndCreateImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Images))
            {
                query["Images"] = request.Images;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicSyncAndCreateImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicSyncAndCreateImageScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds images to Security Center and creates an image scan task to scan the images.
         *
         * @param request PublicSyncAndCreateImageScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return PublicSyncAndCreateImageScanTaskResponse
         */
        public async Task<PublicSyncAndCreateImageScanTaskResponse> PublicSyncAndCreateImageScanTaskWithOptionsAsync(PublicSyncAndCreateImageScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Images))
            {
                query["Images"] = request.Images;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublicSyncAndCreateImageScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublicSyncAndCreateImageScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds images to Security Center and creates an image scan task to scan the images.
         *
         * @param request PublicSyncAndCreateImageScanTaskRequest
         * @return PublicSyncAndCreateImageScanTaskResponse
         */
        public PublicSyncAndCreateImageScanTaskResponse PublicSyncAndCreateImageScanTask(PublicSyncAndCreateImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublicSyncAndCreateImageScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Adds images to Security Center and creates an image scan task to scan the images.
         *
         * @param request PublicSyncAndCreateImageScanTaskRequest
         * @return PublicSyncAndCreateImageScanTaskResponse
         */
        public async Task<PublicSyncAndCreateImageScanTaskResponse> PublicSyncAndCreateImageScanTaskAsync(PublicSyncAndCreateImageScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublicSyncAndCreateImageScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the number of alert events in each attack phase.
         *
         * @param request QueryAttackCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAttackCountResponse
         */
        public QueryAttackCountResponse QueryAttackCountWithOptions(QueryAttackCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAttackCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAttackCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the number of alert events in each attack phase.
         *
         * @param request QueryAttackCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAttackCountResponse
         */
        public async Task<QueryAttackCountResponse> QueryAttackCountWithOptionsAsync(QueryAttackCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAttackCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAttackCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the number of alert events in each attack phase.
         *
         * @param request QueryAttackCountRequest
         * @return QueryAttackCountResponse
         */
        public QueryAttackCountResponse QueryAttackCount(QueryAttackCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryAttackCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries the number of alert events in each attack phase.
         *
         * @param request QueryAttackCountRequest
         * @return QueryAttackCountResponse
         */
        public async Task<QueryAttackCountResponse> QueryAttackCountAsync(QueryAttackCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryAttackCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the progress of a database scan task.
         *
         * @param request QueryDiscoverDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryDiscoverDatabaseResponse
         */
        public QueryDiscoverDatabaseResponse QueryDiscoverDatabaseWithOptions(QueryDiscoverDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateMark))
            {
                query["CreateMark"] = request.CreateMark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDiscoverDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDiscoverDatabaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a database scan task.
         *
         * @param request QueryDiscoverDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryDiscoverDatabaseResponse
         */
        public async Task<QueryDiscoverDatabaseResponse> QueryDiscoverDatabaseWithOptionsAsync(QueryDiscoverDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateMark))
            {
                query["CreateMark"] = request.CreateMark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDiscoverDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDiscoverDatabaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the progress of a database scan task.
         *
         * @param request QueryDiscoverDatabaseRequest
         * @return QueryDiscoverDatabaseResponse
         */
        public QueryDiscoverDatabaseResponse QueryDiscoverDatabase(QueryDiscoverDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDiscoverDatabaseWithOptions(request, runtime);
        }

        /**
         * @summary Queries the progress of a database scan task.
         *
         * @param request QueryDiscoverDatabaseRequest
         * @return QueryDiscoverDatabaseResponse
         */
        public async Task<QueryDiscoverDatabaseResponse> QueryDiscoverDatabaseAsync(QueryDiscoverDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDiscoverDatabaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the ID of an asset group by using the name of the asset group.
         *
         * @description You can call the QueryGroupIdByGroupName operation to query the ID of an asset group to which your assets belong by using the name of the asset group. When you call operations such as [GetSuspiciousStatistics](~~GetSuspiciousStatistics~~) and [DeleteGroup](~~DeleteGroup~~), you must specify the ID of the asset group. To query the ID of an asset group, call the QueryGroupIdByGroupName operation.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request QueryGroupIdByGroupNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryGroupIdByGroupNameResponse
         */
        public QueryGroupIdByGroupNameResponse QueryGroupIdByGroupNameWithOptions(QueryGroupIdByGroupNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryGroupIdByGroupName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryGroupIdByGroupNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the ID of an asset group by using the name of the asset group.
         *
         * @description You can call the QueryGroupIdByGroupName operation to query the ID of an asset group to which your assets belong by using the name of the asset group. When you call operations such as [GetSuspiciousStatistics](~~GetSuspiciousStatistics~~) and [DeleteGroup](~~DeleteGroup~~), you must specify the ID of the asset group. To query the ID of an asset group, call the QueryGroupIdByGroupName operation.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request QueryGroupIdByGroupNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryGroupIdByGroupNameResponse
         */
        public async Task<QueryGroupIdByGroupNameResponse> QueryGroupIdByGroupNameWithOptionsAsync(QueryGroupIdByGroupNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryGroupIdByGroupName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryGroupIdByGroupNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the ID of an asset group by using the name of the asset group.
         *
         * @description You can call the QueryGroupIdByGroupName operation to query the ID of an asset group to which your assets belong by using the name of the asset group. When you call operations such as [GetSuspiciousStatistics](~~GetSuspiciousStatistics~~) and [DeleteGroup](~~DeleteGroup~~), you must specify the ID of the asset group. To query the ID of an asset group, call the QueryGroupIdByGroupName operation.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request QueryGroupIdByGroupNameRequest
         * @return QueryGroupIdByGroupNameResponse
         */
        public QueryGroupIdByGroupNameResponse QueryGroupIdByGroupName(QueryGroupIdByGroupNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryGroupIdByGroupNameWithOptions(request, runtime);
        }

        /**
         * @summary Queries the ID of an asset group by using the name of the asset group.
         *
         * @description You can call the QueryGroupIdByGroupName operation to query the ID of an asset group to which your assets belong by using the name of the asset group. When you call operations such as [GetSuspiciousStatistics](~~GetSuspiciousStatistics~~) and [DeleteGroup](~~DeleteGroup~~), you must specify the ID of the asset group. To query the ID of an asset group, call the QueryGroupIdByGroupName operation.
         * ### Limits
         * You can call this operation up to 10 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
         *
         * @param request QueryGroupIdByGroupNameRequest
         * @return QueryGroupIdByGroupNameResponse
         */
        public async Task<QueryGroupIdByGroupNameResponse> QueryGroupIdByGroupNameAsync(QueryGroupIdByGroupNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryGroupIdByGroupNameWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whitelist rules.
         *
         * @param request QueryGroupedSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryGroupedSecurityEventMarkMissListResponse
         */
        public QueryGroupedSecurityEventMarkMissListResponse QueryGroupedSecurityEventMarkMissListWithOptions(QueryGroupedSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisposalWay))
            {
                query["DisposalWay"] = request.DisposalWay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                body["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                body["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                body["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryGroupedSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryGroupedSecurityEventMarkMissListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whitelist rules.
         *
         * @param request QueryGroupedSecurityEventMarkMissListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryGroupedSecurityEventMarkMissListResponse
         */
        public async Task<QueryGroupedSecurityEventMarkMissListResponse> QueryGroupedSecurityEventMarkMissListWithOptionsAsync(QueryGroupedSecurityEventMarkMissListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisposalWay))
            {
                query["DisposalWay"] = request.DisposalWay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                body["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                body["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                body["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                body["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryGroupedSecurityEventMarkMissList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryGroupedSecurityEventMarkMissListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whitelist rules.
         *
         * @param request QueryGroupedSecurityEventMarkMissListRequest
         * @return QueryGroupedSecurityEventMarkMissListResponse
         */
        public QueryGroupedSecurityEventMarkMissListResponse QueryGroupedSecurityEventMarkMissList(QueryGroupedSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryGroupedSecurityEventMarkMissListWithOptions(request, runtime);
        }

        /**
         * @summary Queries whitelist rules.
         *
         * @param request QueryGroupedSecurityEventMarkMissListRequest
         * @return QueryGroupedSecurityEventMarkMissListResponse
         */
        public async Task<QueryGroupedSecurityEventMarkMissListResponse> QueryGroupedSecurityEventMarkMissListAsync(QueryGroupedSecurityEventMarkMissListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryGroupedSecurityEventMarkMissListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the icons that correspond to nodes and edges.
         *
         * @param request QueryIncidentIconListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentIconListResponse
         */
        public QueryIncidentIconListResponse QueryIncidentIconListWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentIconList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentIconListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the icons that correspond to nodes and edges.
         *
         * @param request QueryIncidentIconListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentIconListResponse
         */
        public async Task<QueryIncidentIconListResponse> QueryIncidentIconListWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentIconList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentIconListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the icons that correspond to nodes and edges.
         *
         * @return QueryIncidentIconListResponse
         */
        public QueryIncidentIconListResponse QueryIncidentIconList()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentIconListWithOptions(runtime);
        }

        /**
         * @summary Queries the icons that correspond to nodes and edges.
         *
         * @return QueryIncidentIconListResponse
         */
        public async Task<QueryIncidentIconListResponse> QueryIncidentIconListAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentIconListWithOptionsAsync(runtime);
        }

        /**
         * @summary Queries whether a node can be drilled down.
         *
         * @param request QueryIncidentSubNodesCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentSubNodesCountResponse
         */
        public QueryIncidentSubNodesCountResponse QueryIncidentSubNodesCountWithOptions(QueryIncidentSubNodesCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                body["body"] = request.Body;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentSubNodesCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentSubNodesCountResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether a node can be drilled down.
         *
         * @param request QueryIncidentSubNodesCountRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentSubNodesCountResponse
         */
        public async Task<QueryIncidentSubNodesCountResponse> QueryIncidentSubNodesCountWithOptionsAsync(QueryIncidentSubNodesCountRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                body["body"] = request.Body;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentSubNodesCount",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentSubNodesCountResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether a node can be drilled down.
         *
         * @param request QueryIncidentSubNodesCountRequest
         * @return QueryIncidentSubNodesCountResponse
         */
        public QueryIncidentSubNodesCountResponse QueryIncidentSubNodesCount(QueryIncidentSubNodesCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentSubNodesCountWithOptions(request, runtime);
        }

        /**
         * @summary Queries whether a node can be drilled down.
         *
         * @param request QueryIncidentSubNodesCountRequest
         * @return QueryIncidentSubNodesCountResponse
         */
        public async Task<QueryIncidentSubNodesCountResponse> QueryIncidentSubNodesCountAsync(QueryIncidentSubNodesCountRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentSubNodesCountWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the provenance graph of an event by using the event ID.
         *
         * @param request QueryIncidentTracingDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentTracingDetailResponse
         */
        public QueryIncidentTracingDetailResponse QueryIncidentTracingDetailWithOptions(QueryIncidentTracingDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentId))
            {
                body["IncidentId"] = request.IncidentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentTracingDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentTracingDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the provenance graph of an event by using the event ID.
         *
         * @param request QueryIncidentTracingDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentTracingDetailResponse
         */
        public async Task<QueryIncidentTracingDetailResponse> QueryIncidentTracingDetailWithOptionsAsync(QueryIncidentTracingDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentId))
            {
                body["IncidentId"] = request.IncidentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentTracingDetail",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentTracingDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the provenance graph of an event by using the event ID.
         *
         * @param request QueryIncidentTracingDetailRequest
         * @return QueryIncidentTracingDetailResponse
         */
        public QueryIncidentTracingDetailResponse QueryIncidentTracingDetail(QueryIncidentTracingDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentTracingDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the provenance graph of an event by using the event ID.
         *
         * @param request QueryIncidentTracingDetailRequest
         * @return QueryIncidentTracingDetailResponse
         */
        public async Task<QueryIncidentTracingDetailResponse> QueryIncidentTracingDetailAsync(QueryIncidentTracingDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentTracingDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whether an event has a provenance graph based on the event ID.
         *
         * @param request QueryIncidentTracingJudgeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentTracingJudgeResponse
         */
        public QueryIncidentTracingJudgeResponse QueryIncidentTracingJudgeWithOptions(QueryIncidentTracingJudgeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentId))
            {
                body["IncidentId"] = request.IncidentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentTracingJudge",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentTracingJudgeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether an event has a provenance graph based on the event ID.
         *
         * @param request QueryIncidentTracingJudgeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentTracingJudgeResponse
         */
        public async Task<QueryIncidentTracingJudgeResponse> QueryIncidentTracingJudgeWithOptionsAsync(QueryIncidentTracingJudgeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IncidentId))
            {
                body["IncidentId"] = request.IncidentId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentTracingJudge",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentTracingJudgeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether an event has a provenance graph based on the event ID.
         *
         * @param request QueryIncidentTracingJudgeRequest
         * @return QueryIncidentTracingJudgeResponse
         */
        public QueryIncidentTracingJudgeResponse QueryIncidentTracingJudge(QueryIncidentTracingJudgeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentTracingJudgeWithOptions(request, runtime);
        }

        /**
         * @summary Queries whether an event has a provenance graph based on the event ID.
         *
         * @param request QueryIncidentTracingJudgeRequest
         * @return QueryIncidentTracingJudgeResponse
         */
        public async Task<QueryIncidentTracingJudgeResponse> QueryIncidentTracingJudgeAsync(QueryIncidentTracingJudgeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentTracingJudgeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the extended information about an event node.
         *
         * @param request QueryIncidentVertexExtendInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentVertexExtendInfoResponse
         */
        public QueryIncidentVertexExtendInfoResponse QueryIncidentVertexExtendInfoWithOptions(QueryIncidentVertexExtendInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Offset))
            {
                body["Offset"] = request.Offset;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RelationType))
            {
                body["RelationType"] = request.RelationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                body["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                body["VertexId"] = request.VertexId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexLabel))
            {
                body["VertexLabel"] = request.VertexLabel;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentVertexExtendInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentVertexExtendInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the extended information about an event node.
         *
         * @param request QueryIncidentVertexExtendInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentVertexExtendInfoResponse
         */
        public async Task<QueryIncidentVertexExtendInfoResponse> QueryIncidentVertexExtendInfoWithOptionsAsync(QueryIncidentVertexExtendInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Offset))
            {
                body["Offset"] = request.Offset;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RelationType))
            {
                body["RelationType"] = request.RelationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                body["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                body["VertexId"] = request.VertexId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexLabel))
            {
                body["VertexLabel"] = request.VertexLabel;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentVertexExtendInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentVertexExtendInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the extended information about an event node.
         *
         * @param request QueryIncidentVertexExtendInfoRequest
         * @return QueryIncidentVertexExtendInfoResponse
         */
        public QueryIncidentVertexExtendInfoResponse QueryIncidentVertexExtendInfo(QueryIncidentVertexExtendInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentVertexExtendInfoWithOptions(request, runtime);
        }

        /**
         * @summary Queries the extended information about an event node.
         *
         * @param request QueryIncidentVertexExtendInfoRequest
         * @return QueryIncidentVertexExtendInfoResponse
         */
        public async Task<QueryIncidentVertexExtendInfoResponse> QueryIncidentVertexExtendInfoAsync(QueryIncidentVertexExtendInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentVertexExtendInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the detailed information about an event node.
         *
         * @param tmpReq QueryIncidentVertexNodesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentVertexNodesResponse
         */
        public QueryIncidentVertexNodesResponse QueryIncidentVertexNodesWithOptions(QueryIncidentVertexNodesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            QueryIncidentVertexNodesShrinkRequest request = new QueryIncidentVertexNodesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.EdgeLabelList))
            {
                request.EdgeLabelListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.EdgeLabelList, "EdgeLabelList", "simple");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeLabelListShrink))
            {
                body["EdgeLabelList"] = request.EdgeLabelListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Offset))
            {
                body["Offset"] = request.Offset;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                body["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                body["VertexId"] = request.VertexId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexLabel))
            {
                body["VertexLabel"] = request.VertexLabel;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentVertexNodes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentVertexNodesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the detailed information about an event node.
         *
         * @param tmpReq QueryIncidentVertexNodesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryIncidentVertexNodesResponse
         */
        public async Task<QueryIncidentVertexNodesResponse> QueryIncidentVertexNodesWithOptionsAsync(QueryIncidentVertexNodesRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            QueryIncidentVertexNodesShrinkRequest request = new QueryIncidentVertexNodesShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.EdgeLabelList))
            {
                request.EdgeLabelListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.EdgeLabelList, "EdgeLabelList", "simple");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeLabelListShrink))
            {
                body["EdgeLabelList"] = request.EdgeLabelListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Offset))
            {
                body["Offset"] = request.Offset;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                body["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexId))
            {
                body["VertexId"] = request.VertexId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VertexLabel))
            {
                body["VertexLabel"] = request.VertexLabel;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryIncidentVertexNodes",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryIncidentVertexNodesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the detailed information about an event node.
         *
         * @param request QueryIncidentVertexNodesRequest
         * @return QueryIncidentVertexNodesResponse
         */
        public QueryIncidentVertexNodesResponse QueryIncidentVertexNodes(QueryIncidentVertexNodesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryIncidentVertexNodesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the detailed information about an event node.
         *
         * @param request QueryIncidentVertexNodesRequest
         * @return QueryIncidentVertexNodesResponse
         */
        public async Task<QueryIncidentVertexNodesResponse> QueryIncidentVertexNodesAsync(QueryIncidentVertexNodesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryIncidentVertexNodesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request QueryJenkinsImageRegistryPersistenceDayRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryJenkinsImageRegistryPersistenceDayResponse
         */
        public QueryJenkinsImageRegistryPersistenceDayResponse QueryJenkinsImageRegistryPersistenceDayWithOptions(QueryJenkinsImageRegistryPersistenceDayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJenkinsImageRegistryPersistenceDay",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJenkinsImageRegistryPersistenceDayResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request QueryJenkinsImageRegistryPersistenceDayRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryJenkinsImageRegistryPersistenceDayResponse
         */
        public async Task<QueryJenkinsImageRegistryPersistenceDayResponse> QueryJenkinsImageRegistryPersistenceDayWithOptionsAsync(QueryJenkinsImageRegistryPersistenceDayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJenkinsImageRegistryPersistenceDay",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJenkinsImageRegistryPersistenceDayResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request QueryJenkinsImageRegistryPersistenceDayRequest
         * @return QueryJenkinsImageRegistryPersistenceDayResponse
         */
        public QueryJenkinsImageRegistryPersistenceDayResponse QueryJenkinsImageRegistryPersistenceDay(QueryJenkinsImageRegistryPersistenceDayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryJenkinsImageRegistryPersistenceDayWithOptions(request, runtime);
        }

        /**
         * @summary Queries the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request QueryJenkinsImageRegistryPersistenceDayRequest
         * @return QueryJenkinsImageRegistryPersistenceDayResponse
         */
        public async Task<QueryJenkinsImageRegistryPersistenceDayResponse> QueryJenkinsImageRegistryPersistenceDayAsync(QueryJenkinsImageRegistryPersistenceDayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryJenkinsImageRegistryPersistenceDayWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the result of a database precheck task.
         *
         * @param request QueryPreCheckDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryPreCheckDatabaseResponse
         */
        public QueryPreCheckDatabaseResponse QueryPreCheckDatabaseWithOptions(QueryPreCheckDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPreCheckDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPreCheckDatabaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the result of a database precheck task.
         *
         * @param request QueryPreCheckDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryPreCheckDatabaseResponse
         */
        public async Task<QueryPreCheckDatabaseResponse> QueryPreCheckDatabaseWithOptionsAsync(QueryPreCheckDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPreCheckDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPreCheckDatabaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the result of a database precheck task.
         *
         * @param request QueryPreCheckDatabaseRequest
         * @return QueryPreCheckDatabaseResponse
         */
        public QueryPreCheckDatabaseResponse QueryPreCheckDatabase(QueryPreCheckDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryPreCheckDatabaseWithOptions(request, runtime);
        }

        /**
         * @summary Queries the result of a database precheck task.
         *
         * @param request QueryPreCheckDatabaseRequest
         * @return QueryPreCheckDatabaseResponse
         */
        public async Task<QueryPreCheckDatabaseResponse> QueryPreCheckDatabaseAsync(QueryPreCheckDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryPreCheckDatabaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Restarts a server. Only Windows servers are supported.
         *
         * @param request RebootMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RebootMachineResponse
         */
        public RebootMachineResponse RebootMachineWithOptions(RebootMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RebootMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RebootMachineResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Restarts a server. Only Windows servers are supported.
         *
         * @param request RebootMachineRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RebootMachineResponse
         */
        public async Task<RebootMachineResponse> RebootMachineWithOptionsAsync(RebootMachineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RebootMachine",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RebootMachineResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Restarts a server. Only Windows servers are supported.
         *
         * @param request RebootMachineRequest
         * @return RebootMachineResponse
         */
        public RebootMachineResponse RebootMachine(RebootMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RebootMachineWithOptions(request, runtime);
        }

        /**
         * @summary Restarts a server. Only Windows servers are supported.
         *
         * @param request RebootMachineRequest
         * @return RebootMachineResponse
         */
        public async Task<RebootMachineResponse> RebootMachineAsync(RebootMachineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RebootMachineWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Synchronizes assets.
         *
         * @param request RefreshAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshAssetsResponse
         */
        public RefreshAssetsResponse RefreshAssetsWithOptions(RefreshAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetSubType))
            {
                query["CloudAssetSubType"] = request.CloudAssetSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetType))
            {
                query["CloudAssetType"] = request.CloudAssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshAssetsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Synchronizes assets.
         *
         * @param request RefreshAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshAssetsResponse
         */
        public async Task<RefreshAssetsResponse> RefreshAssetsWithOptionsAsync(RefreshAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetSubType))
            {
                query["CloudAssetSubType"] = request.CloudAssetSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CloudAssetType))
            {
                query["CloudAssetType"] = request.CloudAssetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Vendor))
            {
                query["Vendor"] = request.Vendor;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshAssetsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Synchronizes assets.
         *
         * @param request RefreshAssetsRequest
         * @return RefreshAssetsResponse
         */
        public RefreshAssetsResponse RefreshAssets(RefreshAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshAssetsWithOptions(request, runtime);
        }

        /**
         * @summary Synchronizes assets.
         *
         * @param request RefreshAssetsRequest
         * @return RefreshAssetsResponse
         */
        public async Task<RefreshAssetsResponse> RefreshAssetsAsync(RefreshAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshAssetsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Refreshes the statistics of container assets in the Assets module.
         *
         * @param request RefreshContainerAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshContainerAssetsResponse
         */
        public RefreshContainerAssetsResponse RefreshContainerAssetsWithOptions(RefreshContainerAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshContainerAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshContainerAssetsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Refreshes the statistics of container assets in the Assets module.
         *
         * @param request RefreshContainerAssetsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshContainerAssetsResponse
         */
        public async Task<RefreshContainerAssetsResponse> RefreshContainerAssetsWithOptionsAsync(RefreshContainerAssetsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AssetType))
            {
                query["AssetType"] = request.AssetType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshContainerAssets",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshContainerAssetsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Refreshes the statistics of container assets in the Assets module.
         *
         * @param request RefreshContainerAssetsRequest
         * @return RefreshContainerAssetsResponse
         */
        public RefreshContainerAssetsResponse RefreshContainerAssets(RefreshContainerAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshContainerAssetsWithOptions(request, runtime);
        }

        /**
         * @summary Refreshes the statistics of container assets in the Assets module.
         *
         * @param request RefreshContainerAssetsRequest
         * @return RefreshContainerAssetsResponse
         */
        public async Task<RefreshContainerAssetsResponse> RefreshContainerAssetsAsync(RefreshContainerAssetsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshContainerAssetsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Refreshes the list of Object Storage Service (OSS) buckets.
         *
         * @param request RefreshOssBucketScanInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshOssBucketScanInfoResponse
         */
        public RefreshOssBucketScanInfoResponse RefreshOssBucketScanInfoWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshOssBucketScanInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshOssBucketScanInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Refreshes the list of Object Storage Service (OSS) buckets.
         *
         * @param request RefreshOssBucketScanInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RefreshOssBucketScanInfoResponse
         */
        public async Task<RefreshOssBucketScanInfoResponse> RefreshOssBucketScanInfoWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshOssBucketScanInfo",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshOssBucketScanInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Refreshes the list of Object Storage Service (OSS) buckets.
         *
         * @return RefreshOssBucketScanInfoResponse
         */
        public RefreshOssBucketScanInfoResponse RefreshOssBucketScanInfo()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshOssBucketScanInfoWithOptions(runtime);
        }

        /**
         * @summary Refreshes the list of Object Storage Service (OSS) buckets.
         *
         * @return RefreshOssBucketScanInfoResponse
         */
        public async Task<RefreshOssBucketScanInfoResponse> RefreshOssBucketScanInfoAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshOssBucketScanInfoWithOptionsAsync(runtime);
        }

        /**
         * @summary 释放云安全中心实例
         *
         * @param request ReleaseSasInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ReleaseSasInstanceResponse
         */
        public ReleaseSasInstanceResponse ReleaseSasInstanceWithOptions(ReleaseSasInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                body["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                body["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseSasInstance",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseSasInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 释放云安全中心实例
         *
         * @param request ReleaseSasInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ReleaseSasInstanceResponse
         */
        public async Task<ReleaseSasInstanceResponse> ReleaseSasInstanceWithOptionsAsync(ReleaseSasInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChargeType))
            {
                body["ChargeType"] = request.ChargeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                body["InstanceId"] = request.InstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseSasInstance",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseSasInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 释放云安全中心实例
         *
         * @param request ReleaseSasInstanceRequest
         * @return ReleaseSasInstanceResponse
         */
        public ReleaseSasInstanceResponse ReleaseSasInstance(ReleaseSasInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReleaseSasInstanceWithOptions(request, runtime);
        }

        /**
         * @summary 释放云安全中心实例
         *
         * @param request ReleaseSasInstanceRequest
         * @return ReleaseSasInstanceResponse
         */
        public async Task<ReleaseSasInstanceResponse> ReleaseSasInstanceAsync(ReleaseSasInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReleaseSasInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes an instance from the whitelist.
         *
         * @param request RemoveCheckInstanceResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveCheckInstanceResultWhiteListResponse
         */
        public RemoveCheckInstanceResultWhiteListResponse RemoveCheckInstanceResultWhiteListWithOptions(RemoveCheckInstanceResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveCheckInstanceResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveCheckInstanceResultWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes an instance from the whitelist.
         *
         * @param request RemoveCheckInstanceResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveCheckInstanceResultWhiteListResponse
         */
        public async Task<RemoveCheckInstanceResultWhiteListResponse> RemoveCheckInstanceResultWhiteListWithOptionsAsync(RemoveCheckInstanceResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveCheckInstanceResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveCheckInstanceResultWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes an instance from the whitelist.
         *
         * @param request RemoveCheckInstanceResultWhiteListRequest
         * @return RemoveCheckInstanceResultWhiteListResponse
         */
        public RemoveCheckInstanceResultWhiteListResponse RemoveCheckInstanceResultWhiteList(RemoveCheckInstanceResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveCheckInstanceResultWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Removes an instance from the whitelist.
         *
         * @param request RemoveCheckInstanceResultWhiteListRequest
         * @return RemoveCheckInstanceResultWhiteListResponse
         */
        public async Task<RemoveCheckInstanceResultWhiteListResponse> RemoveCheckInstanceResultWhiteListAsync(RemoveCheckInstanceResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveCheckInstanceResultWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes check items from the whitelist.
         *
         * @param request RemoveCheckResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveCheckResultWhiteListResponse
         */
        public RemoveCheckResultWhiteListResponse RemoveCheckResultWhiteListWithOptions(RemoveCheckResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                query["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveCheckResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveCheckResultWhiteListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes check items from the whitelist.
         *
         * @param request RemoveCheckResultWhiteListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveCheckResultWhiteListResponse
         */
        public async Task<RemoveCheckResultWhiteListResponse> RemoveCheckResultWhiteListWithOptionsAsync(RemoveCheckResultWhiteListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                query["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveCheckResultWhiteList",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveCheckResultWhiteListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes check items from the whitelist.
         *
         * @param request RemoveCheckResultWhiteListRequest
         * @return RemoveCheckResultWhiteListResponse
         */
        public RemoveCheckResultWhiteListResponse RemoveCheckResultWhiteList(RemoveCheckResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveCheckResultWhiteListWithOptions(request, runtime);
        }

        /**
         * @summary Removes check items from the whitelist.
         *
         * @param request RemoveCheckResultWhiteListRequest
         * @return RemoveCheckResultWhiteListResponse
         */
        public async Task<RemoveCheckResultWhiteListResponse> RemoveCheckResultWhiteListAsync(RemoveCheckResultWhiteListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveCheckResultWhiteListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Resets a honeypot.
         *
         * @param request ResetHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ResetHoneypotResponse
         */
        public ResetHoneypotResponse ResetHoneypotWithOptions(ResetHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Resets a honeypot.
         *
         * @param request ResetHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ResetHoneypotResponse
         */
        public async Task<ResetHoneypotResponse> ResetHoneypotWithOptionsAsync(ResetHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Resets a honeypot.
         *
         * @param request ResetHoneypotRequest
         * @return ResetHoneypotResponse
         */
        public ResetHoneypotResponse ResetHoneypot(ResetHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResetHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Resets a honeypot.
         *
         * @param request ResetHoneypotRequest
         * @return ResetHoneypotResponse
         */
        public async Task<ResetHoneypotResponse> ResetHoneypotAsync(ResetHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResetHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Retries agentless detection tasks.
         *
         * @param request RetryAgentlessTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RetryAgentlessTaskResponse
         */
        public RetryAgentlessTaskResponse RetryAgentlessTaskWithOptions(RetryAgentlessTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetryAgentlessTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetryAgentlessTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Retries agentless detection tasks.
         *
         * @param request RetryAgentlessTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RetryAgentlessTaskResponse
         */
        public async Task<RetryAgentlessTaskResponse> RetryAgentlessTaskWithOptionsAsync(RetryAgentlessTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetryAgentlessTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetryAgentlessTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Retries agentless detection tasks.
         *
         * @param request RetryAgentlessTaskRequest
         * @return RetryAgentlessTaskResponse
         */
        public RetryAgentlessTaskResponse RetryAgentlessTask(RetryAgentlessTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RetryAgentlessTaskWithOptions(request, runtime);
        }

        /**
         * @summary Retries agentless detection tasks.
         *
         * @param request RetryAgentlessTaskRequest
         * @return RetryAgentlessTaskResponse
         */
        public async Task<RetryAgentlessTaskResponse> RetryAgentlessTaskAsync(RetryAgentlessTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RetryAgentlessTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Retry installing the honeypot probe.
         *
         * @param request RetryInstallProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RetryInstallProbeResponse
         */
        public RetryInstallProbeResponse RetryInstallProbeWithOptions(RetryInstallProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetryInstallProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetryInstallProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Retry installing the honeypot probe.
         *
         * @param request RetryInstallProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RetryInstallProbeResponse
         */
        public async Task<RetryInstallProbeResponse> RetryInstallProbeWithOptionsAsync(RetryInstallProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetryInstallProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetryInstallProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Retry installing the honeypot probe.
         *
         * @param request RetryInstallProbeRequest
         * @return RetryInstallProbeResponse
         */
        public RetryInstallProbeResponse RetryInstallProbe(RetryInstallProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RetryInstallProbeWithOptions(request, runtime);
        }

        /**
         * @summary Retry installing the honeypot probe.
         *
         * @param request RetryInstallProbeRequest
         * @return RetryInstallProbeResponse
         */
        public async Task<RetryInstallProbeResponse> RetryInstallProbeAsync(RetryInstallProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RetryInstallProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 取消对文件隔离箱中文件的隔离
         *
         * @param request RollbackSuspEventQuaraFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RollbackSuspEventQuaraFileResponse
         */
        public RollbackSuspEventQuaraFileResponse RollbackSuspEventQuaraFileWithOptions(RollbackSuspEventQuaraFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileId))
            {
                query["QuaraFileId"] = request.QuaraFileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RollbackSuspEventQuaraFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RollbackSuspEventQuaraFileResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 取消对文件隔离箱中文件的隔离
         *
         * @param request RollbackSuspEventQuaraFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RollbackSuspEventQuaraFileResponse
         */
        public async Task<RollbackSuspEventQuaraFileResponse> RollbackSuspEventQuaraFileWithOptionsAsync(RollbackSuspEventQuaraFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QuaraFileId))
            {
                query["QuaraFileId"] = request.QuaraFileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RollbackSuspEventQuaraFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RollbackSuspEventQuaraFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 取消对文件隔离箱中文件的隔离
         *
         * @param request RollbackSuspEventQuaraFileRequest
         * @return RollbackSuspEventQuaraFileResponse
         */
        public RollbackSuspEventQuaraFileResponse RollbackSuspEventQuaraFile(RollbackSuspEventQuaraFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RollbackSuspEventQuaraFileWithOptions(request, runtime);
        }

        /**
         * @summary 取消对文件隔离箱中文件的隔离
         *
         * @param request RollbackSuspEventQuaraFileRequest
         * @return RollbackSuspEventQuaraFileResponse
         */
        public async Task<RollbackSuspEventQuaraFileResponse> RollbackSuspEventQuaraFileAsync(RollbackSuspEventQuaraFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RollbackSuspEventQuaraFileWithOptionsAsync(request, runtime);
        }

        /**
         * @summary SasInstallCode
         *
         * @param request SasInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SasInstallCodeResponse
         */
        public SasInstallCodeResponse SasInstallCodeWithOptions(SasInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SasInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SasInstallCodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary SasInstallCode
         *
         * @param request SasInstallCodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SasInstallCodeResponse
         */
        public async Task<SasInstallCodeResponse> SasInstallCodeWithOptionsAsync(SasInstallCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SasInstallCode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SasInstallCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary SasInstallCode
         *
         * @param request SasInstallCodeRequest
         * @return SasInstallCodeResponse
         */
        public SasInstallCodeResponse SasInstallCode(SasInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SasInstallCodeWithOptions(request, runtime);
        }

        /**
         * @summary SasInstallCode
         *
         * @param request SasInstallCodeRequest
         * @return SasInstallCodeResponse
         */
        public async Task<SasInstallCodeResponse> SasInstallCodeAsync(SasInstallCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SasInstallCodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Saves a baseline check policy for images.
         *
         * @param request SaveImageBaselineStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveImageBaselineStrategyResponse
         */
        public SaveImageBaselineStrategyResponse SaveImageBaselineStrategyWithOptions(SaveImageBaselineStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemList))
            {
                query["BaselineItemList"] = request.BaselineItemList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveImageBaselineStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveImageBaselineStrategyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Saves a baseline check policy for images.
         *
         * @param request SaveImageBaselineStrategyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveImageBaselineStrategyResponse
         */
        public async Task<SaveImageBaselineStrategyResponse> SaveImageBaselineStrategyWithOptionsAsync(SaveImageBaselineStrategyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BaselineItemList))
            {
                query["BaselineItemList"] = request.BaselineItemList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveImageBaselineStrategy",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveImageBaselineStrategyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Saves a baseline check policy for images.
         *
         * @param request SaveImageBaselineStrategyRequest
         * @return SaveImageBaselineStrategyResponse
         */
        public SaveImageBaselineStrategyResponse SaveImageBaselineStrategy(SaveImageBaselineStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SaveImageBaselineStrategyWithOptions(request, runtime);
        }

        /**
         * @summary Saves a baseline check policy for images.
         *
         * @param request SaveImageBaselineStrategyRequest
         * @return SaveImageBaselineStrategyResponse
         */
        public async Task<SaveImageBaselineStrategyResponse> SaveImageBaselineStrategyAsync(SaveImageBaselineStrategyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SaveImageBaselineStrategyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Saves alert settings.
         *
         * @param request SaveSuspEventUserSettingRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveSuspEventUserSettingResponse
         */
        public SaveSuspEventUserSettingResponse SaveSuspEventUserSettingWithOptions(SaveSuspEventUserSettingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LevelsOn))
            {
                query["LevelsOn"] = request.LevelsOn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveSuspEventUserSetting",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveSuspEventUserSettingResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Saves alert settings.
         *
         * @param request SaveSuspEventUserSettingRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveSuspEventUserSettingResponse
         */
        public async Task<SaveSuspEventUserSettingResponse> SaveSuspEventUserSettingWithOptionsAsync(SaveSuspEventUserSettingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LevelsOn))
            {
                query["LevelsOn"] = request.LevelsOn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveSuspEventUserSetting",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveSuspEventUserSettingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Saves alert settings.
         *
         * @param request SaveSuspEventUserSettingRequest
         * @return SaveSuspEventUserSettingResponse
         */
        public SaveSuspEventUserSettingResponse SaveSuspEventUserSetting(SaveSuspEventUserSettingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SaveSuspEventUserSettingWithOptions(request, runtime);
        }

        /**
         * @summary Saves alert settings.
         *
         * @param request SaveSuspEventUserSettingRequest
         * @return SaveSuspEventUserSettingResponse
         */
        public async Task<SaveSuspEventUserSettingResponse> SaveSuspEventUserSettingAsync(SaveSuspEventUserSettingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SaveSuspEventUserSettingWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configures the status of the container firewall feature.
         *
         * @param request SetClusterInterceptionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetClusterInterceptionConfigResponse
         */
        public SetClusterInterceptionConfigResponse SetClusterInterceptionConfigWithOptions(SetClusterInterceptionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchOn))
            {
                query["SwitchOn"] = request.SwitchOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchType))
            {
                query["SwitchType"] = request.SwitchType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetClusterInterceptionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetClusterInterceptionConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configures the status of the container firewall feature.
         *
         * @param request SetClusterInterceptionConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetClusterInterceptionConfigResponse
         */
        public async Task<SetClusterInterceptionConfigResponse> SetClusterInterceptionConfigWithOptionsAsync(SetClusterInterceptionConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchOn))
            {
                query["SwitchOn"] = request.SwitchOn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchType))
            {
                query["SwitchType"] = request.SwitchType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetClusterInterceptionConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetClusterInterceptionConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configures the status of the container firewall feature.
         *
         * @param request SetClusterInterceptionConfigRequest
         * @return SetClusterInterceptionConfigResponse
         */
        public SetClusterInterceptionConfigResponse SetClusterInterceptionConfig(SetClusterInterceptionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetClusterInterceptionConfigWithOptions(request, runtime);
        }

        /**
         * @summary Configures the status of the container firewall feature.
         *
         * @param request SetClusterInterceptionConfigRequest
         * @return SetClusterInterceptionConfigResponse
         */
        public async Task<SetClusterInterceptionConfigResponse> SetClusterInterceptionConfigAsync(SetClusterInterceptionConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetClusterInterceptionConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the status of sensitive files in an image.
         *
         * @param request SetImageSensitiveFileStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetImageSensitiveFileStatusResponse
         */
        public SetImageSensitiveFileStatusResponse SetImageSensitiveFileStatusWithOptions(SetImageSensitiveFileStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuids))
            {
                query["ImageUuids"] = request.ImageUuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetImageSensitiveFileStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetImageSensitiveFileStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the status of sensitive files in an image.
         *
         * @param request SetImageSensitiveFileStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetImageSensitiveFileStatusResponse
         */
        public async Task<SetImageSensitiveFileStatusResponse> SetImageSensitiveFileStatusWithOptionsAsync(SetImageSensitiveFileStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageUuids))
            {
                query["ImageUuids"] = request.ImageUuids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SensitiveFileKey))
            {
                query["SensitiveFileKey"] = request.SensitiveFileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetImageSensitiveFileStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetImageSensitiveFileStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the status of sensitive files in an image.
         *
         * @param request SetImageSensitiveFileStatusRequest
         * @return SetImageSensitiveFileStatusResponse
         */
        public SetImageSensitiveFileStatusResponse SetImageSensitiveFileStatus(SetImageSensitiveFileStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetImageSensitiveFileStatusWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the status of sensitive files in an image.
         *
         * @param request SetImageSensitiveFileStatusRequest
         * @return SetImageSensitiveFileStatusResponse
         */
        public async Task<SetImageSensitiveFileStatusResponse> SetImageSensitiveFileStatusAsync(SetImageSensitiveFileStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetImageSensitiveFileStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Specifies a cycle to scan images for image repositories. Unit: days.
         *
         * @param request SetRegistryScanDayNumRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetRegistryScanDayNumResponse
         */
        public SetRegistryScanDayNumResponse SetRegistryScanDayNumWithOptions(SetRegistryScanDayNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayNum))
            {
                query["ScanDayNum"] = request.ScanDayNum;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetRegistryScanDayNum",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetRegistryScanDayNumResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Specifies a cycle to scan images for image repositories. Unit: days.
         *
         * @param request SetRegistryScanDayNumRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetRegistryScanDayNumResponse
         */
        public async Task<SetRegistryScanDayNumResponse> SetRegistryScanDayNumWithOptionsAsync(SetRegistryScanDayNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayNum))
            {
                query["ScanDayNum"] = request.ScanDayNum;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetRegistryScanDayNum",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetRegistryScanDayNumResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Specifies a cycle to scan images for image repositories. Unit: days.
         *
         * @param request SetRegistryScanDayNumRequest
         * @return SetRegistryScanDayNumResponse
         */
        public SetRegistryScanDayNumResponse SetRegistryScanDayNum(SetRegistryScanDayNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetRegistryScanDayNumWithOptions(request, runtime);
        }

        /**
         * @summary Specifies a cycle to scan images for image repositories. Unit: days.
         *
         * @param request SetRegistryScanDayNumRequest
         * @return SetRegistryScanDayNumResponse
         */
        public async Task<SetRegistryScanDayNumResponse> SetRegistryScanDayNumAsync(SetRegistryScanDayNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetRegistryScanDayNumWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Configure the check rules of sensitive files.
         *
         * @param request SetSensitiveDefineRuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetSensitiveDefineRuleConfigResponse
         */
        public SetSensitiveDefineRuleConfigResponse SetSensitiveDefineRuleConfigWithOptions(SetSensitiveDefineRuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetSensitiveDefineRuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetSensitiveDefineRuleConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Configure the check rules of sensitive files.
         *
         * @param request SetSensitiveDefineRuleConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetSensitiveDefineRuleConfigResponse
         */
        public async Task<SetSensitiveDefineRuleConfigResponse> SetSensitiveDefineRuleConfigWithOptionsAsync(SetSensitiveDefineRuleConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetSensitiveDefineRuleConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetSensitiveDefineRuleConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Configure the check rules of sensitive files.
         *
         * @param request SetSensitiveDefineRuleConfigRequest
         * @return SetSensitiveDefineRuleConfigResponse
         */
        public SetSensitiveDefineRuleConfigResponse SetSensitiveDefineRuleConfig(SetSensitiveDefineRuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetSensitiveDefineRuleConfigWithOptions(request, runtime);
        }

        /**
         * @summary Configure the check rules of sensitive files.
         *
         * @param request SetSensitiveDefineRuleConfigRequest
         * @return SetSensitiveDefineRuleConfigResponse
         */
        public async Task<SetSensitiveDefineRuleConfigResponse> SetSensitiveDefineRuleConfigAsync(SetSensitiveDefineRuleConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetSensitiveDefineRuleConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI StartBaselineSecurityCheck is deprecated
         *
         * @summary Checks cloud service configurations. You can check all items or a single item and verify whether an item is checked.
         *
         * @param request StartBaselineSecurityCheckRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartBaselineSecurityCheckResponse
         */
        // Deprecated
        public StartBaselineSecurityCheckResponse StartBaselineSecurityCheckWithOptions(StartBaselineSecurityCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemIds))
            {
                query["ItemIds"] = request.ItemIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartBaselineSecurityCheck",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartBaselineSecurityCheckResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI StartBaselineSecurityCheck is deprecated
         *
         * @summary Checks cloud service configurations. You can check all items or a single item and verify whether an item is checked.
         *
         * @param request StartBaselineSecurityCheckRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartBaselineSecurityCheckResponse
         */
        // Deprecated
        public async Task<StartBaselineSecurityCheckResponse> StartBaselineSecurityCheckWithOptionsAsync(StartBaselineSecurityCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ItemIds))
            {
                query["ItemIds"] = request.ItemIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceOwnerId))
            {
                query["ResourceOwnerId"] = request.ResourceOwnerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartBaselineSecurityCheck",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartBaselineSecurityCheckResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI StartBaselineSecurityCheck is deprecated
         *
         * @summary Checks cloud service configurations. You can check all items or a single item and verify whether an item is checked.
         *
         * @param request StartBaselineSecurityCheckRequest
         * @return StartBaselineSecurityCheckResponse
         */
        // Deprecated
        public StartBaselineSecurityCheckResponse StartBaselineSecurityCheck(StartBaselineSecurityCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartBaselineSecurityCheckWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI StartBaselineSecurityCheck is deprecated
         *
         * @summary Checks cloud service configurations. You can check all items or a single item and verify whether an item is checked.
         *
         * @param request StartBaselineSecurityCheckRequest
         * @return StartBaselineSecurityCheckResponse
         */
        // Deprecated
        public async Task<StartBaselineSecurityCheckResponse> StartBaselineSecurityCheckAsync(StartBaselineSecurityCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartBaselineSecurityCheckWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Starts a database scan task.
         *
         * @param request StartDiscoverDatabaseTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartDiscoverDatabaseTaskResponse
         */
        public StartDiscoverDatabaseTaskResponse StartDiscoverDatabaseTaskWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartDiscoverDatabaseTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartDiscoverDatabaseTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Starts a database scan task.
         *
         * @param request StartDiscoverDatabaseTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartDiscoverDatabaseTaskResponse
         */
        public async Task<StartDiscoverDatabaseTaskResponse> StartDiscoverDatabaseTaskWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartDiscoverDatabaseTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartDiscoverDatabaseTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Starts a database scan task.
         *
         * @return StartDiscoverDatabaseTaskResponse
         */
        public StartDiscoverDatabaseTaskResponse StartDiscoverDatabaseTask()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartDiscoverDatabaseTaskWithOptions(runtime);
        }

        /**
         * @summary Starts a database scan task.
         *
         * @return StartDiscoverDatabaseTaskResponse
         */
        public async Task<StartDiscoverDatabaseTaskResponse> StartDiscoverDatabaseTaskAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartDiscoverDatabaseTaskWithOptionsAsync(runtime);
        }

        /**
         * @summary Starts a honeypot.
         *
         * @param request StartHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartHoneypotResponse
         */
        public StartHoneypotResponse StartHoneypotWithOptions(StartHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Starts a honeypot.
         *
         * @param request StartHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartHoneypotResponse
         */
        public async Task<StartHoneypotResponse> StartHoneypotWithOptionsAsync(StartHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Starts a honeypot.
         *
         * @param request StartHoneypotRequest
         * @return StartHoneypotResponse
         */
        public StartHoneypotResponse StartHoneypot(StartHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Starts a honeypot.
         *
         * @param request StartHoneypotRequest
         * @return StartHoneypotResponse
         */
        public async Task<StartHoneypotResponse> StartHoneypotAsync(StartHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Starts a database precheck task.
         *
         * @param request StartPreCheckDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartPreCheckDatabaseResponse
         */
        public StartPreCheckDatabaseResponse StartPreCheckDatabaseWithOptions(StartPreCheckDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartPreCheckDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartPreCheckDatabaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Starts a database precheck task.
         *
         * @param request StartPreCheckDatabaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartPreCheckDatabaseResponse
         */
        public async Task<StartPreCheckDatabaseResponse> StartPreCheckDatabaseWithOptionsAsync(StartPreCheckDatabaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DatabaseType))
            {
                query["DatabaseType"] = request.DatabaseType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceUuid))
            {
                query["InstanceUuid"] = request.InstanceUuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniRegionId))
            {
                query["UniRegionId"] = request.UniRegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartPreCheckDatabase",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartPreCheckDatabaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Starts a database precheck task.
         *
         * @param request StartPreCheckDatabaseRequest
         * @return StartPreCheckDatabaseResponse
         */
        public StartPreCheckDatabaseResponse StartPreCheckDatabase(StartPreCheckDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartPreCheckDatabaseWithOptions(request, runtime);
        }

        /**
         * @summary Starts a database precheck task.
         *
         * @param request StartPreCheckDatabaseRequest
         * @return StartPreCheckDatabaseResponse
         */
        public async Task<StartPreCheckDatabaseResponse> StartPreCheckDatabaseAsync(StartPreCheckDatabaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartPreCheckDatabaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Performs a virus scan task on a server or multiple servers.
         *
         * @param request StartVirusScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartVirusScanTaskResponse
         */
        public StartVirusScanTaskResponse StartVirusScanTaskWithOptions(StartVirusScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartVirusScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartVirusScanTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Performs a virus scan task on a server or multiple servers.
         *
         * @param request StartVirusScanTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartVirusScanTaskResponse
         */
        public async Task<StartVirusScanTaskResponse> StartVirusScanTaskWithOptionsAsync(StartVirusScanTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInfo))
            {
                query["TargetInfo"] = request.TargetInfo;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartVirusScanTask",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartVirusScanTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Performs a virus scan task on a server or multiple servers.
         *
         * @param request StartVirusScanTaskRequest
         * @return StartVirusScanTaskResponse
         */
        public StartVirusScanTaskResponse StartVirusScanTask(StartVirusScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartVirusScanTaskWithOptions(request, runtime);
        }

        /**
         * @summary Performs a virus scan task on a server or multiple servers.
         *
         * @param request StartVirusScanTaskRequest
         * @return StartVirusScanTaskResponse
         */
        public async Task<StartVirusScanTaskResponse> StartVirusScanTaskAsync(StartVirusScanTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartVirusScanTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Stops a honeypot.
         *
         * @param request StopHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopHoneypotResponse
         */
        public StopHoneypotResponse StopHoneypotWithOptions(StopHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Stops a honeypot.
         *
         * @param request StopHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopHoneypotResponse
         */
        public async Task<StopHoneypotResponse> StopHoneypotWithOptionsAsync(StopHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Stops a honeypot.
         *
         * @param request StopHoneypotRequest
         * @return StopHoneypotResponse
         */
        public StopHoneypotResponse StopHoneypot(StopHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Stops a honeypot.
         *
         * @param request StopHoneypotRequest
         * @return StopHoneypotResponse
         */
        public async Task<StopHoneypotResponse> StopHoneypotAsync(StopHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Submits a configuration assessment task.
         *
         * @param request SubmitCheckRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SubmitCheckResponse
         */
        public SubmitCheckResponse SubmitCheckWithOptions(SubmitCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SubmitCheck",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SubmitCheckResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Submits a configuration assessment task.
         *
         * @param request SubmitCheckRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SubmitCheckResponse
         */
        public async Task<SubmitCheckResponse> SubmitCheckWithOptionsAsync(SubmitCheckRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanRange))
            {
                query["ScanRange"] = request.ScanRange;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SubmitCheck",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SubmitCheckResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Submits a configuration assessment task.
         *
         * @param request SubmitCheckRequest
         * @return SubmitCheckResponse
         */
        public SubmitCheckResponse SubmitCheck(SubmitCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SubmitCheckWithOptions(request, runtime);
        }

        /**
         * @summary Submits a configuration assessment task.
         *
         * @param request SubmitCheckRequest
         * @return SubmitCheckResponse
         */
        public async Task<SubmitCheckResponse> SubmitCheckAsync(SubmitCheckRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SubmitCheckWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Cancel marking for members. You can call this operation to remove followed members from the list. In the Security Center console, the drop-down list above the left-side navigation pane no longer displays the members.
         *
         * @param request UnMarkMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UnMarkMonitorAccountsResponse
         */
        public UnMarkMonitorAccountsResponse UnMarkMonitorAccountsWithOptions(UnMarkMonitorAccountsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountIds))
            {
                query["AccountIds"] = request.AccountIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnMarkMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnMarkMonitorAccountsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Cancel marking for members. You can call this operation to remove followed members from the list. In the Security Center console, the drop-down list above the left-side navigation pane no longer displays the members.
         *
         * @param request UnMarkMonitorAccountsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UnMarkMonitorAccountsResponse
         */
        public async Task<UnMarkMonitorAccountsResponse> UnMarkMonitorAccountsWithOptionsAsync(UnMarkMonitorAccountsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccountIds))
            {
                query["AccountIds"] = request.AccountIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnMarkMonitorAccounts",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnMarkMonitorAccountsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Cancel marking for members. You can call this operation to remove followed members from the list. In the Security Center console, the drop-down list above the left-side navigation pane no longer displays the members.
         *
         * @param request UnMarkMonitorAccountsRequest
         * @return UnMarkMonitorAccountsResponse
         */
        public UnMarkMonitorAccountsResponse UnMarkMonitorAccounts(UnMarkMonitorAccountsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnMarkMonitorAccountsWithOptions(request, runtime);
        }

        /**
         * @summary Cancel marking for members. You can call this operation to remove followed members from the list. In the Security Center console, the drop-down list above the left-side navigation pane no longer displays the members.
         *
         * @param request UnMarkMonitorAccountsRequest
         * @return UnMarkMonitorAccountsResponse
         */
        public async Task<UnMarkMonitorAccountsResponse> UnMarkMonitorAccountsAsync(UnMarkMonitorAccountsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnMarkMonitorAccountsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Unbinds servers that are not deployed on Alibaba Cloud from Security Center.
         *
         * @description If you no longer require protection for servers that are not deployed on Alibaba Cloud, you can call this operation to unbind the servers from Security Center. After you unbind a server that is not deployed on Alibaba Cloud from Security Center, the server no longer consumes the quota of protected servers or protected server vCPUs. This way, you can install the Security Center agent on other servers to meet your business requirements.
         * > You can unbind only the servers that are not deployed on Alibaba Cloud from Security Center. If you use an Alibaba Cloud Elastic Compute Service (ECS) instance, you do not need to unbind the ECS instance. If you uninstall the Security Center agent from an ECS instance, the ECS instance still exists as a disconnected server in the asset list of the Security Center console. The ECS instance is not removed from the asset list.
         * **Prerequisites**
         * *   The server that you want to unbind from Security Center is not deployed on Alibaba Cloud and the Security Center agent is disabled for the server. In this case, the agent is in the Close state and Security Center does not protect the server. You can call the [PauseClient](~~PauseClient~~) operation to disable the agent.
         * *   The client protection feature is disabled for the server that you want to unbind from Security Center. For more information about how to disable the client protection feature, see [Use the client protection feature](https://www.alibabacloud.com/help/en/security-center/latest/local-file-detection-engine).
         *
         * @param request UnbindAegisRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UnbindAegisResponse
         */
        public UnbindAegisResponse UnbindAegisWithOptions(UnbindAegisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindAegis",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindAegisResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Unbinds servers that are not deployed on Alibaba Cloud from Security Center.
         *
         * @description If you no longer require protection for servers that are not deployed on Alibaba Cloud, you can call this operation to unbind the servers from Security Center. After you unbind a server that is not deployed on Alibaba Cloud from Security Center, the server no longer consumes the quota of protected servers or protected server vCPUs. This way, you can install the Security Center agent on other servers to meet your business requirements.
         * > You can unbind only the servers that are not deployed on Alibaba Cloud from Security Center. If you use an Alibaba Cloud Elastic Compute Service (ECS) instance, you do not need to unbind the ECS instance. If you uninstall the Security Center agent from an ECS instance, the ECS instance still exists as a disconnected server in the asset list of the Security Center console. The ECS instance is not removed from the asset list.
         * **Prerequisites**
         * *   The server that you want to unbind from Security Center is not deployed on Alibaba Cloud and the Security Center agent is disabled for the server. In this case, the agent is in the Close state and Security Center does not protect the server. You can call the [PauseClient](~~PauseClient~~) operation to disable the agent.
         * *   The client protection feature is disabled for the server that you want to unbind from Security Center. For more information about how to disable the client protection feature, see [Use the client protection feature](https://www.alibabacloud.com/help/en/security-center/latest/local-file-detection-engine).
         *
         * @param request UnbindAegisRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UnbindAegisResponse
         */
        public async Task<UnbindAegisResponse> UnbindAegisWithOptionsAsync(UnbindAegisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindAegis",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindAegisResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Unbinds servers that are not deployed on Alibaba Cloud from Security Center.
         *
         * @description If you no longer require protection for servers that are not deployed on Alibaba Cloud, you can call this operation to unbind the servers from Security Center. After you unbind a server that is not deployed on Alibaba Cloud from Security Center, the server no longer consumes the quota of protected servers or protected server vCPUs. This way, you can install the Security Center agent on other servers to meet your business requirements.
         * > You can unbind only the servers that are not deployed on Alibaba Cloud from Security Center. If you use an Alibaba Cloud Elastic Compute Service (ECS) instance, you do not need to unbind the ECS instance. If you uninstall the Security Center agent from an ECS instance, the ECS instance still exists as a disconnected server in the asset list of the Security Center console. The ECS instance is not removed from the asset list.
         * **Prerequisites**
         * *   The server that you want to unbind from Security Center is not deployed on Alibaba Cloud and the Security Center agent is disabled for the server. In this case, the agent is in the Close state and Security Center does not protect the server. You can call the [PauseClient](~~PauseClient~~) operation to disable the agent.
         * *   The client protection feature is disabled for the server that you want to unbind from Security Center. For more information about how to disable the client protection feature, see [Use the client protection feature](https://www.alibabacloud.com/help/en/security-center/latest/local-file-detection-engine).
         *
         * @param request UnbindAegisRequest
         * @return UnbindAegisResponse
         */
        public UnbindAegisResponse UnbindAegis(UnbindAegisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindAegisWithOptions(request, runtime);
        }

        /**
         * @summary Unbinds servers that are not deployed on Alibaba Cloud from Security Center.
         *
         * @description If you no longer require protection for servers that are not deployed on Alibaba Cloud, you can call this operation to unbind the servers from Security Center. After you unbind a server that is not deployed on Alibaba Cloud from Security Center, the server no longer consumes the quota of protected servers or protected server vCPUs. This way, you can install the Security Center agent on other servers to meet your business requirements.
         * > You can unbind only the servers that are not deployed on Alibaba Cloud from Security Center. If you use an Alibaba Cloud Elastic Compute Service (ECS) instance, you do not need to unbind the ECS instance. If you uninstall the Security Center agent from an ECS instance, the ECS instance still exists as a disconnected server in the asset list of the Security Center console. The ECS instance is not removed from the asset list.
         * **Prerequisites**
         * *   The server that you want to unbind from Security Center is not deployed on Alibaba Cloud and the Security Center agent is disabled for the server. In this case, the agent is in the Close state and Security Center does not protect the server. You can call the [PauseClient](~~PauseClient~~) operation to disable the agent.
         * *   The client protection feature is disabled for the server that you want to unbind from Security Center. For more information about how to disable the client protection feature, see [Use the client protection feature](https://www.alibabacloud.com/help/en/security-center/latest/local-file-detection-engine).
         *
         * @param request UnbindAegisRequest
         * @return UnbindAegisResponse
         */
        public async Task<UnbindAegisResponse> UnbindAegisAsync(UnbindAegisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindAegisWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uninstalls the anti-ransomware agent.
         *
         * @param request UninstallBackupClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallBackupClientResponse
         */
        public UninstallBackupClientResponse UninstallBackupClientWithOptions(UninstallBackupClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallBackupClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallBackupClientResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the anti-ransomware agent.
         *
         * @param request UninstallBackupClientRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallBackupClientResponse
         */
        public async Task<UninstallBackupClientResponse> UninstallBackupClientWithOptionsAsync(UninstallBackupClientRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyVersion))
            {
                query["PolicyVersion"] = request.PolicyVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UuidList))
            {
                query["UuidList"] = request.UuidList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallBackupClient",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallBackupClientResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the anti-ransomware agent.
         *
         * @param request UninstallBackupClientRequest
         * @return UninstallBackupClientResponse
         */
        public UninstallBackupClientResponse UninstallBackupClient(UninstallBackupClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UninstallBackupClientWithOptions(request, runtime);
        }

        /**
         * @summary Uninstalls the anti-ransomware agent.
         *
         * @param request UninstallBackupClientRequest
         * @return UninstallBackupClientResponse
         */
        public async Task<UninstallBackupClientResponse> UninstallBackupClientAsync(UninstallBackupClientRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UninstallBackupClientWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uninstalls the Runtime Application Self-Protection (RASP) agent that is installed on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request UninstallRaspAttachRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallRaspAttachResponse
         */
        public UninstallRaspAttachResponse UninstallRaspAttachWithOptions(UninstallRaspAttachRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallRaspAttach",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallRaspAttachResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the Runtime Application Self-Protection (RASP) agent that is installed on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request UninstallRaspAttachRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallRaspAttachResponse
         */
        public async Task<UninstallRaspAttachResponse> UninstallRaspAttachWithOptionsAsync(UninstallRaspAttachRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EcsUUIDList))
            {
                query["EcsUUIDList"] = request.EcsUUIDList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallRaspAttach",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallRaspAttachResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the Runtime Application Self-Protection (RASP) agent that is installed on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request UninstallRaspAttachRequest
         * @return UninstallRaspAttachResponse
         */
        public UninstallRaspAttachResponse UninstallRaspAttach(UninstallRaspAttachRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UninstallRaspAttachWithOptions(request, runtime);
        }

        /**
         * @summary Uninstalls the Runtime Application Self-Protection (RASP) agent that is installed on Elastic Compute Service (ECS) instances to enable automatic application protection.
         *
         * @param request UninstallRaspAttachRequest
         * @return UninstallRaspAttachResponse
         */
        public async Task<UninstallRaspAttachResponse> UninstallRaspAttachAsync(UninstallRaspAttachRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UninstallRaspAttachWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uninstalls the database backup agent.
         *
         * @param request UninstallUniBackupAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallUniBackupAgentResponse
         */
        public UninstallUniBackupAgentResponse UninstallUniBackupAgentWithOptions(UninstallUniBackupAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallUniBackupAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallUniBackupAgentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the database backup agent.
         *
         * @param request UninstallUniBackupAgentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallUniBackupAgentResponse
         */
        public async Task<UninstallUniBackupAgentResponse> UninstallUniBackupAgentWithOptionsAsync(UninstallUniBackupAgentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PolicyId))
            {
                query["PolicyId"] = request.PolicyId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallUniBackupAgent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallUniBackupAgentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uninstalls the database backup agent.
         *
         * @param request UninstallUniBackupAgentRequest
         * @return UninstallUniBackupAgentResponse
         */
        public UninstallUniBackupAgentResponse UninstallUniBackupAgent(UninstallUniBackupAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UninstallUniBackupAgentWithOptions(request, runtime);
        }

        /**
         * @summary Uninstalls the database backup agent.
         *
         * @param request UninstallUniBackupAgentRequest
         * @return UninstallUniBackupAgentResponse
         */
        public async Task<UninstallUniBackupAgentResponse> UninstallUniBackupAgentAsync(UninstallUniBackupAgentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UninstallUniBackupAgentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the status of the honeypot installation time.
         *
         * @param request UpdateAlarmEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlarmEventResponse
         */
        public UpdateAlarmEventResponse UpdateAlarmEventWithOptions(UpdateAlarmEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmEventIdList))
            {
                body["AlarmEventIdList"] = request.AlarmEventIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                body["OperationCode"] = request.OperationCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlarmEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlarmEventResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the status of the honeypot installation time.
         *
         * @param request UpdateAlarmEventRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlarmEventResponse
         */
        public async Task<UpdateAlarmEventResponse> UpdateAlarmEventWithOptionsAsync(UpdateAlarmEventRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmEventIdList))
            {
                body["AlarmEventIdList"] = request.AlarmEventIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                body["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationCode))
            {
                body["OperationCode"] = request.OperationCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlarmEvent",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlarmEventResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the status of the honeypot installation time.
         *
         * @param request UpdateAlarmEventRequest
         * @return UpdateAlarmEventResponse
         */
        public UpdateAlarmEventResponse UpdateAlarmEvent(UpdateAlarmEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateAlarmEventWithOptions(request, runtime);
        }

        /**
         * @summary Updates the status of the honeypot installation time.
         *
         * @param request UpdateAlarmEventRequest
         * @return UpdateAlarmEventResponse
         */
        public async Task<UpdateAlarmEventResponse> UpdateAlarmEventAsync(UpdateAlarmEventRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateAlarmEventWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies alerting settings for servers.
         *
         * @param request UpdateClientAlertModeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateClientAlertModeResponse
         */
        public UpdateClientAlertModeResponse UpdateClientAlertModeWithOptions(UpdateClientAlertModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateClientAlertMode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateClientAlertModeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies alerting settings for servers.
         *
         * @param request UpdateClientAlertModeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateClientAlertModeResponse
         */
        public async Task<UpdateClientAlertModeResponse> UpdateClientAlertModeWithOptionsAsync(UpdateClientAlertModeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Mode))
            {
                query["Mode"] = request.Mode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateClientAlertMode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateClientAlertModeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies alerting settings for servers.
         *
         * @param request UpdateClientAlertModeRequest
         * @return UpdateClientAlertModeResponse
         */
        public UpdateClientAlertModeResponse UpdateClientAlertMode(UpdateClientAlertModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateClientAlertModeWithOptions(request, runtime);
        }

        /**
         * @summary Modifies alerting settings for servers.
         *
         * @param request UpdateClientAlertModeRequest
         * @return UpdateClientAlertModeResponse
         */
        public async Task<UpdateClientAlertModeResponse> UpdateClientAlertModeAsync(UpdateClientAlertModeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateClientAlertModeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the settings of common switches.
         *
         * @param request UpdateCommonSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateCommonSwitchConfigResponse
         */
        public UpdateCommonSwitchConfigResponse UpdateCommonSwitchConfigWithOptions(UpdateCommonSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDefault))
            {
                query["TargetDefault"] = request.TargetDefault;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCommonSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCommonSwitchConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the settings of common switches.
         *
         * @param request UpdateCommonSwitchConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateCommonSwitchConfigResponse
         */
        public async Task<UpdateCommonSwitchConfigResponse> UpdateCommonSwitchConfigWithOptionsAsync(UpdateCommonSwitchConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDefault))
            {
                query["TargetDefault"] = request.TargetDefault;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateCommonSwitchConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateCommonSwitchConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the settings of common switches.
         *
         * @param request UpdateCommonSwitchConfigRequest
         * @return UpdateCommonSwitchConfigResponse
         */
        public UpdateCommonSwitchConfigResponse UpdateCommonSwitchConfig(UpdateCommonSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateCommonSwitchConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the settings of common switches.
         *
         * @param request UpdateCommonSwitchConfigRequest
         * @return UpdateCommonSwitchConfigResponse
         */
        public async Task<UpdateCommonSwitchConfigResponse> UpdateCommonSwitchConfigAsync(UpdateCommonSwitchConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateCommonSwitchConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the status of core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectEventStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectEventStatusResponse
         */
        public UpdateFileProtectEventStatusResponse UpdateFileProtectEventStatusWithOptions(UpdateFileProtectEventStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectEventStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectEventStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the status of core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectEventStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectEventStatusResponse
         */
        public async Task<UpdateFileProtectEventStatusResponse> UpdateFileProtectEventStatusWithOptionsAsync(UpdateFileProtectEventStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectEventStatus",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectEventStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the status of core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectEventStatusRequest
         * @return UpdateFileProtectEventStatusResponse
         */
        public UpdateFileProtectEventStatusResponse UpdateFileProtectEventStatus(UpdateFileProtectEventStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateFileProtectEventStatusWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the status of core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectEventStatusRequest
         * @return UpdateFileProtectEventStatusResponse
         */
        public async Task<UpdateFileProtectEventStatusResponse> UpdateFileProtectEventStatusAsync(UpdateFileProtectEventStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateFileProtectEventStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds remarks to core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectRemarkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectRemarkResponse
         */
        public UpdateFileProtectRemarkResponse UpdateFileProtectRemarkWithOptions(UpdateFileProtectRemarkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectRemark",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectRemarkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectRemarkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectRemarkResponse
         */
        public async Task<UpdateFileProtectRemarkResponse> UpdateFileProtectRemarkWithOptionsAsync(UpdateFileProtectRemarkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Remark))
            {
                query["Remark"] = request.Remark;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectRemark",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectRemarkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds remarks to core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectRemarkRequest
         * @return UpdateFileProtectRemarkResponse
         */
        public UpdateFileProtectRemarkResponse UpdateFileProtectRemark(UpdateFileProtectRemarkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateFileProtectRemarkWithOptions(request, runtime);
        }

        /**
         * @summary Adds remarks to core file monitoring events reported by the Security Center agent.
         *
         * @param request UpdateFileProtectRemarkRequest
         * @return UpdateFileProtectRemarkResponse
         */
        public async Task<UpdateFileProtectRemarkResponse> UpdateFileProtectRemarkAsync(UpdateFileProtectRemarkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateFileProtectRemarkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the content of a core file monitoring rule based on the ID of the rule.
         *
         * @param request UpdateFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectRuleResponse
         */
        public UpdateFileProtectRuleResponse UpdateFileProtectRuleWithOptions(UpdateFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileOps))
            {
                query["FileOps"] = request.FileOps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePaths))
            {
                query["FilePaths"] = request.FilePaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPaths))
            {
                query["ProcPaths"] = request.ProcPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the content of a core file monitoring rule based on the ID of the rule.
         *
         * @param request UpdateFileProtectRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileProtectRuleResponse
         */
        public async Task<UpdateFileProtectRuleResponse> UpdateFileProtectRuleWithOptionsAsync(UpdateFileProtectRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertLevel))
            {
                query["AlertLevel"] = request.AlertLevel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileOps))
            {
                query["FileOps"] = request.FileOps;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FilePaths))
            {
                query["FilePaths"] = request.FilePaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProcPaths))
            {
                query["ProcPaths"] = request.ProcPaths;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileProtectRule",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileProtectRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the content of a core file monitoring rule based on the ID of the rule.
         *
         * @param request UpdateFileProtectRuleRequest
         * @return UpdateFileProtectRuleResponse
         */
        public UpdateFileProtectRuleResponse UpdateFileProtectRule(UpdateFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateFileProtectRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the content of a core file monitoring rule based on the ID of the rule.
         *
         * @param request UpdateFileProtectRuleRequest
         * @return UpdateFileProtectRuleResponse
         */
        public async Task<UpdateFileProtectRuleResponse> UpdateFileProtectRuleAsync(UpdateFileProtectRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateFileProtectRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request UpdateFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileUploadLimitResponse
         */
        public UpdateFileUploadLimitResponse UpdateFileUploadLimitWithOptions(UpdateFileUploadLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileUploadLimitResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request UpdateFileUploadLimitRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateFileUploadLimitResponse
         */
        public async Task<UpdateFileUploadLimitResponse> UpdateFileUploadLimitWithOptionsAsync(UpdateFileUploadLimitRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateFileUploadLimit",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateFileUploadLimitResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request UpdateFileUploadLimitRequest
         * @return UpdateFileUploadLimitResponse
         */
        public UpdateFileUploadLimitResponse UpdateFileUploadLimit(UpdateFileUploadLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateFileUploadLimitWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the queries per second (QPS) limit on the files uploaded from the client.
         *
         * @param request UpdateFileUploadLimitRequest
         * @return UpdateFileUploadLimitResponse
         */
        public async Task<UpdateFileUploadLimitResponse> UpdateFileUploadLimitAsync(UpdateFileUploadLimitRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateFileUploadLimitWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configuration of a specified honeypot.
         *
         * @param request UpdateHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotResponse
         */
        public UpdateHoneypotResponse UpdateHoneypotWithOptions(UpdateHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration of a specified honeypot.
         *
         * @param request UpdateHoneypotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotResponse
         */
        public async Task<UpdateHoneypotResponse> UpdateHoneypotWithOptionsAsync(UpdateHoneypotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotName))
            {
                query["HoneypotName"] = request.HoneypotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypot",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration of a specified honeypot.
         *
         * @param request UpdateHoneypotRequest
         * @return UpdateHoneypotResponse
         */
        public UpdateHoneypotResponse UpdateHoneypot(UpdateHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHoneypotWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configuration of a specified honeypot.
         *
         * @param request UpdateHoneypotRequest
         * @return UpdateHoneypotResponse
         */
        public async Task<UpdateHoneypotResponse> UpdateHoneypotAsync(UpdateHoneypotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHoneypotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configuration of a specified management node.
         *
         * @param request UpdateHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotNodeResponse
         */
        public UpdateHoneypotNodeResponse UpdateHoneypotNodeWithOptions(UpdateHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableProbeNum))
            {
                query["AvailableProbeNum"] = request.AvailableProbeNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupProbeIpList))
            {
                query["SecurityGroupProbeIpList"] = request.SecurityGroupProbeIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotNodeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration of a specified management node.
         *
         * @param request UpdateHoneypotNodeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotNodeResponse
         */
        public async Task<UpdateHoneypotNodeResponse> UpdateHoneypotNodeWithOptionsAsync(UpdateHoneypotNodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableProbeNum))
            {
                query["AvailableProbeNum"] = request.AvailableProbeNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeName))
            {
                query["NodeName"] = request.NodeName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupProbeIpList))
            {
                query["SecurityGroupProbeIpList"] = request.SecurityGroupProbeIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotNode",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotNodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configuration of a specified management node.
         *
         * @param request UpdateHoneypotNodeRequest
         * @return UpdateHoneypotNodeResponse
         */
        public UpdateHoneypotNodeResponse UpdateHoneypotNode(UpdateHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHoneypotNodeWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configuration of a specified management node.
         *
         * @param request UpdateHoneypotNodeRequest
         * @return UpdateHoneypotNodeResponse
         */
        public async Task<UpdateHoneypotNodeResponse> UpdateHoneypotNodeAsync(UpdateHoneypotNodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHoneypotNodeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the specified honeypot template.
         *
         * @param request UpdateHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotPresetResponse
         */
        public UpdateHoneypotPresetResponse UpdateHoneypotPresetWithOptions(UpdateHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotPresetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the specified honeypot template.
         *
         * @param request UpdateHoneypotPresetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotPresetResponse
         */
        public async Task<UpdateHoneypotPresetResponse> UpdateHoneypotPresetWithOptionsAsync(UpdateHoneypotPresetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotPresetId))
            {
                query["HoneypotPresetId"] = request.HoneypotPresetId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Meta))
            {
                query["Meta"] = request.Meta;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PresetName))
            {
                query["PresetName"] = request.PresetName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotPreset",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotPresetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of the specified honeypot template.
         *
         * @param request UpdateHoneypotPresetRequest
         * @return UpdateHoneypotPresetResponse
         */
        public UpdateHoneypotPresetResponse UpdateHoneypotPreset(UpdateHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHoneypotPresetWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of the specified honeypot template.
         *
         * @param request UpdateHoneypotPresetRequest
         * @return UpdateHoneypotPresetResponse
         */
        public async Task<UpdateHoneypotPresetResponse> UpdateHoneypotPresetAsync(UpdateHoneypotPresetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHoneypotPresetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the attributes of a specified probe.
         *
         * @param request UpdateHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotProbeResponse
         */
        public UpdateHoneypotProbeResponse UpdateHoneypotProbeWithOptions(UpdateHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Arp))
            {
                query["Arp"] = request.Arp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ping))
            {
                query["Ping"] = request.Ping;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotProbeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the attributes of a specified probe.
         *
         * @param request UpdateHoneypotProbeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotProbeResponse
         */
        public async Task<UpdateHoneypotProbeResponse> UpdateHoneypotProbeWithOptionsAsync(UpdateHoneypotProbeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Arp))
            {
                query["Arp"] = request.Arp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                query["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ping))
            {
                query["Ping"] = request.Ping;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotProbe",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotProbeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the attributes of a specified probe.
         *
         * @param request UpdateHoneypotProbeRequest
         * @return UpdateHoneypotProbeResponse
         */
        public UpdateHoneypotProbeResponse UpdateHoneypotProbe(UpdateHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHoneypotProbeWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the attributes of a specified probe.
         *
         * @param request UpdateHoneypotProbeRequest
         * @return UpdateHoneypotProbeResponse
         */
        public async Task<UpdateHoneypotProbeResponse> UpdateHoneypotProbeAsync(UpdateHoneypotProbeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHoneypotProbeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a probe service.
         *
         * @param request UpdateHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotProbeBindResponse
         */
        public UpdateHoneypotProbeBindResponse UpdateHoneypotProbeBindWithOptions(UpdateHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindId))
            {
                query["BindId"] = request.BindId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindPortList))
            {
                query["BindPortList"] = request.BindPortList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindType))
            {
                query["BindType"] = request.BindType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ports))
            {
                query["Ports"] = request.Ports;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SetStatus))
            {
                query["SetStatus"] = request.SetStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotProbeBindResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a probe service.
         *
         * @param request UpdateHoneypotProbeBindRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateHoneypotProbeBindResponse
         */
        public async Task<UpdateHoneypotProbeBindResponse> UpdateHoneypotProbeBindWithOptionsAsync(UpdateHoneypotProbeBindRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindId))
            {
                query["BindId"] = request.BindId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindPortList))
            {
                query["BindPortList"] = request.BindPortList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindType))
            {
                query["BindType"] = request.BindType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotId))
            {
                query["HoneypotId"] = request.HoneypotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ports))
            {
                query["Ports"] = request.Ports;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProbeId))
            {
                query["ProbeId"] = request.ProbeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIpList))
            {
                query["ServiceIpList"] = request.ServiceIpList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SetStatus))
            {
                query["SetStatus"] = request.SetStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateHoneypotProbeBind",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateHoneypotProbeBindResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a probe service.
         *
         * @param request UpdateHoneypotProbeBindRequest
         * @return UpdateHoneypotProbeBindResponse
         */
        public UpdateHoneypotProbeBindResponse UpdateHoneypotProbeBind(UpdateHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateHoneypotProbeBindWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a probe service.
         *
         * @param request UpdateHoneypotProbeBindRequest
         * @return UpdateHoneypotProbeBindResponse
         */
        public async Task<UpdateHoneypotProbeBindResponse> UpdateHoneypotProbeBindAsync(UpdateHoneypotProbeBindRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateHoneypotProbeBindWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates an alert handling rule.
         *
         * @param request UpdateImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateImageEventOperationResponse
         */
        public UpdateImageEventOperationResponse UpdateImageEventOperationWithOptions(UpdateImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenarios))
            {
                query["Scenarios"] = request.Scenarios;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageEventOperationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates an alert handling rule.
         *
         * @param request UpdateImageEventOperationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateImageEventOperationResponse
         */
        public async Task<UpdateImageEventOperationResponse> UpdateImageEventOperationWithOptionsAsync(UpdateImageEventOperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenarios))
            {
                query["Scenarios"] = request.Scenarios;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageEventOperation",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageEventOperationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates an alert handling rule.
         *
         * @param request UpdateImageEventOperationRequest
         * @return UpdateImageEventOperationResponse
         */
        public UpdateImageEventOperationResponse UpdateImageEventOperation(UpdateImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateImageEventOperationWithOptions(request, runtime);
        }

        /**
         * @summary Updates an alert handling rule.
         *
         * @param request UpdateImageEventOperationRequest
         * @return UpdateImageEventOperationResponse
         */
        public async Task<UpdateImageEventOperationResponse> UpdateImageEventOperationAsync(UpdateImageEventOperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateImageEventOperationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the vulnerability whitelist of an image.
         *
         * @param request UpdateImageVulWhitelistTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateImageVulWhitelistTargetResponse
         */
        public UpdateImageVulWhitelistTargetResponse UpdateImageVulWhitelistTargetWithOptions(UpdateImageVulWhitelistTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageVulWhitelistTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageVulWhitelistTargetResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the vulnerability whitelist of an image.
         *
         * @param request UpdateImageVulWhitelistTargetRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateImageVulWhitelistTargetResponse
         */
        public async Task<UpdateImageVulWhitelistTargetResponse> UpdateImageVulWhitelistTargetWithOptionsAsync(UpdateImageVulWhitelistTargetRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reason))
            {
                query["Reason"] = request.Reason;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Target))
            {
                query["Target"] = request.Target;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateImageVulWhitelistTarget",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateImageVulWhitelistTargetResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the vulnerability whitelist of an image.
         *
         * @param request UpdateImageVulWhitelistTargetRequest
         * @return UpdateImageVulWhitelistTargetResponse
         */
        public UpdateImageVulWhitelistTargetResponse UpdateImageVulWhitelistTarget(UpdateImageVulWhitelistTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateImageVulWhitelistTargetWithOptions(request, runtime);
        }

        /**
         * @summary Updates the vulnerability whitelist of an image.
         *
         * @param request UpdateImageVulWhitelistTargetRequest
         * @return UpdateImageVulWhitelistTargetResponse
         */
        public async Task<UpdateImageVulWhitelistTargetResponse> UpdateImageVulWhitelistTargetAsync(UpdateImageVulWhitelistTargetRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateImageVulWhitelistTargetWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the name of a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateJenkinsImageRegistryNameResponse
         */
        public UpdateJenkinsImageRegistryNameResponse UpdateJenkinsImageRegistryNameWithOptions(UpdateJenkinsImageRegistryNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                body["RegistryId"] = request.RegistryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryName))
            {
                body["RegistryName"] = request.RegistryName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJenkinsImageRegistryName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJenkinsImageRegistryNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the name of a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateJenkinsImageRegistryNameResponse
         */
        public async Task<UpdateJenkinsImageRegistryNameResponse> UpdateJenkinsImageRegistryNameWithOptionsAsync(UpdateJenkinsImageRegistryNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                body["RegistryId"] = request.RegistryId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryName))
            {
                body["RegistryName"] = request.RegistryName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJenkinsImageRegistryName",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJenkinsImageRegistryNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the name of a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryNameRequest
         * @return UpdateJenkinsImageRegistryNameResponse
         */
        public UpdateJenkinsImageRegistryNameResponse UpdateJenkinsImageRegistryName(UpdateJenkinsImageRegistryNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateJenkinsImageRegistryNameWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the name of a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryNameRequest
         * @return UpdateJenkinsImageRegistryNameResponse
         */
        public async Task<UpdateJenkinsImageRegistryNameResponse> UpdateJenkinsImageRegistryNameAsync(UpdateJenkinsImageRegistryNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateJenkinsImageRegistryNameWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryPersistenceDayRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateJenkinsImageRegistryPersistenceDayResponse
         */
        public UpdateJenkinsImageRegistryPersistenceDayResponse UpdateJenkinsImageRegistryPersistenceDayWithOptions(UpdateJenkinsImageRegistryPersistenceDayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PersistenceDay))
            {
                body["PersistenceDay"] = request.PersistenceDay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                body["RegistryId"] = request.RegistryId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJenkinsImageRegistryPersistenceDay",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJenkinsImageRegistryPersistenceDayResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryPersistenceDayRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateJenkinsImageRegistryPersistenceDayResponse
         */
        public async Task<UpdateJenkinsImageRegistryPersistenceDayResponse> UpdateJenkinsImageRegistryPersistenceDayWithOptionsAsync(UpdateJenkinsImageRegistryPersistenceDayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceIp))
            {
                query["SourceIp"] = request.SourceIp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PersistenceDay))
            {
                body["PersistenceDay"] = request.PersistenceDay;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegistryId))
            {
                body["RegistryId"] = request.RegistryId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJenkinsImageRegistryPersistenceDay",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJenkinsImageRegistryPersistenceDayResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryPersistenceDayRequest
         * @return UpdateJenkinsImageRegistryPersistenceDayResponse
         */
        public UpdateJenkinsImageRegistryPersistenceDayResponse UpdateJenkinsImageRegistryPersistenceDay(UpdateJenkinsImageRegistryPersistenceDayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateJenkinsImageRegistryPersistenceDayWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the retention period of images that are stored in a Jenkins image repository.
         *
         * @param request UpdateJenkinsImageRegistryPersistenceDayRequest
         * @return UpdateJenkinsImageRegistryPersistenceDayResponse
         */
        public async Task<UpdateJenkinsImageRegistryPersistenceDayResponse> UpdateJenkinsImageRegistryPersistenceDayAsync(UpdateJenkinsImageRegistryPersistenceDayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateJenkinsImageRegistryPersistenceDayWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request UpdateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateMaliciousFileWhitelistConfigResponse
         */
        public UpdateMaliciousFileWhitelistConfigResponse UpdateMaliciousFileWhitelistConfigWithOptions(UpdateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operator))
            {
                query["Operator"] = request.Operator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetValue))
            {
                query["TargetValue"] = request.TargetValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateMaliciousFileWhitelistConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request UpdateMaliciousFileWhitelistConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateMaliciousFileWhitelistConfigResponse
         */
        public async Task<UpdateMaliciousFileWhitelistConfigResponse> UpdateMaliciousFileWhitelistConfigWithOptionsAsync(UpdateMaliciousFileWhitelistConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigId))
            {
                query["ConfigId"] = request.ConfigId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventName))
            {
                query["EventName"] = request.EventName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Field))
            {
                query["Field"] = request.Field;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldValue))
            {
                query["FieldValue"] = request.FieldValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operator))
            {
                query["Operator"] = request.Operator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetValue))
            {
                query["TargetValue"] = request.TargetValue;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateMaliciousFileWhitelistConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateMaliciousFileWhitelistConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request UpdateMaliciousFileWhitelistConfigRequest
         * @return UpdateMaliciousFileWhitelistConfigResponse
         */
        public UpdateMaliciousFileWhitelistConfigResponse UpdateMaliciousFileWhitelistConfig(UpdateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateMaliciousFileWhitelistConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies an alert whitelist rule of sensitive files that are detected by using the agentless detection feature.
         *
         * @param request UpdateMaliciousFileWhitelistConfigRequest
         * @return UpdateMaliciousFileWhitelistConfigResponse
         */
        public async Task<UpdateMaliciousFileWhitelistConfigResponse> UpdateMaliciousFileWhitelistConfigAsync(UpdateMaliciousFileWhitelistConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateMaliciousFileWhitelistConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the blocking rule for at-risk images.
         *
         * @param tmpReq UpdateOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateOpaStrategyNewResponse
         */
        public UpdateOpaStrategyNewResponse UpdateOpaStrategyNewWithOptions(UpdateOpaStrategyNewRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateOpaStrategyNewShrinkRequest request = new UpdateOpaStrategyNewShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AlarmDetail))
            {
                request.AlarmDetailShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AlarmDetail, "AlarmDetail", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmDetailShrink))
            {
                query["AlarmDetail"] = request.AlarmDetailShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousImage))
            {
                query["MaliciousImage"] = request.MaliciousImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scopes))
            {
                query["Scopes"] = request.Scopes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTemplateId))
            {
                query["StrategyTemplateId"] = request.StrategyTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnScanedImage))
            {
                query["UnScanedImage"] = request.UnScanedImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                query["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOpaStrategyNewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the blocking rule for at-risk images.
         *
         * @param tmpReq UpdateOpaStrategyNewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateOpaStrategyNewResponse
         */
        public async Task<UpdateOpaStrategyNewResponse> UpdateOpaStrategyNewWithOptionsAsync(UpdateOpaStrategyNewRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateOpaStrategyNewShrinkRequest request = new UpdateOpaStrategyNewShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AlarmDetail))
            {
                request.AlarmDetailShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AlarmDetail, "AlarmDetail", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmDetailShrink))
            {
                query["AlarmDetail"] = request.AlarmDetailShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ImageName))
            {
                query["ImageName"] = request.ImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                query["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaliciousImage))
            {
                query["MaliciousImage"] = request.MaliciousImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleAction))
            {
                query["RuleAction"] = request.RuleAction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scopes))
            {
                query["Scopes"] = request.Scopes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyId))
            {
                query["StrategyId"] = request.StrategyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyName))
            {
                query["StrategyName"] = request.StrategyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StrategyTemplateId))
            {
                query["StrategyTemplateId"] = request.StrategyTemplateId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UnScanedImage))
            {
                query["UnScanedImage"] = request.UnScanedImage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WhiteList))
            {
                query["WhiteList"] = request.WhiteList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOpaStrategyNew",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOpaStrategyNewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the blocking rule for at-risk images.
         *
         * @param request UpdateOpaStrategyNewRequest
         * @return UpdateOpaStrategyNewResponse
         */
        public UpdateOpaStrategyNewResponse UpdateOpaStrategyNew(UpdateOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOpaStrategyNewWithOptions(request, runtime);
        }

        /**
         * @summary Updates the blocking rule for at-risk images.
         *
         * @param request UpdateOpaStrategyNewRequest
         * @return UpdateOpaStrategyNewResponse
         */
        public async Task<UpdateOpaStrategyNewResponse> UpdateOpaStrategyNewAsync(UpdateOpaStrategyNewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOpaStrategyNewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the configurations of a bucket check policy.
         *
         * @param request UpdateOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateOssScanConfigResponse
         */
        public UpdateOssScanConfigResponse UpdateOssScanConfigWithOptions(UpdateOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayList))
            {
                query["ScanDayList"] = request.ScanDayList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOssScanConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the configurations of a bucket check policy.
         *
         * @param request UpdateOssScanConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateOssScanConfigResponse
         */
        public async Task<UpdateOssScanConfigResponse> UpdateOssScanConfigWithOptionsAsync(UpdateOssScanConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllKeyPrefix))
            {
                query["AllKeyPrefix"] = request.AllKeyPrefix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BucketNameList))
            {
                query["BucketNameList"] = request.BucketNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxFileCount))
            {
                query["DecompressMaxFileCount"] = request.DecompressMaxFileCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DecompressMaxLayer))
            {
                query["DecompressMaxLayer"] = request.DecompressMaxLayer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeyPrefixList))
            {
                query["KeyPrefixList"] = request.KeyPrefixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KeySuffixList))
            {
                query["KeySuffixList"] = request.KeySuffixList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScanDayList))
            {
                query["ScanDayList"] = request.ScanDayList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOssScanConfig",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOssScanConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the configurations of a bucket check policy.
         *
         * @param request UpdateOssScanConfigRequest
         * @return UpdateOssScanConfigResponse
         */
        public UpdateOssScanConfigResponse UpdateOssScanConfig(UpdateOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOssScanConfigWithOptions(request, runtime);
        }

        /**
         * @summary Updates the configurations of a bucket check policy.
         *
         * @param request UpdateOssScanConfigRequest
         * @return UpdateOssScanConfigResponse
         */
        public async Task<UpdateOssScanConfigResponse> UpdateOssScanConfigAsync(UpdateOssScanConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOssScanConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the unique identifier of an asset selection.
         *
         * @param request UpdateSelectionKeyByTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateSelectionKeyByTypeResponse
         */
        public UpdateSelectionKeyByTypeResponse UpdateSelectionKeyByTypeWithOptions(UpdateSelectionKeyByTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSelectionKeyByType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSelectionKeyByTypeResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the unique identifier of an asset selection.
         *
         * @param request UpdateSelectionKeyByTypeRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateSelectionKeyByTypeResponse
         */
        public async Task<UpdateSelectionKeyByTypeResponse> UpdateSelectionKeyByTypeWithOptionsAsync(UpdateSelectionKeyByTypeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BusinessType))
            {
                query["BusinessType"] = request.BusinessType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SelectionKey))
            {
                query["SelectionKey"] = request.SelectionKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSelectionKeyByType",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSelectionKeyByTypeResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the unique identifier of an asset selection.
         *
         * @param request UpdateSelectionKeyByTypeRequest
         * @return UpdateSelectionKeyByTypeResponse
         */
        public UpdateSelectionKeyByTypeResponse UpdateSelectionKeyByType(UpdateSelectionKeyByTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSelectionKeyByTypeWithOptions(request, runtime);
        }

        /**
         * @summary Updates the unique identifier of an asset selection.
         *
         * @param request UpdateSelectionKeyByTypeRequest
         * @return UpdateSelectionKeyByTypeResponse
         */
        public async Task<UpdateSelectionKeyByTypeResponse> UpdateSelectionKeyByTypeAsync(UpdateSelectionKeyByTypeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSelectionKeyByTypeWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Upgrades the version of an anti-ransomware policy.
         *
         * @param request UpgradeBackupPolicyVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeBackupPolicyVersionResponse
         */
        public UpgradeBackupPolicyVersionResponse UpgradeBackupPolicyVersionWithOptions(UpgradeBackupPolicyVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeBackupPolicyVersion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeBackupPolicyVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Upgrades the version of an anti-ransomware policy.
         *
         * @param request UpgradeBackupPolicyVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeBackupPolicyVersionResponse
         */
        public async Task<UpgradeBackupPolicyVersionResponse> UpgradeBackupPolicyVersionWithOptionsAsync(UpgradeBackupPolicyVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeBackupPolicyVersion",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeBackupPolicyVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Upgrades the version of an anti-ransomware policy.
         *
         * @param request UpgradeBackupPolicyVersionRequest
         * @return UpgradeBackupPolicyVersionResponse
         */
        public UpgradeBackupPolicyVersionResponse UpgradeBackupPolicyVersion(UpgradeBackupPolicyVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpgradeBackupPolicyVersionWithOptions(request, runtime);
        }

        /**
         * @summary Upgrades the version of an anti-ransomware policy.
         *
         * @param request UpgradeBackupPolicyVersionRequest
         * @return UpgradeBackupPolicyVersionResponse
         */
        public async Task<UpgradeBackupPolicyVersionResponse> UpgradeBackupPolicyVersionAsync(UpgradeBackupPolicyVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpgradeBackupPolicyVersionWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uploads a honeypot file.
         *
         * @param request UploadedHoneyPotFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UploadedHoneyPotFileResponse
         */
        public UploadedHoneyPotFileResponse UploadedHoneyPotFileWithOptions(UploadedHoneyPotFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileKey))
            {
                query["FileKey"] = request.FileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileType))
            {
                query["FileType"] = request.FileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateExtra))
            {
                query["TemplateExtra"] = request.TemplateExtra;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadedHoneyPotFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadedHoneyPotFileResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uploads a honeypot file.
         *
         * @param request UploadedHoneyPotFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UploadedHoneyPotFileResponse
         */
        public async Task<UploadedHoneyPotFileResponse> UploadedHoneyPotFileWithOptionsAsync(UploadedHoneyPotFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileKey))
            {
                query["FileKey"] = request.FileKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileType))
            {
                query["FileType"] = request.FileType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HoneypotImageName))
            {
                query["HoneypotImageName"] = request.HoneypotImageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Lang))
            {
                query["Lang"] = request.Lang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeId))
            {
                query["NodeId"] = request.NodeId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateExtra))
            {
                query["TemplateExtra"] = request.TemplateExtra;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UploadedHoneyPotFile",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadedHoneyPotFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uploads a honeypot file.
         *
         * @param request UploadedHoneyPotFileRequest
         * @return UploadedHoneyPotFileResponse
         */
        public UploadedHoneyPotFileResponse UploadedHoneyPotFile(UploadedHoneyPotFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadedHoneyPotFileWithOptions(request, runtime);
        }

        /**
         * @summary Uploads a honeypot file.
         *
         * @param request UploadedHoneyPotFileRequest
         * @return UploadedHoneyPotFileResponse
         */
        public async Task<UploadedHoneyPotFileResponse> UploadedHoneyPotFileAsync(UploadedHoneyPotFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadedHoneyPotFileWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Verifies whether risk items are fixed. If a risk item is fixed, the status of the related check item is updated to Passed.
         *
         * @param request ValidateHcWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ValidateHcWarningsResponse
         */
        public ValidateHcWarningsResponse ValidateHcWarningsWithOptions(ValidateHcWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskIds))
            {
                query["RiskIds"] = request.RiskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ValidateHcWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ValidateHcWarningsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Verifies whether risk items are fixed. If a risk item is fixed, the status of the related check item is updated to Passed.
         *
         * @param request ValidateHcWarningsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ValidateHcWarningsResponse
         */
        public async Task<ValidateHcWarningsResponse> ValidateHcWarningsWithOptionsAsync(ValidateHcWarningsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RiskIds))
            {
                query["RiskIds"] = request.RiskIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuids))
            {
                query["Uuids"] = request.Uuids;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ValidateHcWarnings",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ValidateHcWarningsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Verifies whether risk items are fixed. If a risk item is fixed, the status of the related check item is updated to Passed.
         *
         * @param request ValidateHcWarningsRequest
         * @return ValidateHcWarningsResponse
         */
        public ValidateHcWarningsResponse ValidateHcWarnings(ValidateHcWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ValidateHcWarningsWithOptions(request, runtime);
        }

        /**
         * @summary Verifies whether risk items are fixed. If a risk item is fixed, the status of the related check item is updated to Passed.
         *
         * @param request ValidateHcWarningsRequest
         * @return ValidateHcWarningsResponse
         */
        public async Task<ValidateHcWarningsResponse> ValidateHcWarningsAsync(ValidateHcWarningsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ValidateHcWarningsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Verifies the instances on which risks are detected based on a check item.
         *
         * @param request VerifyCheckInstanceResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return VerifyCheckInstanceResultResponse
         */
        public VerifyCheckInstanceResultResponse VerifyCheckInstanceResultWithOptions(VerifyCheckInstanceResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifyCheckInstanceResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifyCheckInstanceResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Verifies the instances on which risks are detected based on a check item.
         *
         * @param request VerifyCheckInstanceResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return VerifyCheckInstanceResultResponse
         */
        public async Task<VerifyCheckInstanceResultResponse> VerifyCheckInstanceResultWithOptionsAsync(VerifyCheckInstanceResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckId))
            {
                query["CheckId"] = request.CheckId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceIds))
            {
                query["InstanceIds"] = request.InstanceIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifyCheckInstanceResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifyCheckInstanceResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Verifies the instances on which risks are detected based on a check item.
         *
         * @param request VerifyCheckInstanceResultRequest
         * @return VerifyCheckInstanceResultResponse
         */
        public VerifyCheckInstanceResultResponse VerifyCheckInstanceResult(VerifyCheckInstanceResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return VerifyCheckInstanceResultWithOptions(request, runtime);
        }

        /**
         * @summary Verifies the instances on which risks are detected based on a check item.
         *
         * @param request VerifyCheckInstanceResultRequest
         * @return VerifyCheckInstanceResultResponse
         */
        public async Task<VerifyCheckInstanceResultResponse> VerifyCheckInstanceResultAsync(VerifyCheckInstanceResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await VerifyCheckInstanceResultWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Verifies risk items that are detected based on check items.
         *
         * @param request VerifyCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return VerifyCheckResultResponse
         */
        public VerifyCheckResultResponse VerifyCheckResultWithOptions(VerifyCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifyCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifyCheckResultResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Verifies risk items that are detected based on check items.
         *
         * @param request VerifyCheckResultRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return VerifyCheckResultResponse
         */
        public async Task<VerifyCheckResultResponse> VerifyCheckResultWithOptionsAsync(VerifyCheckResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckIds))
            {
                query["CheckIds"] = request.CheckIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "VerifyCheckResult",
                Version = "2018-12-03",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<VerifyCheckResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Verifies risk items that are detected based on check items.
         *
         * @param request VerifyCheckResultRequest
         * @return VerifyCheckResultResponse
         */
        public VerifyCheckResultResponse VerifyCheckResult(VerifyCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return VerifyCheckResultWithOptions(request, runtime);
        }

        /**
         * @summary Verifies risk items that are detected based on check items.
         *
         * @param request VerifyCheckResultRequest
         * @return VerifyCheckResultResponse
         */
        public async Task<VerifyCheckResultResponse> VerifyCheckResultAsync(VerifyCheckResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await VerifyCheckResultWithOptionsAsync(request, runtime);
        }

    }
}
