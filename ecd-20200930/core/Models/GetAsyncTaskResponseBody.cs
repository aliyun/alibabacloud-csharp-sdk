// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Ecd20200930.Models
{
    public class GetAsyncTaskResponseBody : TeaModel {
        /// <summary>
        /// The operation result. If the request was successful, a success message is returned. If the request failed, an error message is returned.
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// The data information.
        /// </summary>
        [NameInMap("Data")]
        [Validation(Required=false)]
        public GetAsyncTaskResponseBodyData Data { get; set; }
        public class GetAsyncTaskResponseBodyData : TeaModel {
            /// <summary>
            /// The asynchronous task ID.
            /// </summary>
            [NameInMap("AsyncTaskId")]
            [Validation(Required=false)]
            public string AsyncTaskId { get; set; }

            /// <summary>
            /// The total number of asynchronous tasks that are processed. Example: the number of files that are packaged and downloaded on the server.
            /// </summary>
            [NameInMap("ConsumedProcess")]
            [Validation(Required=false)]
            public string ConsumedProcess { get; set; }

            /// <summary>
            /// The error code of the asynchronous task.
            /// </summary>
            [NameInMap("ErrCode")]
            [Validation(Required=false)]
            public long? ErrCode { get; set; }

            /// <summary>
            /// The error message of the asynchronous task.
            /// </summary>
            [NameInMap("Message")]
            [Validation(Required=false)]
            public string Message { get; set; }

            /// <summary>
            /// The task status.
            /// 
            /// Valid values:
            /// 
            /// *   Failed: The task failed.
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            /// *   Running: The task was running.
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            /// *   PartialSucceed: The task did not completely succeed.
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            /// *   Succeed: The task succeeded.
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// 
            ///     <!-- -->
            /// </summary>
            [NameInMap("Status")]
            [Validation(Required=false)]
            public string Status { get; set; }

            /// <summary>
            /// The total number of asynchronous tasks to be processed, such as the amount of files to be downloaded and packaged on the server.
            /// </summary>
            [NameInMap("TotalProcess")]
            [Validation(Required=false)]
            public long? TotalProcess { get; set; }

            /// <summary>
            /// The URL to download data generated by the asynchronous task. Example: the URL to package and download tasks on the server.
            /// </summary>
            [NameInMap("Url")]
            [Validation(Required=false)]
            public string Url { get; set; }

        }

        /// <summary>
        /// The request ID.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Indicates whether the request was successful. Valid values:
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public string Success { get; set; }

    }

}
