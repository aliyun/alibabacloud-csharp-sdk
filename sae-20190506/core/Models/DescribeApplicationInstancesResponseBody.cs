// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Sae20190506.Models
{
    public class DescribeApplicationInstancesResponseBody : TeaModel {
        /// <summary>
        /// <para>The HTTP status code. Valid values:</para>
        /// <list type="bullet">
        /// <item><description><b>2xx</b>: indicates that the request was successful.</description></item>
        /// <item><description><b>3xx</b>: indicates that the request was redirected.</description></item>
        /// <item><description><b>4xx</b>: indicates that the request was invalid.</description></item>
        /// <item><description><b>5xx</b>: indicates that a server error occurred.</description></item>
        /// </list>
        /// 
        /// <b>Example:</b>
        /// <para>200</para>
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// <para>The details of the application instances.</para>
        /// </summary>
        [NameInMap("Data")]
        [Validation(Required=false)]
        public DescribeApplicationInstancesResponseBodyData Data { get; set; }
        public class DescribeApplicationInstancesResponseBodyData : TeaModel {
            /// <summary>
            /// <para>The number of the returned page.</para>
            /// 
            /// <b>Example:</b>
            /// <para>1</para>
            /// </summary>
            [NameInMap("CurrentPage")]
            [Validation(Required=false)]
            public int? CurrentPage { get; set; }

            /// <summary>
            /// <para>The list of application instances.</para>
            /// </summary>
            [NameInMap("Instances")]
            [Validation(Required=false)]
            public List<DescribeApplicationInstancesResponseBodyDataInstances> Instances { get; set; }
            public class DescribeApplicationInstancesResponseBodyDataInstances : TeaModel {
                /// <summary>
                /// <para>The start time of the instance creation process. Unit: milliseconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1558442609000</para>
                /// </summary>
                [NameInMap("CreateTimeStamp")]
                [Validation(Required=false)]
                public long? CreateTimeStamp { get; set; }

                [NameInMap("DebugStatus")]
                [Validation(Required=false)]
                public bool? DebugStatus { get; set; }

                /// <summary>
                /// <para>The elastic IP address (EIP).</para>
                /// 
                /// <b>Example:</b>
                /// <para>8.129.XX.XXX</para>
                /// </summary>
                [NameInMap("Eip")]
                [Validation(Required=false)]
                public string Eip { get; set; }

                /// <summary>
                /// <para>The end time of the instance creation process. Unit: milliseconds.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1642757283000</para>
                /// </summary>
                [NameInMap("FinishTimeStamp")]
                [Validation(Required=false)]
                public long? FinishTimeStamp { get; set; }

                /// <summary>
                /// <para>The ID of the group to which the instance belongs.</para>
                /// 
                /// <b>Example:</b>
                /// <para>b2a8a925-477a-4ed7-b825-d5e22500****</para>
                /// </summary>
                [NameInMap("GroupId")]
                [Validation(Required=false)]
                public string GroupId { get; set; }

                /// <summary>
                /// <para>The address of the repository.</para>
                /// <remarks>
                /// <para> If you deploy the application by using a JAR or WAR package, the image generated by SAE is not available for download.</para>
                /// </remarks>
                /// 
                /// <b>Example:</b>
                /// <para>registry-vpc.cn-beijing.aliyuncs.com/sae-demo-image/cartservice:1.0</para>
                /// </summary>
                [NameInMap("ImageUrl")]
                [Validation(Required=false)]
                public string ImageUrl { get; set; }

                /// <summary>
                /// <para>The internal IP address of the instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>192.168.X.X</para>
                /// </summary>
                [NameInMap("InstanceContainerIp")]
                [Validation(Required=false)]
                public string InstanceContainerIp { get; set; }

                /// <summary>
                /// <para>The number of times that the instance restarted.</para>
                /// 
                /// <b>Example:</b>
                /// <para>0</para>
                /// </summary>
                [NameInMap("InstanceContainerRestarts")]
                [Validation(Required=false)]
                public long? InstanceContainerRestarts { get; set; }

                /// <summary>
                /// <para>The state of the instance. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>Error</b>: An error occurred during the instance startup.</description></item>
                /// <item><description><b>CrashLoopBackOff</b>: The container failed to start. An error occurred during the startup process and persisted after the restart.</description></item>
                /// <item><description><b>ErrImagePull</b>: An error occurred while the container image was being pulled from the instance.</description></item>
                /// <item><description><b>ImagePullBackOff</b>: The container image could not be obtained.</description></item>
                /// <item><description><b>Pending</b>: The instance is waiting to be scheduled.</description></item>
                /// <item><description><b>Unknown</b>: An unknown exception occurred.</description></item>
                /// <item><description><b>Terminating</b>: The instance creation process is being terminated.</description></item>
                /// <item><description><b>NotFound</b>: The instance cannot be found.</description></item>
                /// <item><description><b>PodInitializing</b>: The instance is being initialized.</description></item>
                /// <item><description><b>Init:0/1</b>: The instance is initialized.</description></item>
                /// <item><description><b>Running</b>: The instance is running.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>Running</para>
                /// </summary>
                [NameInMap("InstanceContainerStatus")]
                [Validation(Required=false)]
                public string InstanceContainerStatus { get; set; }

                /// <summary>
                /// <para>The configurations of health checks. Valid values:</para>
                /// <list type="bullet">
                /// <item><description><b>WithoutHealthCheckConfig</b>: Liveness and readiness checks are not configured.</description></item>
                /// <item><description><b>WithoutLivenessConfig</b>: The liveness check is not configured.</description></item>
                /// <item><description><b>WithoutReadinessConfig</b>: The readiness check is not configured.</description></item>
                /// <item><description><b>NotCheckedYet</b>: The health checks are not performed or are in progress.</description></item>
                /// <item><description><b>LivenessUnhealthy</b>: The instance failed the liveness check.</description></item>
                /// <item><description><b>ReadinessUnhealthy</b>: The instance failed the readiness check.</description></item>
                /// <item><description><b>Unhealthy</b>: The instance failed both liveness and readiness checks.</description></item>
                /// <item><description><b>Healthy</b>: The instance passed both liveness and readiness checks.</description></item>
                /// </list>
                /// 
                /// <b>Example:</b>
                /// <para>WithoutHealthCheckConfig</para>
                /// </summary>
                [NameInMap("InstanceHealthStatus")]
                [Validation(Required=false)]
                public string InstanceHealthStatus { get; set; }

                /// <summary>
                /// <para>The ID of the instance.</para>
                /// 
                /// <b>Example:</b>
                /// <para>b2a8a925-477a-4ed7-b825-d5e22500****</para>
                /// </summary>
                [NameInMap("InstanceId")]
                [Validation(Required=false)]
                public string InstanceId { get; set; }

                /// <summary>
                /// <para>The version of the package.</para>
                /// 
                /// <b>Example:</b>
                /// <para>1609939496200</para>
                /// </summary>
                [NameInMap("PackageVersion")]
                [Validation(Required=false)]
                public string PackageVersion { get; set; }

                /// <summary>
                /// <para>The ID of the zone where the instance is deployed.</para>
                /// 
                /// <b>Example:</b>
                /// <para>vsw-***</para>
                /// </summary>
                [NameInMap("VSwitchId")]
                [Validation(Required=false)]
                public string VSwitchId { get; set; }

            }

            /// <summary>
            /// <para>The number of entries returned on each page.</para>
            /// 
            /// <b>Example:</b>
            /// <para>10</para>
            /// </summary>
            [NameInMap("PageSize")]
            [Validation(Required=false)]
            public int? PageSize { get; set; }

            /// <summary>
            /// <para>The total number of returned instances.</para>
            /// 
            /// <b>Example:</b>
            /// <para>10</para>
            /// </summary>
            [NameInMap("TotalSize")]
            [Validation(Required=false)]
            public int? TotalSize { get; set; }

        }

        /// <summary>
        /// <para>The error code. </para>
        /// <list type="bullet">
        /// <item><description>The <b>ErrorCode</b> parameter is not returned when the request succeeds.</description></item>
        /// <item><description>The <b>ErrorCode</b> parameter is returned when the request fails. For more information, see <b>Error codes</b> in this topic.</description></item>
        /// </list>
        /// </summary>
        [NameInMap("ErrorCode")]
        [Validation(Required=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// <para>The returned message.</para>
        /// 
        /// <b>Example:</b>
        /// <para>success</para>
        /// </summary>
        [NameInMap("Message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        /// <summary>
        /// <para>The ID of the request.</para>
        /// 
        /// <b>Example:</b>
        /// <para>91F93257-7A4A-4BD3-9A7E-2F6EAE6D****</para>
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// <para>Indicates whether the list of application instances was obtained. Valid values:</para>
        /// <list type="bullet">
        /// <item><description><b>true</b>: indicates that the list was obtained.</description></item>
        /// <item><description><b>false</b>: indicates that the list could not be obtained.</description></item>
        /// </list>
        /// 
        /// <b>Example:</b>
        /// <para>true</para>
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// <para>The ID of the trace. It is used to query the details of a request.</para>
        /// 
        /// <b>Example:</b>
        /// <para>0a98a02315955564772843261e****</para>
        /// </summary>
        [NameInMap("TraceId")]
        [Validation(Required=false)]
        public string TraceId { get; set; }

    }

}
