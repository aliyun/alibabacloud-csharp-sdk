// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections.Generic;
using System.IO;

using Tea;

namespace AlibabaCloud.SDK.Sae20190506.Models
{
    public class DescribeApplicationInstancesResponseBody : TeaModel {
        /// <summary>
        /// The HTTP status code. Valid values:
        /// 
        /// *   **2xx**: indicates that the request was successful.
        /// *   **3xx**: indicates that the request was redirected.
        /// *   **4xx**: indicates that the request was invalid.
        /// *   **5xx**: indicates that a server error occurred.
        /// </summary>
        [NameInMap("Code")]
        [Validation(Required=false)]
        public string Code { get; set; }

        /// <summary>
        /// The details of the application instances.
        /// </summary>
        [NameInMap("Data")]
        [Validation(Required=false)]
        public DescribeApplicationInstancesResponseBodyData Data { get; set; }
        public class DescribeApplicationInstancesResponseBodyData : TeaModel {
            /// <summary>
            /// The number of the returned page.
            /// </summary>
            [NameInMap("CurrentPage")]
            [Validation(Required=false)]
            public int? CurrentPage { get; set; }

            /// <summary>
            /// The list of application instances.
            /// </summary>
            [NameInMap("Instances")]
            [Validation(Required=false)]
            public List<DescribeApplicationInstancesResponseBodyDataInstances> Instances { get; set; }
            public class DescribeApplicationInstancesResponseBodyDataInstances : TeaModel {
                /// <summary>
                /// The start time of the instance creation process. Unit: milliseconds.
                /// </summary>
                [NameInMap("CreateTimeStamp")]
                [Validation(Required=false)]
                public long? CreateTimeStamp { get; set; }

                [NameInMap("DebugStatus")]
                [Validation(Required=false)]
                public bool? DebugStatus { get; set; }

                /// <summary>
                /// The elastic IP address (EIP).
                /// </summary>
                [NameInMap("Eip")]
                [Validation(Required=false)]
                public string Eip { get; set; }

                /// <summary>
                /// The end time of the instance creation process. Unit: milliseconds.
                /// </summary>
                [NameInMap("FinishTimeStamp")]
                [Validation(Required=false)]
                public long? FinishTimeStamp { get; set; }

                /// <summary>
                /// The ID of the group to which the instance belongs.
                /// </summary>
                [NameInMap("GroupId")]
                [Validation(Required=false)]
                public string GroupId { get; set; }

                /// <summary>
                /// The address of the repository.
                /// 
                /// >  If you deploy the application by using a JAR or WAR package, the image generated by SAE is not available for download.
                /// </summary>
                [NameInMap("ImageUrl")]
                [Validation(Required=false)]
                public string ImageUrl { get; set; }

                /// <summary>
                /// The internal IP address of the instance.
                /// </summary>
                [NameInMap("InstanceContainerIp")]
                [Validation(Required=false)]
                public string InstanceContainerIp { get; set; }

                /// <summary>
                /// The number of times that the instance restarted.
                /// </summary>
                [NameInMap("InstanceContainerRestarts")]
                [Validation(Required=false)]
                public long? InstanceContainerRestarts { get; set; }

                /// <summary>
                /// The state of the instance. Valid values:
                /// 
                /// *   **Error**: An error occurred during the instance startup.
                /// *   **CrashLoopBackOff**: The container failed to start. An error occurred during the startup process and persisted after the restart.
                /// *   **ErrImagePull**: An error occurred while the container image was being pulled from the instance.
                /// *   **ImagePullBackOff**: The container image could not be obtained.
                /// *   **Pending**: The instance is waiting to be scheduled.
                /// *   **Unknown**: An unknown exception occurred.
                /// *   **Terminating**: The instance creation process is being terminated.
                /// *   **NotFound**: The instance cannot be found.
                /// *   **PodInitializing**: The instance is being initialized.
                /// *   **Init:0/1**: The instance is initialized.
                /// *   **Running**: The instance is running.
                /// </summary>
                [NameInMap("InstanceContainerStatus")]
                [Validation(Required=false)]
                public string InstanceContainerStatus { get; set; }

                /// <summary>
                /// The configurations of health checks. Valid values:
                /// 
                /// *   **WithoutHealthCheckConfig**: Liveness and readiness checks are not configured.
                /// *   **WithoutLivenessConfig**: The liveness check is not configured.
                /// *   **WithoutReadinessConfig**: The readiness check is not configured.
                /// *   **NotCheckedYet**: The health checks are not performed or are in progress.
                /// *   **LivenessUnhealthy**: The instance failed the liveness check.
                /// *   **ReadinessUnhealthy**: The instance failed the readiness check.
                /// *   **Unhealthy**: The instance failed both liveness and readiness checks.
                /// *   **Healthy**: The instance passed both liveness and readiness checks.
                /// </summary>
                [NameInMap("InstanceHealthStatus")]
                [Validation(Required=false)]
                public string InstanceHealthStatus { get; set; }

                /// <summary>
                /// The ID of the instance.
                /// </summary>
                [NameInMap("InstanceId")]
                [Validation(Required=false)]
                public string InstanceId { get; set; }

                /// <summary>
                /// The version of the package.
                /// </summary>
                [NameInMap("PackageVersion")]
                [Validation(Required=false)]
                public string PackageVersion { get; set; }

                /// <summary>
                /// The ID of the zone where the instance is deployed.
                /// </summary>
                [NameInMap("VSwitchId")]
                [Validation(Required=false)]
                public string VSwitchId { get; set; }

            }

            /// <summary>
            /// The number of entries returned on each page.
            /// </summary>
            [NameInMap("PageSize")]
            [Validation(Required=false)]
            public int? PageSize { get; set; }

            /// <summary>
            /// The total number of returned instances.
            /// </summary>
            [NameInMap("TotalSize")]
            [Validation(Required=false)]
            public int? TotalSize { get; set; }

        }

        /// <summary>
        /// The error code. 
        /// 
        /// - The **ErrorCode** parameter is not returned when the request succeeds.
        /// - The **ErrorCode** parameter is returned when the request fails. For more information, see **Error codes** in this topic.
        /// </summary>
        [NameInMap("ErrorCode")]
        [Validation(Required=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// The returned message.
        /// </summary>
        [NameInMap("Message")]
        [Validation(Required=false)]
        public string Message { get; set; }

        /// <summary>
        /// The ID of the request.
        /// </summary>
        [NameInMap("RequestId")]
        [Validation(Required=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Indicates whether the list of application instances was obtained. Valid values:
        /// 
        /// *   **true**: indicates that the list was obtained.
        /// *   **false**: indicates that the list could not be obtained.
        /// </summary>
        [NameInMap("Success")]
        [Validation(Required=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// The ID of the trace. It is used to query the details of a request.
        /// </summary>
        [NameInMap("TraceId")]
        [Validation(Required=false)]
        public string TraceId { get; set; }

    }

}
