// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;

using Tea;
using Tea.Utils;

using AlibabaCloud.SDK.ARMS20190808.Models;

namespace AlibabaCloud.SDK.ARMS20190808
{
    public class Client : AlibabaCloud.OpenApiClient.Client
    {

        public Client(AlibabaCloud.OpenApiClient.Models.Config config): base(config)
        {
            this._signatureAlgorithm = "v2";
            this._endpointRule = "regional";
            this._endpointMap = new Dictionary<string, string>
            {
                {"ap-northeast-2-pop", "arms.aliyuncs.com"},
                {"cn-beijing-finance-1", "arms.aliyuncs.com"},
                {"cn-beijing-finance-pop", "arms.aliyuncs.com"},
                {"cn-beijing-gov-1", "arms.aliyuncs.com"},
                {"cn-beijing-nu16-b01", "arms.aliyuncs.com"},
                {"cn-edge-1", "arms.aliyuncs.com"},
                {"cn-fujian", "arms.aliyuncs.com"},
                {"cn-haidian-cm12-c01", "arms.aliyuncs.com"},
                {"cn-hangzhou-bj-b01", "arms.aliyuncs.com"},
                {"cn-hangzhou-internal-prod-1", "arms.aliyuncs.com"},
                {"cn-hangzhou-internal-test-1", "arms.aliyuncs.com"},
                {"cn-hangzhou-internal-test-2", "arms.aliyuncs.com"},
                {"cn-hangzhou-internal-test-3", "arms.aliyuncs.com"},
                {"cn-hangzhou-test-306", "arms.aliyuncs.com"},
                {"cn-hongkong-finance-pop", "arms.aliyuncs.com"},
                {"cn-huhehaote-nebula-1", "arms.aliyuncs.com"},
                {"cn-qingdao-nebula", "arms.aliyuncs.com"},
                {"cn-shanghai-et15-b01", "arms.aliyuncs.com"},
                {"cn-shanghai-et2-b01", "arms.aliyuncs.com"},
                {"cn-shanghai-inner", "arms.aliyuncs.com"},
                {"cn-shanghai-internal-test-1", "arms.aliyuncs.com"},
                {"cn-shenzhen-inner", "arms.aliyuncs.com"},
                {"cn-shenzhen-st4-d01", "arms.aliyuncs.com"},
                {"cn-shenzhen-su18-b01", "arms.aliyuncs.com"},
                {"cn-wuhan", "arms.aliyuncs.com"},
                {"cn-yushanfang", "arms.aliyuncs.com"},
                {"cn-zhangbei", "arms.aliyuncs.com"},
                {"cn-zhangbei-na61-b01", "arms.aliyuncs.com"},
                {"cn-zhangjiakou-na62-a01", "arms.aliyuncs.com"},
                {"cn-zhengzhou-nebula-1", "arms.aliyuncs.com"},
                {"eu-west-1-oxs", "arms.aliyuncs.com"},
                {"me-east-1", "arms.aliyuncs.com"},
                {"rus-west-1-pop", "arms.aliyuncs.com"},
            };
            CheckConfig(config);
            this._endpoint = GetEndpoint("arms", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
        }


        public string GetEndpoint(string productId, string regionId, string endpointRule, string network, string suffix, Dictionary<string, string> endpointMap, string endpoint)
        {
            if (!AlibabaCloud.TeaUtil.Common.Empty(endpoint))
            {
                return endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(endpointMap) && !AlibabaCloud.TeaUtil.Common.Empty(endpointMap.Get(regionId)))
            {
                return endpointMap.Get(regionId);
            }
            return AlibabaCloud.EndpointUtil.Common.GetEndpointRules(productId, regionId, endpointRule, network, suffix);
        }

        /**
         * @summary Adds data sources to a global aggregation instance in Prometheus Service.
         *
         * @param request AddAliClusterIdsToPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddAliClusterIdsToPrometheusGlobalViewResponse
         */
        public AddAliClusterIdsToPrometheusGlobalViewResponse AddAliClusterIdsToPrometheusGlobalViewWithOptions(AddAliClusterIdsToPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddAliClusterIdsToPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddAliClusterIdsToPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds data sources to a global aggregation instance in Prometheus Service.
         *
         * @param request AddAliClusterIdsToPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddAliClusterIdsToPrometheusGlobalViewResponse
         */
        public async Task<AddAliClusterIdsToPrometheusGlobalViewResponse> AddAliClusterIdsToPrometheusGlobalViewWithOptionsAsync(AddAliClusterIdsToPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddAliClusterIdsToPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddAliClusterIdsToPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds data sources to a global aggregation instance in Prometheus Service.
         *
         * @param request AddAliClusterIdsToPrometheusGlobalViewRequest
         * @return AddAliClusterIdsToPrometheusGlobalViewResponse
         */
        public AddAliClusterIdsToPrometheusGlobalViewResponse AddAliClusterIdsToPrometheusGlobalView(AddAliClusterIdsToPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddAliClusterIdsToPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Adds data sources to a global aggregation instance in Prometheus Service.
         *
         * @param request AddAliClusterIdsToPrometheusGlobalViewRequest
         * @return AddAliClusterIdsToPrometheusGlobalViewResponse
         */
        public async Task<AddAliClusterIdsToPrometheusGlobalViewResponse> AddAliClusterIdsToPrometheusGlobalViewAsync(AddAliClusterIdsToPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddAliClusterIdsToPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Integrates the dashboard of Prometheus Service.
         *
         * @param request AddGrafanaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddGrafanaResponse
         */
        public AddGrafanaResponse AddGrafanaWithOptions(AddGrafanaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddGrafana",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddGrafanaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Integrates the dashboard of Prometheus Service.
         *
         * @param request AddGrafanaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddGrafanaResponse
         */
        public async Task<AddGrafanaResponse> AddGrafanaWithOptionsAsync(AddGrafanaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddGrafana",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddGrafanaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Integrates the dashboard of Prometheus Service.
         *
         * @param request AddGrafanaRequest
         * @return AddGrafanaResponse
         */
        public AddGrafanaResponse AddGrafana(AddGrafanaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddGrafanaWithOptions(request, runtime);
        }

        /**
         * @summary Integrates the dashboard of Prometheus Service.
         *
         * @param request AddGrafanaRequest
         * @return AddGrafanaResponse
         */
        public async Task<AddGrafanaResponse> AddGrafanaAsync(AddGrafanaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddGrafanaWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI AddIntegration is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary 接入integration
         *
         * @param request AddIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddIntegrationResponse
         */
        // Deprecated
        public AddIntegrationResponse AddIntegrationWithOptions(AddIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI AddIntegration is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary 接入integration
         *
         * @param request AddIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddIntegrationResponse
         */
        // Deprecated
        public async Task<AddIntegrationResponse> AddIntegrationWithOptionsAsync(AddIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI AddIntegration is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary 接入integration
         *
         * @param request AddIntegrationRequest
         * @return AddIntegrationResponse
         */
        // Deprecated
        public AddIntegrationResponse AddIntegration(AddIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddIntegrationWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI AddIntegration is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary 接入integration
         *
         * @param request AddIntegrationRequest
         * @return AddIntegrationResponse
         */
        // Deprecated
        public async Task<AddIntegrationResponse> AddIntegrationAsync(AddIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusGlobalViewResponse
         */
        public AddPrometheusGlobalViewResponse AddPrometheusGlobalViewWithOptions(AddPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Clusters))
            {
                query["Clusters"] = request.Clusters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusGlobalViewResponse
         */
        public async Task<AddPrometheusGlobalViewResponse> AddPrometheusGlobalViewWithOptionsAsync(AddPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Clusters))
            {
                query["Clusters"] = request.Clusters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewRequest
         * @return AddPrometheusGlobalViewResponse
         */
        public AddPrometheusGlobalViewResponse AddPrometheusGlobalView(AddPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Adds a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewRequest
         * @return AddPrometheusGlobalViewResponse
         */
        public async Task<AddPrometheusGlobalViewResponse> AddPrometheusGlobalViewAsync(AddPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewByAliClusterIdsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusGlobalViewByAliClusterIdsResponse
         */
        public AddPrometheusGlobalViewByAliClusterIdsResponse AddPrometheusGlobalViewByAliClusterIdsWithOptions(AddPrometheusGlobalViewByAliClusterIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusGlobalViewByAliClusterIds",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusGlobalViewByAliClusterIdsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewByAliClusterIdsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusGlobalViewByAliClusterIdsResponse
         */
        public async Task<AddPrometheusGlobalViewByAliClusterIdsResponse> AddPrometheusGlobalViewByAliClusterIdsWithOptionsAsync(AddPrometheusGlobalViewByAliClusterIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusGlobalViewByAliClusterIds",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusGlobalViewByAliClusterIdsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewByAliClusterIdsRequest
         * @return AddPrometheusGlobalViewByAliClusterIdsResponse
         */
        public AddPrometheusGlobalViewByAliClusterIdsResponse AddPrometheusGlobalViewByAliClusterIds(AddPrometheusGlobalViewByAliClusterIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrometheusGlobalViewByAliClusterIdsWithOptions(request, runtime);
        }

        /**
         * @summary Creates a global aggregation instance in Prometheus Service.
         *
         * @param request AddPrometheusGlobalViewByAliClusterIdsRequest
         * @return AddPrometheusGlobalViewByAliClusterIdsResponse
         */
        public async Task<AddPrometheusGlobalViewByAliClusterIdsResponse> AddPrometheusGlobalViewByAliClusterIdsAsync(AddPrometheusGlobalViewByAliClusterIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrometheusGlobalViewByAliClusterIdsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance for Remote Write.
         *
         * @param request AddPrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusInstanceResponse
         */
        public AddPrometheusInstanceResponse AddPrometheusInstanceWithOptions(AddPrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance for Remote Write.
         *
         * @param request AddPrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusInstanceResponse
         */
        public async Task<AddPrometheusInstanceResponse> AddPrometheusInstanceWithOptionsAsync(AddPrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance for Remote Write.
         *
         * @param request AddPrometheusInstanceRequest
         * @return AddPrometheusInstanceResponse
         */
        public AddPrometheusInstanceResponse AddPrometheusInstance(AddPrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrometheusInstanceWithOptions(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance for Remote Write.
         *
         * @param request AddPrometheusInstanceRequest
         * @return AddPrometheusInstanceResponse
         */
        public async Task<AddPrometheusInstanceResponse> AddPrometheusInstanceAsync(AddPrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrometheusInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds an exporter to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusIntegrationResponse
         */
        public AddPrometheusIntegrationResponse AddPrometheusIntegrationWithOptions(AddPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds an exporter to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusIntegrationResponse
         */
        public async Task<AddPrometheusIntegrationResponse> AddPrometheusIntegrationWithOptionsAsync(AddPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds an exporter to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusIntegrationRequest
         * @return AddPrometheusIntegrationResponse
         */
        public AddPrometheusIntegrationResponse AddPrometheusIntegration(AddPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrometheusIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Adds an exporter to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusIntegrationRequest
         * @return AddPrometheusIntegrationResponse
         */
        public async Task<AddPrometheusIntegrationResponse> AddPrometheusIntegrationAsync(AddPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrometheusIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a remote write configuration item to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusRemoteWriteResponse
         */
        public AddPrometheusRemoteWriteResponse AddPrometheusRemoteWriteWithOptions(AddPrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteYaml))
            {
                body["RemoteWriteYaml"] = request.RemoteWriteYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusRemoteWriteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a remote write configuration item to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddPrometheusRemoteWriteResponse
         */
        public async Task<AddPrometheusRemoteWriteResponse> AddPrometheusRemoteWriteWithOptionsAsync(AddPrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteYaml))
            {
                body["RemoteWriteYaml"] = request.RemoteWriteYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddPrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddPrometheusRemoteWriteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a remote write configuration item to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusRemoteWriteRequest
         * @return AddPrometheusRemoteWriteResponse
         */
        public AddPrometheusRemoteWriteResponse AddPrometheusRemoteWrite(AddPrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddPrometheusRemoteWriteWithOptions(request, runtime);
        }

        /**
         * @summary Adds a remote write configuration item to a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request AddPrometheusRemoteWriteRequest
         * @return AddPrometheusRemoteWriteResponse
         */
        public async Task<AddPrometheusRemoteWriteResponse> AddPrometheusRemoteWriteAsync(AddPrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddPrometheusRemoteWriteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or updates a recording rule.
         *
         * @param request AddRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddRecordingRuleResponse
         */
        public AddRecordingRuleResponse AddRecordingRuleWithOptions(AddRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleYaml))
            {
                query["RuleYaml"] = request.RuleYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddRecordingRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or updates a recording rule.
         *
         * @param request AddRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddRecordingRuleResponse
         */
        public async Task<AddRecordingRuleResponse> AddRecordingRuleWithOptionsAsync(AddRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleYaml))
            {
                query["RuleYaml"] = request.RuleYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddRecordingRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or updates a recording rule.
         *
         * @param request AddRecordingRuleRequest
         * @return AddRecordingRuleResponse
         */
        public AddRecordingRuleResponse AddRecordingRule(AddRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddRecordingRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates or updates a recording rule.
         *
         * @param request AddRecordingRuleRequest
         * @return AddRecordingRuleResponse
         */
        public async Task<AddRecordingRuleResponse> AddRecordingRuleAsync(AddRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddRecordingRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Flink集群打标
         *
         * @param request AddTagToFlinkClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddTagToFlinkClusterResponse
         */
        public AddTagToFlinkClusterResponse AddTagToFlinkClusterWithOptions(AddTagToFlinkClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlinkWorkSpaceId))
            {
                query["FlinkWorkSpaceId"] = request.FlinkWorkSpaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlinkWorkSpaceName))
            {
                query["FlinkWorkSpaceName"] = request.FlinkWorkSpaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUserId))
            {
                query["TargetUserId"] = request.TargetUserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTagToFlinkCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTagToFlinkClusterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Flink集群打标
         *
         * @param request AddTagToFlinkClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AddTagToFlinkClusterResponse
         */
        public async Task<AddTagToFlinkClusterResponse> AddTagToFlinkClusterWithOptionsAsync(AddTagToFlinkClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlinkWorkSpaceId))
            {
                query["FlinkWorkSpaceId"] = request.FlinkWorkSpaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FlinkWorkSpaceName))
            {
                query["FlinkWorkSpaceName"] = request.FlinkWorkSpaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUserId))
            {
                query["TargetUserId"] = request.TargetUserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddTagToFlinkCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddTagToFlinkClusterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Flink集群打标
         *
         * @param request AddTagToFlinkClusterRequest
         * @return AddTagToFlinkClusterResponse
         */
        public AddTagToFlinkClusterResponse AddTagToFlinkCluster(AddTagToFlinkClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddTagToFlinkClusterWithOptions(request, runtime);
        }

        /**
         * @summary Flink集群打标
         *
         * @param request AddTagToFlinkClusterRequest
         * @return AddTagToFlinkClusterResponse
         */
        public async Task<AddTagToFlinkClusterResponse> AddTagToFlinkClusterAsync(AddTagToFlinkClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddTagToFlinkClusterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a data source to a global aggregation instance.
         *
         * @param request AppendInstancesToPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AppendInstancesToPrometheusGlobalViewResponse
         */
        public AppendInstancesToPrometheusGlobalViewResponse AppendInstancesToPrometheusGlobalViewWithOptions(AppendInstancesToPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Clusters))
            {
                query["Clusters"] = request.Clusters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AppendInstancesToPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AppendInstancesToPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a data source to a global aggregation instance.
         *
         * @param request AppendInstancesToPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return AppendInstancesToPrometheusGlobalViewResponse
         */
        public async Task<AppendInstancesToPrometheusGlobalViewResponse> AppendInstancesToPrometheusGlobalViewWithOptionsAsync(AppendInstancesToPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Clusters))
            {
                query["Clusters"] = request.Clusters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AppendInstancesToPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AppendInstancesToPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a data source to a global aggregation instance.
         *
         * @param request AppendInstancesToPrometheusGlobalViewRequest
         * @return AppendInstancesToPrometheusGlobalViewResponse
         */
        public AppendInstancesToPrometheusGlobalViewResponse AppendInstancesToPrometheusGlobalView(AppendInstancesToPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AppendInstancesToPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Adds a data source to a global aggregation instance.
         *
         * @param request AppendInstancesToPrometheusGlobalViewRequest
         * @return AppendInstancesToPrometheusGlobalViewResponse
         */
        public async Task<AppendInstancesToPrometheusGlobalViewResponse> AppendInstancesToPrometheusGlobalViewAsync(AppendInstancesToPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AppendInstancesToPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @param tmpReq ApplyScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ApplyScenarioResponse
         */
        public ApplyScenarioResponse ApplyScenarioWithOptions(ApplyScenarioRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ApplyScenarioShrinkRequest request = new ApplyScenarioShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                query["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenario))
            {
                query["Scenario"] = request.Scenario;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sign))
            {
                query["Sign"] = request.Sign;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnDump))
            {
                query["SnDump"] = request.SnDump;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnForce))
            {
                query["SnForce"] = request.SnForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnStat))
            {
                query["SnStat"] = request.SnStat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnTransfer))
            {
                query["SnTransfer"] = request.SnTransfer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UpdateOption))
            {
                query["UpdateOption"] = request.UpdateOption;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ApplyScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ApplyScenarioResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param tmpReq ApplyScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ApplyScenarioResponse
         */
        public async Task<ApplyScenarioResponse> ApplyScenarioWithOptionsAsync(ApplyScenarioRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ApplyScenarioShrinkRequest request = new ApplyScenarioShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Config))
            {
                request.ConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Config, "Config", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigShrink))
            {
                query["Config"] = request.ConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenario))
            {
                query["Scenario"] = request.Scenario;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sign))
            {
                query["Sign"] = request.Sign;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnDump))
            {
                query["SnDump"] = request.SnDump;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnForce))
            {
                query["SnForce"] = request.SnForce;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnStat))
            {
                query["SnStat"] = request.SnStat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SnTransfer))
            {
                query["SnTransfer"] = request.SnTransfer;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UpdateOption))
            {
                query["UpdateOption"] = request.UpdateOption;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ApplyScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ApplyScenarioResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request ApplyScenarioRequest
         * @return ApplyScenarioResponse
         */
        public ApplyScenarioResponse ApplyScenario(ApplyScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ApplyScenarioWithOptions(request, runtime);
        }

        /**
         * @param request ApplyScenarioRequest
         * @return ApplyScenarioResponse
         */
        public async Task<ApplyScenarioResponse> ApplyScenarioAsync(ApplyScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ApplyScenarioWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Binds a Grafana workspace to a Prometheus instance.
         *
         * @param request BindPrometheusGrafanaInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindPrometheusGrafanaInstanceResponse
         */
        public BindPrometheusGrafanaInstanceResponse BindPrometheusGrafanaInstanceWithOptions(BindPrometheusGrafanaInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindPrometheusGrafanaInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindPrometheusGrafanaInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Binds a Grafana workspace to a Prometheus instance.
         *
         * @param request BindPrometheusGrafanaInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BindPrometheusGrafanaInstanceResponse
         */
        public async Task<BindPrometheusGrafanaInstanceResponse> BindPrometheusGrafanaInstanceWithOptionsAsync(BindPrometheusGrafanaInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindPrometheusGrafanaInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindPrometheusGrafanaInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Binds a Grafana workspace to a Prometheus instance.
         *
         * @param request BindPrometheusGrafanaInstanceRequest
         * @return BindPrometheusGrafanaInstanceResponse
         */
        public BindPrometheusGrafanaInstanceResponse BindPrometheusGrafanaInstance(BindPrometheusGrafanaInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindPrometheusGrafanaInstanceWithOptions(request, runtime);
        }

        /**
         * @summary Binds a Grafana workspace to a Prometheus instance.
         *
         * @param request BindPrometheusGrafanaInstanceRequest
         * @return BindPrometheusGrafanaInstanceResponse
         */
        public async Task<BindPrometheusGrafanaInstanceResponse> BindPrometheusGrafanaInstanceAsync(BindPrometheusGrafanaInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindPrometheusGrafanaInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 屏蔽告警通知
         *
         * @param request BlockAlarmNotificationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BlockAlarmNotificationResponse
         */
        public BlockAlarmNotificationResponse BlockAlarmNotificationWithOptions(BlockAlarmNotificationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Timeout))
            {
                query["Timeout"] = request.Timeout;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BlockAlarmNotification",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BlockAlarmNotificationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 屏蔽告警通知
         *
         * @param request BlockAlarmNotificationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return BlockAlarmNotificationResponse
         */
        public async Task<BlockAlarmNotificationResponse> BlockAlarmNotificationWithOptionsAsync(BlockAlarmNotificationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Timeout))
            {
                query["Timeout"] = request.Timeout;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BlockAlarmNotification",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BlockAlarmNotificationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 屏蔽告警通知
         *
         * @param request BlockAlarmNotificationRequest
         * @return BlockAlarmNotificationResponse
         */
        public BlockAlarmNotificationResponse BlockAlarmNotification(BlockAlarmNotificationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BlockAlarmNotificationWithOptions(request, runtime);
        }

        /**
         * @summary 屏蔽告警通知
         *
         * @param request BlockAlarmNotificationRequest
         * @return BlockAlarmNotificationResponse
         */
        public async Task<BlockAlarmNotificationResponse> BlockAlarmNotificationAsync(BlockAlarmNotificationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BlockAlarmNotificationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 修改告警等级
         *
         * @param request ChangeAlarmSeverityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeAlarmSeverityResponse
         */
        public ChangeAlarmSeverityResponse ChangeAlarmSeverityWithOptions(ChangeAlarmSeverityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Severity))
            {
                query["Severity"] = request.Severity;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeAlarmSeverity",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeAlarmSeverityResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 修改告警等级
         *
         * @param request ChangeAlarmSeverityRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeAlarmSeverityResponse
         */
        public async Task<ChangeAlarmSeverityResponse> ChangeAlarmSeverityWithOptionsAsync(ChangeAlarmSeverityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Severity))
            {
                query["Severity"] = request.Severity;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeAlarmSeverity",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeAlarmSeverityResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 修改告警等级
         *
         * @param request ChangeAlarmSeverityRequest
         * @return ChangeAlarmSeverityResponse
         */
        public ChangeAlarmSeverityResponse ChangeAlarmSeverity(ChangeAlarmSeverityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeAlarmSeverityWithOptions(request, runtime);
        }

        /**
         * @summary 修改告警等级
         *
         * @param request ChangeAlarmSeverityRequest
         * @return ChangeAlarmSeverityResponse
         */
        public async Task<ChangeAlarmSeverityResponse> ChangeAlarmSeverityAsync(ChangeAlarmSeverityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeAlarmSeverityWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Changes the resource group to which a resource belongs.
         *
         * @param request ChangeResourceGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeResourceGroupResponse
         */
        public ChangeResourceGroupResponse ChangeResourceGroupWithOptions(ChangeResourceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewResourceGroupId))
            {
                query["NewResourceGroupId"] = request.NewResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeResourceGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeResourceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Changes the resource group to which a resource belongs.
         *
         * @param request ChangeResourceGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ChangeResourceGroupResponse
         */
        public async Task<ChangeResourceGroupResponse> ChangeResourceGroupWithOptionsAsync(ChangeResourceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewResourceGroupId))
            {
                query["NewResourceGroupId"] = request.NewResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ChangeResourceGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ChangeResourceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Changes the resource group to which a resource belongs.
         *
         * @param request ChangeResourceGroupRequest
         * @return ChangeResourceGroupResponse
         */
        public ChangeResourceGroupResponse ChangeResourceGroup(ChangeResourceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ChangeResourceGroupWithOptions(request, runtime);
        }

        /**
         * @summary Changes the resource group to which a resource belongs.
         *
         * @param request ChangeResourceGroupRequest
         * @return ChangeResourceGroupResponse
         */
        public async Task<ChangeResourceGroupResponse> ChangeResourceGroupAsync(ChangeResourceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ChangeResourceGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks whether Application Real-Time Monitoring Service (ARMS) is available for commercial use in a region.
         *
         * @description You can call this operation to check whether ARMS is available for commercial use in a region.
         *
         * @param request CheckCommercialStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckCommercialStatusResponse
         */
        public CheckCommercialStatusResponse CheckCommercialStatusWithOptions(CheckCommercialStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckCommercialStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckCommercialStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks whether Application Real-Time Monitoring Service (ARMS) is available for commercial use in a region.
         *
         * @description You can call this operation to check whether ARMS is available for commercial use in a region.
         *
         * @param request CheckCommercialStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckCommercialStatusResponse
         */
        public async Task<CheckCommercialStatusResponse> CheckCommercialStatusWithOptionsAsync(CheckCommercialStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckCommercialStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckCommercialStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks whether Application Real-Time Monitoring Service (ARMS) is available for commercial use in a region.
         *
         * @description You can call this operation to check whether ARMS is available for commercial use in a region.
         *
         * @param request CheckCommercialStatusRequest
         * @return CheckCommercialStatusResponse
         */
        public CheckCommercialStatusResponse CheckCommercialStatus(CheckCommercialStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckCommercialStatusWithOptions(request, runtime);
        }

        /**
         * @summary Checks whether Application Real-Time Monitoring Service (ARMS) is available for commercial use in a region.
         *
         * @description You can call this operation to check whether ARMS is available for commercial use in a region.
         *
         * @param request CheckCommercialStatusRequest
         * @return CheckCommercialStatusResponse
         */
        public async Task<CheckCommercialStatusResponse> CheckCommercialStatusAsync(CheckCommercialStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckCommercialStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Checks the status of a service in the current cluster, such as whether the service is activated and whether the payment is overdue.
         *
         * @param request CheckServiceStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckServiceStatusResponse
         */
        public CheckServiceStatusResponse CheckServiceStatusWithOptions(CheckServiceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SvcCode))
            {
                query["SvcCode"] = request.SvcCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckServiceStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckServiceStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Checks the status of a service in the current cluster, such as whether the service is activated and whether the payment is overdue.
         *
         * @param request CheckServiceStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CheckServiceStatusResponse
         */
        public async Task<CheckServiceStatusResponse> CheckServiceStatusWithOptionsAsync(CheckServiceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SvcCode))
            {
                query["SvcCode"] = request.SvcCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckServiceStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckServiceStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Checks the status of a service in the current cluster, such as whether the service is activated and whether the payment is overdue.
         *
         * @param request CheckServiceStatusRequest
         * @return CheckServiceStatusResponse
         */
        public CheckServiceStatusResponse CheckServiceStatus(CheckServiceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckServiceStatusWithOptions(request, runtime);
        }

        /**
         * @summary Checks the status of a service in the current cluster, such as whether the service is activated and whether the payment is overdue.
         *
         * @param request CheckServiceStatusRequest
         * @return CheckServiceStatusResponse
         */
        public async Task<CheckServiceStatusResponse> CheckServiceStatusAsync(CheckServiceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckServiceStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 认领告警
         *
         * @param request ClaimAlarmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ClaimAlarmResponse
         */
        public ClaimAlarmResponse ClaimAlarmWithOptions(ClaimAlarmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClaimAlarm",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClaimAlarmResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 认领告警
         *
         * @param request ClaimAlarmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ClaimAlarmResponse
         */
        public async Task<ClaimAlarmResponse> ClaimAlarmWithOptionsAsync(ClaimAlarmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClaimAlarm",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClaimAlarmResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 认领告警
         *
         * @param request ClaimAlarmRequest
         * @return ClaimAlarmResponse
         */
        public ClaimAlarmResponse ClaimAlarm(ClaimAlarmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ClaimAlarmWithOptions(request, runtime);
        }

        /**
         * @summary 认领告警
         *
         * @param request ClaimAlarmRequest
         * @return ClaimAlarmResponse
         */
        public async Task<ClaimAlarmResponse> ClaimAlarmAsync(ClaimAlarmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ClaimAlarmWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 关闭告警
         *
         * @param request CloseAlarmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CloseAlarmResponse
         */
        public CloseAlarmResponse CloseAlarmWithOptions(CloseAlarmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Solution))
            {
                query["Solution"] = request.Solution;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseAlarm",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseAlarmResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 关闭告警
         *
         * @param request CloseAlarmRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CloseAlarmResponse
         */
        public async Task<CloseAlarmResponse> CloseAlarmWithOptionsAsync(CloseAlarmRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlarmId))
            {
                query["AlarmId"] = request.AlarmId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HandlerId))
            {
                query["HandlerId"] = request.HandlerId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Solution))
            {
                query["Solution"] = request.Solution;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseAlarm",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseAlarmResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 关闭告警
         *
         * @param request CloseAlarmRequest
         * @return CloseAlarmResponse
         */
        public CloseAlarmResponse CloseAlarm(CloseAlarmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CloseAlarmWithOptions(request, runtime);
        }

        /**
         * @summary 关闭告警
         *
         * @param request CloseAlarmRequest
         * @return CloseAlarmResponse
         */
        public async Task<CloseAlarmResponse> CloseAlarmAsync(CloseAlarmRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CloseAlarmWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Turns on or off the main switch of an ARMS agent, or queries the status of the main switch.
         *
         * @description ****
         *
         * @param request ConfigAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ConfigAppResponse
         */
        public ConfigAppResponse ConfigAppWithOptions(ConfigAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppIds))
            {
                query["AppIds"] = request.AppIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfigApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfigAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Turns on or off the main switch of an ARMS agent, or queries the status of the main switch.
         *
         * @description ****
         *
         * @param request ConfigAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ConfigAppResponse
         */
        public async Task<ConfigAppResponse> ConfigAppWithOptionsAsync(ConfigAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppIds))
            {
                query["AppIds"] = request.AppIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Enable))
            {
                query["Enable"] = request.Enable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfigApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfigAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Turns on or off the main switch of an ARMS agent, or queries the status of the main switch.
         *
         * @description ****
         *
         * @param request ConfigAppRequest
         * @return ConfigAppResponse
         */
        public ConfigAppResponse ConfigApp(ConfigAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ConfigAppWithOptions(request, runtime);
        }

        /**
         * @summary Turns on or off the main switch of an ARMS agent, or queries the status of the main switch.
         *
         * @description ****
         *
         * @param request ConfigAppRequest
         * @return ConfigAppResponse
         */
        public async Task<ConfigAppResponse> ConfigAppAsync(ConfigAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ConfigAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of the Alert Management module.
         *
         * @param request CreateAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAlertContactResponse
         */
        public CreateAlertContactResponse CreateAlertContactWithOptions(CreateAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotWebhookUrl))
            {
                query["DingRobotWebhookUrl"] = request.DingRobotWebhookUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PhoneNum))
            {
                query["PhoneNum"] = request.PhoneNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemNoc))
            {
                query["SystemNoc"] = request.SystemNoc;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAlertContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of the Alert Management module.
         *
         * @param request CreateAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAlertContactResponse
         */
        public async Task<CreateAlertContactResponse> CreateAlertContactWithOptionsAsync(CreateAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotWebhookUrl))
            {
                query["DingRobotWebhookUrl"] = request.DingRobotWebhookUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PhoneNum))
            {
                query["PhoneNum"] = request.PhoneNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemNoc))
            {
                query["SystemNoc"] = request.SystemNoc;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAlertContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of the Alert Management module.
         *
         * @param request CreateAlertContactRequest
         * @return CreateAlertContactResponse
         */
        public CreateAlertContactResponse CreateAlertContact(CreateAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateAlertContactWithOptions(request, runtime);
        }

        /**
         * @summary Creates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of the Alert Management module.
         *
         * @param request CreateAlertContactRequest
         * @return CreateAlertContactResponse
         */
        public async Task<CreateAlertContactResponse> CreateAlertContactAsync(CreateAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateAlertContactWithOptionsAsync(request, runtime);
        }

        /**
         * @param request CreateAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAlertContactGroupResponse
         */
        public CreateAlertContactGroupResponse CreateAlertContactGroupWithOptions(CreateAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAlertContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request CreateAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateAlertContactGroupResponse
         */
        public async Task<CreateAlertContactGroupResponse> CreateAlertContactGroupWithOptionsAsync(CreateAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateAlertContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request CreateAlertContactGroupRequest
         * @return CreateAlertContactGroupResponse
         */
        public CreateAlertContactGroupResponse CreateAlertContactGroup(CreateAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateAlertContactGroupWithOptions(request, runtime);
        }

        /**
         * @param request CreateAlertContactGroupRequest
         * @return CreateAlertContactGroupResponse
         */
        public async Task<CreateAlertContactGroupResponse> CreateAlertContactGroupAsync(CreateAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateAlertContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The operation that you want to perform. Set the value to CreateDispatchRule.
         *
         * @param request CreateDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateDispatchRuleResponse
         */
        public CreateDispatchRuleResponse CreateDispatchRuleWithOptions(CreateDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRule))
            {
                query["DispatchRule"] = request.DispatchRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDispatchRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The operation that you want to perform. Set the value to CreateDispatchRule.
         *
         * @param request CreateDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateDispatchRuleResponse
         */
        public async Task<CreateDispatchRuleResponse> CreateDispatchRuleWithOptionsAsync(CreateDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRule))
            {
                query["DispatchRule"] = request.DispatchRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDispatchRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The operation that you want to perform. Set the value to CreateDispatchRule.
         *
         * @param request CreateDispatchRuleRequest
         * @return CreateDispatchRuleResponse
         */
        public CreateDispatchRuleResponse CreateDispatchRule(CreateDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDispatchRuleWithOptions(request, runtime);
        }

        /**
         * @summary The operation that you want to perform. Set the value to CreateDispatchRule.
         *
         * @param request CreateDispatchRuleRequest
         * @return CreateDispatchRuleResponse
         */
        public async Task<CreateDispatchRuleResponse> CreateDispatchRuleAsync(CreateDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDispatchRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a custom job for an environment.
         *
         * @param request CreateEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvCustomJobResponse
         */
        public CreateEnvCustomJobResponse CreateEnvCustomJobWithOptions(CreateEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvCustomJobResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a custom job for an environment.
         *
         * @param request CreateEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvCustomJobResponse
         */
        public async Task<CreateEnvCustomJobResponse> CreateEnvCustomJobWithOptionsAsync(CreateEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvCustomJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a custom job for an environment.
         *
         * @param request CreateEnvCustomJobRequest
         * @return CreateEnvCustomJobResponse
         */
        public CreateEnvCustomJobResponse CreateEnvCustomJob(CreateEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEnvCustomJobWithOptions(request, runtime);
        }

        /**
         * @summary Creates a custom job for an environment.
         *
         * @param request CreateEnvCustomJobRequest
         * @return CreateEnvCustomJobResponse
         */
        public async Task<CreateEnvCustomJobResponse> CreateEnvCustomJobAsync(CreateEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEnvCustomJobWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a PodMonitor for an environment.
         *
         * @param request CreateEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvPodMonitorResponse
         */
        public CreateEnvPodMonitorResponse CreateEnvPodMonitorWithOptions(CreateEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvPodMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a PodMonitor for an environment.
         *
         * @param request CreateEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvPodMonitorResponse
         */
        public async Task<CreateEnvPodMonitorResponse> CreateEnvPodMonitorWithOptionsAsync(CreateEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvPodMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a PodMonitor for an environment.
         *
         * @param request CreateEnvPodMonitorRequest
         * @return CreateEnvPodMonitorResponse
         */
        public CreateEnvPodMonitorResponse CreateEnvPodMonitor(CreateEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEnvPodMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Creates a PodMonitor for an environment.
         *
         * @param request CreateEnvPodMonitorRequest
         * @return CreateEnvPodMonitorResponse
         */
        public async Task<CreateEnvPodMonitorResponse> CreateEnvPodMonitorAsync(CreateEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEnvPodMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a ServiceMonitor for an environment.
         *
         * @param request CreateEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvServiceMonitorResponse
         */
        public CreateEnvServiceMonitorResponse CreateEnvServiceMonitorWithOptions(CreateEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvServiceMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a ServiceMonitor for an environment.
         *
         * @param request CreateEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvServiceMonitorResponse
         */
        public async Task<CreateEnvServiceMonitorResponse> CreateEnvServiceMonitorWithOptionsAsync(CreateEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvServiceMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a ServiceMonitor for an environment.
         *
         * @param request CreateEnvServiceMonitorRequest
         * @return CreateEnvServiceMonitorResponse
         */
        public CreateEnvServiceMonitorResponse CreateEnvServiceMonitor(CreateEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEnvServiceMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Creates a ServiceMonitor for an environment.
         *
         * @param request CreateEnvServiceMonitorRequest
         * @return CreateEnvServiceMonitorResponse
         */
        public async Task<CreateEnvServiceMonitorResponse> CreateEnvServiceMonitorAsync(CreateEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEnvServiceMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an environment instance.
         *
         * @param request CreateEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvironmentResponse
         */
        public CreateEnvironmentResponse CreateEnvironmentWithOptions(CreateEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindResourceId))
            {
                query["BindResourceId"] = request.BindResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentName))
            {
                query["EnvironmentName"] = request.EnvironmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentSubType))
            {
                query["EnvironmentSubType"] = request.EnvironmentSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentType))
            {
                query["EnvironmentType"] = request.EnvironmentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ManagedType))
            {
                query["ManagedType"] = request.ManagedType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrometheusInstanceId))
            {
                query["PrometheusInstanceId"] = request.PrometheusInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvironmentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an environment instance.
         *
         * @param request CreateEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateEnvironmentResponse
         */
        public async Task<CreateEnvironmentResponse> CreateEnvironmentWithOptionsAsync(CreateEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindResourceId))
            {
                query["BindResourceId"] = request.BindResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentName))
            {
                query["EnvironmentName"] = request.EnvironmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentSubType))
            {
                query["EnvironmentSubType"] = request.EnvironmentSubType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentType))
            {
                query["EnvironmentType"] = request.EnvironmentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ManagedType))
            {
                query["ManagedType"] = request.ManagedType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PrometheusInstanceId))
            {
                query["PrometheusInstanceId"] = request.PrometheusInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEnvironmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an environment instance.
         *
         * @param request CreateEnvironmentRequest
         * @return CreateEnvironmentResponse
         */
        public CreateEnvironmentResponse CreateEnvironment(CreateEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEnvironmentWithOptions(request, runtime);
        }

        /**
         * @summary Creates an environment instance.
         *
         * @param request CreateEnvironmentRequest
         * @return CreateEnvironmentResponse
         */
        public async Task<CreateEnvironmentResponse> CreateEnvironmentAsync(CreateEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEnvironmentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建工作区
         *
         * @param tmpReq CreateGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateGrafanaWorkspaceResponse
         */
        public CreateGrafanaWorkspaceResponse CreateGrafanaWorkspaceWithOptions(CreateGrafanaWorkspaceRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateGrafanaWorkspaceShrinkRequest request = new CreateGrafanaWorkspaceShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaVersion))
            {
                query["GrafanaVersion"] = request.GrafanaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceEdition))
            {
                query["GrafanaWorkspaceEdition"] = request.GrafanaWorkspaceEdition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceName))
            {
                query["GrafanaWorkspaceName"] = request.GrafanaWorkspaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                query["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateGrafanaWorkspaceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建工作区
         *
         * @param tmpReq CreateGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateGrafanaWorkspaceResponse
         */
        public async Task<CreateGrafanaWorkspaceResponse> CreateGrafanaWorkspaceWithOptionsAsync(CreateGrafanaWorkspaceRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateGrafanaWorkspaceShrinkRequest request = new CreateGrafanaWorkspaceShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaVersion))
            {
                query["GrafanaVersion"] = request.GrafanaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceEdition))
            {
                query["GrafanaWorkspaceEdition"] = request.GrafanaWorkspaceEdition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceName))
            {
                query["GrafanaWorkspaceName"] = request.GrafanaWorkspaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Password))
            {
                query["Password"] = request.Password;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateGrafanaWorkspaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建工作区
         *
         * @param request CreateGrafanaWorkspaceRequest
         * @return CreateGrafanaWorkspaceResponse
         */
        public CreateGrafanaWorkspaceResponse CreateGrafanaWorkspace(CreateGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateGrafanaWorkspaceWithOptions(request, runtime);
        }

        /**
         * @summary 创建工作区
         *
         * @param request CreateGrafanaWorkspaceRequest
         * @return CreateGrafanaWorkspaceResponse
         */
        public async Task<CreateGrafanaWorkspaceResponse> CreateGrafanaWorkspaceAsync(CreateGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateGrafanaWorkspaceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an alert integration.
         *
         * @param request CreateIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateIntegrationResponse
         */
        public CreateIntegrationResponse CreateIntegrationWithOptions(CreateIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRecover))
            {
                body["AutoRecover"] = request.AutoRecover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationName))
            {
                body["IntegrationName"] = request.IntegrationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationProductType))
            {
                body["IntegrationProductType"] = request.IntegrationProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverTime))
            {
                body["RecoverTime"] = request.RecoverTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an alert integration.
         *
         * @param request CreateIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateIntegrationResponse
         */
        public async Task<CreateIntegrationResponse> CreateIntegrationWithOptionsAsync(CreateIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRecover))
            {
                body["AutoRecover"] = request.AutoRecover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationName))
            {
                body["IntegrationName"] = request.IntegrationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationProductType))
            {
                body["IntegrationProductType"] = request.IntegrationProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverTime))
            {
                body["RecoverTime"] = request.RecoverTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an alert integration.
         *
         * @param request CreateIntegrationRequest
         * @return CreateIntegrationResponse
         */
        public CreateIntegrationResponse CreateIntegration(CreateIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Creates an alert integration.
         *
         * @param request CreateIntegrationRequest
         * @return CreateIntegrationResponse
         */
        public async Task<CreateIntegrationResponse> CreateIntegrationAsync(CreateIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert rule.
         *
         * @param request CreateOrUpdateAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateAlertRuleResponse
         */
        public CreateOrUpdateAlertRuleResponse CreateOrUpdateAlertRuleWithOptions(CreateOrUpdateAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertCheckType))
            {
                body["AlertCheckType"] = request.AlertCheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertGroup))
            {
                body["AlertGroup"] = request.AlertGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                body["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                body["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertPiplines))
            {
                body["AlertPiplines"] = request.AlertPiplines;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertRuleContent))
            {
                body["AlertRuleContent"] = request.AlertRuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertStatus))
            {
                body["AlertStatus"] = request.AlertStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                body["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                body["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoAddNewApplication))
            {
                body["AutoAddNewApplication"] = request.AutoAddNewApplication;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoAddTargetConfig))
            {
                body["AutoAddTargetConfig"] = request.AutoAddTargetConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                body["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataConfig))
            {
                body["DataConfig"] = request.DataConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filters))
            {
                body["Filters"] = request.Filters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                body["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Level))
            {
                body["Level"] = request.Level;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkTags))
            {
                body["MarkTags"] = request.MarkTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                body["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricsKey))
            {
                body["MetricsKey"] = request.MetricsKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricsType))
            {
                body["MetricsType"] = request.MetricsType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Notice))
            {
                body["Notice"] = request.Notice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyMode))
            {
                body["NotifyMode"] = request.NotifyMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyStrategy))
            {
                body["NotifyStrategy"] = request.NotifyStrategy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                body["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                body["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PromQL))
            {
                body["PromQL"] = request.PromQL;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                body["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert rule.
         *
         * @param request CreateOrUpdateAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateAlertRuleResponse
         */
        public async Task<CreateOrUpdateAlertRuleResponse> CreateOrUpdateAlertRuleWithOptionsAsync(CreateOrUpdateAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertCheckType))
            {
                body["AlertCheckType"] = request.AlertCheckType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertGroup))
            {
                body["AlertGroup"] = request.AlertGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                body["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                body["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertPiplines))
            {
                body["AlertPiplines"] = request.AlertPiplines;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertRuleContent))
            {
                body["AlertRuleContent"] = request.AlertRuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertStatus))
            {
                body["AlertStatus"] = request.AlertStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                body["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                body["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoAddNewApplication))
            {
                body["AutoAddNewApplication"] = request.AutoAddNewApplication;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoAddTargetConfig))
            {
                body["AutoAddTargetConfig"] = request.AutoAddTargetConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                body["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataConfig))
            {
                body["DataConfig"] = request.DataConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filters))
            {
                body["Filters"] = request.Filters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                body["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Level))
            {
                body["Level"] = request.Level;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MarkTags))
            {
                body["MarkTags"] = request.MarkTags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                body["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricsKey))
            {
                body["MetricsKey"] = request.MetricsKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricsType))
            {
                body["MetricsType"] = request.MetricsType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Notice))
            {
                body["Notice"] = request.Notice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyMode))
            {
                body["NotifyMode"] = request.NotifyMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyStrategy))
            {
                body["NotifyStrategy"] = request.NotifyStrategy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                body["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                body["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PromQL))
            {
                body["PromQL"] = request.PromQL;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                body["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert rule.
         *
         * @param request CreateOrUpdateAlertRuleRequest
         * @return CreateOrUpdateAlertRuleResponse
         */
        public CreateOrUpdateAlertRuleResponse CreateOrUpdateAlertRule(CreateOrUpdateAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert rule.
         *
         * @param request CreateOrUpdateAlertRuleRequest
         * @return CreateOrUpdateAlertRuleResponse
         */
        public async Task<CreateOrUpdateAlertRuleResponse> CreateOrUpdateAlertRuleAsync(CreateOrUpdateAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert contact.
         *
         * @param request CreateOrUpdateContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateContactResponse
         */
        public CreateOrUpdateContactResponse CreateOrUpdateContactWithOptions(CreateOrUpdateContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotUrl))
            {
                query["DingRobotUrl"] = request.DingRobotUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                body["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                body["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CorpUserId))
            {
                body["CorpUserId"] = request.CorpUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                body["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsEmailVerify))
            {
                body["IsEmailVerify"] = request.IsEmailVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                body["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReissueSendNotice))
            {
                body["ReissueSendNotice"] = request.ReissueSendNotice;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert contact.
         *
         * @param request CreateOrUpdateContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateContactResponse
         */
        public async Task<CreateOrUpdateContactResponse> CreateOrUpdateContactWithOptionsAsync(CreateOrUpdateContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotUrl))
            {
                query["DingRobotUrl"] = request.DingRobotUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                body["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                body["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CorpUserId))
            {
                body["CorpUserId"] = request.CorpUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                body["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsEmailVerify))
            {
                body["IsEmailVerify"] = request.IsEmailVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                body["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReissueSendNotice))
            {
                body["ReissueSendNotice"] = request.ReissueSendNotice;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert contact.
         *
         * @param request CreateOrUpdateContactRequest
         * @return CreateOrUpdateContactResponse
         */
        public CreateOrUpdateContactResponse CreateOrUpdateContact(CreateOrUpdateContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateContactWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert contact.
         *
         * @param request CreateOrUpdateContactRequest
         * @return CreateOrUpdateContactResponse
         */
        public async Task<CreateOrUpdateContactResponse> CreateOrUpdateContactAsync(CreateOrUpdateContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert contact group.
         *
         * @param request CreateOrUpdateContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateContactGroupResponse
         */
        public CreateOrUpdateContactGroupResponse CreateOrUpdateContactGroupWithOptions(CreateOrUpdateContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                body["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                body["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                body["ContactIds"] = request.ContactIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert contact group.
         *
         * @param request CreateOrUpdateContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateContactGroupResponse
         */
        public async Task<CreateOrUpdateContactGroupResponse> CreateOrUpdateContactGroupWithOptionsAsync(CreateOrUpdateContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                body["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                body["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                body["ContactIds"] = request.ContactIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an alert contact group.
         *
         * @param request CreateOrUpdateContactGroupRequest
         * @return CreateOrUpdateContactGroupResponse
         */
        public CreateOrUpdateContactGroupResponse CreateOrUpdateContactGroup(CreateOrUpdateContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateContactGroupWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies an alert contact group.
         *
         * @param request CreateOrUpdateContactGroupRequest
         * @return CreateOrUpdateContactGroupResponse
         */
        public async Task<CreateOrUpdateContactGroupResponse> CreateOrUpdateContactGroupAsync(CreateOrUpdateContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies an EventBridge integration that is used to push notifications.
         *
         * @param request CreateOrUpdateEventBridgeIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateEventBridgeIntegrationResponse
         */
        public CreateOrUpdateEventBridgeIntegrationResponse CreateOrUpdateEventBridgeIntegrationWithOptions(CreateOrUpdateEventBridgeIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessKey))
            {
                body["AccessKey"] = request.AccessKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessSecret))
            {
                body["AccessSecret"] = request.AccessSecret;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Endpoint))
            {
                body["Endpoint"] = request.Endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventBusName))
            {
                body["EventBusName"] = request.EventBusName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventBusRegionId))
            {
                body["EventBusRegionId"] = request.EventBusRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                body["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateEventBridgeIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateEventBridgeIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an EventBridge integration that is used to push notifications.
         *
         * @param request CreateOrUpdateEventBridgeIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateEventBridgeIntegrationResponse
         */
        public async Task<CreateOrUpdateEventBridgeIntegrationResponse> CreateOrUpdateEventBridgeIntegrationWithOptionsAsync(CreateOrUpdateEventBridgeIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessKey))
            {
                body["AccessKey"] = request.AccessKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AccessSecret))
            {
                body["AccessSecret"] = request.AccessSecret;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Endpoint))
            {
                body["Endpoint"] = request.Endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventBusName))
            {
                body["EventBusName"] = request.EventBusName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventBusRegionId))
            {
                body["EventBusRegionId"] = request.EventBusRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                body["Source"] = request.Source;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateEventBridgeIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateEventBridgeIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies an EventBridge integration that is used to push notifications.
         *
         * @param request CreateOrUpdateEventBridgeIntegrationRequest
         * @return CreateOrUpdateEventBridgeIntegrationResponse
         */
        public CreateOrUpdateEventBridgeIntegrationResponse CreateOrUpdateEventBridgeIntegration(CreateOrUpdateEventBridgeIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateEventBridgeIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies an EventBridge integration that is used to push notifications.
         *
         * @param request CreateOrUpdateEventBridgeIntegrationRequest
         * @return CreateOrUpdateEventBridgeIntegrationResponse
         */
        public async Task<CreateOrUpdateEventBridgeIntegrationResponse> CreateOrUpdateEventBridgeIntegrationAsync(CreateOrUpdateEventBridgeIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateEventBridgeIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or updates an IM chatbot.
         *
         * @param request CreateOrUpdateIMRobotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateIMRobotResponse
         */
        public CreateOrUpdateIMRobotResponse CreateOrUpdateIMRobotWithOptions(CreateOrUpdateIMRobotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CardTemplate))
            {
                body["CardTemplate"] = request.CardTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DailyNoc))
            {
                body["DailyNoc"] = request.DailyNoc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DailyNocTime))
            {
                body["DailyNocTime"] = request.DailyNocTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingSignKey))
            {
                body["DingSignKey"] = request.DingSignKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableOutgoing))
            {
                body["EnableOutgoing"] = request.EnableOutgoing;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotAddress))
            {
                body["RobotAddress"] = request.RobotAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotId))
            {
                body["RobotId"] = request.RobotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotName))
            {
                body["RobotName"] = request.RobotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Token))
            {
                body["Token"] = request.Token;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                body["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateIMRobot",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateIMRobotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or updates an IM chatbot.
         *
         * @param request CreateOrUpdateIMRobotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateIMRobotResponse
         */
        public async Task<CreateOrUpdateIMRobotResponse> CreateOrUpdateIMRobotWithOptionsAsync(CreateOrUpdateIMRobotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CardTemplate))
            {
                body["CardTemplate"] = request.CardTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DailyNoc))
            {
                body["DailyNoc"] = request.DailyNoc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DailyNocTime))
            {
                body["DailyNocTime"] = request.DailyNocTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingSignKey))
            {
                body["DingSignKey"] = request.DingSignKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableOutgoing))
            {
                body["EnableOutgoing"] = request.EnableOutgoing;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotAddress))
            {
                body["RobotAddress"] = request.RobotAddress;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotId))
            {
                body["RobotId"] = request.RobotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotName))
            {
                body["RobotName"] = request.RobotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Token))
            {
                body["Token"] = request.Token;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                body["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateIMRobot",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateIMRobotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or updates an IM chatbot.
         *
         * @param request CreateOrUpdateIMRobotRequest
         * @return CreateOrUpdateIMRobotResponse
         */
        public CreateOrUpdateIMRobotResponse CreateOrUpdateIMRobot(CreateOrUpdateIMRobotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateIMRobotWithOptions(request, runtime);
        }

        /**
         * @summary Creates or updates an IM chatbot.
         *
         * @param request CreateOrUpdateIMRobotRequest
         * @return CreateOrUpdateIMRobotResponse
         */
        public async Task<CreateOrUpdateIMRobotResponse> CreateOrUpdateIMRobotAsync(CreateOrUpdateIMRobotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateIMRobotWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies a notification policy.
         *
         * @param request CreateOrUpdateNotificationPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateNotificationPolicyResponse
         */
        public CreateOrUpdateNotificationPolicyResponse CreateOrUpdateNotificationPolicyWithOptions(CreateOrUpdateNotificationPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectedMode))
            {
                body["DirectedMode"] = request.DirectedMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EscalationPolicyId))
            {
                body["EscalationPolicyId"] = request.EscalationPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupRule))
            {
                body["GroupRule"] = request.GroupRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationId))
            {
                body["IntegrationId"] = request.IntegrationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingRules))
            {
                body["MatchingRules"] = request.MatchingRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyRule))
            {
                body["NotifyRule"] = request.NotifyRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyTemplate))
            {
                body["NotifyTemplate"] = request.NotifyTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Repeat))
            {
                body["Repeat"] = request.Repeat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepeatInterval))
            {
                body["RepeatInterval"] = request.RepeatInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SendRecoverMessage))
            {
                body["SendRecoverMessage"] = request.SendRecoverMessage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateNotificationPolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateNotificationPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a notification policy.
         *
         * @param request CreateOrUpdateNotificationPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateNotificationPolicyResponse
         */
        public async Task<CreateOrUpdateNotificationPolicyResponse> CreateOrUpdateNotificationPolicyWithOptionsAsync(CreateOrUpdateNotificationPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectedMode))
            {
                body["DirectedMode"] = request.DirectedMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EscalationPolicyId))
            {
                body["EscalationPolicyId"] = request.EscalationPolicyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupRule))
            {
                body["GroupRule"] = request.GroupRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationId))
            {
                body["IntegrationId"] = request.IntegrationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingRules))
            {
                body["MatchingRules"] = request.MatchingRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyRule))
            {
                body["NotifyRule"] = request.NotifyRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyTemplate))
            {
                body["NotifyTemplate"] = request.NotifyTemplate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Repeat))
            {
                body["Repeat"] = request.Repeat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RepeatInterval))
            {
                body["RepeatInterval"] = request.RepeatInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SendRecoverMessage))
            {
                body["SendRecoverMessage"] = request.SendRecoverMessage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateNotificationPolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateNotificationPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a notification policy.
         *
         * @param request CreateOrUpdateNotificationPolicyRequest
         * @return CreateOrUpdateNotificationPolicyResponse
         */
        public CreateOrUpdateNotificationPolicyResponse CreateOrUpdateNotificationPolicy(CreateOrUpdateNotificationPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateNotificationPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies a notification policy.
         *
         * @param request CreateOrUpdateNotificationPolicyRequest
         * @return CreateOrUpdateNotificationPolicyResponse
         */
        public async Task<CreateOrUpdateNotificationPolicyResponse> CreateOrUpdateNotificationPolicyAsync(CreateOrUpdateNotificationPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateNotificationPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies a silence policy.
         *
         * @param request CreateOrUpdateSilencePolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateSilencePolicyResponse
         */
        public CreateOrUpdateSilencePolicyResponse CreateOrUpdateSilencePolicyWithOptions(CreateOrUpdateSilencePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingRules))
            {
                body["MatchingRules"] = request.MatchingRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateSilencePolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateSilencePolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a silence policy.
         *
         * @param request CreateOrUpdateSilencePolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateSilencePolicyResponse
         */
        public async Task<CreateOrUpdateSilencePolicyResponse> CreateOrUpdateSilencePolicyWithOptionsAsync(CreateOrUpdateSilencePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingRules))
            {
                body["MatchingRules"] = request.MatchingRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                body["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateSilencePolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateSilencePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a silence policy.
         *
         * @param request CreateOrUpdateSilencePolicyRequest
         * @return CreateOrUpdateSilencePolicyResponse
         */
        public CreateOrUpdateSilencePolicyResponse CreateOrUpdateSilencePolicy(CreateOrUpdateSilencePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateSilencePolicyWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies a silence policy.
         *
         * @param request CreateOrUpdateSilencePolicyRequest
         * @return CreateOrUpdateSilencePolicyResponse
         */
        public async Task<CreateOrUpdateSilencePolicyResponse> CreateOrUpdateSilencePolicyAsync(CreateOrUpdateSilencePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateSilencePolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates or modifies a webhook alert contact.
         *
         * @param request CreateOrUpdateWebhookContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateWebhookContactResponse
         */
        public CreateOrUpdateWebhookContactResponse CreateOrUpdateWebhookContactWithOptions(CreateOrUpdateWebhookContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizHeaders))
            {
                body["BizHeaders"] = request.BizHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizParams))
            {
                body["BizParams"] = request.BizParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                body["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                body["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                body["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                body["Url"] = request.Url;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookId))
            {
                body["WebhookId"] = request.WebhookId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookName))
            {
                body["WebhookName"] = request.WebhookName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateWebhookContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateWebhookContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a webhook alert contact.
         *
         * @param request CreateOrUpdateWebhookContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateOrUpdateWebhookContactResponse
         */
        public async Task<CreateOrUpdateWebhookContactResponse> CreateOrUpdateWebhookContactWithOptionsAsync(CreateOrUpdateWebhookContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizHeaders))
            {
                body["BizHeaders"] = request.BizHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizParams))
            {
                body["BizParams"] = request.BizParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                body["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                body["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                body["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                body["Url"] = request.Url;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookId))
            {
                body["WebhookId"] = request.WebhookId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookName))
            {
                body["WebhookName"] = request.WebhookName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOrUpdateWebhookContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOrUpdateWebhookContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates or modifies a webhook alert contact.
         *
         * @param request CreateOrUpdateWebhookContactRequest
         * @return CreateOrUpdateWebhookContactResponse
         */
        public CreateOrUpdateWebhookContactResponse CreateOrUpdateWebhookContact(CreateOrUpdateWebhookContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOrUpdateWebhookContactWithOptions(request, runtime);
        }

        /**
         * @summary Creates or modifies a webhook alert contact.
         *
         * @param request CreateOrUpdateWebhookContactRequest
         * @return CreateOrUpdateWebhookContactResponse
         */
        public async Task<CreateOrUpdateWebhookContactResponse> CreateOrUpdateWebhookContactAsync(CreateOrUpdateWebhookContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOrUpdateWebhookContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建Prometheus告警规则
         *
         * @param request CreatePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusAlertRuleResponse
         */
        public CreatePrometheusAlertRuleResponse CreatePrometheusAlertRuleWithOptions(CreatePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                query["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                query["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                query["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyType))
            {
                query["NotifyType"] = request.NotifyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建Prometheus告警规则
         *
         * @param request CreatePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusAlertRuleResponse
         */
        public async Task<CreatePrometheusAlertRuleResponse> CreatePrometheusAlertRuleWithOptionsAsync(CreatePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                query["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                query["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                query["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyType))
            {
                query["NotifyType"] = request.NotifyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建Prometheus告警规则
         *
         * @param request CreatePrometheusAlertRuleRequest
         * @return CreatePrometheusAlertRuleResponse
         */
        public CreatePrometheusAlertRuleResponse CreatePrometheusAlertRule(CreatePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreatePrometheusAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary 创建Prometheus告警规则
         *
         * @param request CreatePrometheusAlertRuleRequest
         * @return CreatePrometheusAlertRuleResponse
         */
        public async Task<CreatePrometheusAlertRuleResponse> CreatePrometheusAlertRuleAsync(CreatePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreatePrometheusAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance.
         *
         * @param request CreatePrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusInstanceResponse
         */
        public CreatePrometheusInstanceResponse CreatePrometheusInstanceWithOptions(CreatePrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllSubClustersSuccess))
            {
                query["AllSubClustersSuccess"] = request.AllSubClustersSuccess;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArchiveDuration))
            {
                query["ArchiveDuration"] = request.ArchiveDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupId))
            {
                query["SecurityGroupId"] = request.SecurityGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubClustersJson))
            {
                query["SubClustersJson"] = request.SubClustersJson;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance.
         *
         * @param request CreatePrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusInstanceResponse
         */
        public async Task<CreatePrometheusInstanceResponse> CreatePrometheusInstanceWithOptionsAsync(CreatePrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllSubClustersSuccess))
            {
                query["AllSubClustersSuccess"] = request.AllSubClustersSuccess;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArchiveDuration))
            {
                query["ArchiveDuration"] = request.ArchiveDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupId))
            {
                query["SecurityGroupId"] = request.SecurityGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubClustersJson))
            {
                query["SubClustersJson"] = request.SubClustersJson;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance.
         *
         * @param request CreatePrometheusInstanceRequest
         * @return CreatePrometheusInstanceResponse
         */
        public CreatePrometheusInstanceResponse CreatePrometheusInstance(CreatePrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreatePrometheusInstanceWithOptions(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance.
         *
         * @param request CreatePrometheusInstanceRequest
         * @return CreatePrometheusInstanceResponse
         */
        public async Task<CreatePrometheusInstanceResponse> CreatePrometheusInstanceAsync(CreatePrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreatePrometheusInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a monitoring configuration for a Prometheus instance.
         *
         * @param request CreatePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusMonitoringResponse
         */
        public CreatePrometheusMonitoringResponse CreatePrometheusMonitoringWithOptions(CreatePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusMonitoringResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a monitoring configuration for a Prometheus instance.
         *
         * @param request CreatePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreatePrometheusMonitoringResponse
         */
        public async Task<CreatePrometheusMonitoringResponse> CreatePrometheusMonitoringWithOptionsAsync(CreatePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreatePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreatePrometheusMonitoringResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a monitoring configuration for a Prometheus instance.
         *
         * @param request CreatePrometheusMonitoringRequest
         * @return CreatePrometheusMonitoringResponse
         */
        public CreatePrometheusMonitoringResponse CreatePrometheusMonitoring(CreatePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreatePrometheusMonitoringWithOptions(request, runtime);
        }

        /**
         * @summary Creates a monitoring configuration for a Prometheus instance.
         *
         * @param request CreatePrometheusMonitoringRequest
         * @return CreatePrometheusMonitoringResponse
         */
        public async Task<CreatePrometheusMonitoringResponse> CreatePrometheusMonitoringAsync(CreatePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreatePrometheusMonitoringWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a Browser Monitoring task for an application.
         *
         * @param request CreateRetcodeAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRetcodeAppResponse
         */
        public CreateRetcodeAppResponse CreateRetcodeAppWithOptions(CreateRetcodeAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppName))
            {
                query["RetcodeAppName"] = request.RetcodeAppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppType))
            {
                query["RetcodeAppType"] = request.RetcodeAppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRetcodeApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRetcodeAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a Browser Monitoring task for an application.
         *
         * @param request CreateRetcodeAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRetcodeAppResponse
         */
        public async Task<CreateRetcodeAppResponse> CreateRetcodeAppWithOptionsAsync(CreateRetcodeAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppName))
            {
                query["RetcodeAppName"] = request.RetcodeAppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppType))
            {
                query["RetcodeAppType"] = request.RetcodeAppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRetcodeApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRetcodeAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a Browser Monitoring task for an application.
         *
         * @param request CreateRetcodeAppRequest
         * @return CreateRetcodeAppResponse
         */
        public CreateRetcodeAppResponse CreateRetcodeApp(CreateRetcodeAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRetcodeAppWithOptions(request, runtime);
        }

        /**
         * @summary Creates a Browser Monitoring task for an application.
         *
         * @param request CreateRetcodeAppRequest
         * @return CreateRetcodeAppResponse
         */
        public async Task<CreateRetcodeAppResponse> CreateRetcodeAppAsync(CreateRetcodeAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRetcodeAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建前端监控应用
         *
         * @param request CreateRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRumAppResponse
         */
        public CreateRumAppResponse CreateRumAppWithOptions(CreateRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PackageName))
            {
                query["PackageName"] = request.PackageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteType))
            {
                query["SiteType"] = request.SiteType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRumAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建前端监控应用
         *
         * @param request CreateRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRumAppResponse
         */
        public async Task<CreateRumAppResponse> CreateRumAppWithOptionsAsync(CreateRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PackageName))
            {
                query["PackageName"] = request.PackageName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SiteType))
            {
                query["SiteType"] = request.SiteType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Source))
            {
                query["Source"] = request.Source;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRumAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建前端监控应用
         *
         * @param request CreateRumAppRequest
         * @return CreateRumAppResponse
         */
        public CreateRumAppResponse CreateRumApp(CreateRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRumAppWithOptions(request, runtime);
        }

        /**
         * @summary 创建前端监控应用
         *
         * @param request CreateRumAppRequest
         * @return CreateRumAppResponse
         */
        public async Task<CreateRumAppResponse> CreateRumAppAsync(CreateRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRumAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建前端监控上传oss的URL
         *
         * @param request CreateRumUploadFileUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRumUploadFileUrlResponse
         */
        public CreateRumUploadFileUrlResponse CreateRumUploadFileUrlWithOptions(CreateRumUploadFileUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourcemapType))
            {
                query["SourcemapType"] = request.SourcemapType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRumUploadFileUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRumUploadFileUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建前端监控上传oss的URL
         *
         * @param request CreateRumUploadFileUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateRumUploadFileUrlResponse
         */
        public async Task<CreateRumUploadFileUrlResponse> CreateRumUploadFileUrlWithOptionsAsync(CreateRumUploadFileUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourcemapType))
            {
                query["SourcemapType"] = request.SourcemapType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRumUploadFileUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRumUploadFileUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建前端监控上传oss的URL
         *
         * @param request CreateRumUploadFileUrlRequest
         * @return CreateRumUploadFileUrlResponse
         */
        public CreateRumUploadFileUrlResponse CreateRumUploadFileUrl(CreateRumUploadFileUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRumUploadFileUrlWithOptions(request, runtime);
        }

        /**
         * @summary 创建前端监控上传oss的URL
         *
         * @param request CreateRumUploadFileUrlRequest
         * @return CreateRumUploadFileUrlResponse
         */
        public async Task<CreateRumUploadFileUrlResponse> CreateRumUploadFileUrlAsync(CreateRumUploadFileUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRumUploadFileUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建或更新云拨测定时监控任务
         *
         * @param tmpReq CreateSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSyntheticTaskResponse
         */
        public CreateSyntheticTaskResponse CreateSyntheticTaskWithOptions(CreateSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSyntheticTaskShrinkRequest request = new CreateSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonParam))
            {
                request.CommonParamShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonParam, "CommonParam", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Download))
            {
                request.DownloadShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Download, "Download", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ExtendInterval))
            {
                request.ExtendIntervalShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ExtendInterval, "ExtendInterval", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorList))
            {
                request.MonitorListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorList, "MonitorList", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Navigation))
            {
                request.NavigationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Navigation, "Navigation", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Net))
            {
                request.NetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Net, "Net", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Protocol))
            {
                request.ProtocolShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Protocol, "Protocol", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonParamShrink))
            {
                query["CommonParam"] = request.CommonParamShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadShrink))
            {
                query["Download"] = request.DownloadShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtendIntervalShrink))
            {
                query["ExtendInterval"] = request.ExtendIntervalShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalTime))
            {
                query["IntervalTime"] = request.IntervalTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalType))
            {
                query["IntervalType"] = request.IntervalType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IpType))
            {
                query["IpType"] = request.IpType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorListShrink))
            {
                query["MonitorList"] = request.MonitorListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NavigationShrink))
            {
                query["Navigation"] = request.NavigationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetShrink))
            {
                query["Net"] = request.NetShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolShrink))
            {
                query["Protocol"] = request.ProtocolShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UpdateTask))
            {
                query["UpdateTask"] = request.UpdateTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建或更新云拨测定时监控任务
         *
         * @param tmpReq CreateSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateSyntheticTaskResponse
         */
        public async Task<CreateSyntheticTaskResponse> CreateSyntheticTaskWithOptionsAsync(CreateSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSyntheticTaskShrinkRequest request = new CreateSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonParam))
            {
                request.CommonParamShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonParam, "CommonParam", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Download))
            {
                request.DownloadShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Download, "Download", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ExtendInterval))
            {
                request.ExtendIntervalShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ExtendInterval, "ExtendInterval", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorList))
            {
                request.MonitorListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorList, "MonitorList", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Navigation))
            {
                request.NavigationShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Navigation, "Navigation", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Net))
            {
                request.NetShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Net, "Net", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Protocol))
            {
                request.ProtocolShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Protocol, "Protocol", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonParamShrink))
            {
                query["CommonParam"] = request.CommonParamShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadShrink))
            {
                query["Download"] = request.DownloadShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtendIntervalShrink))
            {
                query["ExtendInterval"] = request.ExtendIntervalShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalTime))
            {
                query["IntervalTime"] = request.IntervalTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalType))
            {
                query["IntervalType"] = request.IntervalType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IpType))
            {
                query["IpType"] = request.IpType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorListShrink))
            {
                query["MonitorList"] = request.MonitorListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NavigationShrink))
            {
                query["Navigation"] = request.NavigationShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetShrink))
            {
                query["Net"] = request.NetShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolShrink))
            {
                query["Protocol"] = request.ProtocolShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UpdateTask))
            {
                query["UpdateTask"] = request.UpdateTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建或更新云拨测定时监控任务
         *
         * @param request CreateSyntheticTaskRequest
         * @return CreateSyntheticTaskResponse
         */
        public CreateSyntheticTaskResponse CreateSyntheticTask(CreateSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary 创建或更新云拨测定时监控任务
         *
         * @param request CreateSyntheticTaskRequest
         * @return CreateSyntheticTaskResponse
         */
        public async Task<CreateSyntheticTaskResponse> CreateSyntheticTaskAsync(CreateSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 创建云拨测定时任务
         *
         * @param tmpReq CreateTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateTimingSyntheticTaskResponse
         */
        public CreateTimingSyntheticTaskResponse CreateTimingSyntheticTaskWithOptions(CreateTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTimingSyntheticTaskShrinkRequest request = new CreateTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AvailableAssertions))
            {
                request.AvailableAssertionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AvailableAssertions, "AvailableAssertions", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonSetting))
            {
                request.CommonSettingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonSetting, "CommonSetting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CustomPeriod))
            {
                request.CustomPeriodShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CustomPeriod, "CustomPeriod", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorConf))
            {
                request.MonitorConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorConf, "MonitorConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitors))
            {
                request.MonitorsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitors, "Monitors", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableAssertionsShrink))
            {
                query["AvailableAssertions"] = request.AvailableAssertionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonSettingShrink))
            {
                query["CommonSetting"] = request.CommonSettingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPeriodShrink))
            {
                query["CustomPeriod"] = request.CustomPeriodShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Frequency))
            {
                query["Frequency"] = request.Frequency;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorCategory))
            {
                query["MonitorCategory"] = request.MonitorCategory;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorConfShrink))
            {
                query["MonitorConf"] = request.MonitorConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorsShrink))
            {
                query["Monitors"] = request.MonitorsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 创建云拨测定时任务
         *
         * @param tmpReq CreateTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateTimingSyntheticTaskResponse
         */
        public async Task<CreateTimingSyntheticTaskResponse> CreateTimingSyntheticTaskWithOptionsAsync(CreateTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateTimingSyntheticTaskShrinkRequest request = new CreateTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AvailableAssertions))
            {
                request.AvailableAssertionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AvailableAssertions, "AvailableAssertions", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonSetting))
            {
                request.CommonSettingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonSetting, "CommonSetting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CustomPeriod))
            {
                request.CustomPeriodShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CustomPeriod, "CustomPeriod", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorConf))
            {
                request.MonitorConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorConf, "MonitorConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitors))
            {
                request.MonitorsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitors, "Monitors", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableAssertionsShrink))
            {
                query["AvailableAssertions"] = request.AvailableAssertionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonSettingShrink))
            {
                query["CommonSetting"] = request.CommonSettingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPeriodShrink))
            {
                query["CustomPeriod"] = request.CustomPeriodShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Frequency))
            {
                query["Frequency"] = request.Frequency;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorCategory))
            {
                query["MonitorCategory"] = request.MonitorCategory;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorConfShrink))
            {
                query["MonitorConf"] = request.MonitorConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorsShrink))
            {
                query["Monitors"] = request.MonitorsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 创建云拨测定时任务
         *
         * @param request CreateTimingSyntheticTaskRequest
         * @return CreateTimingSyntheticTaskResponse
         */
        public CreateTimingSyntheticTaskResponse CreateTimingSyntheticTask(CreateTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary 创建云拨测定时任务
         *
         * @param request CreateTimingSyntheticTaskRequest
         * @return CreateTimingSyntheticTaskResponse
         */
        public async Task<CreateTimingSyntheticTaskResponse> CreateTimingSyntheticTaskAsync(CreateTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds a contact for webhook alerts.
         *
         * @param request CreateWebhookRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateWebhookResponse
         */
        public CreateWebhookResponse CreateWebhookWithOptions(CreateWebhookRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                query["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpHeaders))
            {
                query["HttpHeaders"] = request.HttpHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpParams))
            {
                query["HttpParams"] = request.HttpParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                query["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                query["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWebhook",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWebhookResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds a contact for webhook alerts.
         *
         * @param request CreateWebhookRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return CreateWebhookResponse
         */
        public async Task<CreateWebhookResponse> CreateWebhookWithOptionsAsync(CreateWebhookRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                query["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpHeaders))
            {
                query["HttpHeaders"] = request.HttpHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpParams))
            {
                query["HttpParams"] = request.HttpParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                query["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                query["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateWebhook",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateWebhookResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds a contact for webhook alerts.
         *
         * @param request CreateWebhookRequest
         * @return CreateWebhookResponse
         */
        public CreateWebhookResponse CreateWebhook(CreateWebhookRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateWebhookWithOptions(request, runtime);
        }

        /**
         * @summary Adds a contact for webhook alerts.
         *
         * @param request CreateWebhookRequest
         * @return CreateWebhookResponse
         */
        public async Task<CreateWebhookResponse> CreateWebhookAsync(CreateWebhookRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateWebhookWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Disables an authentication token.
         *
         * @param request DelAuthTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DelAuthTokenResponse
         */
        public DelAuthTokenResponse DelAuthTokenWithOptions(DelAuthTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DelAuthToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DelAuthTokenResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Disables an authentication token.
         *
         * @param request DelAuthTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DelAuthTokenResponse
         */
        public async Task<DelAuthTokenResponse> DelAuthTokenWithOptionsAsync(DelAuthTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DelAuthToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DelAuthTokenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Disables an authentication token.
         *
         * @param request DelAuthTokenRequest
         * @return DelAuthTokenResponse
         */
        public DelAuthTokenResponse DelAuthToken(DelAuthTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DelAuthTokenWithOptions(request, runtime);
        }

        /**
         * @summary Disables an authentication token.
         *
         * @param request DelAuthTokenRequest
         * @return DelAuthTokenResponse
         */
        public async Task<DelAuthTokenResponse> DelAuthTokenAsync(DelAuthTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DelAuthTokenWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Delete AddonRelease data by AddonRelease name.
         *
         * @param request DeleteAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAddonReleaseResponse
         */
        public DeleteAddonReleaseResponse DeleteAddonReleaseWithOptions(DeleteAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAddonReleaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Delete AddonRelease data by AddonRelease name.
         *
         * @param request DeleteAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAddonReleaseResponse
         */
        public async Task<DeleteAddonReleaseResponse> DeleteAddonReleaseWithOptionsAsync(DeleteAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Force))
            {
                query["Force"] = request.Force;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAddonReleaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Delete AddonRelease data by AddonRelease name.
         *
         * @param request DeleteAddonReleaseRequest
         * @return DeleteAddonReleaseResponse
         */
        public DeleteAddonReleaseResponse DeleteAddonRelease(DeleteAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAddonReleaseWithOptions(request, runtime);
        }

        /**
         * @summary Delete AddonRelease data by AddonRelease name.
         *
         * @param request DeleteAddonReleaseRequest
         * @return DeleteAddonReleaseResponse
         */
        public async Task<DeleteAddonReleaseResponse> DeleteAddonReleaseAsync(DeleteAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAddonReleaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an DeleteAlertContact contact.
         *
         * @description ********
         *
         * @param request DeleteAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertContactResponse
         */
        public DeleteAlertContactResponse DeleteAlertContactWithOptions(DeleteAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an DeleteAlertContact contact.
         *
         * @description ********
         *
         * @param request DeleteAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertContactResponse
         */
        public async Task<DeleteAlertContactResponse> DeleteAlertContactWithOptionsAsync(DeleteAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an DeleteAlertContact contact.
         *
         * @description ********
         *
         * @param request DeleteAlertContactRequest
         * @return DeleteAlertContactResponse
         */
        public DeleteAlertContactResponse DeleteAlertContact(DeleteAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAlertContactWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an DeleteAlertContact contact.
         *
         * @description ********
         *
         * @param request DeleteAlertContactRequest
         * @return DeleteAlertContactResponse
         */
        public async Task<DeleteAlertContactResponse> DeleteAlertContactAsync(DeleteAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAlertContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an DeleteAlertContactGroup contact group.
         *
         * @param request DeleteAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertContactGroupResponse
         */
        public DeleteAlertContactGroupResponse DeleteAlertContactGroupWithOptions(DeleteAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an DeleteAlertContactGroup contact group.
         *
         * @param request DeleteAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertContactGroupResponse
         */
        public async Task<DeleteAlertContactGroupResponse> DeleteAlertContactGroupWithOptionsAsync(DeleteAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an DeleteAlertContactGroup contact group.
         *
         * @param request DeleteAlertContactGroupRequest
         * @return DeleteAlertContactGroupResponse
         */
        public DeleteAlertContactGroupResponse DeleteAlertContactGroup(DeleteAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAlertContactGroupWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an DeleteAlertContactGroup contact group.
         *
         * @param request DeleteAlertContactGroupRequest
         * @return DeleteAlertContactGroupResponse
         */
        public async Task<DeleteAlertContactGroupResponse> DeleteAlertContactGroupAsync(DeleteAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAlertContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an alert rule.
         *
         * @param request DeleteAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertRuleResponse
         */
        public DeleteAlertRuleResponse DeleteAlertRuleWithOptions(DeleteAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert rule.
         *
         * @param request DeleteAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertRuleResponse
         */
        public async Task<DeleteAlertRuleResponse> DeleteAlertRuleWithOptionsAsync(DeleteAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert rule.
         *
         * @param request DeleteAlertRuleRequest
         * @return DeleteAlertRuleResponse
         */
        public DeleteAlertRuleResponse DeleteAlertRule(DeleteAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an alert rule.
         *
         * @param request DeleteAlertRuleRequest
         * @return DeleteAlertRuleResponse
         */
        public async Task<DeleteAlertRuleResponse> DeleteAlertRuleAsync(DeleteAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @param request DeleteAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertRulesResponse
         */
        public DeleteAlertRulesResponse DeleteAlertRulesWithOptions(DeleteAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertIds))
            {
                query["AlertIds"] = request.AlertIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request DeleteAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAlertRulesResponse
         */
        public async Task<DeleteAlertRulesResponse> DeleteAlertRulesWithOptionsAsync(DeleteAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertIds))
            {
                query["AlertIds"] = request.AlertIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAlertRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request DeleteAlertRulesRequest
         * @return DeleteAlertRulesResponse
         */
        public DeleteAlertRulesResponse DeleteAlertRules(DeleteAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAlertRulesWithOptions(request, runtime);
        }

        /**
         * @param request DeleteAlertRulesRequest
         * @return DeleteAlertRulesResponse
         */
        public async Task<DeleteAlertRulesResponse> DeleteAlertRulesAsync(DeleteAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAlertRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes multiple applications at a time based on the process IDs (PIDs).
         *
         * @param request DeleteAppListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAppListResponse
         */
        public DeleteAppListResponse DeleteAppListWithOptions(DeleteAppListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                query["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAppList",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAppListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes multiple applications at a time based on the process IDs (PIDs).
         *
         * @param request DeleteAppListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteAppListResponse
         */
        public async Task<DeleteAppListResponse> DeleteAppListWithOptionsAsync(DeleteAppListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                query["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteAppList",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteAppListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes multiple applications at a time based on the process IDs (PIDs).
         *
         * @param request DeleteAppListRequest
         * @return DeleteAppListResponse
         */
        public DeleteAppListResponse DeleteAppList(DeleteAppListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteAppListWithOptions(request, runtime);
        }

        /**
         * @summary Deletes multiple applications at a time based on the process IDs (PIDs).
         *
         * @param request DeleteAppListRequest
         * @return DeleteAppListResponse
         */
        public async Task<DeleteAppListResponse> DeleteAppListAsync(DeleteAppListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteAppListWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DeleteCmsExporter is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Releases a Prometheus instance for Alibaba Cloud services.
         *
         * @param request DeleteCmsExporterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCmsExporterResponse
         */
        // Deprecated
        public DeleteCmsExporterResponse DeleteCmsExporterWithOptions(DeleteCmsExporterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCmsExporter",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCmsExporterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DeleteCmsExporter is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Releases a Prometheus instance for Alibaba Cloud services.
         *
         * @param request DeleteCmsExporterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteCmsExporterResponse
         */
        // Deprecated
        public async Task<DeleteCmsExporterResponse> DeleteCmsExporterWithOptionsAsync(DeleteCmsExporterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteCmsExporter",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteCmsExporterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DeleteCmsExporter is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Releases a Prometheus instance for Alibaba Cloud services.
         *
         * @param request DeleteCmsExporterRequest
         * @return DeleteCmsExporterResponse
         */
        // Deprecated
        public DeleteCmsExporterResponse DeleteCmsExporter(DeleteCmsExporterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteCmsExporterWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DeleteCmsExporter is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Releases a Prometheus instance for Alibaba Cloud services.
         *
         * @param request DeleteCmsExporterRequest
         * @return DeleteCmsExporterResponse
         */
        // Deprecated
        public async Task<DeleteCmsExporterResponse> DeleteCmsExporterAsync(DeleteCmsExporterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteCmsExporterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the request.
         *
         * @param request DeleteContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContactResponse
         */
        public DeleteContactResponse DeleteContactWithOptions(DeleteContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the request.
         *
         * @param request DeleteContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContactResponse
         */
        public async Task<DeleteContactResponse> DeleteContactWithOptionsAsync(DeleteContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the request.
         *
         * @param request DeleteContactRequest
         * @return DeleteContactResponse
         */
        public DeleteContactResponse DeleteContact(DeleteContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteContactWithOptions(request, runtime);
        }

        /**
         * @summary The ID of the request.
         *
         * @param request DeleteContactRequest
         * @return DeleteContactResponse
         */
        public async Task<DeleteContactResponse> DeleteContactAsync(DeleteContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an alert contact group.
         *
         * @param request DeleteContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContactGroupResponse
         */
        public DeleteContactGroupResponse DeleteContactGroupWithOptions(DeleteContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert contact group.
         *
         * @param request DeleteContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteContactGroupResponse
         */
        public async Task<DeleteContactGroupResponse> DeleteContactGroupWithOptionsAsync(DeleteContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert contact group.
         *
         * @param request DeleteContactGroupRequest
         * @return DeleteContactGroupResponse
         */
        public DeleteContactGroupResponse DeleteContactGroup(DeleteContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteContactGroupWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an alert contact group.
         *
         * @param request DeleteContactGroupRequest
         * @return DeleteContactGroupResponse
         */
        public async Task<DeleteContactGroupResponse> DeleteContactGroupAsync(DeleteContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @param request DeleteDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteDispatchRuleResponse
         */
        public DeleteDispatchRuleResponse DeleteDispatchRuleWithOptions(DeleteDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDispatchRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request DeleteDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteDispatchRuleResponse
         */
        public async Task<DeleteDispatchRuleResponse> DeleteDispatchRuleWithOptionsAsync(DeleteDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDispatchRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request DeleteDispatchRuleRequest
         * @return DeleteDispatchRuleResponse
         */
        public DeleteDispatchRuleResponse DeleteDispatchRule(DeleteDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDispatchRuleWithOptions(request, runtime);
        }

        /**
         * @param request DeleteDispatchRuleRequest
         * @return DeleteDispatchRuleResponse
         */
        public async Task<DeleteDispatchRuleResponse> DeleteDispatchRuleAsync(DeleteDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDispatchRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Delete custom jobs for the environment.
         *
         * @param request DeleteEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvCustomJobResponse
         */
        public DeleteEnvCustomJobResponse DeleteEnvCustomJobWithOptions(DeleteEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvCustomJobResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Delete custom jobs for the environment.
         *
         * @param request DeleteEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvCustomJobResponse
         */
        public async Task<DeleteEnvCustomJobResponse> DeleteEnvCustomJobWithOptionsAsync(DeleteEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvCustomJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Delete custom jobs for the environment.
         *
         * @param request DeleteEnvCustomJobRequest
         * @return DeleteEnvCustomJobResponse
         */
        public DeleteEnvCustomJobResponse DeleteEnvCustomJob(DeleteEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEnvCustomJobWithOptions(request, runtime);
        }

        /**
         * @summary Delete custom jobs for the environment.
         *
         * @param request DeleteEnvCustomJobRequest
         * @return DeleteEnvCustomJobResponse
         */
        public async Task<DeleteEnvCustomJobResponse> DeleteEnvCustomJobAsync(DeleteEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEnvCustomJobWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Delete the environment PodMonitor.
         *
         * @param request DeleteEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvPodMonitorResponse
         */
        public DeleteEnvPodMonitorResponse DeleteEnvPodMonitorWithOptions(DeleteEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvPodMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Delete the environment PodMonitor.
         *
         * @param request DeleteEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvPodMonitorResponse
         */
        public async Task<DeleteEnvPodMonitorResponse> DeleteEnvPodMonitorWithOptionsAsync(DeleteEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvPodMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Delete the environment PodMonitor.
         *
         * @param request DeleteEnvPodMonitorRequest
         * @return DeleteEnvPodMonitorResponse
         */
        public DeleteEnvPodMonitorResponse DeleteEnvPodMonitor(DeleteEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEnvPodMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Delete the environment PodMonitor.
         *
         * @param request DeleteEnvPodMonitorRequest
         * @return DeleteEnvPodMonitorResponse
         */
        public async Task<DeleteEnvPodMonitorResponse> DeleteEnvPodMonitorAsync(DeleteEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEnvPodMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Delete the environment ServiceMonitor.
         *
         * @param request DeleteEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvServiceMonitorResponse
         */
        public DeleteEnvServiceMonitorResponse DeleteEnvServiceMonitorWithOptions(DeleteEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvServiceMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Delete the environment ServiceMonitor.
         *
         * @param request DeleteEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvServiceMonitorResponse
         */
        public async Task<DeleteEnvServiceMonitorResponse> DeleteEnvServiceMonitorWithOptionsAsync(DeleteEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvServiceMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Delete the environment ServiceMonitor.
         *
         * @param request DeleteEnvServiceMonitorRequest
         * @return DeleteEnvServiceMonitorResponse
         */
        public DeleteEnvServiceMonitorResponse DeleteEnvServiceMonitor(DeleteEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEnvServiceMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Delete the environment ServiceMonitor.
         *
         * @param request DeleteEnvServiceMonitorRequest
         * @return DeleteEnvServiceMonitorResponse
         */
        public async Task<DeleteEnvServiceMonitorResponse> DeleteEnvServiceMonitorAsync(DeleteEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEnvServiceMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an environment instance.
         *
         * @param request DeleteEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvironmentResponse
         */
        public DeleteEnvironmentResponse DeleteEnvironmentWithOptions(DeleteEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeletePromInstance))
            {
                query["DeletePromInstance"] = request.DeletePromInstance;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvironmentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an environment instance.
         *
         * @param request DeleteEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvironmentResponse
         */
        public async Task<DeleteEnvironmentResponse> DeleteEnvironmentWithOptionsAsync(DeleteEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeletePromInstance))
            {
                query["DeletePromInstance"] = request.DeletePromInstance;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvironmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an environment instance.
         *
         * @param request DeleteEnvironmentRequest
         * @return DeleteEnvironmentResponse
         */
        public DeleteEnvironmentResponse DeleteEnvironment(DeleteEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEnvironmentWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an environment instance.
         *
         * @param request DeleteEnvironmentRequest
         * @return DeleteEnvironmentResponse
         */
        public async Task<DeleteEnvironmentResponse> DeleteEnvironmentAsync(DeleteEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEnvironmentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 删除feature信息
         *
         * @param request DeleteEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvironmentFeatureResponse
         */
        public DeleteEnvironmentFeatureResponse DeleteEnvironmentFeatureWithOptions(DeleteEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvironmentFeatureResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 删除feature信息
         *
         * @param request DeleteEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEnvironmentFeatureResponse
         */
        public async Task<DeleteEnvironmentFeatureResponse> DeleteEnvironmentFeatureWithOptionsAsync(DeleteEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEnvironmentFeatureResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 删除feature信息
         *
         * @param request DeleteEnvironmentFeatureRequest
         * @return DeleteEnvironmentFeatureResponse
         */
        public DeleteEnvironmentFeatureResponse DeleteEnvironmentFeature(DeleteEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEnvironmentFeatureWithOptions(request, runtime);
        }

        /**
         * @summary 删除feature信息
         *
         * @param request DeleteEnvironmentFeatureRequest
         * @return DeleteEnvironmentFeatureResponse
         */
        public async Task<DeleteEnvironmentFeatureResponse> DeleteEnvironmentFeatureAsync(DeleteEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEnvironmentFeatureWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an EventBridge integration that is used to push notifications.
         *
         * @param request DeleteEventBridgeIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEventBridgeIntegrationResponse
         */
        public DeleteEventBridgeIntegrationResponse DeleteEventBridgeIntegrationWithOptions(DeleteEventBridgeIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEventBridgeIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEventBridgeIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an EventBridge integration that is used to push notifications.
         *
         * @param request DeleteEventBridgeIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteEventBridgeIntegrationResponse
         */
        public async Task<DeleteEventBridgeIntegrationResponse> DeleteEventBridgeIntegrationWithOptionsAsync(DeleteEventBridgeIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                body["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEventBridgeIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEventBridgeIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an EventBridge integration that is used to push notifications.
         *
         * @param request DeleteEventBridgeIntegrationRequest
         * @return DeleteEventBridgeIntegrationResponse
         */
        public DeleteEventBridgeIntegrationResponse DeleteEventBridgeIntegration(DeleteEventBridgeIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEventBridgeIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an EventBridge integration that is used to push notifications.
         *
         * @param request DeleteEventBridgeIntegrationRequest
         * @return DeleteEventBridgeIntegrationResponse
         */
        public async Task<DeleteEventBridgeIntegrationResponse> DeleteEventBridgeIntegrationAsync(DeleteEventBridgeIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEventBridgeIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes Grafana dashboard resources from a cluster monitored by Prometheus Service.
         *
         * @param request DeleteGrafanaResourceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGrafanaResourceResponse
         */
        public DeleteGrafanaResourceResponse DeleteGrafanaResourceWithOptions(DeleteGrafanaResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                body["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                body["ClusterName"] = request.ClusterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGrafanaResource",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGrafanaResourceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes Grafana dashboard resources from a cluster monitored by Prometheus Service.
         *
         * @param request DeleteGrafanaResourceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGrafanaResourceResponse
         */
        public async Task<DeleteGrafanaResourceResponse> DeleteGrafanaResourceWithOptionsAsync(DeleteGrafanaResourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                body["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                body["ClusterName"] = request.ClusterName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGrafanaResource",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGrafanaResourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes Grafana dashboard resources from a cluster monitored by Prometheus Service.
         *
         * @param request DeleteGrafanaResourceRequest
         * @return DeleteGrafanaResourceResponse
         */
        public DeleteGrafanaResourceResponse DeleteGrafanaResource(DeleteGrafanaResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteGrafanaResourceWithOptions(request, runtime);
        }

        /**
         * @summary Deletes Grafana dashboard resources from a cluster monitored by Prometheus Service.
         *
         * @param request DeleteGrafanaResourceRequest
         * @return DeleteGrafanaResourceResponse
         */
        public async Task<DeleteGrafanaResourceResponse> DeleteGrafanaResourceAsync(DeleteGrafanaResourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteGrafanaResourceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 释放工作区
         *
         * @param request DeleteGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGrafanaWorkspaceResponse
         */
        public DeleteGrafanaWorkspaceResponse DeleteGrafanaWorkspaceWithOptions(DeleteGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGrafanaWorkspaceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 释放工作区
         *
         * @param request DeleteGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteGrafanaWorkspaceResponse
         */
        public async Task<DeleteGrafanaWorkspaceResponse> DeleteGrafanaWorkspaceWithOptionsAsync(DeleteGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteGrafanaWorkspaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 释放工作区
         *
         * @param request DeleteGrafanaWorkspaceRequest
         * @return DeleteGrafanaWorkspaceResponse
         */
        public DeleteGrafanaWorkspaceResponse DeleteGrafanaWorkspace(DeleteGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteGrafanaWorkspaceWithOptions(request, runtime);
        }

        /**
         * @summary 释放工作区
         *
         * @param request DeleteGrafanaWorkspaceRequest
         * @return DeleteGrafanaWorkspaceResponse
         */
        public async Task<DeleteGrafanaWorkspaceResponse> DeleteGrafanaWorkspaceAsync(DeleteGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteGrafanaWorkspaceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an instant messaging (IM) chatbot.
         *
         * @param request DeleteIMRobotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIMRobotResponse
         */
        public DeleteIMRobotResponse DeleteIMRobotWithOptions(DeleteIMRobotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotId))
            {
                query["RobotId"] = request.RobotId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIMRobot",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIMRobotResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an instant messaging (IM) chatbot.
         *
         * @param request DeleteIMRobotRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIMRobotResponse
         */
        public async Task<DeleteIMRobotResponse> DeleteIMRobotWithOptionsAsync(DeleteIMRobotRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotId))
            {
                query["RobotId"] = request.RobotId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIMRobot",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIMRobotResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an instant messaging (IM) chatbot.
         *
         * @param request DeleteIMRobotRequest
         * @return DeleteIMRobotResponse
         */
        public DeleteIMRobotResponse DeleteIMRobot(DeleteIMRobotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteIMRobotWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an instant messaging (IM) chatbot.
         *
         * @param request DeleteIMRobotRequest
         * @return DeleteIMRobotResponse
         */
        public async Task<DeleteIMRobotResponse> DeleteIMRobotAsync(DeleteIMRobotRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteIMRobotWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI DeleteIntegration is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Deletes collection rules from an integration.
         *
         * @param request DeleteIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIntegrationResponse
         */
        // Deprecated
        public DeleteIntegrationResponse DeleteIntegrationWithOptions(DeleteIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DeleteIntegration is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Deletes collection rules from an integration.
         *
         * @param request DeleteIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIntegrationResponse
         */
        // Deprecated
        public async Task<DeleteIntegrationResponse> DeleteIntegrationWithOptionsAsync(DeleteIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI DeleteIntegration is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Deletes collection rules from an integration.
         *
         * @param request DeleteIntegrationRequest
         * @return DeleteIntegrationResponse
         */
        // Deprecated
        public DeleteIntegrationResponse DeleteIntegration(DeleteIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteIntegrationWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI DeleteIntegration is deprecated, please use ARMS::2019-08-08::DeleteAddonRelease instead.
         *
         * @summary Deletes collection rules from an integration.
         *
         * @param request DeleteIntegrationRequest
         * @return DeleteIntegrationResponse
         */
        // Deprecated
        public async Task<DeleteIntegrationResponse> DeleteIntegrationAsync(DeleteIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an alert integration.
         *
         * @param request DeleteIntegrationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIntegrationsResponse
         */
        public DeleteIntegrationsResponse DeleteIntegrationsWithOptions(DeleteIntegrationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIntegrations",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIntegrationsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert integration.
         *
         * @param request DeleteIntegrationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteIntegrationsResponse
         */
        public async Task<DeleteIntegrationsResponse> DeleteIntegrationsWithOptionsAsync(DeleteIntegrationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteIntegrations",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteIntegrationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an alert integration.
         *
         * @param request DeleteIntegrationsRequest
         * @return DeleteIntegrationsResponse
         */
        public DeleteIntegrationsResponse DeleteIntegrations(DeleteIntegrationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteIntegrationsWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an alert integration.
         *
         * @param request DeleteIntegrationsRequest
         * @return DeleteIntegrationsResponse
         */
        public async Task<DeleteIntegrationsResponse> DeleteIntegrationsAsync(DeleteIntegrationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteIntegrationsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Indicates whether the notification policy was deleted successfully. Valid values:
         * *   `true`: The notification policy was deleted successfully.
         * *   `false`: The notification policy failed to be deleted.
         *
         * @param request DeleteNotificationPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteNotificationPolicyResponse
         */
        public DeleteNotificationPolicyResponse DeleteNotificationPolicyWithOptions(DeleteNotificationPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteNotificationPolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteNotificationPolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Indicates whether the notification policy was deleted successfully. Valid values:
         * *   `true`: The notification policy was deleted successfully.
         * *   `false`: The notification policy failed to be deleted.
         *
         * @param request DeleteNotificationPolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteNotificationPolicyResponse
         */
        public async Task<DeleteNotificationPolicyResponse> DeleteNotificationPolicyWithOptionsAsync(DeleteNotificationPolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteNotificationPolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteNotificationPolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Indicates whether the notification policy was deleted successfully. Valid values:
         * *   `true`: The notification policy was deleted successfully.
         * *   `false`: The notification policy failed to be deleted.
         *
         * @param request DeleteNotificationPolicyRequest
         * @return DeleteNotificationPolicyResponse
         */
        public DeleteNotificationPolicyResponse DeleteNotificationPolicy(DeleteNotificationPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteNotificationPolicyWithOptions(request, runtime);
        }

        /**
         * @summary Indicates whether the notification policy was deleted successfully. Valid values:
         * *   `true`: The notification policy was deleted successfully.
         * *   `false`: The notification policy failed to be deleted.
         *
         * @param request DeleteNotificationPolicyRequest
         * @return DeleteNotificationPolicyResponse
         */
        public async Task<DeleteNotificationPolicyResponse> DeleteNotificationPolicyAsync(DeleteNotificationPolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteNotificationPolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the alert rule. You can call the ListPrometheusAlertRules operation to query the ID of the alert rule.
         *
         * @param request DeletePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusAlertRuleResponse
         */
        public DeletePrometheusAlertRuleResponse DeletePrometheusAlertRuleWithOptions(DeletePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the alert rule. You can call the ListPrometheusAlertRules operation to query the ID of the alert rule.
         *
         * @param request DeletePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusAlertRuleResponse
         */
        public async Task<DeletePrometheusAlertRuleResponse> DeletePrometheusAlertRuleWithOptionsAsync(DeletePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the alert rule. You can call the ListPrometheusAlertRules operation to query the ID of the alert rule.
         *
         * @param request DeletePrometheusAlertRuleRequest
         * @return DeletePrometheusAlertRuleResponse
         */
        public DeletePrometheusAlertRuleResponse DeletePrometheusAlertRule(DeletePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrometheusAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary The ID of the alert rule. You can call the ListPrometheusAlertRules operation to query the ID of the alert rule.
         *
         * @param request DeletePrometheusAlertRuleRequest
         * @return DeletePrometheusAlertRuleResponse
         */
        public async Task<DeletePrometheusAlertRuleResponse> DeletePrometheusAlertRuleAsync(DeletePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrometheusAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a global aggregation instance from Prometheus Service.
         *
         * @param request DeletePrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusGlobalViewResponse
         */
        public DeletePrometheusGlobalViewResponse DeletePrometheusGlobalViewWithOptions(DeletePrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a global aggregation instance from Prometheus Service.
         *
         * @param request DeletePrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusGlobalViewResponse
         */
        public async Task<DeletePrometheusGlobalViewResponse> DeletePrometheusGlobalViewWithOptionsAsync(DeletePrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a global aggregation instance from Prometheus Service.
         *
         * @param request DeletePrometheusGlobalViewRequest
         * @return DeletePrometheusGlobalViewResponse
         */
        public DeletePrometheusGlobalViewResponse DeletePrometheusGlobalView(DeletePrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a global aggregation instance from Prometheus Service.
         *
         * @param request DeletePrometheusGlobalViewRequest
         * @return DeletePrometheusGlobalViewResponse
         */
        public async Task<DeletePrometheusGlobalViewResponse> DeletePrometheusGlobalViewAsync(DeletePrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an exporter from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusIntegrationResponse
         */
        public DeletePrometheusIntegrationResponse DeletePrometheusIntegrationWithOptions(DeletePrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an exporter from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusIntegrationResponse
         */
        public async Task<DeletePrometheusIntegrationResponse> DeletePrometheusIntegrationWithOptionsAsync(DeletePrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an exporter from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusIntegrationRequest
         * @return DeletePrometheusIntegrationResponse
         */
        public DeletePrometheusIntegrationResponse DeletePrometheusIntegration(DeletePrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrometheusIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an exporter from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusIntegrationRequest
         * @return DeletePrometheusIntegrationResponse
         */
        public async Task<DeletePrometheusIntegrationResponse> DeletePrometheusIntegrationAsync(DeletePrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrometheusIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes the monitoring configuration of a Prometheus instance.
         *
         * @param request DeletePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusMonitoringResponse
         */
        public DeletePrometheusMonitoringResponse DeletePrometheusMonitoringWithOptions(DeletePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusMonitoringResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes the monitoring configuration of a Prometheus instance.
         *
         * @param request DeletePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusMonitoringResponse
         */
        public async Task<DeletePrometheusMonitoringResponse> DeletePrometheusMonitoringWithOptionsAsync(DeletePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusMonitoringResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes the monitoring configuration of a Prometheus instance.
         *
         * @param request DeletePrometheusMonitoringRequest
         * @return DeletePrometheusMonitoringResponse
         */
        public DeletePrometheusMonitoringResponse DeletePrometheusMonitoring(DeletePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrometheusMonitoringWithOptions(request, runtime);
        }

        /**
         * @summary Deletes the monitoring configuration of a Prometheus instance.
         *
         * @param request DeletePrometheusMonitoringRequest
         * @return DeletePrometheusMonitoringResponse
         */
        public async Task<DeletePrometheusMonitoringResponse> DeletePrometheusMonitoringAsync(DeletePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrometheusMonitoringWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes one or more remote write configuration items from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusRemoteWriteResponse
         */
        public DeletePrometheusRemoteWriteResponse DeletePrometheusRemoteWriteWithOptions(DeletePrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteNames))
            {
                query["RemoteWriteNames"] = request.RemoteWriteNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusRemoteWriteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes one or more remote write configuration items from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeletePrometheusRemoteWriteResponse
         */
        public async Task<DeletePrometheusRemoteWriteResponse> DeletePrometheusRemoteWriteWithOptionsAsync(DeletePrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteNames))
            {
                query["RemoteWriteNames"] = request.RemoteWriteNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeletePrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeletePrometheusRemoteWriteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes one or more remote write configuration items from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusRemoteWriteRequest
         * @return DeletePrometheusRemoteWriteResponse
         */
        public DeletePrometheusRemoteWriteResponse DeletePrometheusRemoteWrite(DeletePrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeletePrometheusRemoteWriteWithOptions(request, runtime);
        }

        /**
         * @summary Deletes one or more remote write configuration items from a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request DeletePrometheusRemoteWriteRequest
         * @return DeletePrometheusRemoteWriteResponse
         */
        public async Task<DeletePrometheusRemoteWriteResponse> DeletePrometheusRemoteWriteAsync(DeletePrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeletePrometheusRemoteWriteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a Browser Monitoring task.
         *
         * @param request DeleteRetcodeAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRetcodeAppResponse
         */
        public DeleteRetcodeAppResponse DeleteRetcodeAppWithOptions(DeleteRetcodeAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRetcodeApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRetcodeAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a Browser Monitoring task.
         *
         * @param request DeleteRetcodeAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRetcodeAppResponse
         */
        public async Task<DeleteRetcodeAppResponse> DeleteRetcodeAppWithOptionsAsync(DeleteRetcodeAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRetcodeApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRetcodeAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a Browser Monitoring task.
         *
         * @param request DeleteRetcodeAppRequest
         * @return DeleteRetcodeAppResponse
         */
        public DeleteRetcodeAppResponse DeleteRetcodeApp(DeleteRetcodeAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRetcodeAppWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a Browser Monitoring task.
         *
         * @param request DeleteRetcodeAppRequest
         * @return DeleteRetcodeAppResponse
         */
        public async Task<DeleteRetcodeAppResponse> DeleteRetcodeAppAsync(DeleteRetcodeAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRetcodeAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 删除前端监控应用
         *
         * @param request DeleteRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRumAppResponse
         */
        public DeleteRumAppResponse DeleteRumAppWithOptions(DeleteRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRumAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 删除前端监控应用
         *
         * @param request DeleteRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRumAppResponse
         */
        public async Task<DeleteRumAppResponse> DeleteRumAppWithOptionsAsync(DeleteRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRumAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 删除前端监控应用
         *
         * @param request DeleteRumAppRequest
         * @return DeleteRumAppResponse
         */
        public DeleteRumAppResponse DeleteRumApp(DeleteRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRumAppWithOptions(request, runtime);
        }

        /**
         * @summary 删除前端监控应用
         *
         * @param request DeleteRumAppRequest
         * @return DeleteRumAppResponse
         */
        public async Task<DeleteRumAppResponse> DeleteRumAppAsync(DeleteRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRumAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 删除前端监控在oss中的文件
         *
         * @param request DeleteRumUploadFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRumUploadFileResponse
         */
        public DeleteRumUploadFileResponse DeleteRumUploadFileWithOptions(DeleteRumUploadFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRumUploadFile",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRumUploadFileResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 删除前端监控在oss中的文件
         *
         * @param request DeleteRumUploadFileRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteRumUploadFileResponse
         */
        public async Task<DeleteRumUploadFileResponse> DeleteRumUploadFileWithOptionsAsync(DeleteRumUploadFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRumUploadFile",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRumUploadFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 删除前端监控在oss中的文件
         *
         * @param request DeleteRumUploadFileRequest
         * @return DeleteRumUploadFileResponse
         */
        public DeleteRumUploadFileResponse DeleteRumUploadFile(DeleteRumUploadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRumUploadFileWithOptions(request, runtime);
        }

        /**
         * @summary 删除前端监控在oss中的文件
         *
         * @param request DeleteRumUploadFileRequest
         * @return DeleteRumUploadFileResponse
         */
        public async Task<DeleteRumUploadFileResponse> DeleteRumUploadFileAsync(DeleteRumUploadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRumUploadFileWithOptionsAsync(request, runtime);
        }

        /**
         * @param request DeleteScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteScenarioResponse
         */
        public DeleteScenarioResponse DeleteScenarioWithOptions(DeleteScenarioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScenarioId))
            {
                query["ScenarioId"] = request.ScenarioId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScenarioResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request DeleteScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteScenarioResponse
         */
        public async Task<DeleteScenarioResponse> DeleteScenarioWithOptionsAsync(DeleteScenarioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScenarioId))
            {
                query["ScenarioId"] = request.ScenarioId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteScenarioResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request DeleteScenarioRequest
         * @return DeleteScenarioResponse
         */
        public DeleteScenarioResponse DeleteScenario(DeleteScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteScenarioWithOptions(request, runtime);
        }

        /**
         * @param request DeleteScenarioRequest
         * @return DeleteScenarioResponse
         */
        public async Task<DeleteScenarioResponse> DeleteScenarioAsync(DeleteScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteScenarioWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the silence policy.
         *
         * @param request DeleteSilencePolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSilencePolicyResponse
         */
        public DeleteSilencePolicyResponse DeleteSilencePolicyWithOptions(DeleteSilencePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSilencePolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSilencePolicyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the silence policy.
         *
         * @param request DeleteSilencePolicyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSilencePolicyResponse
         */
        public async Task<DeleteSilencePolicyResponse> DeleteSilencePolicyWithOptionsAsync(DeleteSilencePolicyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSilencePolicy",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSilencePolicyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the silence policy.
         *
         * @param request DeleteSilencePolicyRequest
         * @return DeleteSilencePolicyResponse
         */
        public DeleteSilencePolicyResponse DeleteSilencePolicy(DeleteSilencePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSilencePolicyWithOptions(request, runtime);
        }

        /**
         * @summary The ID of the silence policy.
         *
         * @param request DeleteSilencePolicyRequest
         * @return DeleteSilencePolicyResponse
         */
        public async Task<DeleteSilencePolicyResponse> DeleteSilencePolicyAsync(DeleteSilencePolicyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSilencePolicyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 删除SourceMap
         *
         * @param tmpReq DeleteSourceMapRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSourceMapResponse
         */
        public DeleteSourceMapResponse DeleteSourceMapWithOptions(DeleteSourceMapRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DeleteSourceMapShrinkRequest request = new DeleteSourceMapShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FidList))
            {
                request.FidListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FidList, "FidList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FidListShrink))
            {
                query["FidList"] = request.FidListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSourceMap",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSourceMapResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 删除SourceMap
         *
         * @param tmpReq DeleteSourceMapRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSourceMapResponse
         */
        public async Task<DeleteSourceMapResponse> DeleteSourceMapWithOptionsAsync(DeleteSourceMapRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DeleteSourceMapShrinkRequest request = new DeleteSourceMapShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FidList))
            {
                request.FidListShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FidList, "FidList", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FidListShrink))
            {
                query["FidList"] = request.FidListShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSourceMap",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSourceMapResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 删除SourceMap
         *
         * @param request DeleteSourceMapRequest
         * @return DeleteSourceMapResponse
         */
        public DeleteSourceMapResponse DeleteSourceMap(DeleteSourceMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSourceMapWithOptions(request, runtime);
        }

        /**
         * @summary 删除SourceMap
         *
         * @param request DeleteSourceMapRequest
         * @return DeleteSourceMapResponse
         */
        public async Task<DeleteSourceMapResponse> DeleteSourceMapAsync(DeleteSourceMapRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSourceMapWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 删除云拨测任务
         *
         * @param request DeleteSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSyntheticTaskResponse
         */
        public DeleteSyntheticTaskResponse DeleteSyntheticTaskWithOptions(DeleteSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 删除云拨测任务
         *
         * @param request DeleteSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteSyntheticTaskResponse
         */
        public async Task<DeleteSyntheticTaskResponse> DeleteSyntheticTaskWithOptionsAsync(DeleteSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 删除云拨测任务
         *
         * @param request DeleteSyntheticTaskRequest
         * @return DeleteSyntheticTaskResponse
         */
        public DeleteSyntheticTaskResponse DeleteSyntheticTask(DeleteSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary 删除云拨测任务
         *
         * @param request DeleteSyntheticTaskRequest
         * @return DeleteSyntheticTaskResponse
         */
        public async Task<DeleteSyntheticTaskResponse> DeleteSyntheticTaskAsync(DeleteSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a scheduled synthetic monitoring task.
         *
         * @param request DeleteTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTimingSyntheticTaskResponse
         */
        public DeleteTimingSyntheticTaskResponse DeleteTimingSyntheticTaskWithOptions(DeleteTimingSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a scheduled synthetic monitoring task.
         *
         * @param request DeleteTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTimingSyntheticTaskResponse
         */
        public async Task<DeleteTimingSyntheticTaskResponse> DeleteTimingSyntheticTaskWithOptionsAsync(DeleteTimingSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a scheduled synthetic monitoring task.
         *
         * @param request DeleteTimingSyntheticTaskRequest
         * @return DeleteTimingSyntheticTaskResponse
         */
        public DeleteTimingSyntheticTaskResponse DeleteTimingSyntheticTask(DeleteTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a scheduled synthetic monitoring task.
         *
         * @param request DeleteTimingSyntheticTaskRequest
         * @return DeleteTimingSyntheticTaskResponse
         */
        public async Task<DeleteTimingSyntheticTaskResponse> DeleteTimingSyntheticTaskAsync(DeleteTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes an application based on a specified process identifier (PID) and application type.
         *
         * @param tmpReq DeleteTraceAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTraceAppResponse
         */
        public DeleteTraceAppResponse DeleteTraceAppWithOptions(DeleteTraceAppRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DeleteTraceAppShrinkRequest request = new DeleteTraceAppShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DeleteReason))
            {
                request.DeleteReasonShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DeleteReason, "DeleteReason", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteReasonShrink))
            {
                query["DeleteReason"] = request.DeleteReasonShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTraceApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTraceAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes an application based on a specified process identifier (PID) and application type.
         *
         * @param tmpReq DeleteTraceAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteTraceAppResponse
         */
        public async Task<DeleteTraceAppResponse> DeleteTraceAppWithOptionsAsync(DeleteTraceAppRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            DeleteTraceAppShrinkRequest request = new DeleteTraceAppShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.DeleteReason))
            {
                request.DeleteReasonShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.DeleteReason, "DeleteReason", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeleteReasonShrink))
            {
                query["DeleteReason"] = request.DeleteReasonShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTraceApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTraceAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes an application based on a specified process identifier (PID) and application type.
         *
         * @param request DeleteTraceAppRequest
         * @return DeleteTraceAppResponse
         */
        public DeleteTraceAppResponse DeleteTraceApp(DeleteTraceAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTraceAppWithOptions(request, runtime);
        }

        /**
         * @summary Deletes an application based on a specified process identifier (PID) and application type.
         *
         * @param request DeleteTraceAppRequest
         * @return DeleteTraceAppResponse
         */
        public async Task<DeleteTraceAppResponse> DeleteTraceAppAsync(DeleteTraceAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTraceAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Deletes a webhook alert contact.
         *
         * @param request DeleteWebhookContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteWebhookContactResponse
         */
        public DeleteWebhookContactResponse DeleteWebhookContactWithOptions(DeleteWebhookContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookId))
            {
                query["WebhookId"] = request.WebhookId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWebhookContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWebhookContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Deletes a webhook alert contact.
         *
         * @param request DeleteWebhookContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DeleteWebhookContactResponse
         */
        public async Task<DeleteWebhookContactResponse> DeleteWebhookContactWithOptionsAsync(DeleteWebhookContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.WebhookId))
            {
                query["WebhookId"] = request.WebhookId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteWebhookContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteWebhookContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Deletes a webhook alert contact.
         *
         * @param request DeleteWebhookContactRequest
         * @return DeleteWebhookContactResponse
         */
        public DeleteWebhookContactResponse DeleteWebhookContact(DeleteWebhookContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteWebhookContactWithOptions(request, runtime);
        }

        /**
         * @summary Deletes a webhook alert contact.
         *
         * @param request DeleteWebhookContactRequest
         * @return DeleteWebhookContactResponse
         */
        public async Task<DeleteWebhookContactResponse> DeleteWebhookContactAsync(DeleteWebhookContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteWebhookContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the release information of an add-on by name.
         *
         * @param request DescribeAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAddonReleaseResponse
         */
        public DescribeAddonReleaseResponse DescribeAddonReleaseWithOptions(DescribeAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAddonReleaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the release information of an add-on by name.
         *
         * @param request DescribeAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeAddonReleaseResponse
         */
        public async Task<DescribeAddonReleaseResponse> DescribeAddonReleaseWithOptionsAsync(DescribeAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeAddonReleaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the release information of an add-on by name.
         *
         * @param request DescribeAddonReleaseRequest
         * @return DescribeAddonReleaseResponse
         */
        public DescribeAddonReleaseResponse DescribeAddonRelease(DescribeAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeAddonReleaseWithOptions(request, runtime);
        }

        /**
         * @summary Queries the release information of an add-on by name.
         *
         * @param request DescribeAddonReleaseRequest
         * @return DescribeAddonReleaseResponse
         */
        public async Task<DescribeAddonReleaseResponse> DescribeAddonReleaseAsync(DescribeAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeAddonReleaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries an alert contact group.
         *
         * @param request DescribeContactGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContactGroupsResponse
         */
        public DescribeContactGroupsResponse DescribeContactGroupsWithOptions(DescribeContactGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIds))
            {
                query["GroupIds"] = request.GroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContactGroups",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContactGroupsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries an alert contact group.
         *
         * @param request DescribeContactGroupsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContactGroupsResponse
         */
        public async Task<DescribeContactGroupsResponse> DescribeContactGroupsWithOptionsAsync(DescribeContactGroupsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupIds))
            {
                query["GroupIds"] = request.GroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContactGroups",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContactGroupsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries an alert contact group.
         *
         * @param request DescribeContactGroupsRequest
         * @return DescribeContactGroupsResponse
         */
        public DescribeContactGroupsResponse DescribeContactGroups(DescribeContactGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContactGroupsWithOptions(request, runtime);
        }

        /**
         * @summary Queries an alert contact group.
         *
         * @param request DescribeContactGroupsRequest
         * @return DescribeContactGroupsResponse
         */
        public async Task<DescribeContactGroupsResponse> DescribeContactGroupsAsync(DescribeContactGroupsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContactGroupsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert contacts.
         *
         * @param request DescribeContactsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContactsResponse
         */
        public DescribeContactsResponse DescribeContactsWithOptions(DescribeContactsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                query["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Verbose))
            {
                query["Verbose"] = request.Verbose;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContacts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContactsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert contacts.
         *
         * @param request DescribeContactsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeContactsResponse
         */
        public async Task<DescribeContactsResponse> DescribeContactsWithOptionsAsync(DescribeContactsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                query["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Verbose))
            {
                query["Verbose"] = request.Verbose;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeContacts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeContactsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert contacts.
         *
         * @param request DescribeContactsRequest
         * @return DescribeContactsResponse
         */
        public DescribeContactsResponse DescribeContacts(DescribeContactsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeContactsWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert contacts.
         *
         * @param request DescribeContactsRequest
         * @return DescribeContactsResponse
         */
        public async Task<DescribeContactsResponse> DescribeContactsAsync(DescribeContactsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeContactsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a dispatch policy.
         *
         * @param request DescribeDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDispatchRuleResponse
         */
        public DescribeDispatchRuleResponse DescribeDispatchRuleWithOptions(DescribeDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDispatchRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a dispatch policy.
         *
         * @param request DescribeDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeDispatchRuleResponse
         */
        public async Task<DescribeDispatchRuleResponse> DescribeDispatchRuleWithOptionsAsync(DescribeDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id))
            {
                query["Id"] = request.Id;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeDispatchRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a dispatch policy.
         *
         * @param request DescribeDispatchRuleRequest
         * @return DescribeDispatchRuleResponse
         */
        public DescribeDispatchRuleResponse DescribeDispatchRule(DescribeDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeDispatchRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a dispatch policy.
         *
         * @param request DescribeDispatchRuleRequest
         * @return DescribeDispatchRuleResponse
         */
        public async Task<DescribeDispatchRuleResponse> DescribeDispatchRuleAsync(DescribeDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeDispatchRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a custom job for an environment.
         *
         * @param request DescribeEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvCustomJobResponse
         */
        public DescribeEnvCustomJobResponse DescribeEnvCustomJobWithOptions(DescribeEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EncryptYaml))
            {
                query["EncryptYaml"] = request.EncryptYaml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvCustomJobResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a custom job for an environment.
         *
         * @param request DescribeEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvCustomJobResponse
         */
        public async Task<DescribeEnvCustomJobResponse> DescribeEnvCustomJobWithOptionsAsync(DescribeEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EncryptYaml))
            {
                query["EncryptYaml"] = request.EncryptYaml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvCustomJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a custom job for an environment.
         *
         * @param request DescribeEnvCustomJobRequest
         * @return DescribeEnvCustomJobResponse
         */
        public DescribeEnvCustomJobResponse DescribeEnvCustomJob(DescribeEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEnvCustomJobWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a custom job for an environment.
         *
         * @param request DescribeEnvCustomJobRequest
         * @return DescribeEnvCustomJobResponse
         */
        public async Task<DescribeEnvCustomJobResponse> DescribeEnvCustomJobAsync(DescribeEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEnvCustomJobWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the PodMonitor details of an environment.
         *
         * @param request DescribeEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvPodMonitorResponse
         */
        public DescribeEnvPodMonitorResponse DescribeEnvPodMonitorWithOptions(DescribeEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvPodMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the PodMonitor details of an environment.
         *
         * @param request DescribeEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvPodMonitorResponse
         */
        public async Task<DescribeEnvPodMonitorResponse> DescribeEnvPodMonitorWithOptionsAsync(DescribeEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvPodMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the PodMonitor details of an environment.
         *
         * @param request DescribeEnvPodMonitorRequest
         * @return DescribeEnvPodMonitorResponse
         */
        public DescribeEnvPodMonitorResponse DescribeEnvPodMonitor(DescribeEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEnvPodMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Queries the PodMonitor details of an environment.
         *
         * @param request DescribeEnvPodMonitorRequest
         * @return DescribeEnvPodMonitorResponse
         */
        public async Task<DescribeEnvPodMonitorResponse> DescribeEnvPodMonitorAsync(DescribeEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEnvPodMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the ServiceMonitor details of an environment.
         *
         * @param request DescribeEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvServiceMonitorResponse
         */
        public DescribeEnvServiceMonitorResponse DescribeEnvServiceMonitorWithOptions(DescribeEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvServiceMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the ServiceMonitor details of an environment.
         *
         * @param request DescribeEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvServiceMonitorResponse
         */
        public async Task<DescribeEnvServiceMonitorResponse> DescribeEnvServiceMonitorWithOptionsAsync(DescribeEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvServiceMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the ServiceMonitor details of an environment.
         *
         * @param request DescribeEnvServiceMonitorRequest
         * @return DescribeEnvServiceMonitorResponse
         */
        public DescribeEnvServiceMonitorResponse DescribeEnvServiceMonitor(DescribeEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEnvServiceMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Queries the ServiceMonitor details of an environment.
         *
         * @param request DescribeEnvServiceMonitorRequest
         * @return DescribeEnvServiceMonitorResponse
         */
        public async Task<DescribeEnvServiceMonitorResponse> DescribeEnvServiceMonitorAsync(DescribeEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEnvServiceMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an environment.
         *
         * @param request DescribeEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvironmentResponse
         */
        public DescribeEnvironmentResponse DescribeEnvironmentWithOptions(DescribeEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvironmentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an environment.
         *
         * @param request DescribeEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvironmentResponse
         */
        public async Task<DescribeEnvironmentResponse> DescribeEnvironmentWithOptionsAsync(DescribeEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvironmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an environment.
         *
         * @param request DescribeEnvironmentRequest
         * @return DescribeEnvironmentResponse
         */
        public DescribeEnvironmentResponse DescribeEnvironment(DescribeEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEnvironmentWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an environment.
         *
         * @param request DescribeEnvironmentRequest
         * @return DescribeEnvironmentResponse
         */
        public async Task<DescribeEnvironmentResponse> DescribeEnvironmentAsync(DescribeEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEnvironmentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a feature.
         *
         * @param request DescribeEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvironmentFeatureResponse
         */
        public DescribeEnvironmentFeatureResponse DescribeEnvironmentFeatureWithOptions(DescribeEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvironmentFeatureResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a feature.
         *
         * @param request DescribeEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeEnvironmentFeatureResponse
         */
        public async Task<DescribeEnvironmentFeatureResponse> DescribeEnvironmentFeatureWithOptionsAsync(DescribeEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeEnvironmentFeatureResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a feature.
         *
         * @param request DescribeEnvironmentFeatureRequest
         * @return DescribeEnvironmentFeatureResponse
         */
        public DescribeEnvironmentFeatureResponse DescribeEnvironmentFeature(DescribeEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeEnvironmentFeatureWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a feature.
         *
         * @param request DescribeEnvironmentFeatureRequest
         * @return DescribeEnvironmentFeatureResponse
         */
        public async Task<DescribeEnvironmentFeatureResponse> DescribeEnvironmentFeatureAsync(DescribeEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeEnvironmentFeatureWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of IM chatbots.
         *
         * @param request DescribeIMRobotsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeIMRobotsResponse
         */
        public DescribeIMRobotsResponse DescribeIMRobotsWithOptions(DescribeIMRobotsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotIds))
            {
                query["RobotIds"] = request.RobotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotName))
            {
                query["RobotName"] = request.RobotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeIMRobots",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeIMRobotsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of IM chatbots.
         *
         * @param request DescribeIMRobotsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeIMRobotsResponse
         */
        public async Task<DescribeIMRobotsResponse> DescribeIMRobotsWithOptionsAsync(DescribeIMRobotsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotIds))
            {
                query["RobotIds"] = request.RobotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RobotName))
            {
                query["RobotName"] = request.RobotName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeIMRobots",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeIMRobotsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of IM chatbots.
         *
         * @param request DescribeIMRobotsRequest
         * @return DescribeIMRobotsResponse
         */
        public DescribeIMRobotsResponse DescribeIMRobots(DescribeIMRobotsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeIMRobotsWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of IM chatbots.
         *
         * @param request DescribeIMRobotsRequest
         * @return DescribeIMRobotsResponse
         */
        public async Task<DescribeIMRobotsResponse> DescribeIMRobotsAsync(DescribeIMRobotsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeIMRobotsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details about an alert rule of Prometheus Service.
         *
         * @param request DescribePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePrometheusAlertRuleResponse
         */
        public DescribePrometheusAlertRuleResponse DescribePrometheusAlertRuleWithOptions(DescribePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePrometheusAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details about an alert rule of Prometheus Service.
         *
         * @param request DescribePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribePrometheusAlertRuleResponse
         */
        public async Task<DescribePrometheusAlertRuleResponse> DescribePrometheusAlertRuleWithOptionsAsync(DescribePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribePrometheusAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details about an alert rule of Prometheus Service.
         *
         * @param request DescribePrometheusAlertRuleRequest
         * @return DescribePrometheusAlertRuleResponse
         */
        public DescribePrometheusAlertRuleResponse DescribePrometheusAlertRule(DescribePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribePrometheusAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details about an alert rule of Prometheus Service.
         *
         * @param request DescribePrometheusAlertRuleRequest
         * @return DescribePrometheusAlertRuleResponse
         */
        public async Task<DescribePrometheusAlertRuleResponse> DescribePrometheusAlertRuleAsync(DescribePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribePrometheusAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @param request DescribeTraceLicenseKeyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceLicenseKeyResponse
         */
        public DescribeTraceLicenseKeyResponse DescribeTraceLicenseKeyWithOptions(DescribeTraceLicenseKeyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceLicenseKey",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceLicenseKeyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request DescribeTraceLicenseKeyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeTraceLicenseKeyResponse
         */
        public async Task<DescribeTraceLicenseKeyResponse> DescribeTraceLicenseKeyWithOptionsAsync(DescribeTraceLicenseKeyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeTraceLicenseKey",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeTraceLicenseKeyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request DescribeTraceLicenseKeyRequest
         * @return DescribeTraceLicenseKeyResponse
         */
        public DescribeTraceLicenseKeyResponse DescribeTraceLicenseKey(DescribeTraceLicenseKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeTraceLicenseKeyWithOptions(request, runtime);
        }

        /**
         * @param request DescribeTraceLicenseKeyRequest
         * @return DescribeTraceLicenseKeyResponse
         */
        public async Task<DescribeTraceLicenseKeyResponse> DescribeTraceLicenseKeyAsync(DescribeTraceLicenseKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeTraceLicenseKeyWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the list of webhook alert contacts.
         *
         * @param request DescribeWebhookContactsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebhookContactsResponse
         */
        public DescribeWebhookContactsResponse DescribeWebhookContactsWithOptions(DescribeWebhookContactsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebhookContacts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebhookContactsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the list of webhook alert contacts.
         *
         * @param request DescribeWebhookContactsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return DescribeWebhookContactsResponse
         */
        public async Task<DescribeWebhookContactsResponse> DescribeWebhookContactsWithOptionsAsync(DescribeWebhookContactsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DescribeWebhookContacts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DescribeWebhookContactsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the list of webhook alert contacts.
         *
         * @param request DescribeWebhookContactsRequest
         * @return DescribeWebhookContactsResponse
         */
        public DescribeWebhookContactsResponse DescribeWebhookContacts(DescribeWebhookContactsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DescribeWebhookContactsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the list of webhook alert contacts.
         *
         * @param request DescribeWebhookContactsRequest
         * @return DescribeWebhookContactsResponse
         */
        public async Task<DescribeWebhookContactsResponse> DescribeWebhookContactsAsync(DescribeWebhookContactsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DescribeWebhookContactsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 开启指标
         *
         * @param request EnableMetricRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableMetricResponse
         */
        public EnableMetricResponse EnableMetricWithOptions(EnableMetricRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DropMetric))
            {
                query["DropMetric"] = request.DropMetric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableMetric",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableMetricResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 开启指标
         *
         * @param request EnableMetricRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return EnableMetricResponse
         */
        public async Task<EnableMetricResponse> EnableMetricWithOptionsAsync(EnableMetricRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DropMetric))
            {
                query["DropMetric"] = request.DropMetric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableMetric",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableMetricResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 开启指标
         *
         * @param request EnableMetricRequest
         * @return EnableMetricResponse
         */
        public EnableMetricResponse EnableMetric(EnableMetricRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableMetricWithOptions(request, runtime);
        }

        /**
         * @summary 开启指标
         *
         * @param request EnableMetricRequest
         * @return EnableMetricResponse
         */
        public async Task<EnableMetricResponse> EnableMetricAsync(EnableMetricRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableMetricWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the download URL of the Application Real-Time Monitoring Service (ARMS) agent.
         *
         * @param request GetAgentDownloadUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAgentDownloadUrlResponse
         */
        public GetAgentDownloadUrlResponse GetAgentDownloadUrlWithOptions(GetAgentDownloadUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAgentDownloadUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAgentDownloadUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the download URL of the Application Real-Time Monitoring Service (ARMS) agent.
         *
         * @param request GetAgentDownloadUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAgentDownloadUrlResponse
         */
        public async Task<GetAgentDownloadUrlResponse> GetAgentDownloadUrlWithOptionsAsync(GetAgentDownloadUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAgentDownloadUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAgentDownloadUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the download URL of the Application Real-Time Monitoring Service (ARMS) agent.
         *
         * @param request GetAgentDownloadUrlRequest
         * @return GetAgentDownloadUrlResponse
         */
        public GetAgentDownloadUrlResponse GetAgentDownloadUrl(GetAgentDownloadUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAgentDownloadUrlWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the download URL of the Application Real-Time Monitoring Service (ARMS) agent.
         *
         * @param request GetAgentDownloadUrlRequest
         * @return GetAgentDownloadUrlResponse
         */
        public async Task<GetAgentDownloadUrlResponse> GetAgentDownloadUrlAsync(GetAgentDownloadUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAgentDownloadUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert rules.
         *
         * @param request GetAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAlertRulesResponse
         */
        public GetAlertRulesResponse GetAlertRulesWithOptions(GetAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertIds))
            {
                query["AlertIds"] = request.AlertIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertNames))
            {
                query["AlertNames"] = request.AlertNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertStatus))
            {
                query["AlertStatus"] = request.AlertStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAlertRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert rules.
         *
         * @param request GetAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAlertRulesResponse
         */
        public async Task<GetAlertRulesResponse> GetAlertRulesWithOptionsAsync(GetAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertIds))
            {
                query["AlertIds"] = request.AlertIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertNames))
            {
                query["AlertNames"] = request.AlertNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertStatus))
            {
                query["AlertStatus"] = request.AlertStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAlertRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert rules.
         *
         * @param request GetAlertRulesRequest
         * @return GetAlertRulesResponse
         */
        public GetAlertRulesResponse GetAlertRules(GetAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAlertRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert rules.
         *
         * @param request GetAlertRulesRequest
         * @return GetAlertRulesResponse
         */
        public async Task<GetAlertRulesResponse> GetAlertRulesAsync(GetAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAlertRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the API operations of application monitoring by page.
         *
         * @param request GetAppApiByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppApiByPageResponse
         */
        public GetAppApiByPageResponse GetAppApiByPageWithOptions(GetAppApiByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalMills))
            {
                query["IntervalMills"] = request.IntervalMills;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PId))
            {
                query["PId"] = request.PId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppApiByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppApiByPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the API operations of application monitoring by page.
         *
         * @param request GetAppApiByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppApiByPageResponse
         */
        public async Task<GetAppApiByPageResponse> GetAppApiByPageWithOptionsAsync(GetAppApiByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalMills))
            {
                query["IntervalMills"] = request.IntervalMills;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PId))
            {
                query["PId"] = request.PId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppApiByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppApiByPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the API operations of application monitoring by page.
         *
         * @param request GetAppApiByPageRequest
         * @return GetAppApiByPageResponse
         */
        public GetAppApiByPageResponse GetAppApiByPage(GetAppApiByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAppApiByPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries the API operations of application monitoring by page.
         *
         * @param request GetAppApiByPageRequest
         * @return GetAppApiByPageResponse
         */
        public async Task<GetAppApiByPageResponse> GetAppApiByPageAsync(GetAppApiByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAppApiByPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 应用各个实例的JVM配置信息
         *
         * @param request GetAppJVMConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppJVMConfigResponse
         */
        public GetAppJVMConfigResponse GetAppJVMConfigWithOptions(GetAppJVMConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppJVMConfig",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppJVMConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 应用各个实例的JVM配置信息
         *
         * @param request GetAppJVMConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAppJVMConfigResponse
         */
        public async Task<GetAppJVMConfigResponse> GetAppJVMConfigWithOptionsAsync(GetAppJVMConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAppJVMConfig",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAppJVMConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 应用各个实例的JVM配置信息
         *
         * @param request GetAppJVMConfigRequest
         * @return GetAppJVMConfigResponse
         */
        public GetAppJVMConfigResponse GetAppJVMConfig(GetAppJVMConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAppJVMConfigWithOptions(request, runtime);
        }

        /**
         * @summary 应用各个实例的JVM配置信息
         *
         * @param request GetAppJVMConfigRequest
         * @return GetAppJVMConfigResponse
         */
        public async Task<GetAppJVMConfigResponse> GetAppJVMConfigAsync(GetAppJVMConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAppJVMConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the authentication token for remote read and write over the Internet.
         *
         * @param request GetAuthTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAuthTokenResponse
         */
        public GetAuthTokenResponse GetAuthTokenWithOptions(GetAuthTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAuthToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAuthTokenResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the authentication token for remote read and write over the Internet.
         *
         * @param request GetAuthTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetAuthTokenResponse
         */
        public async Task<GetAuthTokenResponse> GetAuthTokenWithOptionsAsync(GetAuthTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetAuthToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetAuthTokenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the authentication token for remote read and write over the Internet.
         *
         * @param request GetAuthTokenRequest
         * @return GetAuthTokenResponse
         */
        public GetAuthTokenResponse GetAuthToken(GetAuthTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetAuthTokenWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the authentication token for remote read and write over the Internet.
         *
         * @param request GetAuthTokenRequest
         * @return GetAuthTokenResponse
         */
        public async Task<GetAuthTokenResponse> GetAuthTokenAsync(GetAuthTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetAuthTokenWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetCloudClusterAllUrl is deprecated, please use ARMS::2019-08-08::GetRemoteWriteUrl instead.
         *
         * @summary Queries the read and write URLs of a CloudMonitor instance, such as Pushgateway and Grafana URLs.
         *
         * @param request GetCloudClusterAllUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudClusterAllUrlResponse
         */
        // Deprecated
        public GetCloudClusterAllUrlResponse GetCloudClusterAllUrlWithOptions(GetCloudClusterAllUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudClusterAllUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudClusterAllUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetCloudClusterAllUrl is deprecated, please use ARMS::2019-08-08::GetRemoteWriteUrl instead.
         *
         * @summary Queries the read and write URLs of a CloudMonitor instance, such as Pushgateway and Grafana URLs.
         *
         * @param request GetCloudClusterAllUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCloudClusterAllUrlResponse
         */
        // Deprecated
        public async Task<GetCloudClusterAllUrlResponse> GetCloudClusterAllUrlWithOptionsAsync(GetCloudClusterAllUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCloudClusterAllUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCloudClusterAllUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetCloudClusterAllUrl is deprecated, please use ARMS::2019-08-08::GetRemoteWriteUrl instead.
         *
         * @summary Queries the read and write URLs of a CloudMonitor instance, such as Pushgateway and Grafana URLs.
         *
         * @param request GetCloudClusterAllUrlRequest
         * @return GetCloudClusterAllUrlResponse
         */
        // Deprecated
        public GetCloudClusterAllUrlResponse GetCloudClusterAllUrl(GetCloudClusterAllUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCloudClusterAllUrlWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetCloudClusterAllUrl is deprecated, please use ARMS::2019-08-08::GetRemoteWriteUrl instead.
         *
         * @summary Queries the read and write URLs of a CloudMonitor instance, such as Pushgateway and Grafana URLs.
         *
         * @param request GetCloudClusterAllUrlRequest
         * @return GetCloudClusterAllUrlResponse
         */
        // Deprecated
        public async Task<GetCloudClusterAllUrlResponse> GetCloudClusterAllUrlAsync(GetCloudClusterAllUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCloudClusterAllUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains all the URLs of a cluster, including remote read and write URLs, Pushgateway URLs, and Grafana URLs.
         *
         * @param request GetClusterAllUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterAllUrlResponse
         */
        public GetClusterAllUrlResponse GetClusterAllUrlWithOptions(GetClusterAllUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterAllUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterAllUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains all the URLs of a cluster, including remote read and write URLs, Pushgateway URLs, and Grafana URLs.
         *
         * @param request GetClusterAllUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetClusterAllUrlResponse
         */
        public async Task<GetClusterAllUrlResponse> GetClusterAllUrlWithOptionsAsync(GetClusterAllUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetClusterAllUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetClusterAllUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains all the URLs of a cluster, including remote read and write URLs, Pushgateway URLs, and Grafana URLs.
         *
         * @param request GetClusterAllUrlRequest
         * @return GetClusterAllUrlResponse
         */
        public GetClusterAllUrlResponse GetClusterAllUrl(GetClusterAllUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetClusterAllUrlWithOptions(request, runtime);
        }

        /**
         * @summary Obtains all the URLs of a cluster, including remote read and write URLs, Pushgateway URLs, and Grafana URLs.
         *
         * @param request GetClusterAllUrlRequest
         * @return GetClusterAllUrlResponse
         */
        public async Task<GetClusterAllUrlResponse> GetClusterAllUrlAsync(GetClusterAllUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetClusterAllUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取商业化状态
         *
         * @param request GetCommercialStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCommercialStatusResponse
         */
        public GetCommercialStatusResponse GetCommercialStatusWithOptions(GetCommercialStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommodityCode))
            {
                query["CommodityCode"] = request.CommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCommercialStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCommercialStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取商业化状态
         *
         * @param request GetCommercialStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetCommercialStatusResponse
         */
        public async Task<GetCommercialStatusResponse> GetCommercialStatusWithOptionsAsync(GetCommercialStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommodityCode))
            {
                query["CommodityCode"] = request.CommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetCommercialStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetCommercialStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取商业化状态
         *
         * @param request GetCommercialStatusRequest
         * @return GetCommercialStatusResponse
         */
        public GetCommercialStatusResponse GetCommercialStatus(GetCommercialStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetCommercialStatusWithOptions(request, runtime);
        }

        /**
         * @summary 获取商业化状态
         *
         * @param request GetCommercialStatusRequest
         * @return GetCommercialStatusResponse
         */
        public async Task<GetCommercialStatusResponse> GetCommercialStatusAsync(GetCommercialStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetCommercialStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Enables the Explore feature of Grafana.
         *
         * @param request GetExploreUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetExploreUrlResponse
         */
        public GetExploreUrlResponse GetExploreUrlWithOptions(GetExploreUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetExploreUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetExploreUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Enables the Explore feature of Grafana.
         *
         * @param request GetExploreUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetExploreUrlResponse
         */
        public async Task<GetExploreUrlResponse> GetExploreUrlWithOptionsAsync(GetExploreUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetExploreUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetExploreUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Enables the Explore feature of Grafana.
         *
         * @param request GetExploreUrlRequest
         * @return GetExploreUrlResponse
         */
        public GetExploreUrlResponse GetExploreUrl(GetExploreUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetExploreUrlWithOptions(request, runtime);
        }

        /**
         * @summary Enables the Explore feature of Grafana.
         *
         * @param request GetExploreUrlRequest
         * @return GetExploreUrlResponse
         */
        public async Task<GetExploreUrlResponse> GetExploreUrlAsync(GetExploreUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetExploreUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取指定工作区
         *
         * @param request GetGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetGrafanaWorkspaceResponse
         */
        public GetGrafanaWorkspaceResponse GetGrafanaWorkspaceWithOptions(GetGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetGrafanaWorkspaceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取指定工作区
         *
         * @param request GetGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetGrafanaWorkspaceResponse
         */
        public async Task<GetGrafanaWorkspaceResponse> GetGrafanaWorkspaceWithOptionsAsync(GetGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetGrafanaWorkspaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取指定工作区
         *
         * @param request GetGrafanaWorkspaceRequest
         * @return GetGrafanaWorkspaceResponse
         */
        public GetGrafanaWorkspaceResponse GetGrafanaWorkspace(GetGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetGrafanaWorkspaceWithOptions(request, runtime);
        }

        /**
         * @summary 获取指定工作区
         *
         * @param request GetGrafanaWorkspaceRequest
         * @return GetGrafanaWorkspaceResponse
         */
        public async Task<GetGrafanaWorkspaceResponse> GetGrafanaWorkspaceAsync(GetGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetGrafanaWorkspaceWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetIntegrationState is deprecated, please use ARMS::2019-08-08::DescribeAddonRelease instead.
         *
         * @summary 获取Prometheus中是否已接入某种Integration类型
         *
         * @param request GetIntegrationStateRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetIntegrationStateResponse
         */
        // Deprecated
        public GetIntegrationStateResponse GetIntegrationStateWithOptions(GetIntegrationStateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetIntegrationState",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetIntegrationStateResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetIntegrationState is deprecated, please use ARMS::2019-08-08::DescribeAddonRelease instead.
         *
         * @summary 获取Prometheus中是否已接入某种Integration类型
         *
         * @param request GetIntegrationStateRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetIntegrationStateResponse
         */
        // Deprecated
        public async Task<GetIntegrationStateResponse> GetIntegrationStateWithOptionsAsync(GetIntegrationStateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Integration))
            {
                query["Integration"] = request.Integration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetIntegrationState",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetIntegrationStateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI GetIntegrationState is deprecated, please use ARMS::2019-08-08::DescribeAddonRelease instead.
         *
         * @summary 获取Prometheus中是否已接入某种Integration类型
         *
         * @param request GetIntegrationStateRequest
         * @return GetIntegrationStateResponse
         */
        // Deprecated
        public GetIntegrationStateResponse GetIntegrationState(GetIntegrationStateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetIntegrationStateWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI GetIntegrationState is deprecated, please use ARMS::2019-08-08::DescribeAddonRelease instead.
         *
         * @summary 获取Prometheus中是否已接入某种Integration类型
         *
         * @param request GetIntegrationStateRequest
         * @return GetIntegrationStateResponse
         */
        // Deprecated
        public async Task<GetIntegrationStateResponse> GetIntegrationStateAsync(GetIntegrationStateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetIntegrationStateWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the status of a Prometheus instance of a serverless Kubernetes (ASK) cluster or Elastic Compute Service (ECS) instance.
         *
         * @param request GetManagedPrometheusStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetManagedPrometheusStatusResponse
         */
        public GetManagedPrometheusStatusResponse GetManagedPrometheusStatusWithOptions(GetManagedPrometheusStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetManagedPrometheusStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetManagedPrometheusStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the status of a Prometheus instance of a serverless Kubernetes (ASK) cluster or Elastic Compute Service (ECS) instance.
         *
         * @param request GetManagedPrometheusStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetManagedPrometheusStatusResponse
         */
        public async Task<GetManagedPrometheusStatusResponse> GetManagedPrometheusStatusWithOptionsAsync(GetManagedPrometheusStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetManagedPrometheusStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetManagedPrometheusStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the status of a Prometheus instance of a serverless Kubernetes (ASK) cluster or Elastic Compute Service (ECS) instance.
         *
         * @param request GetManagedPrometheusStatusRequest
         * @return GetManagedPrometheusStatusResponse
         */
        public GetManagedPrometheusStatusResponse GetManagedPrometheusStatus(GetManagedPrometheusStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetManagedPrometheusStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries the status of a Prometheus instance of a serverless Kubernetes (ASK) cluster or Elastic Compute Service (ECS) instance.
         *
         * @param request GetManagedPrometheusStatusRequest
         * @return GetManagedPrometheusStatusResponse
         */
        public async Task<GetManagedPrometheusStatusResponse> GetManagedPrometheusStatusAsync(GetManagedPrometheusStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetManagedPrometheusStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of one or more traces.
         *
         * @param request GetMultipleTraceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetMultipleTraceResponse
         */
        public GetMultipleTraceResponse GetMultipleTraceWithOptions(GetMultipleTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceIDs))
            {
                query["TraceIDs"] = request.TraceIDs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetMultipleTrace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetMultipleTraceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of one or more traces.
         *
         * @param request GetMultipleTraceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetMultipleTraceResponse
         */
        public async Task<GetMultipleTraceResponse> GetMultipleTraceWithOptionsAsync(GetMultipleTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceIDs))
            {
                query["TraceIDs"] = request.TraceIDs;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetMultipleTrace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetMultipleTraceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of one or more traces.
         *
         * @param request GetMultipleTraceRequest
         * @return GetMultipleTraceResponse
         */
        public GetMultipleTraceResponse GetMultipleTrace(GetMultipleTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetMultipleTraceWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of one or more traces.
         *
         * @param request GetMultipleTraceRequest
         * @return GetMultipleTraceResponse
         */
        public async Task<GetMultipleTraceResponse> GetMultipleTraceAsync(GetMultipleTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetMultipleTraceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request GetOnCallSchedulesDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOnCallSchedulesDetailResponse
         */
        public GetOnCallSchedulesDetailResponse GetOnCallSchedulesDetailWithOptions(GetOnCallSchedulesDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOnCallSchedulesDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOnCallSchedulesDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request GetOnCallSchedulesDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetOnCallSchedulesDetailResponse
         */
        public async Task<GetOnCallSchedulesDetailResponse> GetOnCallSchedulesDetailWithOptionsAsync(GetOnCallSchedulesDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetOnCallSchedulesDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetOnCallSchedulesDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request GetOnCallSchedulesDetailRequest
         * @return GetOnCallSchedulesDetailResponse
         */
        public GetOnCallSchedulesDetailResponse GetOnCallSchedulesDetail(GetOnCallSchedulesDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetOnCallSchedulesDetailWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request GetOnCallSchedulesDetailRequest
         * @return GetOnCallSchedulesDetailResponse
         */
        public async Task<GetOnCallSchedulesDetailResponse> GetOnCallSchedulesDetailAsync(GetOnCallSchedulesDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetOnCallSchedulesDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the token required for integrating Prometheus Service.
         *
         * @description None.
         *
         * @param request GetPrometheusApiTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusApiTokenResponse
         */
        public GetPrometheusApiTokenResponse GetPrometheusApiTokenWithOptions(GetPrometheusApiTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusApiToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusApiTokenResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the token required for integrating Prometheus Service.
         *
         * @description None.
         *
         * @param request GetPrometheusApiTokenRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusApiTokenResponse
         */
        public async Task<GetPrometheusApiTokenResponse> GetPrometheusApiTokenWithOptionsAsync(GetPrometheusApiTokenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusApiToken",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusApiTokenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the token required for integrating Prometheus Service.
         *
         * @description None.
         *
         * @param request GetPrometheusApiTokenRequest
         * @return GetPrometheusApiTokenResponse
         */
        public GetPrometheusApiTokenResponse GetPrometheusApiToken(GetPrometheusApiTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusApiTokenWithOptions(request, runtime);
        }

        /**
         * @summary Queries the token required for integrating Prometheus Service.
         *
         * @description None.
         *
         * @param request GetPrometheusApiTokenRequest
         * @return GetPrometheusApiTokenResponse
         */
        public async Task<GetPrometheusApiTokenResponse> GetPrometheusApiTokenAsync(GetPrometheusApiTokenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusApiTokenWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a global aggregation instance.
         *
         * @param request GetPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusGlobalViewResponse
         */
        public GetPrometheusGlobalViewResponse GetPrometheusGlobalViewWithOptions(GetPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a global aggregation instance.
         *
         * @param request GetPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusGlobalViewResponse
         */
        public async Task<GetPrometheusGlobalViewResponse> GetPrometheusGlobalViewWithOptionsAsync(GetPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a global aggregation instance.
         *
         * @param request GetPrometheusGlobalViewRequest
         * @return GetPrometheusGlobalViewResponse
         */
        public GetPrometheusGlobalViewResponse GetPrometheusGlobalView(GetPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a global aggregation instance.
         *
         * @param request GetPrometheusGlobalViewRequest
         * @return GetPrometheusGlobalViewResponse
         */
        public async Task<GetPrometheusGlobalViewResponse> GetPrometheusGlobalViewAsync(GetPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a Prometheus instance.
         *
         * @param request GetPrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusInstanceResponse
         */
        public GetPrometheusInstanceResponse GetPrometheusInstanceWithOptions(GetPrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a Prometheus instance.
         *
         * @param request GetPrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusInstanceResponse
         */
        public async Task<GetPrometheusInstanceResponse> GetPrometheusInstanceWithOptionsAsync(GetPrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a Prometheus instance.
         *
         * @param request GetPrometheusInstanceRequest
         * @return GetPrometheusInstanceResponse
         */
        public GetPrometheusInstanceResponse GetPrometheusInstance(GetPrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusInstanceWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a Prometheus instance.
         *
         * @param request GetPrometheusInstanceRequest
         * @return GetPrometheusInstanceResponse
         */
        public async Task<GetPrometheusInstanceResponse> GetPrometheusInstanceAsync(GetPrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusIntegrationResponse
         */
        public GetPrometheusIntegrationResponse GetPrometheusIntegrationWithOptions(GetPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusIntegrationResponse
         */
        public async Task<GetPrometheusIntegrationResponse> GetPrometheusIntegrationWithOptionsAsync(GetPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusIntegrationRequest
         * @return GetPrometheusIntegrationResponse
         */
        public GetPrometheusIntegrationResponse GetPrometheusIntegration(GetPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusIntegrationRequest
         * @return GetPrometheusIntegrationResponse
         */
        public async Task<GetPrometheusIntegrationResponse> GetPrometheusIntegrationAsync(GetPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request GetPrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusMonitoringResponse
         */
        public GetPrometheusMonitoringResponse GetPrometheusMonitoringWithOptions(GetPrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusMonitoringResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request GetPrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusMonitoringResponse
         */
        public async Task<GetPrometheusMonitoringResponse> GetPrometheusMonitoringWithOptionsAsync(GetPrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusMonitoringResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request GetPrometheusMonitoringRequest
         * @return GetPrometheusMonitoringResponse
         */
        public GetPrometheusMonitoringResponse GetPrometheusMonitoring(GetPrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusMonitoringWithOptions(request, runtime);
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request GetPrometheusMonitoringRequest
         * @return GetPrometheusMonitoringResponse
         */
        public async Task<GetPrometheusMonitoringResponse> GetPrometheusMonitoringAsync(GetPrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusMonitoringWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusRemoteWriteResponse
         */
        public GetPrometheusRemoteWriteResponse GetPrometheusRemoteWriteWithOptions(GetPrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteName))
            {
                query["RemoteWriteName"] = request.RemoteWriteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusRemoteWriteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetPrometheusRemoteWriteResponse
         */
        public async Task<GetPrometheusRemoteWriteResponse> GetPrometheusRemoteWriteWithOptionsAsync(GetPrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteName))
            {
                query["RemoteWriteName"] = request.RemoteWriteName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetPrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetPrometheusRemoteWriteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusRemoteWriteRequest
         * @return GetPrometheusRemoteWriteResponse
         */
        public GetPrometheusRemoteWriteResponse GetPrometheusRemoteWrite(GetPrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetPrometheusRemoteWriteWithOptions(request, runtime);
        }

        /**
         * @summary Queries a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request GetPrometheusRemoteWriteRequest
         * @return GetPrometheusRemoteWriteResponse
         */
        public async Task<GetPrometheusRemoteWriteResponse> GetPrometheusRemoteWriteAsync(GetPrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetPrometheusRemoteWriteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the recording rule of a cluster.
         *
         * @param request GetRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRecordingRuleResponse
         */
        public GetRecordingRuleResponse GetRecordingRuleWithOptions(GetRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRecordingRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the recording rule of a cluster.
         *
         * @param request GetRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRecordingRuleResponse
         */
        public async Task<GetRecordingRuleResponse> GetRecordingRuleWithOptionsAsync(GetRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRecordingRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the recording rule of a cluster.
         *
         * @param request GetRecordingRuleRequest
         * @return GetRecordingRuleResponse
         */
        public GetRecordingRuleResponse GetRecordingRule(GetRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRecordingRuleWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the recording rule of a cluster.
         *
         * @param request GetRecordingRuleRequest
         * @return GetRecordingRuleResponse
         */
        public async Task<GetRecordingRuleResponse> GetRecordingRuleAsync(GetRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRecordingRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the objects of a Browser Monitoring application by process identifier (PID).
         *
         * @param request GetRetcodeAppByPidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeAppByPidResponse
         */
        public GetRetcodeAppByPidResponse GetRetcodeAppByPidWithOptions(GetRetcodeAppByPidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeAppByPid",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeAppByPidResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the objects of a Browser Monitoring application by process identifier (PID).
         *
         * @param request GetRetcodeAppByPidRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeAppByPidResponse
         */
        public async Task<GetRetcodeAppByPidResponse> GetRetcodeAppByPidWithOptionsAsync(GetRetcodeAppByPidRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeAppByPid",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeAppByPidResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the objects of a Browser Monitoring application by process identifier (PID).
         *
         * @param request GetRetcodeAppByPidRequest
         * @return GetRetcodeAppByPidResponse
         */
        public GetRetcodeAppByPidResponse GetRetcodeAppByPid(GetRetcodeAppByPidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRetcodeAppByPidWithOptions(request, runtime);
        }

        /**
         * @summary Queries the objects of a Browser Monitoring application by process identifier (PID).
         *
         * @param request GetRetcodeAppByPidRequest
         * @return GetRetcodeAppByPidResponse
         */
        public async Task<GetRetcodeAppByPidResponse> GetRetcodeAppByPidAsync(GetRetcodeAppByPidRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRetcodeAppByPidWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 传入SLS查询语句，查询出前端监控数据
         *
         * @param request GetRetcodeDataByQueryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeDataByQueryResponse
         */
        public GetRetcodeDataByQueryResponse GetRetcodeDataByQueryWithOptions(GetRetcodeDataByQueryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.To))
            {
                query["To"] = request.To;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeDataByQuery",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeDataByQueryResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 传入SLS查询语句，查询出前端监控数据
         *
         * @param request GetRetcodeDataByQueryRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeDataByQueryResponse
         */
        public async Task<GetRetcodeDataByQueryResponse> GetRetcodeDataByQueryWithOptionsAsync(GetRetcodeDataByQueryRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.From))
            {
                query["From"] = request.From;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.To))
            {
                query["To"] = request.To;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeDataByQuery",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeDataByQueryResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 传入SLS查询语句，查询出前端监控数据
         *
         * @param request GetRetcodeDataByQueryRequest
         * @return GetRetcodeDataByQueryResponse
         */
        public GetRetcodeDataByQueryResponse GetRetcodeDataByQuery(GetRetcodeDataByQueryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRetcodeDataByQueryWithOptions(request, runtime);
        }

        /**
         * @summary 传入SLS查询语句，查询出前端监控数据
         *
         * @param request GetRetcodeDataByQueryRequest
         * @return GetRetcodeDataByQueryResponse
         */
        public async Task<GetRetcodeDataByQueryResponse> GetRetcodeDataByQueryAsync(GetRetcodeDataByQueryRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRetcodeDataByQueryWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控应用SLS存储的详细信息
         *
         * @param request GetRetcodeLogstoreRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeLogstoreResponse
         */
        public GetRetcodeLogstoreResponse GetRetcodeLogstoreWithOptions(GetRetcodeLogstoreRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeLogstore",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeLogstoreResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用SLS存储的详细信息
         *
         * @param request GetRetcodeLogstoreRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeLogstoreResponse
         */
        public async Task<GetRetcodeLogstoreResponse> GetRetcodeLogstoreWithOptionsAsync(GetRetcodeLogstoreRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeLogstore",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeLogstoreResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用SLS存储的详细信息
         *
         * @param request GetRetcodeLogstoreRequest
         * @return GetRetcodeLogstoreResponse
         */
        public GetRetcodeLogstoreResponse GetRetcodeLogstore(GetRetcodeLogstoreRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRetcodeLogstoreWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控应用SLS存储的详细信息
         *
         * @param request GetRetcodeLogstoreRequest
         * @return GetRetcodeLogstoreResponse
         */
        public async Task<GetRetcodeLogstoreResponse> GetRetcodeLogstoreAsync(GetRetcodeLogstoreRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRetcodeLogstoreWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the logon-free URL of a Browser Monitoring application.
         *
         * @param request GetRetcodeShareUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeShareUrlResponse
         */
        public GetRetcodeShareUrlResponse GetRetcodeShareUrlWithOptions(GetRetcodeShareUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeShareUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeShareUrlResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the logon-free URL of a Browser Monitoring application.
         *
         * @param request GetRetcodeShareUrlRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRetcodeShareUrlResponse
         */
        public async Task<GetRetcodeShareUrlResponse> GetRetcodeShareUrlWithOptionsAsync(GetRetcodeShareUrlRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRetcodeShareUrl",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRetcodeShareUrlResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the logon-free URL of a Browser Monitoring application.
         *
         * @param request GetRetcodeShareUrlRequest
         * @return GetRetcodeShareUrlResponse
         */
        public GetRetcodeShareUrlResponse GetRetcodeShareUrl(GetRetcodeShareUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRetcodeShareUrlWithOptions(request, runtime);
        }

        /**
         * @summary Queries the logon-free URL of a Browser Monitoring application.
         *
         * @param request GetRetcodeShareUrlRequest
         * @return GetRetcodeShareUrlResponse
         */
        public async Task<GetRetcodeShareUrlResponse> GetRetcodeShareUrlAsync(GetRetcodeShareUrlRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRetcodeShareUrlWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控单个应用信息
         *
         * @param request GetRumAppInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumAppInfoResponse
         */
        public GetRumAppInfoResponse GetRumAppInfoWithOptions(GetRumAppInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumAppInfo",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumAppInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控单个应用信息
         *
         * @param request GetRumAppInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumAppInfoResponse
         */
        public async Task<GetRumAppInfoResponse> GetRumAppInfoWithOptionsAsync(GetRumAppInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumAppInfo",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumAppInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控单个应用信息
         *
         * @param request GetRumAppInfoRequest
         * @return GetRumAppInfoResponse
         */
        public GetRumAppInfoResponse GetRumAppInfo(GetRumAppInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRumAppInfoWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控单个应用信息
         *
         * @param request GetRumAppInfoRequest
         * @return GetRumAppInfoResponse
         */
        public async Task<GetRumAppInfoResponse> GetRumAppInfoAsync(GetRumAppInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRumAppInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控应用列表信息
         *
         * @param request GetRumAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumAppsResponse
         */
        public GetRumAppsResponse GetRumAppsWithOptions(GetRumAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumAppsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用列表信息
         *
         * @param request GetRumAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumAppsResponse
         */
        public async Task<GetRumAppsResponse> GetRumAppsWithOptionsAsync(GetRumAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumAppsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用列表信息
         *
         * @param request GetRumAppsRequest
         * @return GetRumAppsResponse
         */
        public GetRumAppsResponse GetRumApps(GetRumAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRumAppsWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控应用列表信息
         *
         * @param request GetRumAppsRequest
         * @return GetRumAppsResponse
         */
        public async Task<GetRumAppsResponse> GetRumAppsAsync(GetRumAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRumAppsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控应用sql查询分页结果
         *
         * @param request GetRumDataForPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumDataForPageResponse
         */
        public GetRumDataForPageResponse GetRumDataForPageWithOptions(GetRumDataForPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumDataForPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumDataForPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用sql查询分页结果
         *
         * @param request GetRumDataForPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumDataForPageResponse
         */
        public async Task<GetRumDataForPageResponse> GetRumDataForPageWithOptionsAsync(GetRumDataForPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppGroup))
            {
                query["AppGroup"] = request.AppGroup;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Query))
            {
                query["Query"] = request.Query;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumDataForPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumDataForPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控应用sql查询分页结果
         *
         * @param request GetRumDataForPageRequest
         * @return GetRumDataForPageResponse
         */
        public GetRumDataForPageResponse GetRumDataForPage(GetRumDataForPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRumDataForPageWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控应用sql查询分页结果
         *
         * @param request GetRumDataForPageRequest
         * @return GetRumDataForPageResponse
         */
        public async Task<GetRumDataForPageResponse> GetRumDataForPageAsync(GetRumDataForPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRumDataForPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取RUM异常堆栈
         *
         * @param request GetRumExceptionStackRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumExceptionStackResponse
         */
        public GetRumExceptionStackResponse GetRumExceptionStackWithOptions(GetRumExceptionStackRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionBinaryImages))
            {
                query["ExceptionBinaryImages"] = request.ExceptionBinaryImages;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionStack))
            {
                query["ExceptionStack"] = request.ExceptionStack;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionThreadId))
            {
                query["ExceptionThreadId"] = request.ExceptionThreadId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumExceptionStack",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumExceptionStackResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取RUM异常堆栈
         *
         * @param request GetRumExceptionStackRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumExceptionStackResponse
         */
        public async Task<GetRumExceptionStackResponse> GetRumExceptionStackWithOptionsAsync(GetRumExceptionStackRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionBinaryImages))
            {
                query["ExceptionBinaryImages"] = request.ExceptionBinaryImages;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionStack))
            {
                query["ExceptionStack"] = request.ExceptionStack;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExceptionThreadId))
            {
                query["ExceptionThreadId"] = request.ExceptionThreadId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumExceptionStack",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumExceptionStackResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取RUM异常堆栈
         *
         * @param request GetRumExceptionStackRequest
         * @return GetRumExceptionStackResponse
         */
        public GetRumExceptionStackResponse GetRumExceptionStack(GetRumExceptionStackRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRumExceptionStackWithOptions(request, runtime);
        }

        /**
         * @summary 获取RUM异常堆栈
         *
         * @param request GetRumExceptionStackRequest
         * @return GetRumExceptionStackResponse
         */
        public async Task<GetRumExceptionStackResponse> GetRumExceptionStackAsync(GetRumExceptionStackRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRumExceptionStackWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控在oss中文件
         *
         * @param request GetRumUploadFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumUploadFilesResponse
         */
        public GetRumUploadFilesResponse GetRumUploadFilesWithOptions(GetRumUploadFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumUploadFiles",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumUploadFilesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控在oss中文件
         *
         * @param request GetRumUploadFilesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetRumUploadFilesResponse
         */
        public async Task<GetRumUploadFilesResponse> GetRumUploadFilesWithOptionsAsync(GetRumUploadFilesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRumUploadFiles",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRumUploadFilesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控在oss中文件
         *
         * @param request GetRumUploadFilesRequest
         * @return GetRumUploadFilesResponse
         */
        public GetRumUploadFilesResponse GetRumUploadFiles(GetRumUploadFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRumUploadFilesWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控在oss中文件
         *
         * @param request GetRumUploadFilesRequest
         * @return GetRumUploadFilesResponse
         */
        public async Task<GetRumUploadFilesResponse> GetRumUploadFilesAsync(GetRumUploadFilesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRumUploadFilesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取前端监控上传SourceMap的具体信息
         *
         * @param request GetSourceMapInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSourceMapInfoResponse
         */
        public GetSourceMapInfoResponse GetSourceMapInfoWithOptions(GetSourceMapInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AscendingSequence))
            {
                query["AscendingSequence"] = request.AscendingSequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Edition))
            {
                query["Edition"] = request.Edition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ID))
            {
                query["ID"] = request.ID;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Keyword))
            {
                query["Keyword"] = request.Keyword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderField))
            {
                query["OrderField"] = request.OrderField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSourceMapInfo",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSourceMapInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控上传SourceMap的具体信息
         *
         * @param request GetSourceMapInfoRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSourceMapInfoResponse
         */
        public async Task<GetSourceMapInfoResponse> GetSourceMapInfoWithOptionsAsync(GetSourceMapInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AscendingSequence))
            {
                query["AscendingSequence"] = request.AscendingSequence;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Edition))
            {
                query["Edition"] = request.Edition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ID))
            {
                query["ID"] = request.ID;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Keyword))
            {
                query["Keyword"] = request.Keyword;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderField))
            {
                query["OrderField"] = request.OrderField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSourceMapInfo",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSourceMapInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取前端监控上传SourceMap的具体信息
         *
         * @param request GetSourceMapInfoRequest
         * @return GetSourceMapInfoResponse
         */
        public GetSourceMapInfoResponse GetSourceMapInfo(GetSourceMapInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSourceMapInfoWithOptions(request, runtime);
        }

        /**
         * @summary 获取前端监控上传SourceMap的具体信息
         *
         * @param request GetSourceMapInfoRequest
         * @return GetSourceMapInfoResponse
         */
        public async Task<GetSourceMapInfoResponse> GetSourceMapInfoAsync(GetSourceMapInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSourceMapInfoWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information of a method stack.
         *
         * @param request GetStackRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetStackResponse
         */
        public GetStackResponse GetStackWithOptions(GetStackRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RpcID))
            {
                query["RpcID"] = request.RpcID;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceID))
            {
                query["TraceID"] = request.TraceID;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStack",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStackResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information of a method stack.
         *
         * @param request GetStackRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetStackResponse
         */
        public async Task<GetStackResponse> GetStackWithOptionsAsync(GetStackRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RpcID))
            {
                query["RpcID"] = request.RpcID;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceID))
            {
                query["TraceID"] = request.TraceID;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStack",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStackResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information of a method stack.
         *
         * @param request GetStackRequest
         * @return GetStackResponse
         */
        public GetStackResponse GetStack(GetStackRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetStackWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information of a method stack.
         *
         * @param request GetStackRequest
         * @return GetStackResponse
         */
        public async Task<GetStackResponse> GetStackAsync(GetStackRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetStackWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains detection points.
         *
         * @param tmpReq GetSyntheticMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticMonitorsResponse
         */
        public GetSyntheticMonitorsResponse GetSyntheticMonitorsWithOptions(GetSyntheticMonitorsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            GetSyntheticMonitorsShrinkRequest request = new GetSyntheticMonitorsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filter))
            {
                request.FilterShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filter, "Filter", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticMonitorsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains detection points.
         *
         * @param tmpReq GetSyntheticMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticMonitorsResponse
         */
        public async Task<GetSyntheticMonitorsResponse> GetSyntheticMonitorsWithOptionsAsync(GetSyntheticMonitorsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            GetSyntheticMonitorsShrinkRequest request = new GetSyntheticMonitorsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filter))
            {
                request.FilterShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filter, "Filter", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticMonitorsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains detection points.
         *
         * @param request GetSyntheticMonitorsRequest
         * @return GetSyntheticMonitorsResponse
         */
        public GetSyntheticMonitorsResponse GetSyntheticMonitors(GetSyntheticMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSyntheticMonitorsWithOptions(request, runtime);
        }

        /**
         * @summary Obtains detection points.
         *
         * @param request GetSyntheticMonitorsRequest
         * @return GetSyntheticMonitorsResponse
         */
        public async Task<GetSyntheticMonitorsResponse> GetSyntheticMonitorsAsync(GetSyntheticMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSyntheticMonitorsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取单个拨测任务的详情
         *
         * @param request GetSyntheticTaskDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskDetailResponse
         */
        public GetSyntheticTaskDetailResponse GetSyntheticTaskDetailWithOptions(GetSyntheticTaskDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取单个拨测任务的详情
         *
         * @param request GetSyntheticTaskDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskDetailResponse
         */
        public async Task<GetSyntheticTaskDetailResponse> GetSyntheticTaskDetailWithOptionsAsync(GetSyntheticTaskDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取单个拨测任务的详情
         *
         * @param request GetSyntheticTaskDetailRequest
         * @return GetSyntheticTaskDetailResponse
         */
        public GetSyntheticTaskDetailResponse GetSyntheticTaskDetail(GetSyntheticTaskDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSyntheticTaskDetailWithOptions(request, runtime);
        }

        /**
         * @summary 获取单个拨测任务的详情
         *
         * @param request GetSyntheticTaskDetailRequest
         * @return GetSyntheticTaskDetailResponse
         */
        public async Task<GetSyntheticTaskDetailResponse> GetSyntheticTaskDetailAsync(GetSyntheticTaskDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSyntheticTaskDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取拨测任务列表
         *
         * @param request GetSyntheticTaskListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskListResponse
         */
        public GetSyntheticTaskListResponse GetSyntheticTaskListWithOptions(GetSyntheticTaskListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Direction))
            {
                query["Direction"] = request.Direction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNum))
            {
                query["PageNum"] = request.PageNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskList",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskListResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取拨测任务列表
         *
         * @param request GetSyntheticTaskListRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskListResponse
         */
        public async Task<GetSyntheticTaskListResponse> GetSyntheticTaskListWithOptionsAsync(GetSyntheticTaskListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Direction))
            {
                query["Direction"] = request.Direction;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNum))
            {
                query["PageNum"] = request.PageNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskName))
            {
                query["TaskName"] = request.TaskName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskType))
            {
                query["TaskType"] = request.TaskType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskList",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取拨测任务列表
         *
         * @param request GetSyntheticTaskListRequest
         * @return GetSyntheticTaskListResponse
         */
        public GetSyntheticTaskListResponse GetSyntheticTaskList(GetSyntheticTaskListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSyntheticTaskListWithOptions(request, runtime);
        }

        /**
         * @summary 获取拨测任务列表
         *
         * @param request GetSyntheticTaskListRequest
         * @return GetSyntheticTaskListResponse
         */
        public async Task<GetSyntheticTaskListResponse> GetSyntheticTaskListAsync(GetSyntheticTaskListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSyntheticTaskListWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取拨测任务的监测点信息
         *
         * @param request GetSyntheticTaskMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskMonitorsResponse
         */
        public GetSyntheticTaskMonitorsResponse GetSyntheticTaskMonitorsWithOptions(GetSyntheticTaskMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskMonitorsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取拨测任务的监测点信息
         *
         * @param request GetSyntheticTaskMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetSyntheticTaskMonitorsResponse
         */
        public async Task<GetSyntheticTaskMonitorsResponse> GetSyntheticTaskMonitorsWithOptionsAsync(GetSyntheticTaskMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSyntheticTaskMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSyntheticTaskMonitorsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取拨测任务的监测点信息
         *
         * @param request GetSyntheticTaskMonitorsRequest
         * @return GetSyntheticTaskMonitorsResponse
         */
        public GetSyntheticTaskMonitorsResponse GetSyntheticTaskMonitors(GetSyntheticTaskMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSyntheticTaskMonitorsWithOptions(request, runtime);
        }

        /**
         * @summary 获取拨测任务的监测点信息
         *
         * @param request GetSyntheticTaskMonitorsRequest
         * @return GetSyntheticTaskMonitorsResponse
         */
        public async Task<GetSyntheticTaskMonitorsResponse> GetSyntheticTaskMonitorsAsync(GetSyntheticTaskMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSyntheticTaskMonitorsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the details of a synthetic monitoring task.
         *
         * @param request GetTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTimingSyntheticTaskResponse
         */
        public GetTimingSyntheticTaskResponse GetTimingSyntheticTaskWithOptions(GetTimingSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the details of a synthetic monitoring task.
         *
         * @param request GetTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTimingSyntheticTaskResponse
         */
        public async Task<GetTimingSyntheticTaskResponse> GetTimingSyntheticTaskWithOptionsAsync(GetTimingSyntheticTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the details of a synthetic monitoring task.
         *
         * @param request GetTimingSyntheticTaskRequest
         * @return GetTimingSyntheticTaskResponse
         */
        public GetTimingSyntheticTaskResponse GetTimingSyntheticTask(GetTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the details of a synthetic monitoring task.
         *
         * @param request GetTimingSyntheticTaskRequest
         * @return GetTimingSyntheticTaskResponse
         */
        public async Task<GetTimingSyntheticTaskResponse> GetTimingSyntheticTaskAsync(GetTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of a trace.
         *
         * @description > You must use Application Real-Time Monitoring Service (ARMS) SDK for Java V2.7.24.
         *
         * @param request GetTraceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTraceResponse
         */
        public GetTraceResponse GetTraceWithOptions(GetTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceID))
            {
                query["TraceID"] = request.TraceID;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTrace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTraceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a trace.
         *
         * @description > You must use Application Real-Time Monitoring Service (ARMS) SDK for Java V2.7.24.
         *
         * @param request GetTraceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTraceResponse
         */
        public async Task<GetTraceResponse> GetTraceWithOptionsAsync(GetTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceID))
            {
                query["TraceID"] = request.TraceID;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTrace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTraceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of a trace.
         *
         * @description > You must use Application Real-Time Monitoring Service (ARMS) SDK for Java V2.7.24.
         *
         * @param request GetTraceRequest
         * @return GetTraceResponse
         */
        public GetTraceResponse GetTrace(GetTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetTraceWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of a trace.
         *
         * @description > You must use Application Real-Time Monitoring Service (ARMS) SDK for Java V2.7.24.
         *
         * @param request GetTraceRequest
         * @return GetTraceResponse
         */
        public async Task<GetTraceResponse> GetTraceAsync(GetTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetTraceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the details of an application monitoring task.
         *
         * @param request GetTraceAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTraceAppResponse
         */
        public GetTraceAppResponse GetTraceAppWithOptions(GetTraceAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTraceApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTraceAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an application monitoring task.
         *
         * @param request GetTraceAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return GetTraceAppResponse
         */
        public async Task<GetTraceAppResponse> GetTraceAppWithOptionsAsync(GetTraceAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetTraceApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetTraceAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the details of an application monitoring task.
         *
         * @param request GetTraceAppRequest
         * @return GetTraceAppResponse
         */
        public GetTraceAppResponse GetTraceApp(GetTraceAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetTraceAppWithOptions(request, runtime);
        }

        /**
         * @summary Queries the details of an application monitoring task.
         *
         * @param request GetTraceAppRequest
         * @return GetTraceAppResponse
         */
        public async Task<GetTraceAppResponse> GetTraceAppAsync(GetTraceAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetTraceAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates an alert rule based on an alert template.
         *
         * @description >  You can call the **ImportAppAlertRules** operation to import only the alert rules that are generated by Application Real-Time Monitoring Service (ARMS) for application monitoring and browser monitoring. This operation cannot be used to import custom alert rules, alert rules for Prometheus monitoring, or default emergency alert rules.
         *
         * @param request ImportAppAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ImportAppAlertRulesResponse
         */
        public ImportAppAlertRulesResponse ImportAppAlertRulesWithOptions(ImportAppAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAutoStart))
            {
                query["IsAutoStart"] = request.IsAutoStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                query["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplageAlertConfig))
            {
                query["TemplageAlertConfig"] = request.TemplageAlertConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateAlertId))
            {
                query["TemplateAlertId"] = request.TemplateAlertId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportAppAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportAppAlertRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates an alert rule based on an alert template.
         *
         * @description >  You can call the **ImportAppAlertRules** operation to import only the alert rules that are generated by Application Real-Time Monitoring Service (ARMS) for application monitoring and browser monitoring. This operation cannot be used to import custom alert rules, alert rules for Prometheus monitoring, or default emergency alert rules.
         *
         * @param request ImportAppAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ImportAppAlertRulesResponse
         */
        public async Task<ImportAppAlertRulesResponse> ImportAppAlertRulesWithOptionsAsync(ImportAppAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAutoStart))
            {
                query["IsAutoStart"] = request.IsAutoStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pids))
            {
                query["Pids"] = request.Pids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplageAlertConfig))
            {
                query["TemplageAlertConfig"] = request.TemplageAlertConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateAlertId))
            {
                query["TemplateAlertId"] = request.TemplateAlertId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportAppAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportAppAlertRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates an alert rule based on an alert template.
         *
         * @description >  You can call the **ImportAppAlertRules** operation to import only the alert rules that are generated by Application Real-Time Monitoring Service (ARMS) for application monitoring and browser monitoring. This operation cannot be used to import custom alert rules, alert rules for Prometheus monitoring, or default emergency alert rules.
         *
         * @param request ImportAppAlertRulesRequest
         * @return ImportAppAlertRulesResponse
         */
        public ImportAppAlertRulesResponse ImportAppAlertRules(ImportAppAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ImportAppAlertRulesWithOptions(request, runtime);
        }

        /**
         * @summary Creates an alert rule based on an alert template.
         *
         * @description >  You can call the **ImportAppAlertRules** operation to import only the alert rules that are generated by Application Real-Time Monitoring Service (ARMS) for application monitoring and browser monitoring. This operation cannot be used to import custom alert rules, alert rules for Prometheus monitoring, or default emergency alert rules.
         *
         * @param request ImportAppAlertRulesRequest
         * @return ImportAppAlertRulesResponse
         */
        public async Task<ImportAppAlertRulesResponse> ImportAppAlertRulesAsync(ImportAppAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ImportAppAlertRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Initializes an environment instance.
         *
         * @param request InitEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InitEnvironmentResponse
         */
        public InitEnvironmentResponse InitEnvironmentWithOptions(InitEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateAuthToken))
            {
                query["CreateAuthToken"] = request.CreateAuthToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ManagedType))
            {
                query["ManagedType"] = request.ManagedType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InitEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InitEnvironmentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Initializes an environment instance.
         *
         * @param request InitEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InitEnvironmentResponse
         */
        public async Task<InitEnvironmentResponse> InitEnvironmentWithOptionsAsync(InitEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateAuthToken))
            {
                query["CreateAuthToken"] = request.CreateAuthToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ManagedType))
            {
                query["ManagedType"] = request.ManagedType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InitEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InitEnvironmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Initializes an environment instance.
         *
         * @param request InitEnvironmentRequest
         * @return InitEnvironmentResponse
         */
        public InitEnvironmentResponse InitEnvironment(InitEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InitEnvironmentWithOptions(request, runtime);
        }

        /**
         * @summary Initializes an environment instance.
         *
         * @param request InitEnvironmentRequest
         * @return InitEnvironmentResponse
         */
        public async Task<InitEnvironmentResponse> InitEnvironmentAsync(InitEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InitEnvironmentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs an add-on.
         *
         * @param request InstallAddonRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallAddonResponse
         */
        public InstallAddonResponse InstallAddonWithOptions(InstallAddonRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonVersion))
            {
                query["AddonVersion"] = request.AddonVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallAddon",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallAddonResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs an add-on.
         *
         * @param request InstallAddonRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallAddonResponse
         */
        public async Task<InstallAddonResponse> InstallAddonWithOptionsAsync(InstallAddonRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonVersion))
            {
                query["AddonVersion"] = request.AddonVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallAddon",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallAddonResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs an add-on.
         *
         * @param request InstallAddonRequest
         * @return InstallAddonResponse
         */
        public InstallAddonResponse InstallAddon(InstallAddonRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallAddonWithOptions(request, runtime);
        }

        /**
         * @summary Installs an add-on.
         *
         * @param request InstallAddonRequest
         * @return InstallAddonResponse
         */
        public async Task<InstallAddonResponse> InstallAddonAsync(InstallAddonRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallAddonWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI InstallCmsExporter is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary Installs the cms-exporter collector.
         *
         * @param request InstallCmsExporterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallCmsExporterResponse
         */
        // Deprecated
        public InstallCmsExporterResponse InstallCmsExporterWithOptions(InstallCmsExporterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CmsArgs))
            {
                query["CmsArgs"] = request.CmsArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectArgs))
            {
                query["DirectArgs"] = request.DirectArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableTag))
            {
                query["EnableTag"] = request.EnableTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallCmsExporter",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallCmsExporterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI InstallCmsExporter is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary Installs the cms-exporter collector.
         *
         * @param request InstallCmsExporterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallCmsExporterResponse
         */
        // Deprecated
        public async Task<InstallCmsExporterResponse> InstallCmsExporterWithOptionsAsync(InstallCmsExporterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CmsArgs))
            {
                query["CmsArgs"] = request.CmsArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectArgs))
            {
                query["DirectArgs"] = request.DirectArgs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableTag))
            {
                query["EnableTag"] = request.EnableTag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallCmsExporter",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallCmsExporterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI InstallCmsExporter is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary Installs the cms-exporter collector.
         *
         * @param request InstallCmsExporterRequest
         * @return InstallCmsExporterResponse
         */
        // Deprecated
        public InstallCmsExporterResponse InstallCmsExporter(InstallCmsExporterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallCmsExporterWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI InstallCmsExporter is deprecated, please use ARMS::2019-08-08::InstallAddon instead.
         *
         * @summary Installs the cms-exporter collector.
         *
         * @param request InstallCmsExporterRequest
         * @return InstallCmsExporterResponse
         */
        // Deprecated
        public async Task<InstallCmsExporterResponse> InstallCmsExporterAsync(InstallCmsExporterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallCmsExporterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Installs a feature.
         *
         * @param request InstallEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallEnvironmentFeatureResponse
         */
        public InstallEnvironmentFeatureResponse InstallEnvironmentFeatureWithOptions(InstallEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureVersion))
            {
                query["FeatureVersion"] = request.FeatureVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallEnvironmentFeatureResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Installs a feature.
         *
         * @param request InstallEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallEnvironmentFeatureResponse
         */
        public async Task<InstallEnvironmentFeatureResponse> InstallEnvironmentFeatureWithOptionsAsync(InstallEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Config))
            {
                query["Config"] = request.Config;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureVersion))
            {
                query["FeatureVersion"] = request.FeatureVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallEnvironmentFeatureResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Installs a feature.
         *
         * @param request InstallEnvironmentFeatureRequest
         * @return InstallEnvironmentFeatureResponse
         */
        public InstallEnvironmentFeatureResponse InstallEnvironmentFeature(InstallEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallEnvironmentFeatureWithOptions(request, runtime);
        }

        /**
         * @summary Installs a feature.
         *
         * @param request InstallEnvironmentFeatureRequest
         * @return InstallEnvironmentFeatureResponse
         */
        public async Task<InstallEnvironmentFeatureResponse> InstallEnvironmentFeatureAsync(InstallEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallEnvironmentFeatureWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance to monitor a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description If you call the operation to monitor an ASK cluster or an ECS instance, a Prometheus agent is installed in the ASK cluster or ECS instance. Make sure that the ASK cluster or ECS instance has no Prometheus agent installed in advance.
         *
         * @param request InstallManagedPrometheusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallManagedPrometheusResponse
         */
        public InstallManagedPrometheusResponse InstallManagedPrometheusWithOptions(InstallManagedPrometheusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KubeConfig))
            {
                query["KubeConfig"] = request.KubeConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupId))
            {
                query["SecurityGroupId"] = request.SecurityGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallManagedPrometheus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallManagedPrometheusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance to monitor a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description If you call the operation to monitor an ASK cluster or an ECS instance, a Prometheus agent is installed in the ASK cluster or ECS instance. Make sure that the ASK cluster or ECS instance has no Prometheus agent installed in advance.
         *
         * @param request InstallManagedPrometheusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return InstallManagedPrometheusResponse
         */
        public async Task<InstallManagedPrometheusResponse> InstallManagedPrometheusWithOptionsAsync(InstallManagedPrometheusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterName))
            {
                query["ClusterName"] = request.ClusterName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaInstanceId))
            {
                query["GrafanaInstanceId"] = request.GrafanaInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.KubeConfig))
            {
                query["KubeConfig"] = request.KubeConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SecurityGroupId))
            {
                query["SecurityGroupId"] = request.SecurityGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VSwitchId))
            {
                query["VSwitchId"] = request.VSwitchId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InstallManagedPrometheus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InstallManagedPrometheusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Creates a Prometheus instance to monitor a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description If you call the operation to monitor an ASK cluster or an ECS instance, a Prometheus agent is installed in the ASK cluster or ECS instance. Make sure that the ASK cluster or ECS instance has no Prometheus agent installed in advance.
         *
         * @param request InstallManagedPrometheusRequest
         * @return InstallManagedPrometheusResponse
         */
        public InstallManagedPrometheusResponse InstallManagedPrometheus(InstallManagedPrometheusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InstallManagedPrometheusWithOptions(request, runtime);
        }

        /**
         * @summary Creates a Prometheus instance to monitor a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description If you call the operation to monitor an ASK cluster or an ECS instance, a Prometheus agent is installed in the ASK cluster or ECS instance. Make sure that the ASK cluster or ECS instance has no Prometheus agent installed in advance.
         *
         * @param request InstallManagedPrometheusRequest
         * @return InstallManagedPrometheusResponse
         */
        public async Task<InstallManagedPrometheusResponse> InstallManagedPrometheusAsync(InstallManagedPrometheusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InstallManagedPrometheusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alerts that have been triggered.
         *
         * @param request ListActivatedAlertsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListActivatedAlertsResponse
         */
        public ListActivatedAlertsResponse ListActivatedAlertsWithOptions(ListActivatedAlertsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListActivatedAlerts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListActivatedAlertsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alerts that have been triggered.
         *
         * @param request ListActivatedAlertsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListActivatedAlertsResponse
         */
        public async Task<ListActivatedAlertsResponse> ListActivatedAlertsWithOptionsAsync(ListActivatedAlertsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filter))
            {
                query["Filter"] = request.Filter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListActivatedAlerts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListActivatedAlertsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alerts that have been triggered.
         *
         * @param request ListActivatedAlertsRequest
         * @return ListActivatedAlertsResponse
         */
        public ListActivatedAlertsResponse ListActivatedAlerts(ListActivatedAlertsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListActivatedAlertsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alerts that have been triggered.
         *
         * @param request ListActivatedAlertsRequest
         * @return ListActivatedAlertsResponse
         */
        public async Task<ListActivatedAlertsResponse> ListActivatedAlertsAsync(ListActivatedAlertsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListActivatedAlertsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Query the Addons installed in the environment.
         *
         * @param request ListAddonReleasesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAddonReleasesResponse
         */
        public ListAddonReleasesResponse ListAddonReleasesWithOptions(ListAddonReleasesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAddonReleases",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAddonReleasesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Query the Addons installed in the environment.
         *
         * @param request ListAddonReleasesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAddonReleasesResponse
         */
        public async Task<ListAddonReleasesResponse> ListAddonReleasesWithOptionsAsync(ListAddonReleasesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAddonReleases",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAddonReleasesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Query the Addons installed in the environment.
         *
         * @param request ListAddonReleasesRequest
         * @return ListAddonReleasesResponse
         */
        public ListAddonReleasesResponse ListAddonReleases(ListAddonReleasesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAddonReleasesWithOptions(request, runtime);
        }

        /**
         * @summary Query the Addons installed in the environment.
         *
         * @param request ListAddonReleasesRequest
         * @return ListAddonReleasesResponse
         */
        public async Task<ListAddonReleasesResponse> ListAddonReleasesAsync(ListAddonReleasesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAddonReleasesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary List of access center products.
         *
         * @param request ListAddonsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAddonsResponse
         */
        public ListAddonsResponse ListAddonsWithOptions(ListAddonsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Category))
            {
                query["Category"] = request.Category;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Regexp))
            {
                query["Regexp"] = request.Regexp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Search))
            {
                query["Search"] = request.Search;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAddons",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAddonsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary List of access center products.
         *
         * @param request ListAddonsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAddonsResponse
         */
        public async Task<ListAddonsResponse> ListAddonsWithOptionsAsync(ListAddonsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Category))
            {
                query["Category"] = request.Category;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Regexp))
            {
                query["Regexp"] = request.Regexp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Search))
            {
                query["Search"] = request.Search;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAddons",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAddonsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary List of access center products.
         *
         * @param request ListAddonsRequest
         * @return ListAddonsResponse
         */
        public ListAddonsResponse ListAddons(ListAddonsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAddonsWithOptions(request, runtime);
        }

        /**
         * @summary List of access center products.
         *
         * @param request ListAddonsRequest
         * @return ListAddonsResponse
         */
        public async Task<ListAddonsResponse> ListAddonsAsync(ListAddonsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAddonsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries historical alert events.
         *
         * @param request ListAlertEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAlertEventsResponse
         */
        public ListAlertEventsResponse ListAlertEventsWithOptions(ListAlertEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingConditions))
            {
                query["MatchingConditions"] = request.MatchingConditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowNotificationPolicies))
            {
                query["ShowNotificationPolicies"] = request.ShowNotificationPolicies;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAlertEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAlertEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries historical alert events.
         *
         * @param request ListAlertEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAlertEventsResponse
         */
        public async Task<ListAlertEventsResponse> ListAlertEventsWithOptionsAsync(ListAlertEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchingConditions))
            {
                query["MatchingConditions"] = request.MatchingConditions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowNotificationPolicies))
            {
                query["ShowNotificationPolicies"] = request.ShowNotificationPolicies;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAlertEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAlertEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries historical alert events.
         *
         * @param request ListAlertEventsRequest
         * @return ListAlertEventsResponse
         */
        public ListAlertEventsResponse ListAlertEvents(ListAlertEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAlertEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries historical alert events.
         *
         * @param request ListAlertEventsRequest
         * @return ListAlertEventsResponse
         */
        public async Task<ListAlertEventsResponse> ListAlertEventsAsync(ListAlertEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAlertEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert sending history.
         *
         * @param request ListAlertsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAlertsResponse
         */
        public ListAlertsResponse ListAlertsWithOptions(ListAlertsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Severity))
            {
                query["Severity"] = request.Severity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowActivities))
            {
                query["ShowActivities"] = request.ShowActivities;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowEvents))
            {
                query["ShowEvents"] = request.ShowEvents;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.State))
            {
                query["State"] = request.State;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAlerts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAlertsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert sending history.
         *
         * @param request ListAlertsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListAlertsResponse
         */
        public async Task<ListAlertsResponse> ListAlertsWithOptionsAsync(ListAlertsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Severity))
            {
                query["Severity"] = request.Severity;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowActivities))
            {
                query["ShowActivities"] = request.ShowActivities;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowEvents))
            {
                query["ShowEvents"] = request.ShowEvents;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.State))
            {
                query["State"] = request.State;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAlerts",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAlertsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert sending history.
         *
         * @param request ListAlertsRequest
         * @return ListAlertsResponse
         */
        public ListAlertsResponse ListAlerts(ListAlertsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAlertsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert sending history.
         *
         * @param request ListAlertsRequest
         * @return ListAlertsResponse
         */
        public async Task<ListAlertsResponse> ListAlertsAsync(ListAlertsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAlertsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries all Grafana dashboards in a specified region.
         *
         * @param request ListClusterFromGrafanaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterFromGrafanaResponse
         */
        public ListClusterFromGrafanaResponse ListClusterFromGrafanaWithOptions(ListClusterFromGrafanaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterFromGrafana",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterFromGrafanaResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries all Grafana dashboards in a specified region.
         *
         * @param request ListClusterFromGrafanaRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListClusterFromGrafanaResponse
         */
        public async Task<ListClusterFromGrafanaResponse> ListClusterFromGrafanaWithOptionsAsync(ListClusterFromGrafanaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListClusterFromGrafana",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListClusterFromGrafanaResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries all Grafana dashboards in a specified region.
         *
         * @param request ListClusterFromGrafanaRequest
         * @return ListClusterFromGrafanaResponse
         */
        public ListClusterFromGrafanaResponse ListClusterFromGrafana(ListClusterFromGrafanaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListClusterFromGrafanaWithOptions(request, runtime);
        }

        /**
         * @summary Queries all Grafana dashboards in a specified region.
         *
         * @param request ListClusterFromGrafanaRequest
         * @return ListClusterFromGrafanaResponse
         */
        public async Task<ListClusterFromGrafanaResponse> ListClusterFromGrafanaAsync(ListClusterFromGrafanaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListClusterFromGrafanaWithOptionsAsync(request, runtime);
        }

        /**
         * @deprecated OpenAPI ListCmsInstances is deprecated, please use ARMS::2019-08-08::ListEnvironmentAddons instead.
         *
         * @summary 查询Cms安装信息
         *
         * @param request ListCmsInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCmsInstancesResponse
         */
        // Deprecated
        public ListCmsInstancesResponse ListCmsInstancesWithOptions(ListCmsInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeFilter))
            {
                query["TypeFilter"] = request.TypeFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCmsInstances",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCmsInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ListCmsInstances is deprecated, please use ARMS::2019-08-08::ListEnvironmentAddons instead.
         *
         * @summary 查询Cms安装信息
         *
         * @param request ListCmsInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListCmsInstancesResponse
         */
        // Deprecated
        public async Task<ListCmsInstancesResponse> ListCmsInstancesWithOptionsAsync(ListCmsInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TypeFilter))
            {
                query["TypeFilter"] = request.TypeFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListCmsInstances",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListCmsInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @deprecated OpenAPI ListCmsInstances is deprecated, please use ARMS::2019-08-08::ListEnvironmentAddons instead.
         *
         * @summary 查询Cms安装信息
         *
         * @param request ListCmsInstancesRequest
         * @return ListCmsInstancesResponse
         */
        // Deprecated
        public ListCmsInstancesResponse ListCmsInstances(ListCmsInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListCmsInstancesWithOptions(request, runtime);
        }

        /**
         * @deprecated OpenAPI ListCmsInstances is deprecated, please use ARMS::2019-08-08::ListEnvironmentAddons instead.
         *
         * @summary 查询Cms安装信息
         *
         * @param request ListCmsInstancesRequest
         * @return ListCmsInstancesResponse
         */
        // Deprecated
        public async Task<ListCmsInstancesResponse> ListCmsInstancesAsync(ListCmsInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListCmsInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the Grafana dashboards of a Container Service for Kubernetes (ACK) cluster.
         *
         * @description None.
         *
         * @param request ListDashboardsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDashboardsResponse
         */
        public ListDashboardsResponse ListDashboardsWithOptions(ListDashboardsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashboardName))
            {
                query["DashboardName"] = request.DashboardName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                query["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecreateSwitch))
            {
                query["RecreateSwitch"] = request.RecreateSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Title))
            {
                query["Title"] = request.Title;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDashboards",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDashboardsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the Grafana dashboards of a Container Service for Kubernetes (ACK) cluster.
         *
         * @description None.
         *
         * @param request ListDashboardsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDashboardsResponse
         */
        public async Task<ListDashboardsResponse> ListDashboardsWithOptionsAsync(ListDashboardsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashboardName))
            {
                query["DashboardName"] = request.DashboardName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Language))
            {
                query["Language"] = request.Language;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                query["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecreateSwitch))
            {
                query["RecreateSwitch"] = request.RecreateSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Title))
            {
                query["Title"] = request.Title;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDashboards",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDashboardsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the Grafana dashboards of a Container Service for Kubernetes (ACK) cluster.
         *
         * @description None.
         *
         * @param request ListDashboardsRequest
         * @return ListDashboardsResponse
         */
        public ListDashboardsResponse ListDashboards(ListDashboardsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDashboardsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the Grafana dashboards of a Container Service for Kubernetes (ACK) cluster.
         *
         * @description None.
         *
         * @param request ListDashboardsRequest
         * @return ListDashboardsResponse
         */
        public async Task<ListDashboardsResponse> ListDashboardsAsync(ListDashboardsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDashboardsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uses Loki data sources and other data sources to create a dashboard in Prometheus Service.
         *
         * @param request ListDashboardsByNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDashboardsByNameResponse
         */
        public ListDashboardsByNameResponse ListDashboardsByNameWithOptions(ListDashboardsByNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashBoardName))
            {
                query["DashBoardName"] = request.DashBoardName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashBoardVersion))
            {
                query["DashBoardVersion"] = request.DashBoardVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceType))
            {
                query["DataSourceType"] = request.DataSourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OnlyQuery))
            {
                query["OnlyQuery"] = request.OnlyQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDashboardsByName",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDashboardsByNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uses Loki data sources and other data sources to create a dashboard in Prometheus Service.
         *
         * @param request ListDashboardsByNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDashboardsByNameResponse
         */
        public async Task<ListDashboardsByNameResponse> ListDashboardsByNameWithOptionsAsync(ListDashboardsByNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashBoardName))
            {
                query["DashBoardName"] = request.DashBoardName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DashBoardVersion))
            {
                query["DashBoardVersion"] = request.DashBoardVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceType))
            {
                query["DataSourceType"] = request.DataSourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OnlyQuery))
            {
                query["OnlyQuery"] = request.OnlyQuery;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductCode))
            {
                query["ProductCode"] = request.ProductCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDashboardsByName",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDashboardsByNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uses Loki data sources and other data sources to create a dashboard in Prometheus Service.
         *
         * @param request ListDashboardsByNameRequest
         * @return ListDashboardsByNameResponse
         */
        public ListDashboardsByNameResponse ListDashboardsByName(ListDashboardsByNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDashboardsByNameWithOptions(request, runtime);
        }

        /**
         * @summary Uses Loki data sources and other data sources to create a dashboard in Prometheus Service.
         *
         * @param request ListDashboardsByNameRequest
         * @return ListDashboardsByNameResponse
         */
        public async Task<ListDashboardsByNameResponse> ListDashboardsByNameAsync(ListDashboardsByNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDashboardsByNameWithOptionsAsync(request, runtime);
        }

        /**
         * @param request ListDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDispatchRuleResponse
         */
        public ListDispatchRuleResponse ListDispatchRuleWithOptions(ListDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.System))
            {
                query["System"] = request.System;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDispatchRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request ListDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListDispatchRuleResponse
         */
        public async Task<ListDispatchRuleResponse> ListDispatchRuleWithOptionsAsync(ListDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.System))
            {
                query["System"] = request.System;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDispatchRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request ListDispatchRuleRequest
         * @return ListDispatchRuleResponse
         */
        public ListDispatchRuleResponse ListDispatchRule(ListDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDispatchRuleWithOptions(request, runtime);
        }

        /**
         * @param request ListDispatchRuleRequest
         * @return ListDispatchRuleResponse
         */
        public async Task<ListDispatchRuleResponse> ListDispatchRuleAsync(ListDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDispatchRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the custom jobs of an environment.
         *
         * @param request ListEnvCustomJobsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvCustomJobsResponse
         */
        public ListEnvCustomJobsResponse ListEnvCustomJobsWithOptions(ListEnvCustomJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EncryptYaml))
            {
                query["EncryptYaml"] = request.EncryptYaml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvCustomJobs",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvCustomJobsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the custom jobs of an environment.
         *
         * @param request ListEnvCustomJobsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvCustomJobsResponse
         */
        public async Task<ListEnvCustomJobsResponse> ListEnvCustomJobsWithOptionsAsync(ListEnvCustomJobsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EncryptYaml))
            {
                query["EncryptYaml"] = request.EncryptYaml;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvCustomJobs",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvCustomJobsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the custom jobs of an environment.
         *
         * @param request ListEnvCustomJobsRequest
         * @return ListEnvCustomJobsResponse
         */
        public ListEnvCustomJobsResponse ListEnvCustomJobs(ListEnvCustomJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvCustomJobsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the custom jobs of an environment.
         *
         * @param request ListEnvCustomJobsRequest
         * @return ListEnvCustomJobsResponse
         */
        public async Task<ListEnvCustomJobsResponse> ListEnvCustomJobsAsync(ListEnvCustomJobsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvCustomJobsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the PodMonitors of an environment.
         *
         * @param request ListEnvPodMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvPodMonitorsResponse
         */
        public ListEnvPodMonitorsResponse ListEnvPodMonitorsWithOptions(ListEnvPodMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvPodMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvPodMonitorsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the PodMonitors of an environment.
         *
         * @param request ListEnvPodMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvPodMonitorsResponse
         */
        public async Task<ListEnvPodMonitorsResponse> ListEnvPodMonitorsWithOptionsAsync(ListEnvPodMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvPodMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvPodMonitorsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the PodMonitors of an environment.
         *
         * @param request ListEnvPodMonitorsRequest
         * @return ListEnvPodMonitorsResponse
         */
        public ListEnvPodMonitorsResponse ListEnvPodMonitors(ListEnvPodMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvPodMonitorsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the PodMonitors of an environment.
         *
         * @param request ListEnvPodMonitorsRequest
         * @return ListEnvPodMonitorsResponse
         */
        public async Task<ListEnvPodMonitorsResponse> ListEnvPodMonitorsAsync(ListEnvPodMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvPodMonitorsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the ServiceMonitors of an environment.
         *
         * @param request ListEnvServiceMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvServiceMonitorsResponse
         */
        public ListEnvServiceMonitorsResponse ListEnvServiceMonitorsWithOptions(ListEnvServiceMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvServiceMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvServiceMonitorsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the ServiceMonitors of an environment.
         *
         * @param request ListEnvServiceMonitorsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvServiceMonitorsResponse
         */
        public async Task<ListEnvServiceMonitorsResponse> ListEnvServiceMonitorsWithOptionsAsync(ListEnvServiceMonitorsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvServiceMonitors",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvServiceMonitorsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the ServiceMonitors of an environment.
         *
         * @param request ListEnvServiceMonitorsRequest
         * @return ListEnvServiceMonitorsResponse
         */
        public ListEnvServiceMonitorsResponse ListEnvServiceMonitors(ListEnvServiceMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvServiceMonitorsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the ServiceMonitors of an environment.
         *
         * @param request ListEnvServiceMonitorsRequest
         * @return ListEnvServiceMonitorsResponse
         */
        public async Task<ListEnvServiceMonitorsResponse> ListEnvServiceMonitorsAsync(ListEnvServiceMonitorsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvServiceMonitorsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries information about a dashboard of an environment instance.
         *
         * @param request ListEnvironmentDashboardsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentDashboardsResponse
         */
        public ListEnvironmentDashboardsResponse ListEnvironmentDashboardsWithOptions(ListEnvironmentDashboardsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scene))
            {
                query["Scene"] = request.Scene;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironmentDashboards",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentDashboardsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries information about a dashboard of an environment instance.
         *
         * @param request ListEnvironmentDashboardsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentDashboardsResponse
         */
        public async Task<ListEnvironmentDashboardsResponse> ListEnvironmentDashboardsWithOptionsAsync(ListEnvironmentDashboardsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scene))
            {
                query["Scene"] = request.Scene;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironmentDashboards",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentDashboardsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries information about a dashboard of an environment instance.
         *
         * @param request ListEnvironmentDashboardsRequest
         * @return ListEnvironmentDashboardsResponse
         */
        public ListEnvironmentDashboardsResponse ListEnvironmentDashboards(ListEnvironmentDashboardsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvironmentDashboardsWithOptions(request, runtime);
        }

        /**
         * @summary Queries information about a dashboard of an environment instance.
         *
         * @param request ListEnvironmentDashboardsRequest
         * @return ListEnvironmentDashboardsResponse
         */
        public async Task<ListEnvironmentDashboardsResponse> ListEnvironmentDashboardsAsync(ListEnvironmentDashboardsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvironmentDashboardsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 环境的feature列表
         *
         * @param request ListEnvironmentFeaturesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentFeaturesResponse
         */
        public ListEnvironmentFeaturesResponse ListEnvironmentFeaturesWithOptions(ListEnvironmentFeaturesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironmentFeatures",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentFeaturesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 环境的feature列表
         *
         * @param request ListEnvironmentFeaturesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentFeaturesResponse
         */
        public async Task<ListEnvironmentFeaturesResponse> ListEnvironmentFeaturesWithOptionsAsync(ListEnvironmentFeaturesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironmentFeatures",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentFeaturesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 环境的feature列表
         *
         * @param request ListEnvironmentFeaturesRequest
         * @return ListEnvironmentFeaturesResponse
         */
        public ListEnvironmentFeaturesResponse ListEnvironmentFeatures(ListEnvironmentFeaturesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvironmentFeaturesWithOptions(request, runtime);
        }

        /**
         * @summary 环境的feature列表
         *
         * @param request ListEnvironmentFeaturesRequest
         * @return ListEnvironmentFeaturesResponse
         */
        public async Task<ListEnvironmentFeaturesResponse> ListEnvironmentFeaturesAsync(ListEnvironmentFeaturesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvironmentFeaturesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries environments.
         *
         * @param tmpReq ListEnvironmentsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentsResponse
         */
        public ListEnvironmentsResponse ListEnvironmentsWithOptions(ListEnvironmentsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListEnvironmentsShrinkRequest request = new ListEnvironmentsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tag))
            {
                request.TagShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, "Tag", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindResourceId))
            {
                query["BindResourceId"] = request.BindResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentType))
            {
                query["EnvironmentType"] = request.EnvironmentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagShrink))
            {
                query["Tag"] = request.TagShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironments",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries environments.
         *
         * @param tmpReq ListEnvironmentsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEnvironmentsResponse
         */
        public async Task<ListEnvironmentsResponse> ListEnvironmentsWithOptionsAsync(ListEnvironmentsRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListEnvironmentsShrinkRequest request = new ListEnvironmentsShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tag))
            {
                request.TagShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tag, "Tag", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonName))
            {
                query["AddonName"] = request.AddonName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BindResourceId))
            {
                query["BindResourceId"] = request.BindResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentType))
            {
                query["EnvironmentType"] = request.EnvironmentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagShrink))
            {
                query["Tag"] = request.TagShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEnvironments",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEnvironmentsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries environments.
         *
         * @param request ListEnvironmentsRequest
         * @return ListEnvironmentsResponse
         */
        public ListEnvironmentsResponse ListEnvironments(ListEnvironmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEnvironmentsWithOptions(request, runtime);
        }

        /**
         * @summary Queries environments.
         *
         * @param request ListEnvironmentsRequest
         * @return ListEnvironmentsResponse
         */
        public async Task<ListEnvironmentsResponse> ListEnvironmentsAsync(ListEnvironmentsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEnvironmentsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about an escalation policy.
         *
         * @param request ListEscalationPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEscalationPoliciesResponse
         */
        public ListEscalationPoliciesResponse ListEscalationPoliciesWithOptions(ListEscalationPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEscalationPolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEscalationPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an escalation policy.
         *
         * @param request ListEscalationPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEscalationPoliciesResponse
         */
        public async Task<ListEscalationPoliciesResponse> ListEscalationPoliciesWithOptionsAsync(ListEscalationPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEscalationPolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEscalationPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about an escalation policy.
         *
         * @param request ListEscalationPoliciesRequest
         * @return ListEscalationPoliciesResponse
         */
        public ListEscalationPoliciesResponse ListEscalationPolicies(ListEscalationPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEscalationPoliciesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about an escalation policy.
         *
         * @param request ListEscalationPoliciesRequest
         * @return ListEscalationPoliciesResponse
         */
        public async Task<ListEscalationPoliciesResponse> ListEscalationPoliciesAsync(ListEscalationPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEscalationPoliciesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries EventBridge integrations that are used to push notifications.
         *
         * @param request ListEventBridgeIntegrationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEventBridgeIntegrationsResponse
         */
        public ListEventBridgeIntegrationsResponse ListEventBridgeIntegrationsWithOptions(ListEventBridgeIntegrationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEventBridgeIntegrations",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEventBridgeIntegrationsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries EventBridge integrations that are used to push notifications.
         *
         * @param request ListEventBridgeIntegrationsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListEventBridgeIntegrationsResponse
         */
        public async Task<ListEventBridgeIntegrationsResponse> ListEventBridgeIntegrationsWithOptionsAsync(ListEventBridgeIntegrationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListEventBridgeIntegrations",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListEventBridgeIntegrationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries EventBridge integrations that are used to push notifications.
         *
         * @param request ListEventBridgeIntegrationsRequest
         * @return ListEventBridgeIntegrationsResponse
         */
        public ListEventBridgeIntegrationsResponse ListEventBridgeIntegrations(ListEventBridgeIntegrationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListEventBridgeIntegrationsWithOptions(request, runtime);
        }

        /**
         * @summary Queries EventBridge integrations that are used to push notifications.
         *
         * @param request ListEventBridgeIntegrationsRequest
         * @return ListEventBridgeIntegrationsResponse
         */
        public async Task<ListEventBridgeIntegrationsResponse> ListEventBridgeIntegrationsAsync(ListEventBridgeIntegrationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListEventBridgeIntegrationsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取指定工作区列表
         *
         * @param tmpReq ListGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListGrafanaWorkspaceResponse
         */
        public ListGrafanaWorkspaceResponse ListGrafanaWorkspaceWithOptions(ListGrafanaWorkspaceRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListGrafanaWorkspaceShrinkRequest request = new ListGrafanaWorkspaceShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrafanaWorkspaceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取指定工作区列表
         *
         * @param tmpReq ListGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListGrafanaWorkspaceResponse
         */
        public async Task<ListGrafanaWorkspaceResponse> ListGrafanaWorkspaceWithOptionsAsync(ListGrafanaWorkspaceRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListGrafanaWorkspaceShrinkRequest request = new ListGrafanaWorkspaceShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListGrafanaWorkspaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取指定工作区列表
         *
         * @param request ListGrafanaWorkspaceRequest
         * @return ListGrafanaWorkspaceResponse
         */
        public ListGrafanaWorkspaceResponse ListGrafanaWorkspace(ListGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListGrafanaWorkspaceWithOptions(request, runtime);
        }

        /**
         * @summary 获取指定工作区列表
         *
         * @param request ListGrafanaWorkspaceRequest
         * @return ListGrafanaWorkspaceResponse
         */
        public async Task<ListGrafanaWorkspaceResponse> ListGrafanaWorkspaceAsync(ListGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListGrafanaWorkspaceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the abnormal Insights events within a specified period of time.
         *
         * @param request ListInsightsEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInsightsEventsResponse
         */
        public ListInsightsEventsResponse ListInsightsEventsWithOptions(ListInsightsEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsightsTypes))
            {
                query["InsightsTypes"] = request.InsightsTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInsightsEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInsightsEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the abnormal Insights events within a specified period of time.
         *
         * @param request ListInsightsEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListInsightsEventsResponse
         */
        public async Task<ListInsightsEventsResponse> ListInsightsEventsWithOptionsAsync(ListInsightsEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InsightsTypes))
            {
                query["InsightsTypes"] = request.InsightsTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListInsightsEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListInsightsEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the abnormal Insights events within a specified period of time.
         *
         * @param request ListInsightsEventsRequest
         * @return ListInsightsEventsResponse
         */
        public ListInsightsEventsResponse ListInsightsEvents(ListInsightsEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListInsightsEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the abnormal Insights events within a specified period of time.
         *
         * @param request ListInsightsEventsRequest
         * @return ListInsightsEventsResponse
         */
        public async Task<ListInsightsEventsResponse> ListInsightsEventsAsync(ListInsightsEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListInsightsEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary ListIntegration
         *
         * @param request ListIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListIntegrationResponse
         */
        public ListIntegrationResponse ListIntegrationWithOptions(ListIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary ListIntegration
         *
         * @param request ListIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListIntegrationResponse
         */
        public async Task<ListIntegrationResponse> ListIntegrationWithOptionsAsync(ListIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary ListIntegration
         *
         * @param request ListIntegrationRequest
         * @return ListIntegrationResponse
         */
        public ListIntegrationResponse ListIntegration(ListIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary ListIntegration
         *
         * @param request ListIntegrationRequest
         * @return ListIntegrationResponse
         */
        public async Task<ListIntegrationResponse> ListIntegrationAsync(ListIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries notification policies based on specified conditions.
         *
         * @param request ListNotificationPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListNotificationPoliciesResponse
         */
        public ListNotificationPoliciesResponse ListNotificationPoliciesWithOptions(ListNotificationPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectedMode))
            {
                query["DirectedMode"] = request.DirectedMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListNotificationPolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListNotificationPoliciesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries notification policies based on specified conditions.
         *
         * @param request ListNotificationPoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListNotificationPoliciesResponse
         */
        public async Task<ListNotificationPoliciesResponse> ListNotificationPoliciesWithOptionsAsync(ListNotificationPoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DirectedMode))
            {
                query["DirectedMode"] = request.DirectedMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Ids))
            {
                query["Ids"] = request.Ids;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListNotificationPolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListNotificationPoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries notification policies based on specified conditions.
         *
         * @param request ListNotificationPoliciesRequest
         * @return ListNotificationPoliciesResponse
         */
        public ListNotificationPoliciesResponse ListNotificationPolicies(ListNotificationPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListNotificationPoliciesWithOptions(request, runtime);
        }

        /**
         * @summary Queries notification policies based on specified conditions.
         *
         * @param request ListNotificationPoliciesRequest
         * @return ListNotificationPoliciesResponse
         */
        public async Task<ListNotificationPoliciesResponse> ListNotificationPoliciesAsync(ListNotificationPoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListNotificationPoliciesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request ListOnCallSchedulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOnCallSchedulesResponse
         */
        public ListOnCallSchedulesResponse ListOnCallSchedulesWithOptions(ListOnCallSchedulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOnCallSchedules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOnCallSchedulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request ListOnCallSchedulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListOnCallSchedulesResponse
         */
        public async Task<ListOnCallSchedulesResponse> ListOnCallSchedulesWithOptionsAsync(ListOnCallSchedulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOnCallSchedules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOnCallSchedulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request ListOnCallSchedulesRequest
         * @return ListOnCallSchedulesResponse
         */
        public ListOnCallSchedulesResponse ListOnCallSchedules(ListOnCallSchedulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOnCallSchedulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information about a scheduling policy.
         *
         * @param request ListOnCallSchedulesRequest
         * @return ListOnCallSchedulesResponse
         */
        public async Task<ListOnCallSchedulesResponse> ListOnCallSchedulesAsync(ListOnCallSchedulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOnCallSchedulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The value of the annotation.
         *
         * @param request ListPrometheusAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusAlertRulesResponse
         */
        public ListPrometheusAlertRulesResponse ListPrometheusAlertRulesWithOptions(ListPrometheusAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchExpressions))
            {
                query["MatchExpressions"] = request.MatchExpressions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusAlertRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The value of the annotation.
         *
         * @param request ListPrometheusAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusAlertRulesResponse
         */
        public async Task<ListPrometheusAlertRulesResponse> ListPrometheusAlertRulesWithOptionsAsync(ListPrometheusAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MatchExpressions))
            {
                query["MatchExpressions"] = request.MatchExpressions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusAlertRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The value of the annotation.
         *
         * @param request ListPrometheusAlertRulesRequest
         * @return ListPrometheusAlertRulesResponse
         */
        public ListPrometheusAlertRulesResponse ListPrometheusAlertRules(ListPrometheusAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusAlertRulesWithOptions(request, runtime);
        }

        /**
         * @summary The value of the annotation.
         *
         * @param request ListPrometheusAlertRulesRequest
         * @return ListPrometheusAlertRulesResponse
         */
        public async Task<ListPrometheusAlertRulesResponse> ListPrometheusAlertRulesAsync(ListPrometheusAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusAlertRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The available memory on node {{ $labels.instance }} is less than 10%. Available memory: {{ $value }}%
         *
         * @param request ListPrometheusAlertTemplatesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusAlertTemplatesResponse
         */
        public ListPrometheusAlertTemplatesResponse ListPrometheusAlertTemplatesWithOptions(ListPrometheusAlertTemplatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusAlertTemplates",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusAlertTemplatesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The available memory on node {{ $labels.instance }} is less than 10%. Available memory: {{ $value }}%
         *
         * @param request ListPrometheusAlertTemplatesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusAlertTemplatesResponse
         */
        public async Task<ListPrometheusAlertTemplatesResponse> ListPrometheusAlertTemplatesWithOptionsAsync(ListPrometheusAlertTemplatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusAlertTemplates",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusAlertTemplatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The available memory on node {{ $labels.instance }} is less than 10%. Available memory: {{ $value }}%
         *
         * @param request ListPrometheusAlertTemplatesRequest
         * @return ListPrometheusAlertTemplatesResponse
         */
        public ListPrometheusAlertTemplatesResponse ListPrometheusAlertTemplates(ListPrometheusAlertTemplatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusAlertTemplatesWithOptions(request, runtime);
        }

        /**
         * @summary The available memory on node {{ $labels.instance }} is less than 10%. Available memory: {{ $value }}%
         *
         * @param request ListPrometheusAlertTemplatesRequest
         * @return ListPrometheusAlertTemplatesResponse
         */
        public async Task<ListPrometheusAlertTemplatesResponse> ListPrometheusAlertTemplatesAsync(ListPrometheusAlertTemplatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusAlertTemplatesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 获取账号下聚合实例列表
         *
         * @param request ListPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusGlobalViewResponse
         */
        public ListPrometheusGlobalViewResponse ListPrometheusGlobalViewWithOptions(ListPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 获取账号下聚合实例列表
         *
         * @param request ListPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusGlobalViewResponse
         */
        public async Task<ListPrometheusGlobalViewResponse> ListPrometheusGlobalViewWithOptionsAsync(ListPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 获取账号下聚合实例列表
         *
         * @param request ListPrometheusGlobalViewRequest
         * @return ListPrometheusGlobalViewResponse
         */
        public ListPrometheusGlobalViewResponse ListPrometheusGlobalView(ListPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary 获取账号下聚合实例列表
         *
         * @param request ListPrometheusGlobalViewRequest
         * @return ListPrometheusGlobalViewResponse
         */
        public async Task<ListPrometheusGlobalViewResponse> ListPrometheusGlobalViewAsync(ListPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries Prometheus instances by tag and resource group.
         *
         * @param request ListPrometheusInstanceByTagAndResourceGroupIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusInstanceByTagAndResourceGroupIdResponse
         */
        public ListPrometheusInstanceByTagAndResourceGroupIdResponse ListPrometheusInstanceByTagAndResourceGroupIdWithOptions(ListPrometheusInstanceByTagAndResourceGroupIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusInstanceByTagAndResourceGroupId",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusInstanceByTagAndResourceGroupIdResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries Prometheus instances by tag and resource group.
         *
         * @param request ListPrometheusInstanceByTagAndResourceGroupIdRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusInstanceByTagAndResourceGroupIdResponse
         */
        public async Task<ListPrometheusInstanceByTagAndResourceGroupIdResponse> ListPrometheusInstanceByTagAndResourceGroupIdWithOptionsAsync(ListPrometheusInstanceByTagAndResourceGroupIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusInstanceByTagAndResourceGroupId",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusInstanceByTagAndResourceGroupIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries Prometheus instances by tag and resource group.
         *
         * @param request ListPrometheusInstanceByTagAndResourceGroupIdRequest
         * @return ListPrometheusInstanceByTagAndResourceGroupIdResponse
         */
        public ListPrometheusInstanceByTagAndResourceGroupIdResponse ListPrometheusInstanceByTagAndResourceGroupId(ListPrometheusInstanceByTagAndResourceGroupIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusInstanceByTagAndResourceGroupIdWithOptions(request, runtime);
        }

        /**
         * @summary Queries Prometheus instances by tag and resource group.
         *
         * @param request ListPrometheusInstanceByTagAndResourceGroupIdRequest
         * @return ListPrometheusInstanceByTagAndResourceGroupIdResponse
         */
        public async Task<ListPrometheusInstanceByTagAndResourceGroupIdResponse> ListPrometheusInstanceByTagAndResourceGroupIdAsync(ListPrometheusInstanceByTagAndResourceGroupIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusInstanceByTagAndResourceGroupIdWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries all Prometheus instances in a region.
         *
         * @param request ListPrometheusInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusInstancesResponse
         */
        public ListPrometheusInstancesResponse ListPrometheusInstancesWithOptions(ListPrometheusInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowGlobalView))
            {
                query["ShowGlobalView"] = request.ShowGlobalView;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusInstances",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusInstancesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries all Prometheus instances in a region.
         *
         * @param request ListPrometheusInstancesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusInstancesResponse
         */
        public async Task<ListPrometheusInstancesResponse> ListPrometheusInstancesWithOptionsAsync(ListPrometheusInstancesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShowGlobalView))
            {
                query["ShowGlobalView"] = request.ShowGlobalView;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusInstances",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusInstancesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries all Prometheus instances in a region.
         *
         * @param request ListPrometheusInstancesRequest
         * @return ListPrometheusInstancesResponse
         */
        public ListPrometheusInstancesResponse ListPrometheusInstances(ListPrometheusInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusInstancesWithOptions(request, runtime);
        }

        /**
         * @summary Queries all Prometheus instances in a region.
         *
         * @param request ListPrometheusInstancesRequest
         * @return ListPrometheusInstancesResponse
         */
        public async Task<ListPrometheusInstancesResponse> ListPrometheusInstancesAsync(ListPrometheusInstancesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusInstancesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries a list of exporters that are integrated into a Prometheus instance. Only aliyun-cs and ecs instances are supported.
         *
         * @param request ListPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusIntegrationResponse
         */
        public ListPrometheusIntegrationResponse ListPrometheusIntegrationWithOptions(ListPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries a list of exporters that are integrated into a Prometheus instance. Only aliyun-cs and ecs instances are supported.
         *
         * @param request ListPrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusIntegrationResponse
         */
        public async Task<ListPrometheusIntegrationResponse> ListPrometheusIntegrationWithOptionsAsync(ListPrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries a list of exporters that are integrated into a Prometheus instance. Only aliyun-cs and ecs instances are supported.
         *
         * @param request ListPrometheusIntegrationRequest
         * @return ListPrometheusIntegrationResponse
         */
        public ListPrometheusIntegrationResponse ListPrometheusIntegration(ListPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Queries a list of exporters that are integrated into a Prometheus instance. Only aliyun-cs and ecs instances are supported.
         *
         * @param request ListPrometheusIntegrationRequest
         * @return ListPrometheusIntegrationResponse
         */
        public async Task<ListPrometheusIntegrationResponse> ListPrometheusIntegrationAsync(ListPrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request ListPrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusMonitoringResponse
         */
        public ListPrometheusMonitoringResponse ListPrometheusMonitoringWithOptions(ListPrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusMonitoringResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request ListPrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusMonitoringResponse
         */
        public async Task<ListPrometheusMonitoringResponse> ListPrometheusMonitoringWithOptionsAsync(ListPrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusMonitoringResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request ListPrometheusMonitoringRequest
         * @return ListPrometheusMonitoringResponse
         */
        public ListPrometheusMonitoringResponse ListPrometheusMonitoring(ListPrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusMonitoringWithOptions(request, runtime);
        }

        /**
         * @summary Queries the monitoring configuration of a Prometheus instance.
         *
         * @param request ListPrometheusMonitoringRequest
         * @return ListPrometheusMonitoringResponse
         */
        public async Task<ListPrometheusMonitoringResponse> ListPrometheusMonitoringAsync(ListPrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusMonitoringWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the remote write configuration items of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request ListPrometheusRemoteWritesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusRemoteWritesResponse
         */
        public ListPrometheusRemoteWritesResponse ListPrometheusRemoteWritesWithOptions(ListPrometheusRemoteWritesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusRemoteWrites",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusRemoteWritesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the remote write configuration items of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request ListPrometheusRemoteWritesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListPrometheusRemoteWritesResponse
         */
        public async Task<ListPrometheusRemoteWritesResponse> ListPrometheusRemoteWritesWithOptionsAsync(ListPrometheusRemoteWritesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListPrometheusRemoteWrites",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListPrometheusRemoteWritesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the remote write configuration items of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request ListPrometheusRemoteWritesRequest
         * @return ListPrometheusRemoteWritesResponse
         */
        public ListPrometheusRemoteWritesResponse ListPrometheusRemoteWrites(ListPrometheusRemoteWritesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListPrometheusRemoteWritesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the remote write configuration items of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request ListPrometheusRemoteWritesRequest
         * @return ListPrometheusRemoteWritesResponse
         */
        public async Task<ListPrometheusRemoteWritesResponse> ListPrometheusRemoteWritesAsync(ListPrometheusRemoteWritesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListPrometheusRemoteWritesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the Browser Monitoring tasks in a region.
         *
         * @description ****
         *
         * @param request ListRetcodeAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListRetcodeAppsResponse
         */
        public ListRetcodeAppsResponse ListRetcodeAppsWithOptions(ListRetcodeAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRetcodeApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRetcodeAppsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the Browser Monitoring tasks in a region.
         *
         * @description ****
         *
         * @param request ListRetcodeAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListRetcodeAppsResponse
         */
        public async Task<ListRetcodeAppsResponse> ListRetcodeAppsWithOptionsAsync(ListRetcodeAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRetcodeApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRetcodeAppsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the Browser Monitoring tasks in a region.
         *
         * @description ****
         *
         * @param request ListRetcodeAppsRequest
         * @return ListRetcodeAppsResponse
         */
        public ListRetcodeAppsResponse ListRetcodeApps(ListRetcodeAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRetcodeAppsWithOptions(request, runtime);
        }

        /**
         * @summary Queries the Browser Monitoring tasks in a region.
         *
         * @description ****
         *
         * @param request ListRetcodeAppsRequest
         * @return ListRetcodeAppsResponse
         */
        public async Task<ListRetcodeAppsResponse> ListRetcodeAppsAsync(ListRetcodeAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRetcodeAppsWithOptionsAsync(request, runtime);
        }

        /**
         * @param request ListScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListScenarioResponse
         */
        public ListScenarioResponse ListScenarioWithOptions(ListScenarioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenario))
            {
                query["Scenario"] = request.Scenario;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sign))
            {
                query["Sign"] = request.Sign;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScenarioResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request ListScenarioRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListScenarioResponse
         */
        public async Task<ListScenarioResponse> ListScenarioWithOptionsAsync(ListScenarioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                query["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Scenario))
            {
                query["Scenario"] = request.Scenario;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sign))
            {
                query["Sign"] = request.Sign;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListScenario",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListScenarioResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request ListScenarioRequest
         * @return ListScenarioResponse
         */
        public ListScenarioResponse ListScenario(ListScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListScenarioWithOptions(request, runtime);
        }

        /**
         * @param request ListScenarioRequest
         * @return ListScenarioResponse
         */
        public async Task<ListScenarioResponse> ListScenarioAsync(ListScenarioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListScenarioWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the information of a silence policy list.
         *
         * @param request ListSilencePoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSilencePoliciesResponse
         */
        public ListSilencePoliciesResponse ListSilencePoliciesWithOptions(ListSilencePoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSilencePolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSilencePoliciesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the information of a silence policy list.
         *
         * @param request ListSilencePoliciesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSilencePoliciesResponse
         */
        public async Task<ListSilencePoliciesResponse> ListSilencePoliciesWithOptionsAsync(ListSilencePoliciesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSilencePolicies",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSilencePoliciesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the information of a silence policy list.
         *
         * @param request ListSilencePoliciesRequest
         * @return ListSilencePoliciesResponse
         */
        public ListSilencePoliciesResponse ListSilencePolicies(ListSilencePoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSilencePoliciesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the information of a silence policy list.
         *
         * @param request ListSilencePoliciesRequest
         * @return ListSilencePoliciesResponse
         */
        public async Task<ListSilencePoliciesResponse> ListSilencePoliciesAsync(ListSilencePoliciesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSilencePoliciesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询拨测明细列表
         *
         * @param tmpReq ListSyntheticDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSyntheticDetailResponse
         */
        public ListSyntheticDetailResponse ListSyntheticDetailWithOptions(ListSyntheticDetailRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListSyntheticDetailShrinkRequest request = new ListSyntheticDetailShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdvancedFilters))
            {
                request.AdvancedFiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdvancedFilters, "AdvancedFilters", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ExactFilters))
            {
                request.ExactFiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ExactFilters, "ExactFilters", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filters))
            {
                request.FiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filters, "Filters", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSyntheticDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSyntheticDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询拨测明细列表
         *
         * @param tmpReq ListSyntheticDetailRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListSyntheticDetailResponse
         */
        public async Task<ListSyntheticDetailResponse> ListSyntheticDetailWithOptionsAsync(ListSyntheticDetailRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListSyntheticDetailShrinkRequest request = new ListSyntheticDetailShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AdvancedFilters))
            {
                request.AdvancedFiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AdvancedFilters, "AdvancedFilters", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.ExactFilters))
            {
                request.ExactFiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.ExactFilters, "ExactFilters", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filters))
            {
                request.FiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filters, "Filters", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListSyntheticDetail",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListSyntheticDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询拨测明细列表
         *
         * @param request ListSyntheticDetailRequest
         * @return ListSyntheticDetailResponse
         */
        public ListSyntheticDetailResponse ListSyntheticDetail(ListSyntheticDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListSyntheticDetailWithOptions(request, runtime);
        }

        /**
         * @summary 查询拨测明细列表
         *
         * @param request ListSyntheticDetailRequest
         * @return ListSyntheticDetailResponse
         */
        public async Task<ListSyntheticDetailResponse> ListSyntheticDetailAsync(ListSyntheticDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListSyntheticDetailWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries scheduled synthetic monitoring tasks.
         *
         * @param tmpReq ListTimingSyntheticTasksRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListTimingSyntheticTasksResponse
         */
        public ListTimingSyntheticTasksResponse ListTimingSyntheticTasksWithOptions(ListTimingSyntheticTasksRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListTimingSyntheticTasksShrinkRequest request = new ListTimingSyntheticTasksShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Search))
            {
                request.SearchShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Search, "Search", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTimingSyntheticTasks",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTimingSyntheticTasksResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries scheduled synthetic monitoring tasks.
         *
         * @param tmpReq ListTimingSyntheticTasksRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListTimingSyntheticTasksResponse
         */
        public async Task<ListTimingSyntheticTasksResponse> ListTimingSyntheticTasksWithOptionsAsync(ListTimingSyntheticTasksRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListTimingSyntheticTasksShrinkRequest request = new ListTimingSyntheticTasksShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Search))
            {
                request.SearchShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Search, "Search", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTimingSyntheticTasks",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTimingSyntheticTasksResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries scheduled synthetic monitoring tasks.
         *
         * @param request ListTimingSyntheticTasksRequest
         * @return ListTimingSyntheticTasksResponse
         */
        public ListTimingSyntheticTasksResponse ListTimingSyntheticTasks(ListTimingSyntheticTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTimingSyntheticTasksWithOptions(request, runtime);
        }

        /**
         * @summary Queries scheduled synthetic monitoring tasks.
         *
         * @param request ListTimingSyntheticTasksRequest
         * @return ListTimingSyntheticTasksResponse
         */
        public async Task<ListTimingSyntheticTasksResponse> ListTimingSyntheticTasksAsync(ListTimingSyntheticTasksRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTimingSyntheticTasksWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries all Application Monitoring tasks in a specified region.
         *
         * @param request ListTraceAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListTraceAppsResponse
         */
        public ListTraceAppsResponse ListTraceAppsWithOptions(ListTraceAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTraceApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTraceAppsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries all Application Monitoring tasks in a specified region.
         *
         * @param request ListTraceAppsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ListTraceAppsResponse
         */
        public async Task<ListTraceAppsResponse> ListTraceAppsWithOptionsAsync(ListTraceAppsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Region))
            {
                query["Region"] = request.Region;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTraceApps",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTraceAppsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries all Application Monitoring tasks in a specified region.
         *
         * @param request ListTraceAppsRequest
         * @return ListTraceAppsResponse
         */
        public ListTraceAppsResponse ListTraceApps(ListTraceAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTraceAppsWithOptions(request, runtime);
        }

        /**
         * @summary Queries all Application Monitoring tasks in a specified region.
         *
         * @param request ListTraceAppsRequest
         * @return ListTraceAppsResponse
         */
        public async Task<ListTraceAppsResponse> ListTraceAppsAsync(ListTraceAppsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTraceAppsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Obtains the recording rule of a Prometheus instance.
         *
         * @param request ManageGetRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ManageGetRecordingRuleResponse
         */
        public ManageGetRecordingRuleResponse ManageGetRecordingRuleWithOptions(ManageGetRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryUserId))
            {
                query["QueryUserId"] = request.QueryUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ManageGetRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ManageGetRecordingRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Obtains the recording rule of a Prometheus instance.
         *
         * @param request ManageGetRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ManageGetRecordingRuleResponse
         */
        public async Task<ManageGetRecordingRuleResponse> ManageGetRecordingRuleWithOptionsAsync(ManageGetRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryUserId))
            {
                query["QueryUserId"] = request.QueryUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ManageGetRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ManageGetRecordingRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Obtains the recording rule of a Prometheus instance.
         *
         * @param request ManageGetRecordingRuleRequest
         * @return ManageGetRecordingRuleResponse
         */
        public ManageGetRecordingRuleResponse ManageGetRecordingRule(ManageGetRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ManageGetRecordingRuleWithOptions(request, runtime);
        }

        /**
         * @summary Obtains the recording rule of a Prometheus instance.
         *
         * @param request ManageGetRecordingRuleRequest
         * @return ManageGetRecordingRuleResponse
         */
        public async Task<ManageGetRecordingRuleResponse> ManageGetRecordingRuleAsync(ManageGetRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ManageGetRecordingRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the recording rule of a Prometheus instance.
         *
         * @param request ManageRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ManageRecordingRuleResponse
         */
        public ManageRecordingRuleResponse ManageRecordingRuleWithOptions(ManageRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryUserId))
            {
                query["QueryUserId"] = request.QueryUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleYaml))
            {
                query["RuleYaml"] = request.RuleYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ManageRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ManageRecordingRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the recording rule of a Prometheus instance.
         *
         * @param request ManageRecordingRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return ManageRecordingRuleResponse
         */
        public async Task<ManageRecordingRuleResponse> ManageRecordingRuleWithOptionsAsync(ManageRecordingRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryUserId))
            {
                query["QueryUserId"] = request.QueryUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleYaml))
            {
                query["RuleYaml"] = request.RuleYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ManageRecordingRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ManageRecordingRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the recording rule of a Prometheus instance.
         *
         * @param request ManageRecordingRuleRequest
         * @return ManageRecordingRuleResponse
         */
        public ManageRecordingRuleResponse ManageRecordingRule(ManageRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ManageRecordingRuleWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the recording rule of a Prometheus instance.
         *
         * @param request ManageRecordingRuleRequest
         * @return ManageRecordingRuleResponse
         */
        public async Task<ManageRecordingRuleResponse> ManageRecordingRuleAsync(ManageRecordingRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ManageRecordingRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Assigns the service-linked role AliyunServiceRoleForARMS to Application Real-Time Monitoring Service (ARMS).
         *
         * @param request OpenArmsDefaultSLRRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenArmsDefaultSLRResponse
         */
        public OpenArmsDefaultSLRResponse OpenArmsDefaultSLRWithOptions(OpenArmsDefaultSLRRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenArmsDefaultSLR",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenArmsDefaultSLRResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Assigns the service-linked role AliyunServiceRoleForARMS to Application Real-Time Monitoring Service (ARMS).
         *
         * @param request OpenArmsDefaultSLRRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenArmsDefaultSLRResponse
         */
        public async Task<OpenArmsDefaultSLRResponse> OpenArmsDefaultSLRWithOptionsAsync(OpenArmsDefaultSLRRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenArmsDefaultSLR",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenArmsDefaultSLRResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Assigns the service-linked role AliyunServiceRoleForARMS to Application Real-Time Monitoring Service (ARMS).
         *
         * @param request OpenArmsDefaultSLRRequest
         * @return OpenArmsDefaultSLRResponse
         */
        public OpenArmsDefaultSLRResponse OpenArmsDefaultSLR(OpenArmsDefaultSLRRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenArmsDefaultSLRWithOptions(request, runtime);
        }

        /**
         * @summary Assigns the service-linked role AliyunServiceRoleForARMS to Application Real-Time Monitoring Service (ARMS).
         *
         * @param request OpenArmsDefaultSLRRequest
         * @return OpenArmsDefaultSLRResponse
         */
        public async Task<OpenArmsDefaultSLRResponse> OpenArmsDefaultSLRAsync(OpenArmsDefaultSLRRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenArmsDefaultSLRWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Activates a specified pay-as-you-go sub-service of Application Real-Time Monitoring Service (ARMS).
         *
         * @description The **OpenArmsServiceSecondVersion** operation supports the following sub-service editions:
         * *   Application Monitoring: Basic Edition
         * *   Browser Monitoring: Basic Edition
         * *   Synthetic Monitoring: Pro Edition (pay-as-you-go)
         * *   Prometheus Service: Pro Edition
         *
         * @param request OpenArmsServiceSecondVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenArmsServiceSecondVersionResponse
         */
        public OpenArmsServiceSecondVersionResponse OpenArmsServiceSecondVersionWithOptions(OpenArmsServiceSecondVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenArmsServiceSecondVersion",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenArmsServiceSecondVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Activates a specified pay-as-you-go sub-service of Application Real-Time Monitoring Service (ARMS).
         *
         * @description The **OpenArmsServiceSecondVersion** operation supports the following sub-service editions:
         * *   Application Monitoring: Basic Edition
         * *   Browser Monitoring: Basic Edition
         * *   Synthetic Monitoring: Pro Edition (pay-as-you-go)
         * *   Prometheus Service: Pro Edition
         *
         * @param request OpenArmsServiceSecondVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenArmsServiceSecondVersionResponse
         */
        public async Task<OpenArmsServiceSecondVersionResponse> OpenArmsServiceSecondVersionWithOptionsAsync(OpenArmsServiceSecondVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenArmsServiceSecondVersion",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenArmsServiceSecondVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Activates a specified pay-as-you-go sub-service of Application Real-Time Monitoring Service (ARMS).
         *
         * @description The **OpenArmsServiceSecondVersion** operation supports the following sub-service editions:
         * *   Application Monitoring: Basic Edition
         * *   Browser Monitoring: Basic Edition
         * *   Synthetic Monitoring: Pro Edition (pay-as-you-go)
         * *   Prometheus Service: Pro Edition
         *
         * @param request OpenArmsServiceSecondVersionRequest
         * @return OpenArmsServiceSecondVersionResponse
         */
        public OpenArmsServiceSecondVersionResponse OpenArmsServiceSecondVersion(OpenArmsServiceSecondVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenArmsServiceSecondVersionWithOptions(request, runtime);
        }

        /**
         * @summary Activates a specified pay-as-you-go sub-service of Application Real-Time Monitoring Service (ARMS).
         *
         * @description The **OpenArmsServiceSecondVersion** operation supports the following sub-service editions:
         * *   Application Monitoring: Basic Edition
         * *   Browser Monitoring: Basic Edition
         * *   Synthetic Monitoring: Pro Edition (pay-as-you-go)
         * *   Prometheus Service: Pro Edition
         *
         * @param request OpenArmsServiceSecondVersionRequest
         * @return OpenArmsServiceSecondVersionResponse
         */
        public async Task<OpenArmsServiceSecondVersionResponse> OpenArmsServiceSecondVersionAsync(OpenArmsServiceSecondVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenArmsServiceSecondVersionWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Activates a virtual cluster.
         *
         * @param request OpenVClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenVClusterResponse
         */
        public OpenVClusterResponse OpenVClusterWithOptions(OpenVClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Length))
            {
                query["Length"] = request.Length;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                query["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecreateSwitch))
            {
                query["RecreateSwitch"] = request.RecreateSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenVCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenVClusterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Activates a virtual cluster.
         *
         * @param request OpenVClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenVClusterResponse
         */
        public async Task<OpenVClusterResponse> OpenVClusterWithOptionsAsync(OpenVClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Length))
            {
                query["Length"] = request.Length;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Product))
            {
                query["Product"] = request.Product;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecreateSwitch))
            {
                query["RecreateSwitch"] = request.RecreateSwitch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenVCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenVClusterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Activates a virtual cluster.
         *
         * @param request OpenVClusterRequest
         * @return OpenVClusterResponse
         */
        public OpenVClusterResponse OpenVCluster(OpenVClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenVClusterWithOptions(request, runtime);
        }

        /**
         * @summary Activates a virtual cluster.
         *
         * @param request OpenVClusterRequest
         * @return OpenVClusterResponse
         */
        public async Task<OpenVClusterResponse> OpenVClusterAsync(OpenVClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenVClusterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Activates the service-linked role AliyunServiceRoleForXtrace for Tracing Analysis.
         *
         * @param request OpenXtraceDefaultSLRRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenXtraceDefaultSLRResponse
         */
        public OpenXtraceDefaultSLRResponse OpenXtraceDefaultSLRWithOptions(OpenXtraceDefaultSLRRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenXtraceDefaultSLR",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenXtraceDefaultSLRResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Activates the service-linked role AliyunServiceRoleForXtrace for Tracing Analysis.
         *
         * @param request OpenXtraceDefaultSLRRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return OpenXtraceDefaultSLRResponse
         */
        public async Task<OpenXtraceDefaultSLRResponse> OpenXtraceDefaultSLRWithOptionsAsync(OpenXtraceDefaultSLRRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenXtraceDefaultSLR",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenXtraceDefaultSLRResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Activates the service-linked role AliyunServiceRoleForXtrace for Tracing Analysis.
         *
         * @param request OpenXtraceDefaultSLRRequest
         * @return OpenXtraceDefaultSLRResponse
         */
        public OpenXtraceDefaultSLRResponse OpenXtraceDefaultSLR(OpenXtraceDefaultSLRRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenXtraceDefaultSLRWithOptions(request, runtime);
        }

        /**
         * @summary Activates the service-linked role AliyunServiceRoleForXtrace for Tracing Analysis.
         *
         * @param request OpenXtraceDefaultSLRRequest
         * @return OpenXtraceDefaultSLRResponse
         */
        public async Task<OpenXtraceDefaultSLRResponse> OpenXtraceDefaultSLRAsync(OpenXtraceDefaultSLRRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenXtraceDefaultSLRWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the encoding mapping content based on the metadata IDs and metadata type.
         *
         * @param request QueryAppMetadataRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAppMetadataResponse
         */
        public QueryAppMetadataResponse QueryAppMetadataWithOptions(QueryAppMetadataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAppMetadata",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAppMetadataResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the encoding mapping content based on the metadata IDs and metadata type.
         *
         * @param request QueryAppMetadataRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAppMetadataResponse
         */
        public async Task<QueryAppMetadataResponse> QueryAppMetadataWithOptionsAsync(QueryAppMetadataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAppMetadata",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAppMetadataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the encoding mapping content based on the metadata IDs and metadata type.
         *
         * @param request QueryAppMetadataRequest
         * @return QueryAppMetadataResponse
         */
        public QueryAppMetadataResponse QueryAppMetadata(QueryAppMetadataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryAppMetadataWithOptions(request, runtime);
        }

        /**
         * @summary Queries the encoding mapping content based on the metadata IDs and metadata type.
         *
         * @param request QueryAppMetadataRequest
         * @return QueryAppMetadataResponse
         */
        public async Task<QueryAppMetadataResponse> QueryAppMetadataAsync(QueryAppMetadataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryAppMetadataWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 查询应用拓扑
         *
         * @param tmpReq QueryAppTopologyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAppTopologyResponse
         */
        public QueryAppTopologyResponse QueryAppTopologyWithOptions(QueryAppTopologyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            QueryAppTopologyShrinkRequest request = new QueryAppTopologyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filters))
            {
                request.FiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filters, "Filters", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Db))
            {
                query["Db"] = request.Db;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DbName))
            {
                query["DbName"] = request.DbName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FiltersShrink))
            {
                query["Filters"] = request.FiltersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rpc))
            {
                query["Rpc"] = request.Rpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAppTopology",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAppTopologyResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 查询应用拓扑
         *
         * @param tmpReq QueryAppTopologyRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryAppTopologyResponse
         */
        public async Task<QueryAppTopologyResponse> QueryAppTopologyWithOptionsAsync(QueryAppTopologyRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            QueryAppTopologyShrinkRequest request = new QueryAppTopologyShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Filters))
            {
                request.FiltersShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Filters, "Filters", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Db))
            {
                query["Db"] = request.Db;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DbName))
            {
                query["DbName"] = request.DbName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FiltersShrink))
            {
                query["Filters"] = request.FiltersShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Rpc))
            {
                query["Rpc"] = request.Rpc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryAppTopology",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryAppTopologyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 查询应用拓扑
         *
         * @param request QueryAppTopologyRequest
         * @return QueryAppTopologyResponse
         */
        public QueryAppTopologyResponse QueryAppTopology(QueryAppTopologyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryAppTopologyWithOptions(request, runtime);
        }

        /**
         * @summary 查询应用拓扑
         *
         * @param request QueryAppTopologyRequest
         * @return QueryAppTopologyResponse
         */
        public async Task<QueryAppTopologyResponse> QueryAppTopologyAsync(QueryAppTopologyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryAppTopologyWithOptionsAsync(request, runtime);
        }

        /**
         * @param request QueryCommercialUsageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryCommercialUsageResponse
         */
        public QueryCommercialUsageResponse QueryCommercialUsageWithOptions(QueryCommercialUsageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdvancedFilters))
            {
                query["AdvancedFilters"] = request.AdvancedFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dimensions))
            {
                query["Dimensions"] = request.Dimensions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalInSec))
            {
                query["IntervalInSec"] = request.IntervalInSec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Measures))
            {
                query["Measures"] = request.Measures;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Metric))
            {
                query["Metric"] = request.Metric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderBy))
            {
                query["OrderBy"] = request.OrderBy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryType))
            {
                query["QueryType"] = request.QueryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryCommercialUsage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryCommercialUsageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request QueryCommercialUsageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryCommercialUsageResponse
         */
        public async Task<QueryCommercialUsageResponse> QueryCommercialUsageWithOptionsAsync(QueryCommercialUsageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AdvancedFilters))
            {
                query["AdvancedFilters"] = request.AdvancedFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dimensions))
            {
                query["Dimensions"] = request.Dimensions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalInSec))
            {
                query["IntervalInSec"] = request.IntervalInSec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Measures))
            {
                query["Measures"] = request.Measures;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Metric))
            {
                query["Metric"] = request.Metric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderBy))
            {
                query["OrderBy"] = request.OrderBy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryType))
            {
                query["QueryType"] = request.QueryType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryCommercialUsage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryCommercialUsageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request QueryCommercialUsageRequest
         * @return QueryCommercialUsageResponse
         */
        public QueryCommercialUsageResponse QueryCommercialUsage(QueryCommercialUsageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryCommercialUsageWithOptions(request, runtime);
        }

        /**
         * @param request QueryCommercialUsageRequest
         * @return QueryCommercialUsageResponse
         */
        public async Task<QueryCommercialUsageResponse> QueryCommercialUsageAsync(QueryCommercialUsageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryCommercialUsageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries an Application Monitoring metric or a Browser Monitoring metric.
         *
         * @param request QueryMetricByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryMetricByPageResponse
         */
        public QueryMetricByPageResponse QueryMetricByPageWithOptions(QueryMetricByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomFilters))
            {
                query["CustomFilters"] = request.CustomFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dimensions))
            {
                query["Dimensions"] = request.Dimensions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filters))
            {
                query["Filters"] = request.Filters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalInSec))
            {
                query["IntervalInSec"] = request.IntervalInSec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Measures))
            {
                query["Measures"] = request.Measures;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Metric))
            {
                query["Metric"] = request.Metric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderBy))
            {
                query["OrderBy"] = request.OrderBy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryMetricByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryMetricByPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries an Application Monitoring metric or a Browser Monitoring metric.
         *
         * @param request QueryMetricByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryMetricByPageResponse
         */
        public async Task<QueryMetricByPageResponse> QueryMetricByPageWithOptionsAsync(QueryMetricByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomFilters))
            {
                query["CustomFilters"] = request.CustomFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Dimensions))
            {
                query["Dimensions"] = request.Dimensions;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Filters))
            {
                query["Filters"] = request.Filters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntervalInSec))
            {
                query["IntervalInSec"] = request.IntervalInSec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Measures))
            {
                query["Measures"] = request.Measures;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Metric))
            {
                query["Metric"] = request.Metric;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Order))
            {
                query["Order"] = request.Order;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderBy))
            {
                query["OrderBy"] = request.OrderBy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryMetricByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryMetricByPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries an Application Monitoring metric or a Browser Monitoring metric.
         *
         * @param request QueryMetricByPageRequest
         * @return QueryMetricByPageResponse
         */
        public QueryMetricByPageResponse QueryMetricByPage(QueryMetricByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryMetricByPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries an Application Monitoring metric or a Browser Monitoring metric.
         *
         * @param request QueryMetricByPageRequest
         * @return QueryMetricByPageResponse
         */
        public async Task<QueryMetricByPageResponse> QueryMetricByPageAsync(QueryMetricByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryMetricByPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries whether the Prometheus agent is installed on a cluster.
         *
         * @param request QueryPromInstallStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryPromInstallStatusResponse
         */
        public QueryPromInstallStatusResponse QueryPromInstallStatusWithOptions(QueryPromInstallStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPromInstallStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPromInstallStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries whether the Prometheus agent is installed on a cluster.
         *
         * @param request QueryPromInstallStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryPromInstallStatusResponse
         */
        public async Task<QueryPromInstallStatusResponse> QueryPromInstallStatusWithOptionsAsync(QueryPromInstallStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPromInstallStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPromInstallStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries whether the Prometheus agent is installed on a cluster.
         *
         * @param request QueryPromInstallStatusRequest
         * @return QueryPromInstallStatusResponse
         */
        public QueryPromInstallStatusResponse QueryPromInstallStatus(QueryPromInstallStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryPromInstallStatusWithOptions(request, runtime);
        }

        /**
         * @summary Queries whether the Prometheus agent is installed on a cluster.
         *
         * @param request QueryPromInstallStatusRequest
         * @return QueryPromInstallStatusResponse
         */
        public async Task<QueryPromInstallStatusResponse> QueryPromInstallStatusAsync(QueryPromInstallStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryPromInstallStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary QueryReleaseMetric 
         *
         * @param request QueryReleaseMetricRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryReleaseMetricResponse
         */
        public QueryReleaseMetricResponse QueryReleaseMetricWithOptions(QueryReleaseMetricRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChangeOrderId))
            {
                query["ChangeOrderId"] = request.ChangeOrderId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTime))
            {
                query["CreateTime"] = request.CreateTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricType))
            {
                query["MetricType"] = request.MetricType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyUserId))
            {
                query["ProxyUserId"] = request.ProxyUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseEndTime))
            {
                query["ReleaseEndTime"] = request.ReleaseEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseStartTime))
            {
                query["ReleaseStartTime"] = request.ReleaseStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Service))
            {
                query["Service"] = request.Service;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryReleaseMetric",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryReleaseMetricResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary QueryReleaseMetric 
         *
         * @param request QueryReleaseMetricRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return QueryReleaseMetricResponse
         */
        public async Task<QueryReleaseMetricResponse> QueryReleaseMetricWithOptionsAsync(QueryReleaseMetricRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChangeOrderId))
            {
                query["ChangeOrderId"] = request.ChangeOrderId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CreateTime))
            {
                query["CreateTime"] = request.CreateTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricType))
            {
                query["MetricType"] = request.MetricType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProxyUserId))
            {
                query["ProxyUserId"] = request.ProxyUserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseEndTime))
            {
                query["ReleaseEndTime"] = request.ReleaseEndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseStartTime))
            {
                query["ReleaseStartTime"] = request.ReleaseStartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Service))
            {
                query["Service"] = request.Service;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryReleaseMetric",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryReleaseMetricResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary QueryReleaseMetric 
         *
         * @param request QueryReleaseMetricRequest
         * @return QueryReleaseMetricResponse
         */
        public QueryReleaseMetricResponse QueryReleaseMetric(QueryReleaseMetricRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryReleaseMetricWithOptions(request, runtime);
        }

        /**
         * @summary QueryReleaseMetric 
         *
         * @param request QueryReleaseMetricRequest
         * @return QueryReleaseMetricResponse
         */
        public async Task<QueryReleaseMetricResponse> QueryReleaseMetricAsync(QueryReleaseMetricRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryReleaseMetricWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveAliClusterIdsFromPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveAliClusterIdsFromPrometheusGlobalViewResponse
         */
        public RemoveAliClusterIdsFromPrometheusGlobalViewResponse RemoveAliClusterIdsFromPrometheusGlobalViewWithOptions(RemoveAliClusterIdsFromPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveAliClusterIdsFromPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveAliClusterIdsFromPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveAliClusterIdsFromPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveAliClusterIdsFromPrometheusGlobalViewResponse
         */
        public async Task<RemoveAliClusterIdsFromPrometheusGlobalViewResponse> RemoveAliClusterIdsFromPrometheusGlobalViewWithOptionsAsync(RemoveAliClusterIdsFromPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterIds))
            {
                query["ClusterIds"] = request.ClusterIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveAliClusterIdsFromPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveAliClusterIdsFromPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveAliClusterIdsFromPrometheusGlobalViewRequest
         * @return RemoveAliClusterIdsFromPrometheusGlobalViewResponse
         */
        public RemoveAliClusterIdsFromPrometheusGlobalViewResponse RemoveAliClusterIdsFromPrometheusGlobalView(RemoveAliClusterIdsFromPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveAliClusterIdsFromPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Removes data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveAliClusterIdsFromPrometheusGlobalViewRequest
         * @return RemoveAliClusterIdsFromPrometheusGlobalViewResponse
         */
        public async Task<RemoveAliClusterIdsFromPrometheusGlobalViewResponse> RemoveAliClusterIdsFromPrometheusGlobalViewAsync(RemoveAliClusterIdsFromPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveAliClusterIdsFromPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes custom data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveSourcesFromPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveSourcesFromPrometheusGlobalViewResponse
         */
        public RemoveSourcesFromPrometheusGlobalViewResponse RemoveSourcesFromPrometheusGlobalViewWithOptions(RemoveSourcesFromPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceNames))
            {
                query["SourceNames"] = request.SourceNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveSourcesFromPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveSourcesFromPrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes custom data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveSourcesFromPrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RemoveSourcesFromPrometheusGlobalViewResponse
         */
        public async Task<RemoveSourcesFromPrometheusGlobalViewResponse> RemoveSourcesFromPrometheusGlobalViewWithOptionsAsync(RemoveSourcesFromPrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GlobalViewClusterId))
            {
                query["GlobalViewClusterId"] = request.GlobalViewClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceNames))
            {
                query["SourceNames"] = request.SourceNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveSourcesFromPrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveSourcesFromPrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes custom data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveSourcesFromPrometheusGlobalViewRequest
         * @return RemoveSourcesFromPrometheusGlobalViewResponse
         */
        public RemoveSourcesFromPrometheusGlobalViewResponse RemoveSourcesFromPrometheusGlobalView(RemoveSourcesFromPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveSourcesFromPrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Removes custom data sources from a global aggregation instance in Prometheus Service.
         *
         * @param request RemoveSourcesFromPrometheusGlobalViewRequest
         * @return RemoveSourcesFromPrometheusGlobalViewResponse
         */
        public async Task<RemoveSourcesFromPrometheusGlobalViewResponse> RemoveSourcesFromPrometheusGlobalViewAsync(RemoveSourcesFromPrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveSourcesFromPrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 重新启动 feature信息
         *
         * @param request RestartEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RestartEnvironmentFeatureResponse
         */
        public RestartEnvironmentFeatureResponse RestartEnvironmentFeatureWithOptions(RestartEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RestartEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RestartEnvironmentFeatureResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 重新启动 feature信息
         *
         * @param request RestartEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return RestartEnvironmentFeatureResponse
         */
        public async Task<RestartEnvironmentFeatureResponse> RestartEnvironmentFeatureWithOptionsAsync(RestartEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RestartEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RestartEnvironmentFeatureResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 重新启动 feature信息
         *
         * @param request RestartEnvironmentFeatureRequest
         * @return RestartEnvironmentFeatureResponse
         */
        public RestartEnvironmentFeatureResponse RestartEnvironmentFeature(RestartEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RestartEnvironmentFeatureWithOptions(request, runtime);
        }

        /**
         * @summary 重新启动 feature信息
         *
         * @param request RestartEnvironmentFeatureRequest
         * @return RestartEnvironmentFeatureResponse
         */
        public async Task<RestartEnvironmentFeatureResponse> RestartEnvironmentFeatureAsync(RestartEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RestartEnvironmentFeatureWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the settings of Application Monitoring, such as trace sampling and agent switch settings.
         *
         * @param request SaveTraceAppConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveTraceAppConfigResponse
         */
        public SaveTraceAppConfigResponse SaveTraceAppConfigWithOptions(SaveTraceAppConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Settings))
            {
                query["Settings"] = request.Settings;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveTraceAppConfig",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveTraceAppConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the settings of Application Monitoring, such as trace sampling and agent switch settings.
         *
         * @param request SaveTraceAppConfigRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SaveTraceAppConfigResponse
         */
        public async Task<SaveTraceAppConfigResponse> SaveTraceAppConfigWithOptionsAsync(SaveTraceAppConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Settings))
            {
                query["Settings"] = request.Settings;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveTraceAppConfig",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveTraceAppConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the settings of Application Monitoring, such as trace sampling and agent switch settings.
         *
         * @param request SaveTraceAppConfigRequest
         * @return SaveTraceAppConfigResponse
         */
        public SaveTraceAppConfigResponse SaveTraceAppConfig(SaveTraceAppConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SaveTraceAppConfigWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the settings of Application Monitoring, such as trace sampling and agent switch settings.
         *
         * @param request SaveTraceAppConfigRequest
         * @return SaveTraceAppConfigResponse
         */
        public async Task<SaveTraceAppConfigResponse> SaveTraceAppConfigAsync(SaveTraceAppConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SaveTraceAppConfigWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert contacts.
         *
         * @description This operation is no longer maintained. To query alert contacts, call the DescribeContacts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertContactResponse
         */
        public SearchAlertContactResponse SearchAlertContactWithOptions(SearchAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                query["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert contacts.
         *
         * @description This operation is no longer maintained. To query alert contacts, call the DescribeContacts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertContactResponse
         */
        public async Task<SearchAlertContactResponse> SearchAlertContactWithOptionsAsync(SearchAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                query["Phone"] = request.Phone;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert contacts.
         *
         * @description This operation is no longer maintained. To query alert contacts, call the DescribeContacts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertContactRequest
         * @return SearchAlertContactResponse
         */
        public SearchAlertContactResponse SearchAlertContact(SearchAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchAlertContactWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert contacts.
         *
         * @description This operation is no longer maintained. To query alert contacts, call the DescribeContacts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertContactRequest
         * @return SearchAlertContactResponse
         */
        public async Task<SearchAlertContactResponse> SearchAlertContactAsync(SearchAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchAlertContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert contact groups.
         *
         * @description The operation is no longer maintained. Call the DescribeContactGroups operation in the alert management module to query alert contact groups.
         *
         * @param request SearchAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertContactGroupResponse
         */
        public SearchAlertContactGroupResponse SearchAlertContactGroupWithOptions(SearchAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert contact groups.
         *
         * @description The operation is no longer maintained. Call the DescribeContactGroups operation in the alert management module to query alert contact groups.
         *
         * @param request SearchAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertContactGroupResponse
         */
        public async Task<SearchAlertContactGroupResponse> SearchAlertContactGroupWithOptionsAsync(SearchAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsDetail))
            {
                query["IsDetail"] = request.IsDetail;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert contact groups.
         *
         * @description The operation is no longer maintained. Call the DescribeContactGroups operation in the alert management module to query alert contact groups.
         *
         * @param request SearchAlertContactGroupRequest
         * @return SearchAlertContactGroupResponse
         */
        public SearchAlertContactGroupResponse SearchAlertContactGroup(SearchAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchAlertContactGroupWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert contact groups.
         *
         * @description The operation is no longer maintained. Call the DescribeContactGroups operation in the alert management module to query alert contact groups.
         *
         * @param request SearchAlertContactGroupRequest
         * @return SearchAlertContactGroupResponse
         */
        public async Task<SearchAlertContactGroupResponse> SearchAlertContactGroupAsync(SearchAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchAlertContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries the alert records of an alert rule.
         *
         * @description This operation is no longer maintained. To query alert records, call the ListAlerts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertHistoriesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertHistoriesResponse
         */
        public SearchAlertHistoriesResponse SearchAlertHistoriesWithOptions(SearchAlertHistoriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertHistories",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertHistoriesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries the alert records of an alert rule.
         *
         * @description This operation is no longer maintained. To query alert records, call the ListAlerts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertHistoriesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertHistoriesResponse
         */
        public async Task<SearchAlertHistoriesResponse> SearchAlertHistoriesWithOptionsAsync(SearchAlertHistoriesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertHistories",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertHistoriesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries the alert records of an alert rule.
         *
         * @description This operation is no longer maintained. To query alert records, call the ListAlerts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertHistoriesRequest
         * @return SearchAlertHistoriesResponse
         */
        public SearchAlertHistoriesResponse SearchAlertHistories(SearchAlertHistoriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchAlertHistoriesWithOptions(request, runtime);
        }

        /**
         * @summary Queries the alert records of an alert rule.
         *
         * @description This operation is no longer maintained. To query alert records, call the ListAlerts operation provided by the new version of Alert Management.
         *
         * @param request SearchAlertHistoriesRequest
         * @return SearchAlertHistoriesResponse
         */
        public async Task<SearchAlertHistoriesResponse> SearchAlertHistoriesAsync(SearchAlertHistoriesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchAlertHistoriesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert rules.
         *
         * @description The current operation is no longer maintained. You can call the GetAlertRules operation of Alert Management (New) to query existing alert rules.
         *
         * @param request SearchAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertRulesResponse
         */
        public SearchAlertRulesResponse SearchAlertRulesWithOptions(SearchAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertRuleId))
            {
                query["AlertRuleId"] = request.AlertRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemRegionId))
            {
                query["SystemRegionId"] = request.SystemRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Title))
            {
                query["Title"] = request.Title;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert rules.
         *
         * @description The current operation is no longer maintained. You can call the GetAlertRules operation of Alert Management (New) to query existing alert rules.
         *
         * @param request SearchAlertRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchAlertRulesResponse
         */
        public async Task<SearchAlertRulesResponse> SearchAlertRulesWithOptionsAsync(SearchAlertRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertRuleId))
            {
                query["AlertRuleId"] = request.AlertRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemRegionId))
            {
                query["SystemRegionId"] = request.SystemRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Title))
            {
                query["Title"] = request.Title;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchAlertRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchAlertRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert rules.
         *
         * @description The current operation is no longer maintained. You can call the GetAlertRules operation of Alert Management (New) to query existing alert rules.
         *
         * @param request SearchAlertRulesRequest
         * @return SearchAlertRulesResponse
         */
        public SearchAlertRulesResponse SearchAlertRules(SearchAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchAlertRulesWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert rules.
         *
         * @description The current operation is no longer maintained. You can call the GetAlertRules operation of Alert Management (New) to query existing alert rules.
         *
         * @param request SearchAlertRulesRequest
         * @return SearchAlertRulesResponse
         */
        public async Task<SearchAlertRulesResponse> SearchAlertRulesAsync(SearchAlertRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchAlertRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries alert event records.
         *
         * @description Alert event records are different from alert notification records. Alert events are recorded every minute after an alert rule filters data. Alert events can be classified based on whether they are triggered or not. If a triggered event is not in the silence period, an alert notification is sent.
         *
         * @param request SearchEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchEventsResponse
         */
        public SearchEventsResponse SearchEventsWithOptions(SearchEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsTrigger))
            {
                query["IsTrigger"] = request.IsTrigger;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchEventsResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries alert event records.
         *
         * @description Alert event records are different from alert notification records. Alert events are recorded every minute after an alert rule filters data. Alert events can be classified based on whether they are triggered or not. If a triggered event is not in the silence period, an alert notification is sent.
         *
         * @param request SearchEventsRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchEventsResponse
         */
        public async Task<SearchEventsResponse> SearchEventsWithOptionsAsync(SearchEventsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertType))
            {
                query["AlertType"] = request.AlertType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppType))
            {
                query["AppType"] = request.AppType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsTrigger))
            {
                query["IsTrigger"] = request.IsTrigger;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchEvents",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchEventsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries alert event records.
         *
         * @description Alert event records are different from alert notification records. Alert events are recorded every minute after an alert rule filters data. Alert events can be classified based on whether they are triggered or not. If a triggered event is not in the silence period, an alert notification is sent.
         *
         * @param request SearchEventsRequest
         * @return SearchEventsResponse
         */
        public SearchEventsResponse SearchEvents(SearchEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchEventsWithOptions(request, runtime);
        }

        /**
         * @summary Queries alert event records.
         *
         * @description Alert event records are different from alert notification records. Alert events are recorded every minute after an alert rule filters data. Alert events can be classified based on whether they are triggered or not. If a triggered event is not in the silence period, an alert notification is sent.
         *
         * @param request SearchEventsRequest
         * @return SearchEventsResponse
         */
        public async Task<SearchEventsResponse> SearchEventsAsync(SearchEventsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchEventsWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries Browser Monitoring tasks by page.
         *
         * @param request SearchRetcodeAppByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchRetcodeAppByPageResponse
         */
        public SearchRetcodeAppByPageResponse SearchRetcodeAppByPageWithOptions(SearchRetcodeAppByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppId))
            {
                query["RetcodeAppId"] = request.RetcodeAppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppName))
            {
                query["RetcodeAppName"] = request.RetcodeAppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchRetcodeAppByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchRetcodeAppByPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries Browser Monitoring tasks by page.
         *
         * @param request SearchRetcodeAppByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchRetcodeAppByPageResponse
         */
        public async Task<SearchRetcodeAppByPageResponse> SearchRetcodeAppByPageWithOptionsAsync(SearchRetcodeAppByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppId))
            {
                query["RetcodeAppId"] = request.RetcodeAppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetcodeAppName))
            {
                query["RetcodeAppName"] = request.RetcodeAppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchRetcodeAppByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchRetcodeAppByPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries Browser Monitoring tasks by page.
         *
         * @param request SearchRetcodeAppByPageRequest
         * @return SearchRetcodeAppByPageResponse
         */
        public SearchRetcodeAppByPageResponse SearchRetcodeAppByPage(SearchRetcodeAppByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchRetcodeAppByPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries Browser Monitoring tasks by page.
         *
         * @param request SearchRetcodeAppByPageRequest
         * @return SearchRetcodeAppByPageResponse
         */
        public async Task<SearchRetcodeAppByPageResponse> SearchRetcodeAppByPageAsync(SearchRetcodeAppByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchRetcodeAppByPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries Application Monitoring tasks by application name.
         *
         * @param request SearchTraceAppByNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTraceAppByNameResponse
         */
        public SearchTraceAppByNameResponse SearchTraceAppByNameWithOptions(SearchTraceAppByNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceAppName))
            {
                query["TraceAppName"] = request.TraceAppName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraceAppByName",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTraceAppByNameResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries Application Monitoring tasks by application name.
         *
         * @param request SearchTraceAppByNameRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTraceAppByNameResponse
         */
        public async Task<SearchTraceAppByNameResponse> SearchTraceAppByNameWithOptionsAsync(SearchTraceAppByNameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceAppName))
            {
                query["TraceAppName"] = request.TraceAppName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraceAppByName",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTraceAppByNameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries Application Monitoring tasks by application name.
         *
         * @param request SearchTraceAppByNameRequest
         * @return SearchTraceAppByNameResponse
         */
        public SearchTraceAppByNameResponse SearchTraceAppByName(SearchTraceAppByNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchTraceAppByNameWithOptions(request, runtime);
        }

        /**
         * @summary Queries Application Monitoring tasks by application name.
         *
         * @param request SearchTraceAppByNameRequest
         * @return SearchTraceAppByNameResponse
         */
        public async Task<SearchTraceAppByNameResponse> SearchTraceAppByNameAsync(SearchTraceAppByNameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchTraceAppByNameWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries Application Monitoring tasks by page.
         *
         * @param request SearchTraceAppByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTraceAppByPageResponse
         */
        public SearchTraceAppByPageResponse SearchTraceAppByPageWithOptions(SearchTraceAppByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceAppName))
            {
                query["TraceAppName"] = request.TraceAppName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraceAppByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTraceAppByPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries Application Monitoring tasks by page.
         *
         * @param request SearchTraceAppByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTraceAppByPageResponse
         */
        public async Task<SearchTraceAppByPageResponse> SearchTraceAppByPageWithOptionsAsync(SearchTraceAppByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceAppName))
            {
                query["TraceAppName"] = request.TraceAppName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraceAppByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTraceAppByPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries Application Monitoring tasks by page.
         *
         * @param request SearchTraceAppByPageRequest
         * @return SearchTraceAppByPageResponse
         */
        public SearchTraceAppByPageResponse SearchTraceAppByPage(SearchTraceAppByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchTraceAppByPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries Application Monitoring tasks by page.
         *
         * @param request SearchTraceAppByPageRequest
         * @return SearchTraceAppByPageResponse
         */
        public async Task<SearchTraceAppByPageResponse> SearchTraceAppByPageAsync(SearchTraceAppByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchTraceAppByPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries traces by time, application name, IP address, span name, and tag.
         *
         * @description > A maximum of 100 data entries can be returned each time this operation is called. If you want to query all existing traces, we recommend that you call the SearchTracesByPage operation. For more information, see [SearchTracesByPage](https://help.aliyun.com/document_detail/175866.html).
         *
         * @param request SearchTracesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTracesResponse
         */
        public SearchTracesResponse SearchTracesWithOptions(SearchTracesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusionFilters))
            {
                query["ExclusionFilters"] = request.ExclusionFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MinDuration))
            {
                query["MinDuration"] = request.MinDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationName))
            {
                query["OperationName"] = request.OperationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reverse))
            {
                query["Reverse"] = request.Reverse;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIp))
            {
                query["ServiceIp"] = request.ServiceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceName))
            {
                query["ServiceName"] = request.ServiceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraces",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTracesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries traces by time, application name, IP address, span name, and tag.
         *
         * @description > A maximum of 100 data entries can be returned each time this operation is called. If you want to query all existing traces, we recommend that you call the SearchTracesByPage operation. For more information, see [SearchTracesByPage](https://help.aliyun.com/document_detail/175866.html).
         *
         * @param request SearchTracesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTracesResponse
         */
        public async Task<SearchTracesResponse> SearchTracesWithOptionsAsync(SearchTracesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusionFilters))
            {
                query["ExclusionFilters"] = request.ExclusionFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MinDuration))
            {
                query["MinDuration"] = request.MinDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationName))
            {
                query["OperationName"] = request.OperationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reverse))
            {
                query["Reverse"] = request.Reverse;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIp))
            {
                query["ServiceIp"] = request.ServiceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceName))
            {
                query["ServiceName"] = request.ServiceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTraces",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTracesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries traces by time, application name, IP address, span name, and tag.
         *
         * @description > A maximum of 100 data entries can be returned each time this operation is called. If you want to query all existing traces, we recommend that you call the SearchTracesByPage operation. For more information, see [SearchTracesByPage](https://help.aliyun.com/document_detail/175866.html).
         *
         * @param request SearchTracesRequest
         * @return SearchTracesResponse
         */
        public SearchTracesResponse SearchTraces(SearchTracesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchTracesWithOptions(request, runtime);
        }

        /**
         * @summary Queries traces by time, application name, IP address, span name, and tag.
         *
         * @description > A maximum of 100 data entries can be returned each time this operation is called. If you want to query all existing traces, we recommend that you call the SearchTracesByPage operation. For more information, see [SearchTracesByPage](https://help.aliyun.com/document_detail/175866.html).
         *
         * @param request SearchTracesRequest
         * @return SearchTracesResponse
         */
        public async Task<SearchTracesResponse> SearchTracesAsync(SearchTracesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchTracesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Queries traces by page. You can query traces by time range, application name, IP address, span name, or tag.
         *
         * @param request SearchTracesByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTracesByPageResponse
         */
        public SearchTracesByPageResponse SearchTracesByPageWithOptions(SearchTracesByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusionFilters))
            {
                query["ExclusionFilters"] = request.ExclusionFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsError))
            {
                query["IsError"] = request.IsError;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MinDuration))
            {
                query["MinDuration"] = request.MinDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationName))
            {
                query["OperationName"] = request.OperationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reverse))
            {
                query["Reverse"] = request.Reverse;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIp))
            {
                query["ServiceIp"] = request.ServiceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceName))
            {
                query["ServiceName"] = request.ServiceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTracesByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTracesByPageResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Queries traces by page. You can query traces by time range, application name, IP address, span name, or tag.
         *
         * @param request SearchTracesByPageRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SearchTracesByPageResponse
         */
        public async Task<SearchTracesByPageResponse> SearchTracesByPageWithOptionsAsync(SearchTracesByPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExclusionFilters))
            {
                query["ExclusionFilters"] = request.ExclusionFilters;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsError))
            {
                query["IsError"] = request.IsError;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MinDuration))
            {
                query["MinDuration"] = request.MinDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OperationName))
            {
                query["OperationName"] = request.OperationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNumber))
            {
                query["PageNumber"] = request.PageNumber;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Reverse))
            {
                query["Reverse"] = request.Reverse;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIp))
            {
                query["ServiceIp"] = request.ServiceIp;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceName))
            {
                query["ServiceName"] = request.ServiceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SearchTracesByPage",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SearchTracesByPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Queries traces by page. You can query traces by time range, application name, IP address, span name, or tag.
         *
         * @param request SearchTracesByPageRequest
         * @return SearchTracesByPageResponse
         */
        public SearchTracesByPageResponse SearchTracesByPage(SearchTracesByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SearchTracesByPageWithOptions(request, runtime);
        }

        /**
         * @summary Queries traces by page. You can query traces by time range, application name, IP address, span name, or tag.
         *
         * @param request SearchTracesByPageRequest
         * @return SearchTracesByPageResponse
         */
        public async Task<SearchTracesByPageResponse> SearchTracesByPageAsync(SearchTracesByPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SearchTracesByPageWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Sends a text message to an alert contact to verify the mobile number of the alert contact.
         *
         * @description After you receive the text message, verify the mobile number as prompted. Before you can specify a mobile phone number in a notification policy, you must verify the mobile phone number.
         *
         * @param request SendTTSVerifyLinkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SendTTSVerifyLinkResponse
         */
        public SendTTSVerifyLinkResponse SendTTSVerifyLinkWithOptions(SendTTSVerifyLinkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                body["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                body["Phone"] = request.Phone;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SendTTSVerifyLink",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SendTTSVerifyLinkResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Sends a text message to an alert contact to verify the mobile number of the alert contact.
         *
         * @description After you receive the text message, verify the mobile number as prompted. Before you can specify a mobile phone number in a notification policy, you must verify the mobile phone number.
         *
         * @param request SendTTSVerifyLinkRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SendTTSVerifyLinkResponse
         */
        public async Task<SendTTSVerifyLinkResponse> SendTTSVerifyLinkWithOptionsAsync(SendTTSVerifyLinkRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                body["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Phone))
            {
                body["Phone"] = request.Phone;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SendTTSVerifyLink",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SendTTSVerifyLinkResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Sends a text message to an alert contact to verify the mobile number of the alert contact.
         *
         * @description After you receive the text message, verify the mobile number as prompted. Before you can specify a mobile phone number in a notification policy, you must verify the mobile phone number.
         *
         * @param request SendTTSVerifyLinkRequest
         * @return SendTTSVerifyLinkResponse
         */
        public SendTTSVerifyLinkResponse SendTTSVerifyLink(SendTTSVerifyLinkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SendTTSVerifyLinkWithOptions(request, runtime);
        }

        /**
         * @summary Sends a text message to an alert contact to verify the mobile number of the alert contact.
         *
         * @description After you receive the text message, verify the mobile number as prompted. Before you can specify a mobile phone number in a notification policy, you must verify the mobile phone number.
         *
         * @param request SendTTSVerifyLinkRequest
         * @return SendTTSVerifyLinkResponse
         */
        public async Task<SendTTSVerifyLinkResponse> SendTTSVerifyLinkAsync(SendTTSVerifyLinkRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SendTTSVerifyLinkWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Turns on or turns off logon-free sharing for an application monitored by Browser Monitoring.
         *
         * @param request SetRetcodeShareStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetRetcodeShareStatusResponse
         */
        public SetRetcodeShareStatusResponse SetRetcodeShareStatusWithOptions(SetRetcodeShareStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetRetcodeShareStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetRetcodeShareStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Turns on or turns off logon-free sharing for an application monitored by Browser Monitoring.
         *
         * @param request SetRetcodeShareStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SetRetcodeShareStatusResponse
         */
        public async Task<SetRetcodeShareStatusResponse> SetRetcodeShareStatusWithOptionsAsync(SetRetcodeShareStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppName))
            {
                query["AppName"] = request.AppName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetRetcodeShareStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetRetcodeShareStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Turns on or turns off logon-free sharing for an application monitored by Browser Monitoring.
         *
         * @param request SetRetcodeShareStatusRequest
         * @return SetRetcodeShareStatusResponse
         */
        public SetRetcodeShareStatusResponse SetRetcodeShareStatus(SetRetcodeShareStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetRetcodeShareStatusWithOptions(request, runtime);
        }

        /**
         * @summary Turns on or turns off logon-free sharing for an application monitored by Browser Monitoring.
         *
         * @param request SetRetcodeShareStatusRequest
         * @return SetRetcodeShareStatusResponse
         */
        public async Task<SetRetcodeShareStatusResponse> SetRetcodeShareStatusAsync(SetRetcodeShareStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetRetcodeShareStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @param request StartAlertRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartAlertResponse
         */
        public StartAlertResponse StartAlertWithOptions(StartAlertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartAlert",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartAlertResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request StartAlertRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartAlertResponse
         */
        public async Task<StartAlertResponse> StartAlertWithOptionsAsync(StartAlertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartAlert",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartAlertResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request StartAlertRequest
         * @return StartAlertResponse
         */
        public StartAlertResponse StartAlert(StartAlertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartAlertWithOptions(request, runtime);
        }

        /**
         * @param request StartAlertRequest
         * @return StartAlertResponse
         */
        public async Task<StartAlertResponse> StartAlertAsync(StartAlertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartAlertWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 启动定时拨测任务
         *
         * @param tmpReq StartTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartTimingSyntheticTaskResponse
         */
        public StartTimingSyntheticTaskResponse StartTimingSyntheticTaskWithOptions(StartTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            StartTimingSyntheticTaskShrinkRequest request = new StartTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TaskIds))
            {
                request.TaskIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TaskIds, "TaskIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIdsShrink))
            {
                query["TaskIds"] = request.TaskIdsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 启动定时拨测任务
         *
         * @param tmpReq StartTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StartTimingSyntheticTaskResponse
         */
        public async Task<StartTimingSyntheticTaskResponse> StartTimingSyntheticTaskWithOptionsAsync(StartTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            StartTimingSyntheticTaskShrinkRequest request = new StartTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TaskIds))
            {
                request.TaskIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TaskIds, "TaskIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIdsShrink))
            {
                query["TaskIds"] = request.TaskIdsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 启动定时拨测任务
         *
         * @param request StartTimingSyntheticTaskRequest
         * @return StartTimingSyntheticTaskResponse
         */
        public StartTimingSyntheticTaskResponse StartTimingSyntheticTask(StartTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary 启动定时拨测任务
         *
         * @param request StartTimingSyntheticTaskRequest
         * @return StartTimingSyntheticTaskResponse
         */
        public async Task<StartTimingSyntheticTaskResponse> StartTimingSyntheticTaskAsync(StartTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Call StartAlert to stop an alert rule.
         *
         * @param request StopAlertRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopAlertResponse
         */
        public StopAlertResponse StopAlertWithOptions(StopAlertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopAlert",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopAlertResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Call StartAlert to stop an alert rule.
         *
         * @param request StopAlertRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopAlertResponse
         */
        public async Task<StopAlertResponse> StopAlertWithOptionsAsync(StopAlertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopAlert",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopAlertResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Call StartAlert to stop an alert rule.
         *
         * @param request StopAlertRequest
         * @return StopAlertResponse
         */
        public StopAlertResponse StopAlert(StopAlertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopAlertWithOptions(request, runtime);
        }

        /**
         * @summary Call StartAlert to stop an alert rule.
         *
         * @param request StopAlertRequest
         * @return StopAlertResponse
         */
        public async Task<StopAlertResponse> StopAlertAsync(StopAlertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopAlertWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Stops scheduled synthetic monitoring tasks.
         *
         * @param tmpReq StopTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopTimingSyntheticTaskResponse
         */
        public StopTimingSyntheticTaskResponse StopTimingSyntheticTaskWithOptions(StopTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            StopTimingSyntheticTaskShrinkRequest request = new StopTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TaskIds))
            {
                request.TaskIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TaskIds, "TaskIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIdsShrink))
            {
                query["TaskIds"] = request.TaskIdsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Stops scheduled synthetic monitoring tasks.
         *
         * @param tmpReq StopTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return StopTimingSyntheticTaskResponse
         */
        public async Task<StopTimingSyntheticTaskResponse> StopTimingSyntheticTaskWithOptionsAsync(StopTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            StopTimingSyntheticTaskShrinkRequest request = new StopTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TaskIds))
            {
                request.TaskIdsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TaskIds, "TaskIds", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIdsShrink))
            {
                query["TaskIds"] = request.TaskIdsShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Stops scheduled synthetic monitoring tasks.
         *
         * @param request StopTimingSyntheticTaskRequest
         * @return StopTimingSyntheticTaskResponse
         */
        public StopTimingSyntheticTaskResponse StopTimingSyntheticTask(StopTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary Stops scheduled synthetic monitoring tasks.
         *
         * @param request StopTimingSyntheticTaskRequest
         * @return StopTimingSyntheticTaskResponse
         */
        public async Task<StopTimingSyntheticTaskResponse> StopTimingSyntheticTaskAsync(StopTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 启动或者禁用云拨测的任务
         *
         * @param request SwitchSyntheticTaskStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SwitchSyntheticTaskStatusResponse
         */
        public SwitchSyntheticTaskStatusResponse SwitchSyntheticTaskStatusWithOptions(SwitchSyntheticTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchStatus))
            {
                query["SwitchStatus"] = request.SwitchStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SwitchSyntheticTaskStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SwitchSyntheticTaskStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 启动或者禁用云拨测的任务
         *
         * @param request SwitchSyntheticTaskStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SwitchSyntheticTaskStatusResponse
         */
        public async Task<SwitchSyntheticTaskStatusResponse> SwitchSyntheticTaskStatusWithOptionsAsync(SwitchSyntheticTaskStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SwitchStatus))
            {
                query["SwitchStatus"] = request.SwitchStatus;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskIds))
            {
                query["TaskIds"] = request.TaskIds;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SwitchSyntheticTaskStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SwitchSyntheticTaskStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 启动或者禁用云拨测的任务
         *
         * @param request SwitchSyntheticTaskStatusRequest
         * @return SwitchSyntheticTaskStatusResponse
         */
        public SwitchSyntheticTaskStatusResponse SwitchSyntheticTaskStatus(SwitchSyntheticTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SwitchSyntheticTaskStatusWithOptions(request, runtime);
        }

        /**
         * @summary 启动或者禁用云拨测的任务
         *
         * @param request SwitchSyntheticTaskStatusRequest
         * @return SwitchSyntheticTaskStatusResponse
         */
        public async Task<SwitchSyntheticTaskStatusResponse> SwitchSyntheticTaskStatusAsync(SwitchSyntheticTaskStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SwitchSyntheticTaskStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Synchronizes the aggregation rule of a cluster to other clusters in a region.
         *
         * @param request SyncRecordingRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SyncRecordingRulesResponse
         */
        public SyncRecordingRulesResponse SyncRecordingRulesWithOptions(SyncRecordingRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetClusters))
            {
                query["TargetClusters"] = request.TargetClusters;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SyncRecordingRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SyncRecordingRulesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Synchronizes the aggregation rule of a cluster to other clusters in a region.
         *
         * @param request SyncRecordingRulesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return SyncRecordingRulesResponse
         */
        public async Task<SyncRecordingRulesResponse> SyncRecordingRulesWithOptionsAsync(SyncRecordingRulesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetClusters))
            {
                query["TargetClusters"] = request.TargetClusters;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SyncRecordingRules",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SyncRecordingRulesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Synchronizes the aggregation rule of a cluster to other clusters in a region.
         *
         * @param request SyncRecordingRulesRequest
         * @return SyncRecordingRulesResponse
         */
        public SyncRecordingRulesResponse SyncRecordingRules(SyncRecordingRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SyncRecordingRulesWithOptions(request, runtime);
        }

        /**
         * @summary Synchronizes the aggregation rule of a cluster to other clusters in a region.
         *
         * @param request SyncRecordingRulesRequest
         * @return SyncRecordingRulesResponse
         */
        public async Task<SyncRecordingRulesResponse> SyncRecordingRulesAsync(SyncRecordingRulesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SyncRecordingRulesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Adds tags to ARMS resources.
         *
         * @param request TagResourcesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return TagResourcesResponse
         */
        public TagResourcesResponse TagResourcesWithOptions(TagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TagResources",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Adds tags to ARMS resources.
         *
         * @param request TagResourcesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return TagResourcesResponse
         */
        public async Task<TagResourcesResponse> TagResourcesWithOptionsAsync(TagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TagResources",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Adds tags to ARMS resources.
         *
         * @param request TagResourcesRequest
         * @return TagResourcesResponse
         */
        public TagResourcesResponse TagResources(TagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TagResourcesWithOptions(request, runtime);
        }

        /**
         * @summary Adds tags to ARMS resources.
         *
         * @param request TagResourcesRequest
         * @return TagResourcesResponse
         */
        public async Task<TagResourcesResponse> TagResourcesAsync(TagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TagResourcesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes a Prometheus instance from a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description Make sure that the ASK cluster or ECS instance is monitored in Managed Service for Prometheus.
         *
         * @param request UninstallManagedPrometheusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallManagedPrometheusResponse
         */
        public UninstallManagedPrometheusResponse UninstallManagedPrometheusWithOptions(UninstallManagedPrometheusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallManagedPrometheus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallManagedPrometheusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes a Prometheus instance from a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description Make sure that the ASK cluster or ECS instance is monitored in Managed Service for Prometheus.
         *
         * @param request UninstallManagedPrometheusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallManagedPrometheusResponse
         */
        public async Task<UninstallManagedPrometheusResponse> UninstallManagedPrometheusWithOptionsAsync(UninstallManagedPrometheusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterType))
            {
                query["ClusterType"] = request.ClusterType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VpcId))
            {
                query["VpcId"] = request.VpcId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallManagedPrometheus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallManagedPrometheusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes a Prometheus instance from a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description Make sure that the ASK cluster or ECS instance is monitored in Managed Service for Prometheus.
         *
         * @param request UninstallManagedPrometheusRequest
         * @return UninstallManagedPrometheusResponse
         */
        public UninstallManagedPrometheusResponse UninstallManagedPrometheus(UninstallManagedPrometheusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UninstallManagedPrometheusWithOptions(request, runtime);
        }

        /**
         * @summary Removes a Prometheus instance from a serverless Kubernetes (ASK) cluster or an Elastic Compute Service (ECS) instance.
         *
         * @description Make sure that the ASK cluster or ECS instance is monitored in Managed Service for Prometheus.
         *
         * @param request UninstallManagedPrometheusRequest
         * @return UninstallManagedPrometheusResponse
         */
        public async Task<UninstallManagedPrometheusResponse> UninstallManagedPrometheusAsync(UninstallManagedPrometheusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UninstallManagedPrometheusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Releases a Prometheus instance.
         *
         * @param request UninstallPromClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallPromClusterResponse
         */
        public UninstallPromClusterResponse UninstallPromClusterWithOptions(UninstallPromClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallPromCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallPromClusterResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Releases a Prometheus instance.
         *
         * @param request UninstallPromClusterRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UninstallPromClusterResponse
         */
        public async Task<UninstallPromClusterResponse> UninstallPromClusterWithOptionsAsync(UninstallPromClusterRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UninstallPromCluster",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UninstallPromClusterResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Releases a Prometheus instance.
         *
         * @param request UninstallPromClusterRequest
         * @return UninstallPromClusterResponse
         */
        public UninstallPromClusterResponse UninstallPromCluster(UninstallPromClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UninstallPromClusterWithOptions(request, runtime);
        }

        /**
         * @summary Releases a Prometheus instance.
         *
         * @param request UninstallPromClusterRequest
         * @return UninstallPromClusterResponse
         */
        public async Task<UninstallPromClusterResponse> UninstallPromClusterAsync(UninstallPromClusterRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UninstallPromClusterWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Removes tags from ARMS resources.
         *
         * @param request UntagResourcesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UntagResourcesResponse
         */
        public UntagResourcesResponse UntagResourcesWithOptions(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Removes tags from ARMS resources.
         *
         * @param request UntagResourcesRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UntagResourcesResponse
         */
        public async Task<UntagResourcesResponse> UntagResourcesWithOptionsAsync(UntagResourcesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.All))
            {
                query["All"] = request.All;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceType))
            {
                query["ResourceType"] = request.ResourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagKey))
            {
                query["TagKey"] = request.TagKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UntagResources",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UntagResourcesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Removes tags from ARMS resources.
         *
         * @param request UntagResourcesRequest
         * @return UntagResourcesResponse
         */
        public UntagResourcesResponse UntagResources(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UntagResourcesWithOptions(request, runtime);
        }

        /**
         * @summary Removes tags from ARMS resources.
         *
         * @param request UntagResourcesRequest
         * @return UntagResourcesResponse
         */
        public async Task<UntagResourcesResponse> UntagResourcesAsync(UntagResourcesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UntagResourcesWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of Alert Management.
         *
         * @param request UpdateAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertContactResponse
         */
        public UpdateAlertContactResponse UpdateAlertContactWithOptions(UpdateAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotWebhookUrl))
            {
                query["DingRobotWebhookUrl"] = request.DingRobotWebhookUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PhoneNum))
            {
                query["PhoneNum"] = request.PhoneNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemNoc))
            {
                query["SystemNoc"] = request.SystemNoc;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertContactResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of Alert Management.
         *
         * @param request UpdateAlertContactRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertContactResponse
         */
        public async Task<UpdateAlertContactResponse> UpdateAlertContactWithOptionsAsync(UpdateAlertContactRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DingRobotWebhookUrl))
            {
                query["DingRobotWebhookUrl"] = request.DingRobotWebhookUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Email))
            {
                query["Email"] = request.Email;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PhoneNum))
            {
                query["PhoneNum"] = request.PhoneNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SystemNoc))
            {
                query["SystemNoc"] = request.SystemNoc;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertContact",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertContactResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of Alert Management.
         *
         * @param request UpdateAlertContactRequest
         * @return UpdateAlertContactResponse
         */
        public UpdateAlertContactResponse UpdateAlertContact(UpdateAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateAlertContactWithOptions(request, runtime);
        }

        /**
         * @summary Updates an alert contact.
         *
         * @description This operation is no longer maintained. To create or modify an alert contact, call the CreateOrUpdateContact operation provided by the new version of Alert Management.
         *
         * @param request UpdateAlertContactRequest
         * @return UpdateAlertContactResponse
         */
        public async Task<UpdateAlertContactResponse> UpdateAlertContactAsync(UpdateAlertContactRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateAlertContactWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates UpdateAlertContactGroup alarm contact group.
         *
         * @param request UpdateAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertContactGroupResponse
         */
        public UpdateAlertContactGroupResponse UpdateAlertContactGroupWithOptions(UpdateAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertContactGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates UpdateAlertContactGroup alarm contact group.
         *
         * @param request UpdateAlertContactGroupRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertContactGroupResponse
         */
        public async Task<UpdateAlertContactGroupResponse> UpdateAlertContactGroupWithOptionsAsync(UpdateAlertContactGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupId))
            {
                query["ContactGroupId"] = request.ContactGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupName))
            {
                query["ContactGroupName"] = request.ContactGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactIds))
            {
                query["ContactIds"] = request.ContactIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertContactGroup",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertContactGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates UpdateAlertContactGroup alarm contact group.
         *
         * @param request UpdateAlertContactGroupRequest
         * @return UpdateAlertContactGroupResponse
         */
        public UpdateAlertContactGroupResponse UpdateAlertContactGroup(UpdateAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateAlertContactGroupWithOptions(request, runtime);
        }

        /**
         * @summary Updates UpdateAlertContactGroup alarm contact group.
         *
         * @param request UpdateAlertContactGroupRequest
         * @return UpdateAlertContactGroupResponse
         */
        public async Task<UpdateAlertContactGroupResponse> UpdateAlertContactGroupAsync(UpdateAlertContactGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateAlertContactGroupWithOptionsAsync(request, runtime);
        }

        /**
         * @param request UpdateAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertRuleResponse
         */
        public UpdateAlertRuleResponse UpdateAlertRuleWithOptions(UpdateAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAutoStart))
            {
                query["IsAutoStart"] = request.IsAutoStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplageAlertConfig))
            {
                query["TemplageAlertConfig"] = request.TemplageAlertConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @param request UpdateAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateAlertRuleResponse
         */
        public async Task<UpdateAlertRuleResponse> UpdateAlertRuleWithOptionsAsync(UpdateAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactGroupIds))
            {
                query["ContactGroupIds"] = request.ContactGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsAutoStart))
            {
                query["IsAutoStart"] = request.IsAutoStart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplageAlertConfig))
            {
                query["TemplageAlertConfig"] = request.TemplageAlertConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @param request UpdateAlertRuleRequest
         * @return UpdateAlertRuleResponse
         */
        public UpdateAlertRuleResponse UpdateAlertRule(UpdateAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateAlertRuleWithOptions(request, runtime);
        }

        /**
         * @param request UpdateAlertRuleRequest
         * @return UpdateAlertRuleResponse
         */
        public async Task<UpdateAlertRuleResponse> UpdateAlertRuleAsync(UpdateAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary The ID of the request.
         *
         * @param request UpdateDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateDispatchRuleResponse
         */
        public UpdateDispatchRuleResponse UpdateDispatchRuleWithOptions(UpdateDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRule))
            {
                query["DispatchRule"] = request.DispatchRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDispatchRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary The ID of the request.
         *
         * @param request UpdateDispatchRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateDispatchRuleResponse
         */
        public async Task<UpdateDispatchRuleResponse> UpdateDispatchRuleWithOptionsAsync(UpdateDispatchRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRule))
            {
                query["DispatchRule"] = request.DispatchRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDispatchRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDispatchRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary The ID of the request.
         *
         * @param request UpdateDispatchRuleRequest
         * @return UpdateDispatchRuleResponse
         */
        public UpdateDispatchRuleResponse UpdateDispatchRule(UpdateDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateDispatchRuleWithOptions(request, runtime);
        }

        /**
         * @summary The ID of the request.
         *
         * @param request UpdateDispatchRuleRequest
         * @return UpdateDispatchRuleResponse
         */
        public async Task<UpdateDispatchRuleResponse> UpdateDispatchRuleAsync(UpdateDispatchRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateDispatchRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates a custom job for an environment.
         *
         * @param request UpdateEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvCustomJobResponse
         */
        public UpdateEnvCustomJobResponse UpdateEnvCustomJobWithOptions(UpdateEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvCustomJobResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates a custom job for an environment.
         *
         * @param request UpdateEnvCustomJobRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvCustomJobResponse
         */
        public async Task<UpdateEnvCustomJobResponse> UpdateEnvCustomJobWithOptionsAsync(UpdateEnvCustomJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomJobName))
            {
                query["CustomJobName"] = request.CustomJobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvCustomJob",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvCustomJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates a custom job for an environment.
         *
         * @param request UpdateEnvCustomJobRequest
         * @return UpdateEnvCustomJobResponse
         */
        public UpdateEnvCustomJobResponse UpdateEnvCustomJob(UpdateEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEnvCustomJobWithOptions(request, runtime);
        }

        /**
         * @summary Updates a custom job for an environment.
         *
         * @param request UpdateEnvCustomJobRequest
         * @return UpdateEnvCustomJobResponse
         */
        public async Task<UpdateEnvCustomJobResponse> UpdateEnvCustomJobAsync(UpdateEnvCustomJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEnvCustomJobWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the PodMonitor of an environment.
         *
         * @param request UpdateEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvPodMonitorResponse
         */
        public UpdateEnvPodMonitorResponse UpdateEnvPodMonitorWithOptions(UpdateEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvPodMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the PodMonitor of an environment.
         *
         * @param request UpdateEnvPodMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvPodMonitorResponse
         */
        public async Task<UpdateEnvPodMonitorResponse> UpdateEnvPodMonitorWithOptionsAsync(UpdateEnvPodMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PodMonitorName))
            {
                query["PodMonitorName"] = request.PodMonitorName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvPodMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvPodMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the PodMonitor of an environment.
         *
         * @param request UpdateEnvPodMonitorRequest
         * @return UpdateEnvPodMonitorResponse
         */
        public UpdateEnvPodMonitorResponse UpdateEnvPodMonitor(UpdateEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEnvPodMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Updates the PodMonitor of an environment.
         *
         * @param request UpdateEnvPodMonitorRequest
         * @return UpdateEnvPodMonitorResponse
         */
        public async Task<UpdateEnvPodMonitorResponse> UpdateEnvPodMonitorAsync(UpdateEnvPodMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEnvPodMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the ServiceMonitor of an environment.
         *
         * @param request UpdateEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvServiceMonitorResponse
         */
        public UpdateEnvServiceMonitorResponse UpdateEnvServiceMonitorWithOptions(UpdateEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvServiceMonitorResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the ServiceMonitor of an environment.
         *
         * @param request UpdateEnvServiceMonitorRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvServiceMonitorResponse
         */
        public async Task<UpdateEnvServiceMonitorResponse> UpdateEnvServiceMonitorWithOptionsAsync(UpdateEnvServiceMonitorRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Namespace))
            {
                query["Namespace"] = request.Namespace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceMonitorName))
            {
                query["ServiceMonitorName"] = request.ServiceMonitorName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvServiceMonitor",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvServiceMonitorResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the ServiceMonitor of an environment.
         *
         * @param request UpdateEnvServiceMonitorRequest
         * @return UpdateEnvServiceMonitorResponse
         */
        public UpdateEnvServiceMonitorResponse UpdateEnvServiceMonitor(UpdateEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEnvServiceMonitorWithOptions(request, runtime);
        }

        /**
         * @summary Updates the ServiceMonitor of an environment.
         *
         * @param request UpdateEnvServiceMonitorRequest
         * @return UpdateEnvServiceMonitorResponse
         */
        public async Task<UpdateEnvServiceMonitorResponse> UpdateEnvServiceMonitorAsync(UpdateEnvServiceMonitorRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEnvServiceMonitorWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the configuration of an environment.
         *
         * @param request UpdateEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvironmentResponse
         */
        public UpdateEnvironmentResponse UpdateEnvironmentWithOptions(UpdateEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentName))
            {
                query["EnvironmentName"] = request.EnvironmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvironmentResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the configuration of an environment.
         *
         * @param request UpdateEnvironmentRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateEnvironmentResponse
         */
        public async Task<UpdateEnvironmentResponse> UpdateEnvironmentWithOptionsAsync(UpdateEnvironmentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentName))
            {
                query["EnvironmentName"] = request.EnvironmentName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeePackage))
            {
                query["FeePackage"] = request.FeePackage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEnvironment",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEnvironmentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the configuration of an environment.
         *
         * @param request UpdateEnvironmentRequest
         * @return UpdateEnvironmentResponse
         */
        public UpdateEnvironmentResponse UpdateEnvironment(UpdateEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEnvironmentWithOptions(request, runtime);
        }

        /**
         * @summary Updates the configuration of an environment.
         *
         * @param request UpdateEnvironmentRequest
         * @return UpdateEnvironmentResponse
         */
        public async Task<UpdateEnvironmentResponse> UpdateEnvironmentAsync(UpdateEnvironmentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEnvironmentWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 编辑工作区
         *
         * @param request UpdateGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateGrafanaWorkspaceResponse
         */
        public UpdateGrafanaWorkspaceResponse UpdateGrafanaWorkspaceWithOptions(UpdateGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceName))
            {
                query["GrafanaWorkspaceName"] = request.GrafanaWorkspaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateGrafanaWorkspaceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 编辑工作区
         *
         * @param request UpdateGrafanaWorkspaceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateGrafanaWorkspaceResponse
         */
        public async Task<UpdateGrafanaWorkspaceResponse> UpdateGrafanaWorkspaceWithOptionsAsync(UpdateGrafanaWorkspaceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceName))
            {
                query["GrafanaWorkspaceName"] = request.GrafanaWorkspaceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateGrafanaWorkspace",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateGrafanaWorkspaceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 编辑工作区
         *
         * @param request UpdateGrafanaWorkspaceRequest
         * @return UpdateGrafanaWorkspaceResponse
         */
        public UpdateGrafanaWorkspaceResponse UpdateGrafanaWorkspace(UpdateGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateGrafanaWorkspaceWithOptions(request, runtime);
        }

        /**
         * @summary 编辑工作区
         *
         * @param request UpdateGrafanaWorkspaceRequest
         * @return UpdateGrafanaWorkspaceResponse
         */
        public async Task<UpdateGrafanaWorkspaceResponse> UpdateGrafanaWorkspaceAsync(UpdateGrafanaWorkspaceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateGrafanaWorkspaceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 升级指定工作区版本
         *
         * @param request UpdateGrafanaWorkspaceVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateGrafanaWorkspaceVersionResponse
         */
        public UpdateGrafanaWorkspaceVersionResponse UpdateGrafanaWorkspaceVersionWithOptions(UpdateGrafanaWorkspaceVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaVersion))
            {
                query["GrafanaVersion"] = request.GrafanaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateGrafanaWorkspaceVersion",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateGrafanaWorkspaceVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 升级指定工作区版本
         *
         * @param request UpdateGrafanaWorkspaceVersionRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateGrafanaWorkspaceVersionResponse
         */
        public async Task<UpdateGrafanaWorkspaceVersionResponse> UpdateGrafanaWorkspaceVersionWithOptionsAsync(UpdateGrafanaWorkspaceVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaVersion))
            {
                query["GrafanaVersion"] = request.GrafanaVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrafanaWorkspaceId))
            {
                query["GrafanaWorkspaceId"] = request.GrafanaWorkspaceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateGrafanaWorkspaceVersion",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateGrafanaWorkspaceVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 升级指定工作区版本
         *
         * @param request UpdateGrafanaWorkspaceVersionRequest
         * @return UpdateGrafanaWorkspaceVersionResponse
         */
        public UpdateGrafanaWorkspaceVersionResponse UpdateGrafanaWorkspaceVersion(UpdateGrafanaWorkspaceVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateGrafanaWorkspaceVersionWithOptions(request, runtime);
        }

        /**
         * @summary 升级指定工作区版本
         *
         * @param request UpdateGrafanaWorkspaceVersionRequest
         * @return UpdateGrafanaWorkspaceVersionResponse
         */
        public async Task<UpdateGrafanaWorkspaceVersionResponse> UpdateGrafanaWorkspaceVersionAsync(UpdateGrafanaWorkspaceVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateGrafanaWorkspaceVersionWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the information about an integration.
         *
         * @param request UpdateIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateIntegrationResponse
         */
        public UpdateIntegrationResponse UpdateIntegrationWithOptions(UpdateIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRecover))
            {
                body["AutoRecover"] = request.AutoRecover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DuplicateKey))
            {
                body["DuplicateKey"] = request.DuplicateKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtendedFieldRedefineRules))
            {
                body["ExtendedFieldRedefineRules"] = request.ExtendedFieldRedefineRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldRedefineRules))
            {
                body["FieldRedefineRules"] = request.FieldRedefineRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InitiativeRecoverField))
            {
                body["InitiativeRecoverField"] = request.InitiativeRecoverField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InitiativeRecoverValue))
            {
                body["InitiativeRecoverValue"] = request.InitiativeRecoverValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationId))
            {
                body["IntegrationId"] = request.IntegrationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationName))
            {
                body["IntegrationName"] = request.IntegrationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationProductType))
            {
                body["IntegrationProductType"] = request.IntegrationProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Liveness))
            {
                body["Liveness"] = request.Liveness;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverTime))
            {
                body["RecoverTime"] = request.RecoverTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stat))
            {
                body["Stat"] = request.Stat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.State))
            {
                body["State"] = request.State;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about an integration.
         *
         * @param request UpdateIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateIntegrationResponse
         */
        public async Task<UpdateIntegrationResponse> UpdateIntegrationWithOptionsAsync(UpdateIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRecover))
            {
                body["AutoRecover"] = request.AutoRecover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DuplicateKey))
            {
                body["DuplicateKey"] = request.DuplicateKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtendedFieldRedefineRules))
            {
                body["ExtendedFieldRedefineRules"] = request.ExtendedFieldRedefineRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FieldRedefineRules))
            {
                body["FieldRedefineRules"] = request.FieldRedefineRules;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InitiativeRecoverField))
            {
                body["InitiativeRecoverField"] = request.InitiativeRecoverField;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InitiativeRecoverValue))
            {
                body["InitiativeRecoverValue"] = request.InitiativeRecoverValue;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationId))
            {
                body["IntegrationId"] = request.IntegrationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationName))
            {
                body["IntegrationName"] = request.IntegrationName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationProductType))
            {
                body["IntegrationProductType"] = request.IntegrationProductType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Liveness))
            {
                body["Liveness"] = request.Liveness;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverTime))
            {
                body["RecoverTime"] = request.RecoverTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stat))
            {
                body["Stat"] = request.Stat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.State))
            {
                body["State"] = request.State;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about an integration.
         *
         * @param request UpdateIntegrationRequest
         * @return UpdateIntegrationResponse
         */
        public UpdateIntegrationResponse UpdateIntegration(UpdateIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the information about an integration.
         *
         * @param request UpdateIntegrationRequest
         * @return UpdateIntegrationResponse
         */
        public async Task<UpdateIntegrationResponse> UpdateIntegrationAsync(UpdateIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新删除的metric
         *
         * @param request UpdateMetricDropRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateMetricDropResponse
         */
        public UpdateMetricDropResponse UpdateMetricDropWithOptions(UpdateMetricDropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricDrop))
            {
                query["MetricDrop"] = request.MetricDrop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateMetricDrop",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateMetricDropResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新删除的metric
         *
         * @param request UpdateMetricDropRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateMetricDropResponse
         */
        public async Task<UpdateMetricDropResponse> UpdateMetricDropWithOptionsAsync(UpdateMetricDropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MetricDrop))
            {
                query["MetricDrop"] = request.MetricDrop;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateMetricDrop",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateMetricDropResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新删除的metric
         *
         * @param request UpdateMetricDropRequest
         * @return UpdateMetricDropResponse
         */
        public UpdateMetricDropResponse UpdateMetricDrop(UpdateMetricDropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateMetricDropWithOptions(request, runtime);
        }

        /**
         * @summary 更新删除的metric
         *
         * @param request UpdateMetricDropRequest
         * @return UpdateMetricDropResponse
         */
        public async Task<UpdateMetricDropResponse> UpdateMetricDropAsync(UpdateMetricDropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateMetricDropWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新Prometheus告警规则
         *
         * @param request UpdatePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusAlertRuleResponse
         */
        public UpdatePrometheusAlertRuleResponse UpdatePrometheusAlertRuleWithOptions(UpdatePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                query["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                query["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                query["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyType))
            {
                query["NotifyType"] = request.NotifyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusAlertRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新Prometheus告警规则
         *
         * @param request UpdatePrometheusAlertRuleRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusAlertRuleResponse
         */
        public async Task<UpdatePrometheusAlertRuleResponse> UpdatePrometheusAlertRuleWithOptionsAsync(UpdatePrometheusAlertRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertId))
            {
                query["AlertId"] = request.AlertId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AlertName))
            {
                query["AlertName"] = request.AlertName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Annotations))
            {
                query["Annotations"] = request.Annotations;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DispatchRuleId))
            {
                query["DispatchRuleId"] = request.DispatchRuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                query["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Expression))
            {
                query["Expression"] = request.Expression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                query["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Message))
            {
                query["Message"] = request.Message;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NotifyType))
            {
                query["NotifyType"] = request.NotifyType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusAlertRule",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusAlertRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新Prometheus告警规则
         *
         * @param request UpdatePrometheusAlertRuleRequest
         * @return UpdatePrometheusAlertRuleResponse
         */
        public UpdatePrometheusAlertRuleResponse UpdatePrometheusAlertRule(UpdatePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusAlertRuleWithOptions(request, runtime);
        }

        /**
         * @summary 更新Prometheus告警规则
         *
         * @param request UpdatePrometheusAlertRuleRequest
         * @return UpdatePrometheusAlertRuleResponse
         */
        public async Task<UpdatePrometheusAlertRuleResponse> UpdatePrometheusAlertRuleAsync(UpdatePrometheusAlertRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusAlertRuleWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the data sources of Prometheus instance for GlobalView.
         *
         * @param request UpdatePrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusGlobalViewResponse
         */
        public UpdatePrometheusGlobalViewResponse UpdatePrometheusGlobalViewWithOptions(UpdatePrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllSubClustersSuccess))
            {
                query["AllSubClustersSuccess"] = request.AllSubClustersSuccess;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MostRegionId))
            {
                query["MostRegionId"] = request.MostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubClustersJson))
            {
                query["SubClustersJson"] = request.SubClustersJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusGlobalViewResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the data sources of Prometheus instance for GlobalView.
         *
         * @param request UpdatePrometheusGlobalViewRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusGlobalViewResponse
         */
        public async Task<UpdatePrometheusGlobalViewResponse> UpdatePrometheusGlobalViewWithOptionsAsync(UpdatePrometheusGlobalViewRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AllSubClustersSuccess))
            {
                query["AllSubClustersSuccess"] = request.AllSubClustersSuccess;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MostRegionId))
            {
                query["MostRegionId"] = request.MostRegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubClustersJson))
            {
                query["SubClustersJson"] = request.SubClustersJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusGlobalView",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusGlobalViewResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the data sources of Prometheus instance for GlobalView.
         *
         * @param request UpdatePrometheusGlobalViewRequest
         * @return UpdatePrometheusGlobalViewResponse
         */
        public UpdatePrometheusGlobalViewResponse UpdatePrometheusGlobalView(UpdatePrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusGlobalViewWithOptions(request, runtime);
        }

        /**
         * @summary Updates the data sources of Prometheus instance for GlobalView.
         *
         * @param request UpdatePrometheusGlobalViewRequest
         * @return UpdatePrometheusGlobalViewResponse
         */
        public async Task<UpdatePrometheusGlobalViewResponse> UpdatePrometheusGlobalViewAsync(UpdatePrometheusGlobalViewRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusGlobalViewWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Update Prometheus instance config.
         *
         * @param request UpdatePrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusInstanceResponse
         */
        public UpdatePrometheusInstanceResponse UpdatePrometheusInstanceWithOptions(UpdatePrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArchiveDuration))
            {
                query["ArchiveDuration"] = request.ArchiveDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StorageDuration))
            {
                query["StorageDuration"] = request.StorageDuration;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Update Prometheus instance config.
         *
         * @param request UpdatePrometheusInstanceRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusInstanceResponse
         */
        public async Task<UpdatePrometheusInstanceResponse> UpdatePrometheusInstanceWithOptionsAsync(UpdatePrometheusInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ArchiveDuration))
            {
                query["ArchiveDuration"] = request.ArchiveDuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StorageDuration))
            {
                query["StorageDuration"] = request.StorageDuration;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusInstance",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Update Prometheus instance config.
         *
         * @param request UpdatePrometheusInstanceRequest
         * @return UpdatePrometheusInstanceResponse
         */
        public UpdatePrometheusInstanceResponse UpdatePrometheusInstance(UpdatePrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusInstanceWithOptions(request, runtime);
        }

        /**
         * @summary Update Prometheus instance config.
         *
         * @param request UpdatePrometheusInstanceRequest
         * @return UpdatePrometheusInstanceResponse
         */
        public async Task<UpdatePrometheusInstanceResponse> UpdatePrometheusInstanceAsync(UpdatePrometheusInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusInstanceWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the configurations of an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusIntegrationResponse
         */
        public UpdatePrometheusIntegrationResponse UpdatePrometheusIntegrationWithOptions(UpdatePrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusIntegrationResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusIntegrationRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusIntegrationResponse
         */
        public async Task<UpdatePrometheusIntegrationResponse> UpdatePrometheusIntegrationWithOptionsAsync(UpdatePrometheusIntegrationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IntegrationType))
            {
                query["IntegrationType"] = request.IntegrationType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                query["Param"] = request.Param;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusIntegration",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusIntegrationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the configurations of an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusIntegrationRequest
         * @return UpdatePrometheusIntegrationResponse
         */
        public UpdatePrometheusIntegrationResponse UpdatePrometheusIntegration(UpdatePrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusIntegrationWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the configurations of an exporter that is integrated into a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusIntegrationRequest
         * @return UpdatePrometheusIntegrationResponse
         */
        public async Task<UpdatePrometheusIntegrationResponse> UpdatePrometheusIntegrationAsync(UpdatePrometheusIntegrationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusIntegrationWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusMonitoringResponse
         */
        public UpdatePrometheusMonitoringResponse UpdatePrometheusMonitoringWithOptions(UpdatePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusMonitoringResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusMonitoringResponse
         */
        public async Task<UpdatePrometheusMonitoringResponse> UpdatePrometheusMonitoringWithOptionsAsync(UpdatePrometheusMonitoringRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigYaml))
            {
                body["ConfigYaml"] = request.ConfigYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusMonitoring",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusMonitoringResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringRequest
         * @return UpdatePrometheusMonitoringResponse
         */
        public UpdatePrometheusMonitoringResponse UpdatePrometheusMonitoring(UpdatePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusMonitoringWithOptions(request, runtime);
        }

        /**
         * @summary Updates the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringRequest
         * @return UpdatePrometheusMonitoringResponse
         */
        public async Task<UpdatePrometheusMonitoringResponse> UpdatePrometheusMonitoringAsync(UpdatePrometheusMonitoringRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusMonitoringWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Updates the status of the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusMonitoringStatusResponse
         */
        public UpdatePrometheusMonitoringStatusResponse UpdatePrometheusMonitoringStatusWithOptions(UpdatePrometheusMonitoringStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusMonitoringStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusMonitoringStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Updates the status of the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusMonitoringStatusResponse
         */
        public async Task<UpdatePrometheusMonitoringStatusResponse> UpdatePrometheusMonitoringStatusWithOptionsAsync(UpdatePrometheusMonitoringStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitoringName))
            {
                query["MonitoringName"] = request.MonitoringName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusMonitoringStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusMonitoringStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Updates the status of the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringStatusRequest
         * @return UpdatePrometheusMonitoringStatusResponse
         */
        public UpdatePrometheusMonitoringStatusResponse UpdatePrometheusMonitoringStatus(UpdatePrometheusMonitoringStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusMonitoringStatusWithOptions(request, runtime);
        }

        /**
         * @summary Updates the status of the monitoring configuration of a Prometheus instance.
         *
         * @param request UpdatePrometheusMonitoringStatusRequest
         * @return UpdatePrometheusMonitoringStatusResponse
         */
        public async Task<UpdatePrometheusMonitoringStatusResponse> UpdatePrometheusMonitoringStatusAsync(UpdatePrometheusMonitoringStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusMonitoringStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusRemoteWriteResponse
         */
        public UpdatePrometheusRemoteWriteResponse UpdatePrometheusRemoteWriteWithOptions(UpdatePrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteName))
            {
                query["RemoteWriteName"] = request.RemoteWriteName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteYaml))
            {
                body["RemoteWriteYaml"] = request.RemoteWriteYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusRemoteWriteResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusRemoteWriteRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdatePrometheusRemoteWriteResponse
         */
        public async Task<UpdatePrometheusRemoteWriteResponse> UpdatePrometheusRemoteWriteWithOptionsAsync(UpdatePrometheusRemoteWriteRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClusterId))
            {
                query["ClusterId"] = request.ClusterId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteName))
            {
                query["RemoteWriteName"] = request.RemoteWriteName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RemoteWriteYaml))
            {
                body["RemoteWriteYaml"] = request.RemoteWriteYaml;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdatePrometheusRemoteWrite",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdatePrometheusRemoteWriteResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusRemoteWriteRequest
         * @return UpdatePrometheusRemoteWriteResponse
         */
        public UpdatePrometheusRemoteWriteResponse UpdatePrometheusRemoteWrite(UpdatePrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdatePrometheusRemoteWriteWithOptions(request, runtime);
        }

        /**
         * @summary Modifies a remote write configuration item of a Prometheus instance for Container Service or a Prometheus instance for ECS.
         *
         * @param request UpdatePrometheusRemoteWriteRequest
         * @return UpdatePrometheusRemoteWriteResponse
         */
        public async Task<UpdatePrometheusRemoteWriteResponse> UpdatePrometheusRemoteWriteAsync(UpdatePrometheusRemoteWriteRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdatePrometheusRemoteWriteWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新前端监控应用信息
         *
         * @param request UpdateRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateRumAppResponse
         */
        public UpdateRumAppResponse UpdateRumAppWithOptions(UpdateRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRestart))
            {
                query["AutoRestart"] = request.AutoRestart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsSubscribe))
            {
                query["IsSubscribe"] = request.IsSubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Restart))
            {
                query["Restart"] = request.Restart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceDomainOperationJson))
            {
                query["ServiceDomainOperationJson"] = request.ServiceDomainOperationJson;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stop))
            {
                query["Stop"] = request.Stop;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRumAppResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新前端监控应用信息
         *
         * @param request UpdateRumAppRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateRumAppResponse
         */
        public async Task<UpdateRumAppResponse> UpdateRumAppWithOptionsAsync(UpdateRumAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AutoRestart))
            {
                query["AutoRestart"] = request.AutoRestart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsSubscribe))
            {
                query["IsSubscribe"] = request.IsSubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Restart))
            {
                query["Restart"] = request.Restart;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceDomainOperationJson))
            {
                query["ServiceDomainOperationJson"] = request.ServiceDomainOperationJson;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Stop))
            {
                query["Stop"] = request.Stop;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRumApp",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRumAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新前端监控应用信息
         *
         * @param request UpdateRumAppRequest
         * @return UpdateRumAppResponse
         */
        public UpdateRumAppResponse UpdateRumApp(UpdateRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRumAppWithOptions(request, runtime);
        }

        /**
         * @summary 更新前端监控应用信息
         *
         * @param request UpdateRumAppRequest
         * @return UpdateRumAppResponse
         */
        public async Task<UpdateRumAppResponse> UpdateRumAppAsync(UpdateRumAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRumAppWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新Sourcemap文件状态
         *
         * @param request UpdateRumFileStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateRumFileStatusResponse
         */
        public UpdateRumFileStatusResponse UpdateRumFileStatusWithOptions(UpdateRumFileStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRumFileStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRumFileStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新Sourcemap文件状态
         *
         * @param request UpdateRumFileStatusRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateRumFileStatusResponse
         */
        public async Task<UpdateRumFileStatusResponse> UpdateRumFileStatusWithOptionsAsync(UpdateRumFileStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Size))
            {
                query["Size"] = request.Size;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Uuid))
            {
                query["Uuid"] = request.Uuid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionId))
            {
                query["VersionId"] = request.VersionId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRumFileStatus",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRumFileStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新Sourcemap文件状态
         *
         * @param request UpdateRumFileStatusRequest
         * @return UpdateRumFileStatusResponse
         */
        public UpdateRumFileStatusResponse UpdateRumFileStatus(UpdateRumFileStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRumFileStatusWithOptions(request, runtime);
        }

        /**
         * @summary 更新Sourcemap文件状态
         *
         * @param request UpdateRumFileStatusRequest
         * @return UpdateRumFileStatusResponse
         */
        public async Task<UpdateRumFileStatusResponse> UpdateRumFileStatusAsync(UpdateRumFileStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRumFileStatusWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新定时拨测任务
         *
         * @param tmpReq UpdateTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateTimingSyntheticTaskResponse
         */
        public UpdateTimingSyntheticTaskResponse UpdateTimingSyntheticTaskWithOptions(UpdateTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateTimingSyntheticTaskShrinkRequest request = new UpdateTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AvailableAssertions))
            {
                request.AvailableAssertionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AvailableAssertions, "AvailableAssertions", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonSetting))
            {
                request.CommonSettingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonSetting, "CommonSetting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CustomPeriod))
            {
                request.CustomPeriodShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CustomPeriod, "CustomPeriod", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorConf))
            {
                request.MonitorConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorConf, "MonitorConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitors))
            {
                request.MonitorsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitors, "Monitors", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableAssertionsShrink))
            {
                query["AvailableAssertions"] = request.AvailableAssertionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonSettingShrink))
            {
                query["CommonSetting"] = request.CommonSettingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPeriodShrink))
            {
                query["CustomPeriod"] = request.CustomPeriodShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Frequency))
            {
                query["Frequency"] = request.Frequency;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorConfShrink))
            {
                query["MonitorConf"] = request.MonitorConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorsShrink))
            {
                query["Monitors"] = request.MonitorsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTimingSyntheticTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新定时拨测任务
         *
         * @param tmpReq UpdateTimingSyntheticTaskRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateTimingSyntheticTaskResponse
         */
        public async Task<UpdateTimingSyntheticTaskResponse> UpdateTimingSyntheticTaskWithOptionsAsync(UpdateTimingSyntheticTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateTimingSyntheticTaskShrinkRequest request = new UpdateTimingSyntheticTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.AvailableAssertions))
            {
                request.AvailableAssertionsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.AvailableAssertions, "AvailableAssertions", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CommonSetting))
            {
                request.CommonSettingShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CommonSetting, "CommonSetting", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.CustomPeriod))
            {
                request.CustomPeriodShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.CustomPeriod, "CustomPeriod", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.MonitorConf))
            {
                request.MonitorConfShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.MonitorConf, "MonitorConf", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Monitors))
            {
                request.MonitorsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Monitors, "Monitors", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Tags))
            {
                request.TagsShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Tags, "Tags", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableAssertionsShrink))
            {
                query["AvailableAssertions"] = request.AvailableAssertionsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CommonSettingShrink))
            {
                query["CommonSetting"] = request.CommonSettingShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CustomPeriodShrink))
            {
                query["CustomPeriod"] = request.CustomPeriodShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Frequency))
            {
                query["Frequency"] = request.Frequency;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorConfShrink))
            {
                query["MonitorConf"] = request.MonitorConfShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MonitorsShrink))
            {
                query["Monitors"] = request.MonitorsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagsShrink))
            {
                query["Tags"] = request.TagsShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTimingSyntheticTask",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTimingSyntheticTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新定时拨测任务
         *
         * @param request UpdateTimingSyntheticTaskRequest
         * @return UpdateTimingSyntheticTaskResponse
         */
        public UpdateTimingSyntheticTaskResponse UpdateTimingSyntheticTask(UpdateTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTimingSyntheticTaskWithOptions(request, runtime);
        }

        /**
         * @summary 更新定时拨测任务
         *
         * @param request UpdateTimingSyntheticTaskRequest
         * @return UpdateTimingSyntheticTaskResponse
         */
        public async Task<UpdateTimingSyntheticTaskResponse> UpdateTimingSyntheticTaskAsync(UpdateTimingSyntheticTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTimingSyntheticTaskWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Modifies the information about a webhook alert contact.
         *
         * @description This operation is no longer maintained. Call the CreateOrUpdateWebhookContact operation in the new alter management module to create or modify a webhook alert contact.
         *
         * @param request UpdateWebhookRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateWebhookResponse
         */
        public UpdateWebhookResponse UpdateWebhookWithOptions(UpdateWebhookRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                query["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpHeaders))
            {
                query["HttpHeaders"] = request.HttpHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpParams))
            {
                query["HttpParams"] = request.HttpParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                query["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                query["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWebhook",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWebhookResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about a webhook alert contact.
         *
         * @description This operation is no longer maintained. Call the CreateOrUpdateWebhookContact operation in the new alter management module to create or modify a webhook alert contact.
         *
         * @param request UpdateWebhookRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpdateWebhookResponse
         */
        public async Task<UpdateWebhookResponse> UpdateWebhookWithOptionsAsync(UpdateWebhookRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Body))
            {
                query["Body"] = request.Body;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactId))
            {
                query["ContactId"] = request.ContactId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContactName))
            {
                query["ContactName"] = request.ContactName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpHeaders))
            {
                query["HttpHeaders"] = request.HttpHeaders;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HttpParams))
            {
                query["HttpParams"] = request.HttpParams;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Method))
            {
                query["Method"] = request.Method;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RecoverBody))
            {
                query["RecoverBody"] = request.RecoverBody;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateWebhook",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateWebhookResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Modifies the information about a webhook alert contact.
         *
         * @description This operation is no longer maintained. Call the CreateOrUpdateWebhookContact operation in the new alter management module to create or modify a webhook alert contact.
         *
         * @param request UpdateWebhookRequest
         * @return UpdateWebhookResponse
         */
        public UpdateWebhookResponse UpdateWebhook(UpdateWebhookRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateWebhookWithOptions(request, runtime);
        }

        /**
         * @summary Modifies the information about a webhook alert contact.
         *
         * @description This operation is no longer maintained. Call the CreateOrUpdateWebhookContact operation in the new alter management module to create or modify a webhook alert contact.
         *
         * @param request UpdateWebhookRequest
         * @return UpdateWebhookResponse
         */
        public async Task<UpdateWebhookResponse> UpdateWebhookAsync(UpdateWebhookRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateWebhookWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Update the AddonRelease information.
         *
         * @param request UpgradeAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeAddonReleaseResponse
         */
        public UpgradeAddonReleaseResponse UpgradeAddonReleaseWithOptions(UpgradeAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonVersion))
            {
                query["AddonVersion"] = request.AddonVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeAddonReleaseResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Update the AddonRelease information.
         *
         * @param request UpgradeAddonReleaseRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeAddonReleaseResponse
         */
        public async Task<UpgradeAddonReleaseResponse> UpgradeAddonReleaseWithOptionsAsync(UpgradeAddonReleaseRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AddonVersion))
            {
                query["AddonVersion"] = request.AddonVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DryRun))
            {
                query["DryRun"] = request.DryRun;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ReleaseName))
            {
                query["ReleaseName"] = request.ReleaseName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeAddonRelease",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeAddonReleaseResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Update the AddonRelease information.
         *
         * @param request UpgradeAddonReleaseRequest
         * @return UpgradeAddonReleaseResponse
         */
        public UpgradeAddonReleaseResponse UpgradeAddonRelease(UpgradeAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpgradeAddonReleaseWithOptions(request, runtime);
        }

        /**
         * @summary Update the AddonRelease information.
         *
         * @param request UpgradeAddonReleaseRequest
         * @return UpgradeAddonReleaseResponse
         */
        public async Task<UpgradeAddonReleaseResponse> UpgradeAddonReleaseAsync(UpgradeAddonReleaseRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpgradeAddonReleaseWithOptionsAsync(request, runtime);
        }

        /**
         * @summary 更新 feature信息
         *
         * @param request UpgradeEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeEnvironmentFeatureResponse
         */
        public UpgradeEnvironmentFeatureResponse UpgradeEnvironmentFeatureWithOptions(UpgradeEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureVersion))
            {
                query["FeatureVersion"] = request.FeatureVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeEnvironmentFeatureResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary 更新 feature信息
         *
         * @param request UpgradeEnvironmentFeatureRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UpgradeEnvironmentFeatureResponse
         */
        public async Task<UpgradeEnvironmentFeatureResponse> UpgradeEnvironmentFeatureWithOptionsAsync(UpgradeEnvironmentFeatureRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunLang))
            {
                query["AliyunLang"] = request.AliyunLang;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnvironmentId))
            {
                query["EnvironmentId"] = request.EnvironmentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureName))
            {
                query["FeatureName"] = request.FeatureName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FeatureVersion))
            {
                query["FeatureVersion"] = request.FeatureVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Values))
            {
                query["Values"] = request.Values;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpgradeEnvironmentFeature",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpgradeEnvironmentFeatureResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary 更新 feature信息
         *
         * @param request UpgradeEnvironmentFeatureRequest
         * @return UpgradeEnvironmentFeatureResponse
         */
        public UpgradeEnvironmentFeatureResponse UpgradeEnvironmentFeature(UpgradeEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpgradeEnvironmentFeatureWithOptions(request, runtime);
        }

        /**
         * @summary 更新 feature信息
         *
         * @param request UpgradeEnvironmentFeatureRequest
         * @return UpgradeEnvironmentFeatureResponse
         */
        public async Task<UpgradeEnvironmentFeatureResponse> UpgradeEnvironmentFeatureAsync(UpgradeEnvironmentFeatureRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpgradeEnvironmentFeatureWithOptionsAsync(request, runtime);
        }

        /**
         * @summary Uploads a SourceMap file to ARMS Browser Monitoring.
         *
         * @param request UploadRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UploadResponse
         */
        public UploadResponse UploadWithOptions(UploadRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Edition))
            {
                query["Edition"] = request.Edition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Version))
            {
                query["Version"] = request.Version;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.File))
            {
                body["File"] = request.File;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "Upload",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadResponse>(CallApi(params_, req, runtime));
        }

        /**
         * @summary Uploads a SourceMap file to ARMS Browser Monitoring.
         *
         * @param request UploadRequest
         * @param runtime runtime options for this request RuntimeOptions
         * @return UploadResponse
         */
        public async Task<UploadResponse> UploadWithOptionsAsync(UploadRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Edition))
            {
                query["Edition"] = request.Edition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Pid))
            {
                query["Pid"] = request.Pid;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Version))
            {
                query["Version"] = request.Version;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.File))
            {
                body["File"] = request.File;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "Upload",
                Version = "2019-08-08",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UploadResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
         * @summary Uploads a SourceMap file to ARMS Browser Monitoring.
         *
         * @param request UploadRequest
         * @return UploadResponse
         */
        public UploadResponse Upload(UploadRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UploadWithOptions(request, runtime);
        }

        /**
         * @summary Uploads a SourceMap file to ARMS Browser Monitoring.
         *
         * @param request UploadRequest
         * @return UploadResponse
         */
        public async Task<UploadResponse> UploadAsync(UploadRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UploadWithOptionsAsync(request, runtime);
        }

    }
}
