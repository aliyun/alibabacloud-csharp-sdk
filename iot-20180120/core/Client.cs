// This file is auto-generated, don't edit it. Thanks.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;

using Tea;
using Tea.Utils;

using AlibabaCloud.SDK.Iot20180120.Models;

namespace AlibabaCloud.SDK.Iot20180120
{
    public class Client : AlibabaCloud.OpenApiClient.Client
    {

        public Client(AlibabaCloud.OpenApiClient.Models.Config config): base(config)
        {
            this._endpointRule = "regional";
            this._endpointMap = new Dictionary<string, string>
            {
                {"ap-northeast-2-pop", "iot.aliyuncs.com"},
                {"ap-south-1", "iot.aliyuncs.com"},
                {"ap-southeast-2", "iot.aliyuncs.com"},
                {"ap-southeast-3", "iot.aliyuncs.com"},
                {"ap-southeast-5", "iot.aliyuncs.com"},
                {"cn-beijing-finance-1", "iot.aliyuncs.com"},
                {"cn-beijing-finance-pop", "iot.aliyuncs.com"},
                {"cn-beijing-gov-1", "iot.aliyuncs.com"},
                {"cn-beijing-nu16-b01", "iot.aliyuncs.com"},
                {"cn-chengdu", "iot.aliyuncs.com"},
                {"cn-edge-1", "iot.aliyuncs.com"},
                {"cn-fujian", "iot.aliyuncs.com"},
                {"cn-haidian-cm12-c01", "iot.aliyuncs.com"},
                {"cn-hangzhou-bj-b01", "iot.aliyuncs.com"},
                {"cn-hangzhou-finance", "iot.aliyuncs.com"},
                {"cn-hangzhou-internal-prod-1", "iot.aliyuncs.com"},
                {"cn-hangzhou-internal-test-1", "iot.aliyuncs.com"},
                {"cn-hangzhou-internal-test-2", "iot.aliyuncs.com"},
                {"cn-hangzhou-internal-test-3", "iot.aliyuncs.com"},
                {"cn-hangzhou-test-306", "iot.aliyuncs.com"},
                {"cn-hongkong", "iot.aliyuncs.com"},
                {"cn-hongkong-finance-pop", "iot.aliyuncs.com"},
                {"cn-huhehaote", "iot.aliyuncs.com"},
                {"cn-huhehaote-nebula-1", "iot.aliyuncs.com"},
                {"cn-qingdao", "iot.aliyuncs.com"},
                {"cn-qingdao-nebula", "iot.aliyuncs.com"},
                {"cn-shanghai-et15-b01", "iot.aliyuncs.com"},
                {"cn-shanghai-et2-b01", "iot.aliyuncs.com"},
                {"cn-shanghai-finance-1", "iot.aliyuncs.com"},
                {"cn-shanghai-inner", "iot.aliyuncs.com"},
                {"cn-shanghai-internal-test-1", "iot.aliyuncs.com"},
                {"cn-shenzhen-finance-1", "iot.aliyuncs.com"},
                {"cn-shenzhen-inner", "iot.aliyuncs.com"},
                {"cn-shenzhen-st4-d01", "iot.aliyuncs.com"},
                {"cn-shenzhen-su18-b01", "iot.aliyuncs.com"},
                {"cn-wuhan", "iot.aliyuncs.com"},
                {"cn-wulanchabu", "iot.aliyuncs.com"},
                {"cn-yushanfang", "iot.aliyuncs.com"},
                {"cn-zhangbei", "iot.aliyuncs.com"},
                {"cn-zhangbei-na61-b01", "iot.aliyuncs.com"},
                {"cn-zhangjiakou", "iot.aliyuncs.com"},
                {"cn-zhangjiakou-na62-a01", "iot.aliyuncs.com"},
                {"cn-zhengzhou-nebula-1", "iot.aliyuncs.com"},
                {"eu-west-1", "iot.aliyuncs.com"},
                {"eu-west-1-oxs", "iot.aliyuncs.com"},
                {"me-east-1", "iot.aliyuncs.com"},
                {"rus-west-1-pop", "iot.aliyuncs.com"},
            };
            CheckConfig(config);
            this._endpoint = GetEndpoint("iot", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
        }


        public string GetEndpoint(string productId, string regionId, string endpointRule, string network, string suffix, Dictionary<string, string> endpointMap, string endpoint)
        {
            if (!AlibabaCloud.TeaUtil.Common.Empty(endpoint))
            {
                return endpoint;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(endpointMap) && !AlibabaCloud.TeaUtil.Common.Empty(endpointMap.Get(regionId)))
            {
                return endpointMap.Get(regionId);
            }
            return AlibabaCloud.EndpointUtil.Common.GetEndpointRules(productId, regionId, endpointRule, network, suffix);
        }

        public AddDataForApiSourceResponse AddDataForApiSourceWithOptions(AddDataForApiSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiId))
            {
                query["ApiId"] = request.ApiId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                query["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddDataForApiSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddDataForApiSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AddDataForApiSourceResponse> AddDataForApiSourceWithOptionsAsync(AddDataForApiSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiId))
            {
                query["ApiId"] = request.ApiId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Content))
            {
                query["Content"] = request.Content;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddDataForApiSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddDataForApiSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AddDataForApiSourceResponse AddDataForApiSource(AddDataForApiSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddDataForApiSourceWithOptions(request, runtime);
        }

        public async Task<AddDataForApiSourceResponse> AddDataForApiSourceAsync(AddDataForApiSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddDataForApiSourceWithOptionsAsync(request, runtime);
        }

        public AddDeviceToSharePromotionResponse AddDeviceToSharePromotionWithOptions(AddDeviceToSharePromotionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSimpleInfoList))
            {
                body["DeviceSimpleInfoList"] = request.DeviceSimpleInfoList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddDeviceToSharePromotion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddDeviceToSharePromotionResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AddDeviceToSharePromotionResponse> AddDeviceToSharePromotionWithOptionsAsync(AddDeviceToSharePromotionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSimpleInfoList))
            {
                body["DeviceSimpleInfoList"] = request.DeviceSimpleInfoList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddDeviceToSharePromotion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddDeviceToSharePromotionResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AddDeviceToSharePromotionResponse AddDeviceToSharePromotion(AddDeviceToSharePromotionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddDeviceToSharePromotionWithOptions(request, runtime);
        }

        public async Task<AddDeviceToSharePromotionResponse> AddDeviceToSharePromotionAsync(AddDeviceToSharePromotionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddDeviceToSharePromotionWithOptionsAsync(request, runtime);
        }

        public AddShareTaskDeviceResponse AddShareTaskDeviceWithOptions(AddShareTaskDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddShareTaskDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddShareTaskDeviceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AddShareTaskDeviceResponse> AddShareTaskDeviceWithOptionsAsync(AddShareTaskDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AddShareTaskDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AddShareTaskDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AddShareTaskDeviceResponse AddShareTaskDevice(AddShareTaskDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AddShareTaskDeviceWithOptions(request, runtime);
        }

        public async Task<AddShareTaskDeviceResponse> AddShareTaskDeviceAsync(AddShareTaskDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AddShareTaskDeviceWithOptionsAsync(request, runtime);
        }

        public AsyncRRpcResponse AsyncRRpcWithOptions(AsyncRRpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtInfo))
            {
                query["ExtInfo"] = request.ExtInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                body["MessageContent"] = request.MessageContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AsyncRRpc",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AsyncRRpcResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AsyncRRpcResponse> AsyncRRpcWithOptionsAsync(AsyncRRpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ExtInfo))
            {
                query["ExtInfo"] = request.ExtInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                body["MessageContent"] = request.MessageContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AsyncRRpc",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AsyncRRpcResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AsyncRRpcResponse AsyncRRpc(AsyncRRpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AsyncRRpcWithOptions(request, runtime);
        }

        public async Task<AsyncRRpcResponse> AsyncRRpcAsync(AsyncRRpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AsyncRRpcWithOptionsAsync(request, runtime);
        }

        public AttachDestinationResponse AttachDestinationWithOptions(AttachDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsFailover))
            {
                query["IsFailover"] = request.IsFailover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AttachDestinationResponse> AttachDestinationWithOptionsAsync(AttachDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsFailover))
            {
                query["IsFailover"] = request.IsFailover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AttachDestinationResponse AttachDestination(AttachDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AttachDestinationWithOptions(request, runtime);
        }

        public async Task<AttachDestinationResponse> AttachDestinationAsync(AttachDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AttachDestinationWithOptionsAsync(request, runtime);
        }

        public AttachParserDataSourceResponse AttachParserDataSourceWithOptions(AttachParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<AttachParserDataSourceResponse> AttachParserDataSourceWithOptionsAsync(AttachParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "AttachParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<AttachParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public AttachParserDataSourceResponse AttachParserDataSource(AttachParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return AttachParserDataSourceWithOptions(request, runtime);
        }

        public async Task<AttachParserDataSourceResponse> AttachParserDataSourceAsync(AttachParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await AttachParserDataSourceWithOptionsAsync(request, runtime);
        }

        public BatchAddDataForApiSourceResponse BatchAddDataForApiSourceWithOptions(BatchAddDataForApiSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiId))
            {
                query["ApiId"] = request.ApiId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentList))
            {
                query["ContentList"] = request.ContentList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddDataForApiSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddDataForApiSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchAddDataForApiSourceResponse> BatchAddDataForApiSourceWithOptionsAsync(BatchAddDataForApiSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiId))
            {
                query["ApiId"] = request.ApiId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentList))
            {
                query["ContentList"] = request.ContentList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddDataForApiSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddDataForApiSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchAddDataForApiSourceResponse BatchAddDataForApiSource(BatchAddDataForApiSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchAddDataForApiSourceWithOptions(request, runtime);
        }

        public async Task<BatchAddDataForApiSourceResponse> BatchAddDataForApiSourceAsync(BatchAddDataForApiSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchAddDataForApiSourceWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request BatchAddDeviceGroupRelationsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchAddDeviceGroupRelationsResponse
         */
        public BatchAddDeviceGroupRelationsResponse BatchAddDeviceGroupRelationsWithOptions(BatchAddDeviceGroupRelationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Device))
            {
                query["Device"] = request.Device;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddDeviceGroupRelations",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddDeviceGroupRelationsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request BatchAddDeviceGroupRelationsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchAddDeviceGroupRelationsResponse
         */
        public async Task<BatchAddDeviceGroupRelationsResponse> BatchAddDeviceGroupRelationsWithOptionsAsync(BatchAddDeviceGroupRelationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Device))
            {
                query["Device"] = request.Device;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddDeviceGroupRelations",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddDeviceGroupRelationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request BatchAddDeviceGroupRelationsRequest
          * @return BatchAddDeviceGroupRelationsResponse
         */
        public BatchAddDeviceGroupRelationsResponse BatchAddDeviceGroupRelations(BatchAddDeviceGroupRelationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchAddDeviceGroupRelationsWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request BatchAddDeviceGroupRelationsRequest
          * @return BatchAddDeviceGroupRelationsResponse
         */
        public async Task<BatchAddDeviceGroupRelationsResponse> BatchAddDeviceGroupRelationsAsync(BatchAddDeviceGroupRelationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchAddDeviceGroupRelationsWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can attach up to 10 sub-devices to a gateway in a single call.
          * *   The API operation caller must be the gateway owner.
          * *   If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.
          * *   If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.
          * *   After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the `/sys/${productKey}/${deviceName}/thing/topo/change` topic to push information that includes the result of this operation to the gateway. For more information, see [Notify gateways of changes of topological relationships](~~89299~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per Alibaba Cloud account. 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchAddThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchAddThingTopoResponse
         */
        public BatchAddThingTopoResponse BatchAddThingTopoWithOptions(BatchAddThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwDeviceName))
            {
                query["GwDeviceName"] = request.GwDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwProductKey))
            {
                query["GwProductKey"] = request.GwProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopoAddItem))
            {
                query["TopoAddItem"] = request.TopoAddItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddThingTopoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can attach up to 10 sub-devices to a gateway in a single call.
          * *   The API operation caller must be the gateway owner.
          * *   If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.
          * *   If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.
          * *   After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the `/sys/${productKey}/${deviceName}/thing/topo/change` topic to push information that includes the result of this operation to the gateway. For more information, see [Notify gateways of changes of topological relationships](~~89299~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per Alibaba Cloud account. 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchAddThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchAddThingTopoResponse
         */
        public async Task<BatchAddThingTopoResponse> BatchAddThingTopoWithOptionsAsync(BatchAddThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwDeviceName))
            {
                query["GwDeviceName"] = request.GwDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwProductKey))
            {
                query["GwProductKey"] = request.GwProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopoAddItem))
            {
                query["TopoAddItem"] = request.TopoAddItem;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchAddThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchAddThingTopoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can attach up to 10 sub-devices to a gateway in a single call.
          * *   The API operation caller must be the gateway owner.
          * *   If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.
          * *   If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.
          * *   After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the `/sys/${productKey}/${deviceName}/thing/topo/change` topic to push information that includes the result of this operation to the gateway. For more information, see [Notify gateways of changes of topological relationships](~~89299~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per Alibaba Cloud account. 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchAddThingTopoRequest
          * @return BatchAddThingTopoResponse
         */
        public BatchAddThingTopoResponse BatchAddThingTopo(BatchAddThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchAddThingTopoWithOptions(request, runtime);
        }

        /**
          * *   You can attach up to 10 sub-devices to a gateway in a single call.
          * *   The API operation caller must be the gateway owner.
          * *   If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.
          * *   If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.
          * *   After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the `/sys/${productKey}/${deviceName}/thing/topo/change` topic to push information that includes the result of this operation to the gateway. For more information, see [Notify gateways of changes of topological relationships](~~89299~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per Alibaba Cloud account. 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchAddThingTopoRequest
          * @return BatchAddThingTopoResponse
         */
        public async Task<BatchAddThingTopoResponse> BatchAddThingTopoAsync(BatchAddThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchAddThingTopoWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
         */
        public BatchBindDeviceToEdgeInstanceWithDriverResponse BatchBindDeviceToEdgeInstanceWithDriverWithOptions(BatchBindDeviceToEdgeInstanceWithDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindDeviceToEdgeInstanceWithDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindDeviceToEdgeInstanceWithDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
         */
        public async Task<BatchBindDeviceToEdgeInstanceWithDriverResponse> BatchBindDeviceToEdgeInstanceWithDriverWithOptionsAsync(BatchBindDeviceToEdgeInstanceWithDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindDeviceToEdgeInstanceWithDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindDeviceToEdgeInstanceWithDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
          * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
         */
        public BatchBindDeviceToEdgeInstanceWithDriverResponse BatchBindDeviceToEdgeInstanceWithDriver(BatchBindDeviceToEdgeInstanceWithDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchBindDeviceToEdgeInstanceWithDriverWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
          * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
         */
        public async Task<BatchBindDeviceToEdgeInstanceWithDriverResponse> BatchBindDeviceToEdgeInstanceWithDriverAsync(BatchBindDeviceToEdgeInstanceWithDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchBindDeviceToEdgeInstanceWithDriverWithOptionsAsync(request, runtime);
        }

        public BatchBindDevicesIntoProjectResponse BatchBindDevicesIntoProjectWithOptions(BatchBindDevicesIntoProjectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Devices))
            {
                body["Devices"] = request.Devices;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindDevicesIntoProject",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindDevicesIntoProjectResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchBindDevicesIntoProjectResponse> BatchBindDevicesIntoProjectWithOptionsAsync(BatchBindDevicesIntoProjectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Devices))
            {
                body["Devices"] = request.Devices;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindDevicesIntoProject",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindDevicesIntoProjectResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchBindDevicesIntoProjectResponse BatchBindDevicesIntoProject(BatchBindDevicesIntoProjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchBindDevicesIntoProjectWithOptions(request, runtime);
        }

        public async Task<BatchBindDevicesIntoProjectResponse> BatchBindDevicesIntoProjectAsync(BatchBindDevicesIntoProjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchBindDevicesIntoProjectWithOptionsAsync(request, runtime);
        }

        public BatchBindProductsIntoProjectResponse BatchBindProductsIntoProjectWithOptions(BatchBindProductsIntoProjectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKeys))
            {
                body["ProductKeys"] = request.ProductKeys;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindProductsIntoProject",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindProductsIntoProjectResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchBindProductsIntoProjectResponse> BatchBindProductsIntoProjectWithOptionsAsync(BatchBindProductsIntoProjectRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKeys))
            {
                body["ProductKeys"] = request.ProductKeys;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchBindProductsIntoProject",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchBindProductsIntoProjectResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchBindProductsIntoProjectResponse BatchBindProductsIntoProject(BatchBindProductsIntoProjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchBindProductsIntoProjectWithOptions(request, runtime);
        }

        public async Task<BatchBindProductsIntoProjectResponse> BatchBindProductsIntoProjectAsync(BatchBindProductsIntoProjectRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchBindProductsIntoProjectWithOptionsAsync(request, runtime);
        }

        /**
          * You can call this operation with the **BatchRegisterDeviceWithApplyId** operation to register multiple devices under a product. Each device carries a unique DeviceName.
          * Procedure:
          * 1\\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (**ApplyId**). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          * 2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          * 3\\. Call the [BatchRegisterDeviceWithApplyId](~~69514~~) operation to register multiple devices.
          * 4\\. Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to view the registration result.
          * 5\\. Call the [QueryPageByApplyId](~~69518~~) operation to query the information about the registered devices.
          * ## Limits
          * - You can specify a maximum of 10,000 DeviceNames in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckDeviceNamesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckDeviceNamesResponse
         */
        public BatchCheckDeviceNamesResponse BatchCheckDeviceNamesWithOptions(BatchCheckDeviceNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckDeviceNames",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckDeviceNamesResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can call this operation with the **BatchRegisterDeviceWithApplyId** operation to register multiple devices under a product. Each device carries a unique DeviceName.
          * Procedure:
          * 1\\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (**ApplyId**). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          * 2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          * 3\\. Call the [BatchRegisterDeviceWithApplyId](~~69514~~) operation to register multiple devices.
          * 4\\. Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to view the registration result.
          * 5\\. Call the [QueryPageByApplyId](~~69518~~) operation to query the information about the registered devices.
          * ## Limits
          * - You can specify a maximum of 10,000 DeviceNames in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckDeviceNamesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckDeviceNamesResponse
         */
        public async Task<BatchCheckDeviceNamesResponse> BatchCheckDeviceNamesWithOptionsAsync(BatchCheckDeviceNamesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckDeviceNames",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckDeviceNamesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can call this operation with the **BatchRegisterDeviceWithApplyId** operation to register multiple devices under a product. Each device carries a unique DeviceName.
          * Procedure:
          * 1\\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (**ApplyId**). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          * 2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          * 3\\. Call the [BatchRegisterDeviceWithApplyId](~~69514~~) operation to register multiple devices.
          * 4\\. Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to view the registration result.
          * 5\\. Call the [QueryPageByApplyId](~~69518~~) operation to query the information about the registered devices.
          * ## Limits
          * - You can specify a maximum of 10,000 DeviceNames in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckDeviceNamesRequest
          * @return BatchCheckDeviceNamesResponse
         */
        public BatchCheckDeviceNamesResponse BatchCheckDeviceNames(BatchCheckDeviceNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCheckDeviceNamesWithOptions(request, runtime);
        }

        /**
          * You can call this operation with the **BatchRegisterDeviceWithApplyId** operation to register multiple devices under a product. Each device carries a unique DeviceName.
          * Procedure:
          * 1\\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (**ApplyId**). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          * 2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          * 3\\. Call the [BatchRegisterDeviceWithApplyId](~~69514~~) operation to register multiple devices.
          * 4\\. Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to view the registration result.
          * 5\\. Call the [QueryPageByApplyId](~~69518~~) operation to query the information about the registered devices.
          * ## Limits
          * - You can specify a maximum of 10,000 DeviceNames in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckDeviceNamesRequest
          * @return BatchCheckDeviceNamesResponse
         */
        public async Task<BatchCheckDeviceNamesResponse> BatchCheckDeviceNamesAsync(BatchCheckDeviceNamesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCheckDeviceNamesWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckImportDeviceResponse
         */
        public BatchCheckImportDeviceResponse BatchCheckImportDeviceWithOptions(BatchCheckImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckImportDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckImportDeviceResponse
         */
        public async Task<BatchCheckImportDeviceResponse> BatchCheckImportDeviceWithOptionsAsync(BatchCheckImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckImportDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckImportDeviceRequest
          * @return BatchCheckImportDeviceResponse
         */
        public BatchCheckImportDeviceResponse BatchCheckImportDevice(BatchCheckImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCheckImportDeviceWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchCheckImportDeviceRequest
          * @return BatchCheckImportDeviceResponse
         */
        public async Task<BatchCheckImportDeviceResponse> BatchCheckImportDeviceAsync(BatchCheckImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCheckImportDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * The invalid device models returned if the call fails.
          *
          * @param request BatchCheckVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckVehicleDeviceResponse
         */
        public BatchCheckVehicleDeviceResponse BatchCheckVehicleDeviceWithOptions(BatchCheckVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckVehicleDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * The invalid device models returned if the call fails.
          *
          * @param request BatchCheckVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchCheckVehicleDeviceResponse
         */
        public async Task<BatchCheckVehicleDeviceResponse> BatchCheckVehicleDeviceWithOptionsAsync(BatchCheckVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCheckVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCheckVehicleDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * The invalid device models returned if the call fails.
          *
          * @param request BatchCheckVehicleDeviceRequest
          * @return BatchCheckVehicleDeviceResponse
         */
        public BatchCheckVehicleDeviceResponse BatchCheckVehicleDevice(BatchCheckVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCheckVehicleDeviceWithOptions(request, runtime);
        }

        /**
          * The invalid device models returned if the call fails.
          *
          * @param request BatchCheckVehicleDeviceRequest
          * @return BatchCheckVehicleDeviceResponse
         */
        public async Task<BatchCheckVehicleDeviceResponse> BatchCheckVehicleDeviceAsync(BatchCheckVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCheckVehicleDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchClearEdgeInstanceDeviceConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchClearEdgeInstanceDeviceConfigResponse
         */
        public BatchClearEdgeInstanceDeviceConfigResponse BatchClearEdgeInstanceDeviceConfigWithOptions(BatchClearEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchClearEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchClearEdgeInstanceDeviceConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchClearEdgeInstanceDeviceConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchClearEdgeInstanceDeviceConfigResponse
         */
        public async Task<BatchClearEdgeInstanceDeviceConfigResponse> BatchClearEdgeInstanceDeviceConfigWithOptionsAsync(BatchClearEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchClearEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchClearEdgeInstanceDeviceConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchClearEdgeInstanceDeviceConfigRequest
          * @return BatchClearEdgeInstanceDeviceConfigResponse
         */
        public BatchClearEdgeInstanceDeviceConfigResponse BatchClearEdgeInstanceDeviceConfig(BatchClearEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchClearEdgeInstanceDeviceConfigWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchClearEdgeInstanceDeviceConfigRequest
          * @return BatchClearEdgeInstanceDeviceConfigResponse
         */
        public async Task<BatchClearEdgeInstanceDeviceConfigResponse> BatchClearEdgeInstanceDeviceConfigAsync(BatchClearEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchClearEdgeInstanceDeviceConfigWithOptionsAsync(request, runtime);
        }

        public BatchCreateSoundCodeLabelResponse BatchCreateSoundCodeLabelWithOptions(BatchCreateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Total))
            {
                body["Total"] = request.Total;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateSoundCodeLabelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchCreateSoundCodeLabelResponse> BatchCreateSoundCodeLabelWithOptionsAsync(BatchCreateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Total))
            {
                body["Total"] = request.Total;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateSoundCodeLabelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchCreateSoundCodeLabelResponse BatchCreateSoundCodeLabel(BatchCreateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCreateSoundCodeLabelWithOptions(request, runtime);
        }

        public async Task<BatchCreateSoundCodeLabelResponse> BatchCreateSoundCodeLabelAsync(BatchCreateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCreateSoundCodeLabelWithOptionsAsync(request, runtime);
        }

        public BatchCreateSoundCodeLabelWithLabelsResponse BatchCreateSoundCodeLabelWithLabelsWithOptions(BatchCreateSoundCodeLabelWithLabelsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                body["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateSoundCodeLabelWithLabels",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateSoundCodeLabelWithLabelsResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchCreateSoundCodeLabelWithLabelsResponse> BatchCreateSoundCodeLabelWithLabelsWithOptionsAsync(BatchCreateSoundCodeLabelWithLabelsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Labels))
            {
                body["Labels"] = request.Labels;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchCreateSoundCodeLabelWithLabels",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchCreateSoundCodeLabelWithLabelsResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchCreateSoundCodeLabelWithLabelsResponse BatchCreateSoundCodeLabelWithLabels(BatchCreateSoundCodeLabelWithLabelsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchCreateSoundCodeLabelWithLabelsWithOptions(request, runtime);
        }

        public async Task<BatchCreateSoundCodeLabelWithLabelsResponse> BatchCreateSoundCodeLabelWithLabelsAsync(BatchCreateSoundCodeLabelWithLabelsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchCreateSoundCodeLabelWithLabelsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchDeleteDeviceGroupRelationsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchDeleteDeviceGroupRelationsResponse
         */
        public BatchDeleteDeviceGroupRelationsResponse BatchDeleteDeviceGroupRelationsWithOptions(BatchDeleteDeviceGroupRelationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Device))
            {
                query["Device"] = request.Device;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteDeviceGroupRelations",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteDeviceGroupRelationsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchDeleteDeviceGroupRelationsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchDeleteDeviceGroupRelationsResponse
         */
        public async Task<BatchDeleteDeviceGroupRelationsResponse> BatchDeleteDeviceGroupRelationsWithOptionsAsync(BatchDeleteDeviceGroupRelationsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Device))
            {
                query["Device"] = request.Device;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteDeviceGroupRelations",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteDeviceGroupRelationsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchDeleteDeviceGroupRelationsRequest
          * @return BatchDeleteDeviceGroupRelationsResponse
         */
        public BatchDeleteDeviceGroupRelationsResponse BatchDeleteDeviceGroupRelations(BatchDeleteDeviceGroupRelationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchDeleteDeviceGroupRelationsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchDeleteDeviceGroupRelationsRequest
          * @return BatchDeleteDeviceGroupRelationsResponse
         */
        public async Task<BatchDeleteDeviceGroupRelationsResponse> BatchDeleteDeviceGroupRelationsAsync(BatchDeleteDeviceGroupRelationsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchDeleteDeviceGroupRelationsWithOptionsAsync(request, runtime);
        }

        public BatchDeleteEdgeInstanceChannelResponse BatchDeleteEdgeInstanceChannelWithOptions(BatchDeleteEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelIds))
            {
                query["ChannelIds"] = request.ChannelIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteEdgeInstanceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchDeleteEdgeInstanceChannelResponse> BatchDeleteEdgeInstanceChannelWithOptionsAsync(BatchDeleteEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelIds))
            {
                query["ChannelIds"] = request.ChannelIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchDeleteEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchDeleteEdgeInstanceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchDeleteEdgeInstanceChannelResponse BatchDeleteEdgeInstanceChannel(BatchDeleteEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchDeleteEdgeInstanceChannelWithOptions(request, runtime);
        }

        public async Task<BatchDeleteEdgeInstanceChannelResponse> BatchDeleteEdgeInstanceChannelAsync(BatchDeleteEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchDeleteEdgeInstanceChannelWithOptionsAsync(request, runtime);
        }

        public BatchGetDeviceBindStatusResponse BatchGetDeviceBindStatusWithOptions(BatchGetDeviceBindStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetDeviceBindStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetDeviceBindStatusResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchGetDeviceBindStatusResponse> BatchGetDeviceBindStatusWithOptionsAsync(BatchGetDeviceBindStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetDeviceBindStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetDeviceBindStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchGetDeviceBindStatusResponse BatchGetDeviceBindStatus(BatchGetDeviceBindStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetDeviceBindStatusWithOptions(request, runtime);
        }

        public async Task<BatchGetDeviceBindStatusResponse> BatchGetDeviceBindStatusAsync(BatchGetDeviceBindStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetDeviceBindStatusWithOptionsAsync(request, runtime);
        }

        /**
          * When you call this operation, you can perform the following operations:
          * *   You can specify a value for the **ProductKey** parameter and multiple values for the **DeviceName** parameter to query the status of devices that belong to a product.
          * *   You can specify multiple values for the **IotId** parameter to query the status of devices that belong to different products.****
          * >You can query the status of up to 50 devices in a call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetDeviceStateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetDeviceStateResponse
         */
        public BatchGetDeviceStateResponse BatchGetDeviceStateWithOptions(BatchGetDeviceStateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetDeviceState",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetDeviceStateResponse>(CallApi(params_, req, runtime));
        }

        /**
          * When you call this operation, you can perform the following operations:
          * *   You can specify a value for the **ProductKey** parameter and multiple values for the **DeviceName** parameter to query the status of devices that belong to a product.
          * *   You can specify multiple values for the **IotId** parameter to query the status of devices that belong to different products.****
          * >You can query the status of up to 50 devices in a call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetDeviceStateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetDeviceStateResponse
         */
        public async Task<BatchGetDeviceStateResponse> BatchGetDeviceStateWithOptionsAsync(BatchGetDeviceStateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetDeviceState",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetDeviceStateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * When you call this operation, you can perform the following operations:
          * *   You can specify a value for the **ProductKey** parameter and multiple values for the **DeviceName** parameter to query the status of devices that belong to a product.
          * *   You can specify multiple values for the **IotId** parameter to query the status of devices that belong to different products.****
          * >You can query the status of up to 50 devices in a call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetDeviceStateRequest
          * @return BatchGetDeviceStateResponse
         */
        public BatchGetDeviceStateResponse BatchGetDeviceState(BatchGetDeviceStateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetDeviceStateWithOptions(request, runtime);
        }

        /**
          * When you call this operation, you can perform the following operations:
          * *   You can specify a value for the **ProductKey** parameter and multiple values for the **DeviceName** parameter to query the status of devices that belong to a product.
          * *   You can specify multiple values for the **IotId** parameter to query the status of devices that belong to different products.****
          * >You can query the status of up to 50 devices in a call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetDeviceStateRequest
          * @return BatchGetDeviceStateResponse
         */
        public async Task<BatchGetDeviceStateResponse> BatchGetDeviceStateAsync(BatchGetDeviceStateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetDeviceStateWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request BatchGetEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeDriverResponse
         */
        public BatchGetEdgeDriverResponse BatchGetEdgeDriverWithOptions(BatchGetEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverIds))
            {
                query["DriverIds"] = request.DriverIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request BatchGetEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeDriverResponse
         */
        public async Task<BatchGetEdgeDriverResponse> BatchGetEdgeDriverWithOptionsAsync(BatchGetEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverIds))
            {
                query["DriverIds"] = request.DriverIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request BatchGetEdgeDriverRequest
          * @return BatchGetEdgeDriverResponse
         */
        public BatchGetEdgeDriverResponse BatchGetEdgeDriver(BatchGetEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeDriverWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request BatchGetEdgeDriverRequest
          * @return BatchGetEdgeDriverResponse
         */
        public async Task<BatchGetEdgeDriverResponse> BatchGetEdgeDriverAsync(BatchGetEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeDriverWithOptionsAsync(request, runtime);
        }

        public BatchGetEdgeInstanceChannelResponse BatchGetEdgeInstanceChannelWithOptions(BatchGetEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelIds))
            {
                query["ChannelIds"] = request.ChannelIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchGetEdgeInstanceChannelResponse> BatchGetEdgeInstanceChannelWithOptionsAsync(BatchGetEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelIds))
            {
                query["ChannelIds"] = request.ChannelIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchGetEdgeInstanceChannelResponse BatchGetEdgeInstanceChannel(BatchGetEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeInstanceChannelWithOptions(request, runtime);
        }

        public async Task<BatchGetEdgeInstanceChannelResponse> BatchGetEdgeInstanceChannelAsync(BatchGetEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeInstanceChannelWithOptionsAsync(request, runtime);
        }

        public BatchGetEdgeInstanceDeviceChannelResponse BatchGetEdgeInstanceDeviceChannelWithOptions(BatchGetEdgeInstanceDeviceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchGetEdgeInstanceDeviceChannelResponse> BatchGetEdgeInstanceDeviceChannelWithOptionsAsync(BatchGetEdgeInstanceDeviceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchGetEdgeInstanceDeviceChannelResponse BatchGetEdgeInstanceDeviceChannel(BatchGetEdgeInstanceDeviceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeInstanceDeviceChannelWithOptions(request, runtime);
        }

        public async Task<BatchGetEdgeInstanceDeviceChannelResponse> BatchGetEdgeInstanceDeviceChannelAsync(BatchGetEdgeInstanceDeviceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeInstanceDeviceChannelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDeviceConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeInstanceDeviceConfigResponse
         */
        public BatchGetEdgeInstanceDeviceConfigResponse BatchGetEdgeInstanceDeviceConfigWithOptions(BatchGetEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDeviceConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeInstanceDeviceConfigResponse
         */
        public async Task<BatchGetEdgeInstanceDeviceConfigResponse> BatchGetEdgeInstanceDeviceConfigWithOptionsAsync(BatchGetEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDeviceConfigRequest
          * @return BatchGetEdgeInstanceDeviceConfigResponse
         */
        public BatchGetEdgeInstanceDeviceConfigResponse BatchGetEdgeInstanceDeviceConfig(BatchGetEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeInstanceDeviceConfigWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDeviceConfigRequest
          * @return BatchGetEdgeInstanceDeviceConfigResponse
         */
        public async Task<BatchGetEdgeInstanceDeviceConfigResponse> BatchGetEdgeInstanceDeviceConfigAsync(BatchGetEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeInstanceDeviceConfigWithOptionsAsync(request, runtime);
        }

        public BatchGetEdgeInstanceDeviceDriverResponse BatchGetEdgeInstanceDeviceDriverWithOptions(BatchGetEdgeInstanceDeviceDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceDriverResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchGetEdgeInstanceDeviceDriverResponse> BatchGetEdgeInstanceDeviceDriverWithOptionsAsync(BatchGetEdgeInstanceDeviceDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDeviceDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDeviceDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchGetEdgeInstanceDeviceDriverResponse BatchGetEdgeInstanceDeviceDriver(BatchGetEdgeInstanceDeviceDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeInstanceDeviceDriverWithOptions(request, runtime);
        }

        public async Task<BatchGetEdgeInstanceDeviceDriverResponse> BatchGetEdgeInstanceDeviceDriverAsync(BatchGetEdgeInstanceDeviceDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeInstanceDeviceDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDriverConfigsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeInstanceDriverConfigsResponse
         */
        public BatchGetEdgeInstanceDriverConfigsResponse BatchGetEdgeInstanceDriverConfigsWithOptions(BatchGetEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverIds))
            {
                query["DriverIds"] = request.DriverIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDriverConfigsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDriverConfigsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchGetEdgeInstanceDriverConfigsResponse
         */
        public async Task<BatchGetEdgeInstanceDriverConfigsResponse> BatchGetEdgeInstanceDriverConfigsWithOptionsAsync(BatchGetEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverIds))
            {
                query["DriverIds"] = request.DriverIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGetEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGetEdgeInstanceDriverConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDriverConfigsRequest
          * @return BatchGetEdgeInstanceDriverConfigsResponse
         */
        public BatchGetEdgeInstanceDriverConfigsResponse BatchGetEdgeInstanceDriverConfigs(BatchGetEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGetEdgeInstanceDriverConfigsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchGetEdgeInstanceDriverConfigsRequest
          * @return BatchGetEdgeInstanceDriverConfigsResponse
         */
        public async Task<BatchGetEdgeInstanceDriverConfigsResponse> BatchGetEdgeInstanceDriverConfigsAsync(BatchGetEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGetEdgeInstanceDriverConfigsWithOptionsAsync(request, runtime);
        }

        public BatchGrayMigrationDeviceResponse BatchGrayMigrationDeviceWithOptions(BatchGrayMigrationDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNames))
            {
                body["DeviceNames"] = request.DeviceNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGrayMigrationDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGrayMigrationDeviceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchGrayMigrationDeviceResponse> BatchGrayMigrationDeviceWithOptionsAsync(BatchGrayMigrationDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNames))
            {
                body["DeviceNames"] = request.DeviceNames;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchGrayMigrationDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchGrayMigrationDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchGrayMigrationDeviceResponse BatchGrayMigrationDevice(BatchGrayMigrationDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchGrayMigrationDeviceWithOptions(request, runtime);
        }

        public async Task<BatchGrayMigrationDeviceResponse> BatchGrayMigrationDeviceAsync(BatchGrayMigrationDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchGrayMigrationDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchImportDeviceResponse
         */
        public BatchImportDeviceResponse BatchImportDeviceWithOptions(BatchImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchImportDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchImportDeviceResponse
         */
        public async Task<BatchImportDeviceResponse> BatchImportDeviceWithOptionsAsync(BatchImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchImportDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchImportDeviceRequest
          * @return BatchImportDeviceResponse
         */
        public BatchImportDeviceResponse BatchImportDevice(BatchImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchImportDeviceWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchImportDeviceRequest
          * @return BatchImportDeviceResponse
         */
        public async Task<BatchImportDeviceResponse> BatchImportDeviceAsync(BatchImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchImportDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * Indicates whether the call was successful. Valid values: 
          * - **true**: The call was successful.
          * - **false**: The call failed.
          *
          * @param request BatchImportVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchImportVehicleDeviceResponse
         */
        public BatchImportVehicleDeviceResponse BatchImportVehicleDeviceWithOptions(BatchImportVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchImportVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchImportVehicleDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * Indicates whether the call was successful. Valid values: 
          * - **true**: The call was successful.
          * - **false**: The call failed.
          *
          * @param request BatchImportVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchImportVehicleDeviceResponse
         */
        public async Task<BatchImportVehicleDeviceResponse> BatchImportVehicleDeviceWithOptionsAsync(BatchImportVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceList))
            {
                body["DeviceList"] = request.DeviceList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchImportVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchImportVehicleDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * Indicates whether the call was successful. Valid values: 
          * - **true**: The call was successful.
          * - **false**: The call failed.
          *
          * @param request BatchImportVehicleDeviceRequest
          * @return BatchImportVehicleDeviceResponse
         */
        public BatchImportVehicleDeviceResponse BatchImportVehicleDevice(BatchImportVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchImportVehicleDeviceWithOptions(request, runtime);
        }

        /**
          * Indicates whether the call was successful. Valid values: 
          * - **true**: The call was successful.
          * - **false**: The call failed.
          *
          * @param request BatchImportVehicleDeviceRequest
          * @return BatchImportVehicleDeviceResponse
         */
        public async Task<BatchImportVehicleDeviceResponse> BatchImportVehicleDeviceAsync(BatchImportVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchImportVehicleDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can call this operation to publish a message to a maximum of 100 devices of a product at a time.
          * *   The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation. If you need to call services, use the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchPubRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchPubResponse
         */
        public BatchPubResponse BatchPubWithOptions(BatchPubRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                query["MessageContent"] = request.MessageContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPub",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPubResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can call this operation to publish a message to a maximum of 100 devices of a product at a time.
          * *   The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation. If you need to call services, use the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchPubRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchPubResponse
         */
        public async Task<BatchPubResponse> BatchPubWithOptionsAsync(BatchPubRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                query["MessageContent"] = request.MessageContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchPub",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchPubResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can call this operation to publish a message to a maximum of 100 devices of a product at a time.
          * *   The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation. If you need to call services, use the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchPubRequest
          * @return BatchPubResponse
         */
        public BatchPubResponse BatchPub(BatchPubRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchPubWithOptions(request, runtime);
        }

        /**
          * *   You can call this operation to publish a message to a maximum of 100 devices of a product at a time.
          * *   The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation. If you need to call services, use the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchPubRequest
          * @return BatchPubResponse
         */
        public async Task<BatchPubResponse> BatchPubAsync(BatchPubRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchPubWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query a maximum of 100 devices in a single call.
          * *   You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.
          * *   If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchQueryDeviceDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchQueryDeviceDetailResponse
         */
        public BatchQueryDeviceDetailResponse BatchQueryDeviceDetailWithOptions(BatchQueryDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchQueryDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchQueryDeviceDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query a maximum of 100 devices in a single call.
          * *   You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.
          * *   If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchQueryDeviceDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchQueryDeviceDetailResponse
         */
        public async Task<BatchQueryDeviceDetailResponse> BatchQueryDeviceDetailWithOptionsAsync(BatchQueryDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchQueryDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchQueryDeviceDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query a maximum of 100 devices in a single call.
          * *   You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.
          * *   If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchQueryDeviceDetailRequest
          * @return BatchQueryDeviceDetailResponse
         */
        public BatchQueryDeviceDetailResponse BatchQueryDeviceDetail(BatchQueryDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchQueryDeviceDetailWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query a maximum of 100 devices in a single call.
          * *   You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.
          * *   If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchQueryDeviceDetailRequest
          * @return BatchQueryDeviceDetailResponse
         */
        public async Task<BatchQueryDeviceDetailResponse> BatchQueryDeviceDetailAsync(BatchQueryDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchQueryDeviceDetailWithOptionsAsync(request, runtime);
        }

        /**
          * You can use one of the following methods to register multiple devices:
          * *   If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
          *     Perform the following steps to register devices and view the result:
          *     1\\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          *     2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     3\\. Call the [QueryPageByApplyId](~~69518~~) operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.
          * *   If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * - You can create a maximum of 10,000 devices in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchRegisterDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchRegisterDeviceResponse
         */
        public BatchRegisterDeviceResponse BatchRegisterDeviceWithOptions(BatchRegisterDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Count))
            {
                query["Count"] = request.Count;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchRegisterDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchRegisterDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can use one of the following methods to register multiple devices:
          * *   If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
          *     Perform the following steps to register devices and view the result:
          *     1\\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          *     2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     3\\. Call the [QueryPageByApplyId](~~69518~~) operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.
          * *   If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * - You can create a maximum of 10,000 devices in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchRegisterDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchRegisterDeviceResponse
         */
        public async Task<BatchRegisterDeviceResponse> BatchRegisterDeviceWithOptionsAsync(BatchRegisterDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Count))
            {
                query["Count"] = request.Count;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchRegisterDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchRegisterDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can use one of the following methods to register multiple devices:
          * *   If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
          *     Perform the following steps to register devices and view the result:
          *     1\\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          *     2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     3\\. Call the [QueryPageByApplyId](~~69518~~) operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.
          * *   If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * - You can create a maximum of 10,000 devices in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchRegisterDeviceRequest
          * @return BatchRegisterDeviceResponse
         */
        public BatchRegisterDeviceResponse BatchRegisterDevice(BatchRegisterDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchRegisterDeviceWithOptions(request, runtime);
        }

        /**
          * You can use one of the following methods to register multiple devices:
          * *   If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
          *     Perform the following steps to register devices and view the result:
          *     1\\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
          *     2\\. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     3\\. Call the [QueryPageByApplyId](~~69518~~) operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.
          * *   If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * - You can create a maximum of 10,000 devices in a single call.
          * - Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchRegisterDeviceRequest
          * @return BatchRegisterDeviceResponse
         */
        public async Task<BatchRegisterDeviceResponse> BatchRegisterDeviceAsync(BatchRegisterDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchRegisterDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * You can use one of the following methods to register multiple devices at a time:
          * *   Call the [BatchRegisterDevice](~~69473~~) operation to generate random DeviceNames.
          * *   Call the BatchRegisterDeviceWithApplyId and **BatchCheckDeviceNames** operations to specify custom DeviceNames. Procedure:
          *     Call the [BatchCheckDeviceNames](~~69482~~) operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the **ApplyId** parameter. You can query the DeviceName setting results, device registration results, and device details by **ApplyId**.
          *     Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          *     Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
          *     Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     Call the [QueryPageByApplyId](~~69518~~) operation to view the details of devices that are registered in batches.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request BatchRegisterDeviceWithApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchRegisterDeviceWithApplyIdResponse
         */
        public BatchRegisterDeviceWithApplyIdResponse BatchRegisterDeviceWithApplyIdWithOptions(BatchRegisterDeviceWithApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchRegisterDeviceWithApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchRegisterDeviceWithApplyIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can use one of the following methods to register multiple devices at a time:
          * *   Call the [BatchRegisterDevice](~~69473~~) operation to generate random DeviceNames.
          * *   Call the BatchRegisterDeviceWithApplyId and **BatchCheckDeviceNames** operations to specify custom DeviceNames. Procedure:
          *     Call the [BatchCheckDeviceNames](~~69482~~) operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the **ApplyId** parameter. You can query the DeviceName setting results, device registration results, and device details by **ApplyId**.
          *     Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          *     Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
          *     Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     Call the [QueryPageByApplyId](~~69518~~) operation to view the details of devices that are registered in batches.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request BatchRegisterDeviceWithApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchRegisterDeviceWithApplyIdResponse
         */
        public async Task<BatchRegisterDeviceWithApplyIdResponse> BatchRegisterDeviceWithApplyIdWithOptionsAsync(BatchRegisterDeviceWithApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchRegisterDeviceWithApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchRegisterDeviceWithApplyIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can use one of the following methods to register multiple devices at a time:
          * *   Call the [BatchRegisterDevice](~~69473~~) operation to generate random DeviceNames.
          * *   Call the BatchRegisterDeviceWithApplyId and **BatchCheckDeviceNames** operations to specify custom DeviceNames. Procedure:
          *     Call the [BatchCheckDeviceNames](~~69482~~) operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the **ApplyId** parameter. You can query the DeviceName setting results, device registration results, and device details by **ApplyId**.
          *     Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          *     Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
          *     Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     Call the [QueryPageByApplyId](~~69518~~) operation to view the details of devices that are registered in batches.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request BatchRegisterDeviceWithApplyIdRequest
          * @return BatchRegisterDeviceWithApplyIdResponse
         */
        public BatchRegisterDeviceWithApplyIdResponse BatchRegisterDeviceWithApplyId(BatchRegisterDeviceWithApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchRegisterDeviceWithApplyIdWithOptions(request, runtime);
        }

        /**
          * You can use one of the following methods to register multiple devices at a time:
          * *   Call the [BatchRegisterDevice](~~69473~~) operation to generate random DeviceNames.
          * *   Call the BatchRegisterDeviceWithApplyId and **BatchCheckDeviceNames** operations to specify custom DeviceNames. Procedure:
          *     Call the [BatchCheckDeviceNames](~~69482~~) operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the **ApplyId** parameter. You can query the DeviceName setting results, device registration results, and device details by **ApplyId**.
          *     Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the name setting result.
          *     Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
          *     Optional. Call the [QueryBatchRegisterDeviceStatus](~~69483~~) operation to query the device registration result.
          *     Call the [QueryPageByApplyId](~~69518~~) operation to view the details of devices that are registered in batches.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request BatchRegisterDeviceWithApplyIdRequest
          * @return BatchRegisterDeviceWithApplyIdResponse
         */
        public async Task<BatchRegisterDeviceWithApplyIdResponse> BatchRegisterDeviceWithApplyIdAsync(BatchRegisterDeviceWithApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchRegisterDeviceWithApplyIdWithOptionsAsync(request, runtime);
        }

        public BatchSetEdgeInstanceDeviceChannelResponse BatchSetEdgeInstanceDeviceChannelWithOptions(BatchSetEdgeInstanceDeviceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchSetEdgeInstanceDeviceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchSetEdgeInstanceDeviceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchSetEdgeInstanceDeviceChannelResponse> BatchSetEdgeInstanceDeviceChannelWithOptionsAsync(BatchSetEdgeInstanceDeviceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchSetEdgeInstanceDeviceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchSetEdgeInstanceDeviceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchSetEdgeInstanceDeviceChannelResponse BatchSetEdgeInstanceDeviceChannel(BatchSetEdgeInstanceDeviceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchSetEdgeInstanceDeviceChannelWithOptions(request, runtime);
        }

        public async Task<BatchSetEdgeInstanceDeviceChannelResponse> BatchSetEdgeInstanceDeviceChannelAsync(BatchSetEdgeInstanceDeviceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchSetEdgeInstanceDeviceChannelWithOptionsAsync(request, runtime);
        }

        public BatchSetEdgeInstanceDeviceConfigResponse BatchSetEdgeInstanceDeviceConfigWithOptions(BatchSetEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceConfigs))
            {
                query["DeviceConfigs"] = request.DeviceConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchSetEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchSetEdgeInstanceDeviceConfigResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchSetEdgeInstanceDeviceConfigResponse> BatchSetEdgeInstanceDeviceConfigWithOptionsAsync(BatchSetEdgeInstanceDeviceConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceConfigs))
            {
                query["DeviceConfigs"] = request.DeviceConfigs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchSetEdgeInstanceDeviceConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchSetEdgeInstanceDeviceConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchSetEdgeInstanceDeviceConfigResponse BatchSetEdgeInstanceDeviceConfig(BatchSetEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchSetEdgeInstanceDeviceConfigWithOptions(request, runtime);
        }

        public async Task<BatchSetEdgeInstanceDeviceConfigResponse> BatchSetEdgeInstanceDeviceConfigAsync(BatchSetEdgeInstanceDeviceConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchSetEdgeInstanceDeviceConfigWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUnbindDeviceFromEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchUnbindDeviceFromEdgeInstanceResponse
         */
        public BatchUnbindDeviceFromEdgeInstanceResponse BatchUnbindDeviceFromEdgeInstanceWithOptions(BatchUnbindDeviceFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindDeviceFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindDeviceFromEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUnbindDeviceFromEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchUnbindDeviceFromEdgeInstanceResponse
         */
        public async Task<BatchUnbindDeviceFromEdgeInstanceResponse> BatchUnbindDeviceFromEdgeInstanceWithOptionsAsync(BatchUnbindDeviceFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIds))
            {
                query["IotIds"] = request.IotIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindDeviceFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindDeviceFromEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUnbindDeviceFromEdgeInstanceRequest
          * @return BatchUnbindDeviceFromEdgeInstanceResponse
         */
        public BatchUnbindDeviceFromEdgeInstanceResponse BatchUnbindDeviceFromEdgeInstance(BatchUnbindDeviceFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUnbindDeviceFromEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUnbindDeviceFromEdgeInstanceRequest
          * @return BatchUnbindDeviceFromEdgeInstanceResponse
         */
        public async Task<BatchUnbindDeviceFromEdgeInstanceResponse> BatchUnbindDeviceFromEdgeInstanceAsync(BatchUnbindDeviceFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUnbindDeviceFromEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public BatchUnbindProjectDevicesResponse BatchUnbindProjectDevicesWithOptions(BatchUnbindProjectDevicesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Devices))
            {
                body["Devices"] = request.Devices;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindProjectDevices",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindProjectDevicesResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchUnbindProjectDevicesResponse> BatchUnbindProjectDevicesWithOptionsAsync(BatchUnbindProjectDevicesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Devices))
            {
                body["Devices"] = request.Devices;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindProjectDevices",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindProjectDevicesResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchUnbindProjectDevicesResponse BatchUnbindProjectDevices(BatchUnbindProjectDevicesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUnbindProjectDevicesWithOptions(request, runtime);
        }

        public async Task<BatchUnbindProjectDevicesResponse> BatchUnbindProjectDevicesAsync(BatchUnbindProjectDevicesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUnbindProjectDevicesWithOptionsAsync(request, runtime);
        }

        public BatchUnbindProjectProductsResponse BatchUnbindProjectProductsWithOptions(BatchUnbindProjectProductsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKeys))
            {
                body["ProductKeys"] = request.ProductKeys;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindProjectProducts",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindProjectProductsResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BatchUnbindProjectProductsResponse> BatchUnbindProjectProductsWithOptionsAsync(BatchUnbindProjectProductsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKeys))
            {
                body["ProductKeys"] = request.ProductKeys;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUnbindProjectProducts",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUnbindProjectProductsResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BatchUnbindProjectProductsResponse BatchUnbindProjectProducts(BatchUnbindProjectProductsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUnbindProjectProductsWithOptions(request, runtime);
        }

        public async Task<BatchUnbindProjectProductsResponse> BatchUnbindProjectProductsAsync(BatchUnbindProjectProductsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUnbindProjectProductsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUpdateDeviceNicknameRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchUpdateDeviceNicknameResponse
         */
        public BatchUpdateDeviceNicknameResponse BatchUpdateDeviceNicknameWithOptions(BatchUpdateDeviceNicknameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNicknameInfo))
            {
                query["DeviceNicknameInfo"] = request.DeviceNicknameInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateDeviceNickname",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateDeviceNicknameResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUpdateDeviceNicknameRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BatchUpdateDeviceNicknameResponse
         */
        public async Task<BatchUpdateDeviceNicknameResponse> BatchUpdateDeviceNicknameWithOptionsAsync(BatchUpdateDeviceNicknameRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNicknameInfo))
            {
                query["DeviceNicknameInfo"] = request.DeviceNicknameInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BatchUpdateDeviceNickname",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BatchUpdateDeviceNicknameResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUpdateDeviceNicknameRequest
          * @return BatchUpdateDeviceNicknameResponse
         */
        public BatchUpdateDeviceNicknameResponse BatchUpdateDeviceNickname(BatchUpdateDeviceNicknameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BatchUpdateDeviceNicknameWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BatchUpdateDeviceNicknameRequest
          * @return BatchUpdateDeviceNicknameResponse
         */
        public async Task<BatchUpdateDeviceNicknameResponse> BatchUpdateDeviceNicknameAsync(BatchUpdateDeviceNicknameRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BatchUpdateDeviceNicknameWithOptionsAsync(request, runtime);
        }

        public BindApplicationToEdgeInstanceResponse BindApplicationToEdgeInstanceWithOptions(BindApplicationToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationVersion))
            {
                query["ApplicationVersion"] = request.ApplicationVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindApplicationToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindApplicationToEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BindApplicationToEdgeInstanceResponse> BindApplicationToEdgeInstanceWithOptionsAsync(BindApplicationToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationVersion))
            {
                query["ApplicationVersion"] = request.ApplicationVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindApplicationToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindApplicationToEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BindApplicationToEdgeInstanceResponse BindApplicationToEdgeInstance(BindApplicationToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindApplicationToEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<BindApplicationToEdgeInstanceResponse> BindApplicationToEdgeInstanceAsync(BindApplicationToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindApplicationToEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindDriverToEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindDriverToEdgeInstanceResponse
         */
        public BindDriverToEdgeInstanceResponse BindDriverToEdgeInstanceWithOptions(BindDriverToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderId))
            {
                query["OrderId"] = request.OrderId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindDriverToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindDriverToEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindDriverToEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindDriverToEdgeInstanceResponse
         */
        public async Task<BindDriverToEdgeInstanceResponse> BindDriverToEdgeInstanceWithOptionsAsync(BindDriverToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OrderId))
            {
                query["OrderId"] = request.OrderId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindDriverToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindDriverToEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindDriverToEdgeInstanceRequest
          * @return BindDriverToEdgeInstanceResponse
         */
        public BindDriverToEdgeInstanceResponse BindDriverToEdgeInstance(BindDriverToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindDriverToEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindDriverToEdgeInstanceRequest
          * @return BindDriverToEdgeInstanceResponse
         */
        public async Task<BindDriverToEdgeInstanceResponse> BindDriverToEdgeInstanceAsync(BindDriverToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindDriverToEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindGatewayToEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindGatewayToEdgeInstanceResponse
         */
        public BindGatewayToEdgeInstanceResponse BindGatewayToEdgeInstanceWithOptions(BindGatewayToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindGatewayToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindGatewayToEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindGatewayToEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindGatewayToEdgeInstanceResponse
         */
        public async Task<BindGatewayToEdgeInstanceResponse> BindGatewayToEdgeInstanceWithOptionsAsync(BindGatewayToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindGatewayToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindGatewayToEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindGatewayToEdgeInstanceRequest
          * @return BindGatewayToEdgeInstanceResponse
         */
        public BindGatewayToEdgeInstanceResponse BindGatewayToEdgeInstance(BindGatewayToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindGatewayToEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindGatewayToEdgeInstanceRequest
          * @return BindGatewayToEdgeInstanceResponse
         */
        public async Task<BindGatewayToEdgeInstanceResponse> BindGatewayToEdgeInstanceAsync(BindGatewayToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindGatewayToEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that the following steps are complete:
          * 1.  A license is purchased. For more information, see [Purchase a license](~~427935~~).
          * 2.  The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindLicenseDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindLicenseDeviceResponse
         */
        public BindLicenseDeviceResponse BindLicenseDeviceWithOptions(BindLicenseDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindLicenseDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindLicenseDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that the following steps are complete:
          * 1.  A license is purchased. For more information, see [Purchase a license](~~427935~~).
          * 2.  The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindLicenseDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return BindLicenseDeviceResponse
         */
        public async Task<BindLicenseDeviceResponse> BindLicenseDeviceWithOptionsAsync(BindLicenseDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindLicenseDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindLicenseDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that the following steps are complete:
          * 1.  A license is purchased. For more information, see [Purchase a license](~~427935~~).
          * 2.  The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindLicenseDeviceRequest
          * @return BindLicenseDeviceResponse
         */
        public BindLicenseDeviceResponse BindLicenseDevice(BindLicenseDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindLicenseDeviceWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that the following steps are complete:
          * 1.  A license is purchased. For more information, see [Purchase a license](~~427935~~).
          * 2.  The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request BindLicenseDeviceRequest
          * @return BindLicenseDeviceResponse
         */
        public async Task<BindLicenseDeviceResponse> BindLicenseDeviceAsync(BindLicenseDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindLicenseDeviceWithOptionsAsync(request, runtime);
        }

        public BindLicenseProductResponse BindLicenseProductWithOptions(BindLicenseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindLicenseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindLicenseProductResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BindLicenseProductResponse> BindLicenseProductWithOptionsAsync(BindLicenseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindLicenseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindLicenseProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BindLicenseProductResponse BindLicenseProduct(BindLicenseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindLicenseProductWithOptions(request, runtime);
        }

        public async Task<BindLicenseProductResponse> BindLicenseProductAsync(BindLicenseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindLicenseProductWithOptionsAsync(request, runtime);
        }

        public BindRoleToEdgeInstanceResponse BindRoleToEdgeInstanceWithOptions(BindRoleToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoleArn))
            {
                query["RoleArn"] = request.RoleArn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoleName))
            {
                query["RoleName"] = request.RoleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindRoleToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindRoleToEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BindRoleToEdgeInstanceResponse> BindRoleToEdgeInstanceWithOptionsAsync(BindRoleToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoleArn))
            {
                query["RoleArn"] = request.RoleArn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RoleName))
            {
                query["RoleName"] = request.RoleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindRoleToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindRoleToEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BindRoleToEdgeInstanceResponse BindRoleToEdgeInstance(BindRoleToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindRoleToEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<BindRoleToEdgeInstanceResponse> BindRoleToEdgeInstanceAsync(BindRoleToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindRoleToEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public BindSceneRuleToEdgeInstanceResponse BindSceneRuleToEdgeInstanceWithOptions(BindSceneRuleToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindSceneRuleToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindSceneRuleToEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<BindSceneRuleToEdgeInstanceResponse> BindSceneRuleToEdgeInstanceWithOptionsAsync(BindSceneRuleToEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "BindSceneRuleToEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<BindSceneRuleToEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public BindSceneRuleToEdgeInstanceResponse BindSceneRuleToEdgeInstance(BindSceneRuleToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return BindSceneRuleToEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<BindSceneRuleToEdgeInstanceResponse> BindSceneRuleToEdgeInstanceAsync(BindSceneRuleToEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await BindSceneRuleToEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public CancelJobResponse CancelJobWithOptions(CancelJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CancelJobResponse> CancelJobWithOptionsAsync(CancelJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CancelJobResponse CancelJob(CancelJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelJobWithOptions(request, runtime);
        }

        public async Task<CancelJobResponse> CancelJobAsync(CancelJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
          *     After the operation is successful, the **JobStatus** parameter is set to CANCELED.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTAStrategyByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTAStrategyByJobResponse
         */
        public CancelOTAStrategyByJobResponse CancelOTAStrategyByJobWithOptions(CancelOTAStrategyByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTAStrategyByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTAStrategyByJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
          *     After the operation is successful, the **JobStatus** parameter is set to CANCELED.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTAStrategyByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTAStrategyByJobResponse
         */
        public async Task<CancelOTAStrategyByJobResponse> CancelOTAStrategyByJobWithOptionsAsync(CancelOTAStrategyByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTAStrategyByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTAStrategyByJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
          *     After the operation is successful, the **JobStatus** parameter is set to CANCELED.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTAStrategyByJobRequest
          * @return CancelOTAStrategyByJobResponse
         */
        public CancelOTAStrategyByJobResponse CancelOTAStrategyByJob(CancelOTAStrategyByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelOTAStrategyByJobWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
          *     After the operation is successful, the **JobStatus** parameter is set to CANCELED.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTAStrategyByJobRequest
          * @return CancelOTAStrategyByJobResponse
         */
        public async Task<CancelOTAStrategyByJobResponse> CancelOTAStrategyByJobAsync(CancelOTAStrategyByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelOTAStrategyByJobWithOptionsAsync(request, runtime);
        }

        /**
          * This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request CancelOTATaskByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTATaskByDeviceResponse
         */
        public CancelOTATaskByDeviceResponse CancelOTATaskByDeviceWithOptions(CancelOTATaskByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTATaskByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTATaskByDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request CancelOTATaskByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTATaskByDeviceResponse
         */
        public async Task<CancelOTATaskByDeviceResponse> CancelOTATaskByDeviceWithOptionsAsync(CancelOTATaskByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTATaskByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTATaskByDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request CancelOTATaskByDeviceRequest
          * @return CancelOTATaskByDeviceResponse
         */
        public CancelOTATaskByDeviceResponse CancelOTATaskByDevice(CancelOTATaskByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelOTATaskByDeviceWithOptions(request, runtime);
        }

        /**
          * This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request CancelOTATaskByDeviceRequest
          * @return CancelOTATaskByDeviceResponse
         */
        public async Task<CancelOTATaskByDeviceResponse> CancelOTATaskByDeviceAsync(CancelOTATaskByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelOTATaskByDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTATaskByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTATaskByJobResponse
         */
        public CancelOTATaskByJobResponse CancelOTATaskByJobWithOptions(CancelOTATaskByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelInProgressTask))
            {
                query["CancelInProgressTask"] = request.CancelInProgressTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelNotifiedTask))
            {
                query["CancelNotifiedTask"] = request.CancelNotifiedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelQueuedTask))
            {
                query["CancelQueuedTask"] = request.CancelQueuedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelScheduledTask))
            {
                query["CancelScheduledTask"] = request.CancelScheduledTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelUnconfirmedTask))
            {
                query["CancelUnconfirmedTask"] = request.CancelUnconfirmedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTATaskByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTATaskByJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTATaskByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelOTATaskByJobResponse
         */
        public async Task<CancelOTATaskByJobResponse> CancelOTATaskByJobWithOptionsAsync(CancelOTATaskByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelInProgressTask))
            {
                query["CancelInProgressTask"] = request.CancelInProgressTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelNotifiedTask))
            {
                query["CancelNotifiedTask"] = request.CancelNotifiedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelQueuedTask))
            {
                query["CancelQueuedTask"] = request.CancelQueuedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelScheduledTask))
            {
                query["CancelScheduledTask"] = request.CancelScheduledTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CancelUnconfirmedTask))
            {
                query["CancelUnconfirmedTask"] = request.CancelUnconfirmedTask;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelOTATaskByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelOTATaskByJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTATaskByJobRequest
          * @return CancelOTATaskByJobResponse
         */
        public CancelOTATaskByJobResponse CancelOTATaskByJob(CancelOTATaskByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelOTATaskByJobWithOptions(request, runtime);
        }

        /**
          * When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelOTATaskByJobRequest
          * @return CancelOTATaskByJobResponse
         */
        public async Task<CancelOTATaskByJobResponse> CancelOTATaskByJobAsync(CancelOTATaskByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelOTATaskByJobWithOptionsAsync(request, runtime);
        }

        /**
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelReleaseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelReleaseProductResponse
         */
        public CancelReleaseProductResponse CancelReleaseProductWithOptions(CancelReleaseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelReleaseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelReleaseProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelReleaseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CancelReleaseProductResponse
         */
        public async Task<CancelReleaseProductResponse> CancelReleaseProductWithOptionsAsync(CancelReleaseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CancelReleaseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CancelReleaseProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelReleaseProductRequest
          * @return CancelReleaseProductResponse
         */
        public CancelReleaseProductResponse CancelReleaseProduct(CancelReleaseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CancelReleaseProductWithOptions(request, runtime);
        }

        /**
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CancelReleaseProductRequest
          * @return CancelReleaseProductResponse
         */
        public async Task<CancelReleaseProductResponse> CancelReleaseProductAsync(CancelReleaseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CancelReleaseProductWithOptionsAsync(request, runtime);
        }

        public CheckBindLicenseDeviceProgressResponse CheckBindLicenseDeviceProgressWithOptions(CheckBindLicenseDeviceProgressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckProgressId))
            {
                query["CheckProgressId"] = request.CheckProgressId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckBindLicenseDeviceProgress",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckBindLicenseDeviceProgressResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CheckBindLicenseDeviceProgressResponse> CheckBindLicenseDeviceProgressWithOptionsAsync(CheckBindLicenseDeviceProgressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckProgressId))
            {
                query["CheckProgressId"] = request.CheckProgressId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CheckBindLicenseDeviceProgress",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CheckBindLicenseDeviceProgressResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CheckBindLicenseDeviceProgressResponse CheckBindLicenseDeviceProgress(CheckBindLicenseDeviceProgressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CheckBindLicenseDeviceProgressWithOptions(request, runtime);
        }

        public async Task<CheckBindLicenseDeviceProgressResponse> CheckBindLicenseDeviceProgressAsync(CheckBindLicenseDeviceProgressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CheckBindLicenseDeviceProgressWithOptionsAsync(request, runtime);
        }

        /**
          * *   Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the **Identifies** parameter. If you do not configure the **Identifies** parameter, the call fails.
          * *   You can specify up to 10 property identifiers for the **Identifies** parameter in a single call.
          * *   After you call this operation to deletes the desired values of properties of a device, you can call the [QueryDeviceDesiredProperty](~~107566~~) operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the **Identifier** parameter instead of the **Value** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ClearDeviceDesiredPropertyResponse
         */
        public ClearDeviceDesiredPropertyResponse ClearDeviceDesiredPropertyWithOptions(ClearDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifies))
            {
                body["Identifies"] = request.Identifies;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClearDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClearDeviceDesiredPropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the **Identifies** parameter. If you do not configure the **Identifies** parameter, the call fails.
          * *   You can specify up to 10 property identifiers for the **Identifies** parameter in a single call.
          * *   After you call this operation to deletes the desired values of properties of a device, you can call the [QueryDeviceDesiredProperty](~~107566~~) operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the **Identifier** parameter instead of the **Value** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ClearDeviceDesiredPropertyResponse
         */
        public async Task<ClearDeviceDesiredPropertyResponse> ClearDeviceDesiredPropertyWithOptionsAsync(ClearDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifies))
            {
                body["Identifies"] = request.Identifies;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClearDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClearDeviceDesiredPropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the **Identifies** parameter. If you do not configure the **Identifies** parameter, the call fails.
          * *   You can specify up to 10 property identifiers for the **Identifies** parameter in a single call.
          * *   After you call this operation to deletes the desired values of properties of a device, you can call the [QueryDeviceDesiredProperty](~~107566~~) operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the **Identifier** parameter instead of the **Value** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearDeviceDesiredPropertyRequest
          * @return ClearDeviceDesiredPropertyResponse
         */
        public ClearDeviceDesiredPropertyResponse ClearDeviceDesiredProperty(ClearDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ClearDeviceDesiredPropertyWithOptions(request, runtime);
        }

        /**
          * *   Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the **Identifies** parameter. If you do not configure the **Identifies** parameter, the call fails.
          * *   You can specify up to 10 property identifiers for the **Identifies** parameter in a single call.
          * *   After you call this operation to deletes the desired values of properties of a device, you can call the [QueryDeviceDesiredProperty](~~107566~~) operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the **Identifier** parameter instead of the **Value** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearDeviceDesiredPropertyRequest
          * @return ClearDeviceDesiredPropertyResponse
         */
        public async Task<ClearDeviceDesiredPropertyResponse> ClearDeviceDesiredPropertyAsync(ClearDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ClearDeviceDesiredPropertyWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearEdgeInstanceDriverConfigsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ClearEdgeInstanceDriverConfigsResponse
         */
        public ClearEdgeInstanceDriverConfigsResponse ClearEdgeInstanceDriverConfigsWithOptions(ClearEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClearEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClearEdgeInstanceDriverConfigsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearEdgeInstanceDriverConfigsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ClearEdgeInstanceDriverConfigsResponse
         */
        public async Task<ClearEdgeInstanceDriverConfigsResponse> ClearEdgeInstanceDriverConfigsWithOptionsAsync(ClearEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ClearEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ClearEdgeInstanceDriverConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearEdgeInstanceDriverConfigsRequest
          * @return ClearEdgeInstanceDriverConfigsResponse
         */
        public ClearEdgeInstanceDriverConfigsResponse ClearEdgeInstanceDriverConfigs(ClearEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ClearEdgeInstanceDriverConfigsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ClearEdgeInstanceDriverConfigsRequest
          * @return ClearEdgeInstanceDriverConfigsResponse
         */
        public async Task<ClearEdgeInstanceDriverConfigsResponse> ClearEdgeInstanceDriverConfigsAsync(ClearEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ClearEdgeInstanceDriverConfigsWithOptionsAsync(request, runtime);
        }

        public CloseDeviceTunnelResponse CloseDeviceTunnelWithOptions(CloseDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CloseDeviceTunnelResponse> CloseDeviceTunnelWithOptionsAsync(CloseDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CloseDeviceTunnelResponse CloseDeviceTunnel(CloseDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CloseDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<CloseDeviceTunnelResponse> CloseDeviceTunnelAsync(CloseDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CloseDeviceTunnelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CloseEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CloseEdgeInstanceDeploymentResponse
         */
        public CloseEdgeInstanceDeploymentResponse CloseEdgeInstanceDeploymentWithOptions(CloseEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseEdgeInstanceDeploymentResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CloseEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CloseEdgeInstanceDeploymentResponse
         */
        public async Task<CloseEdgeInstanceDeploymentResponse> CloseEdgeInstanceDeploymentWithOptionsAsync(CloseEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CloseEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CloseEdgeInstanceDeploymentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CloseEdgeInstanceDeploymentRequest
          * @return CloseEdgeInstanceDeploymentResponse
         */
        public CloseEdgeInstanceDeploymentResponse CloseEdgeInstanceDeployment(CloseEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CloseEdgeInstanceDeploymentWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CloseEdgeInstanceDeploymentRequest
          * @return CloseEdgeInstanceDeploymentResponse
         */
        public async Task<CloseEdgeInstanceDeploymentResponse> CloseEdgeInstanceDeploymentAsync(CloseEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CloseEdgeInstanceDeploymentWithOptionsAsync(request, runtime);
        }

        /**
          * To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ConfirmOTATaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ConfirmOTATaskResponse
         */
        public ConfirmOTATaskResponse ConfirmOTATaskWithOptions(ConfirmOTATaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfirmOTATask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfirmOTATaskResponse>(CallApi(params_, req, runtime));
        }

        /**
          * To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ConfirmOTATaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ConfirmOTATaskResponse
         */
        public async Task<ConfirmOTATaskResponse> ConfirmOTATaskWithOptionsAsync(ConfirmOTATaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ConfirmOTATask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ConfirmOTATaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ConfirmOTATaskRequest
          * @return ConfirmOTATaskResponse
         */
        public ConfirmOTATaskResponse ConfirmOTATask(ConfirmOTATaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ConfirmOTATaskWithOptions(request, runtime);
        }

        /**
          * To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ConfirmOTATaskRequest
          * @return ConfirmOTATaskResponse
         */
        public async Task<ConfirmOTATaskResponse> ConfirmOTATaskAsync(ConfirmOTATaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ConfirmOTATaskWithOptionsAsync(request, runtime);
        }

        /**
          * *   If a destination product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you can copy a TSL model.
          * *   The categories of the source product and destination product must be the same. The product category is indicated by the **CategoryKey** parameter. You can call the [QueryProduct](~~69272~~) operation and view the **CategoryKey** parameter of a product in the returned result.
          * *   You must specify the version of the TSL model that you want to copy by using the **SourceModelVersion** parameter in the request. Otherwise, the CopyThingModel operation fails.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to five queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CopyThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CopyThingModelResponse
         */
        public CopyThingModelResponse CopyThingModelWithOptions(CopyThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceModelVersion))
            {
                query["SourceModelVersion"] = request.SourceModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceProductKey))
            {
                query["SourceProductKey"] = request.SourceProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetProductKey))
            {
                query["TargetProductKey"] = request.TargetProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CopyThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CopyThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   If a destination product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you can copy a TSL model.
          * *   The categories of the source product and destination product must be the same. The product category is indicated by the **CategoryKey** parameter. You can call the [QueryProduct](~~69272~~) operation and view the **CategoryKey** parameter of a product in the returned result.
          * *   You must specify the version of the TSL model that you want to copy by using the **SourceModelVersion** parameter in the request. Otherwise, the CopyThingModel operation fails.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to five queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CopyThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CopyThingModelResponse
         */
        public async Task<CopyThingModelResponse> CopyThingModelWithOptionsAsync(CopyThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceModelVersion))
            {
                query["SourceModelVersion"] = request.SourceModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceProductKey))
            {
                query["SourceProductKey"] = request.SourceProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetProductKey))
            {
                query["TargetProductKey"] = request.TargetProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CopyThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CopyThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   If a destination product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you can copy a TSL model.
          * *   The categories of the source product and destination product must be the same. The product category is indicated by the **CategoryKey** parameter. You can call the [QueryProduct](~~69272~~) operation and view the **CategoryKey** parameter of a product in the returned result.
          * *   You must specify the version of the TSL model that you want to copy by using the **SourceModelVersion** parameter in the request. Otherwise, the CopyThingModel operation fails.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to five queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CopyThingModelRequest
          * @return CopyThingModelResponse
         */
        public CopyThingModelResponse CopyThingModel(CopyThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CopyThingModelWithOptions(request, runtime);
        }

        /**
          * *   If a destination product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you can copy a TSL model.
          * *   The categories of the source product and destination product must be the same. The product category is indicated by the **CategoryKey** parameter. You can call the [QueryProduct](~~69272~~) operation and view the **CategoryKey** parameter of a product in the returned result.
          * *   You must specify the version of the TSL model that you want to copy by using the **SourceModelVersion** parameter in the request. Otherwise, the CopyThingModel operation fails.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to five queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CopyThingModelRequest
          * @return CopyThingModelResponse
         */
        public async Task<CopyThingModelResponse> CopyThingModelAsync(CopyThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CopyThingModelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this API operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CountSpeechBroadcastHourRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CountSpeechBroadcastHourResponse
         */
        public CountSpeechBroadcastHourResponse CountSpeechBroadcastHourWithOptions(CountSpeechBroadcastHourRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryDateTimeHour))
            {
                query["QueryDateTimeHour"] = request.QueryDateTimeHour;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CountSpeechBroadcastHour",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CountSpeechBroadcastHourResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this API operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CountSpeechBroadcastHourRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CountSpeechBroadcastHourResponse
         */
        public async Task<CountSpeechBroadcastHourResponse> CountSpeechBroadcastHourWithOptionsAsync(CountSpeechBroadcastHourRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryDateTimeHour))
            {
                query["QueryDateTimeHour"] = request.QueryDateTimeHour;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CountSpeechBroadcastHour",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CountSpeechBroadcastHourResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this API operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CountSpeechBroadcastHourRequest
          * @return CountSpeechBroadcastHourResponse
         */
        public CountSpeechBroadcastHourResponse CountSpeechBroadcastHour(CountSpeechBroadcastHourRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CountSpeechBroadcastHourWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this API operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CountSpeechBroadcastHourRequest
          * @return CountSpeechBroadcastHourResponse
         */
        public async Task<CountSpeechBroadcastHourResponse> CountSpeechBroadcastHourAsync(CountSpeechBroadcastHourRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CountSpeechBroadcastHourWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateConsumerGroupResponse
         */
        public CreateConsumerGroupResponse CreateConsumerGroupWithOptions(CreateConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubBizCode))
            {
                query["SubBizCode"] = request.SubBizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateConsumerGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateConsumerGroupResponse
         */
        public async Task<CreateConsumerGroupResponse> CreateConsumerGroupWithOptionsAsync(CreateConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubBizCode))
            {
                query["SubBizCode"] = request.SubBizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateConsumerGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupRequest
          * @return CreateConsumerGroupResponse
         */
        public CreateConsumerGroupResponse CreateConsumerGroup(CreateConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateConsumerGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupRequest
          * @return CreateConsumerGroupResponse
         */
        public async Task<CreateConsumerGroupResponse> CreateConsumerGroupAsync(CreateConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateConsumerGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateConsumerGroupSubscribeRelationResponse
         */
        public CreateConsumerGroupSubscribeRelationResponse CreateConsumerGroupSubscribeRelationWithOptions(CreateConsumerGroupSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupId))
            {
                query["ConsumerGroupId"] = request.ConsumerGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateConsumerGroupSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateConsumerGroupSubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateConsumerGroupSubscribeRelationResponse
         */
        public async Task<CreateConsumerGroupSubscribeRelationResponse> CreateConsumerGroupSubscribeRelationWithOptionsAsync(CreateConsumerGroupSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupId))
            {
                query["ConsumerGroupId"] = request.ConsumerGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateConsumerGroupSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateConsumerGroupSubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupSubscribeRelationRequest
          * @return CreateConsumerGroupSubscribeRelationResponse
         */
        public CreateConsumerGroupSubscribeRelationResponse CreateConsumerGroupSubscribeRelation(CreateConsumerGroupSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateConsumerGroupSubscribeRelationWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateConsumerGroupSubscribeRelationRequest
          * @return CreateConsumerGroupSubscribeRelationResponse
         */
        public async Task<CreateConsumerGroupSubscribeRelationResponse> CreateConsumerGroupSubscribeRelationAsync(CreateConsumerGroupSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateConsumerGroupSubscribeRelationWithOptionsAsync(request, runtime);
        }

        public CreateDataAPIServiceResponse CreateDataAPIServiceWithOptions(CreateDataAPIServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiPath))
            {
                body["ApiPath"] = request.ApiPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                body["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                body["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSql))
            {
                body["OriginSql"] = request.OriginSql;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestParam))
            {
                body["RequestParam"] = request.RequestParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseParam))
            {
                body["ResponseParam"] = request.ResponseParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateSql))
            {
                body["TemplateSql"] = request.TemplateSql;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDataAPIService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDataAPIServiceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateDataAPIServiceResponse> CreateDataAPIServiceWithOptionsAsync(CreateDataAPIServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiPath))
            {
                body["ApiPath"] = request.ApiPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                body["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DisplayName))
            {
                body["DisplayName"] = request.DisplayName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OriginSql))
            {
                body["OriginSql"] = request.OriginSql;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestParam))
            {
                body["RequestParam"] = request.RequestParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseParam))
            {
                body["ResponseParam"] = request.ResponseParam;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateSql))
            {
                body["TemplateSql"] = request.TemplateSql;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDataAPIService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDataAPIServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateDataAPIServiceResponse CreateDataAPIService(CreateDataAPIServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDataAPIServiceWithOptions(request, runtime);
        }

        public async Task<CreateDataAPIServiceResponse> CreateDataAPIServiceAsync(CreateDataAPIServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDataAPIServiceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the [Create a data source](~~270932~~) topic. Second, go to the **Data Source** tab on the **Message Forwarding** page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the **data source** that you created.
          * >  If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDataSourceItemRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDataSourceItemResponse
         */
        public CreateDataSourceItemResponse CreateDataSourceItemWithOptions(CreateDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScopeType))
            {
                query["ScopeType"] = request.ScopeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDataSourceItemResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the [Create a data source](~~270932~~) topic. Second, go to the **Data Source** tab on the **Message Forwarding** page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the **data source** that you created.
          * >  If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDataSourceItemRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDataSourceItemResponse
         */
        public async Task<CreateDataSourceItemResponse> CreateDataSourceItemWithOptionsAsync(CreateDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScopeType))
            {
                query["ScopeType"] = request.ScopeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDataSourceItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the [Create a data source](~~270932~~) topic. Second, go to the **Data Source** tab on the **Message Forwarding** page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the **data source** that you created.
          * >  If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDataSourceItemRequest
          * @return CreateDataSourceItemResponse
         */
        public CreateDataSourceItemResponse CreateDataSourceItem(CreateDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDataSourceItemWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the [Create a data source](~~270932~~) topic. Second, go to the **Data Source** tab on the **Message Forwarding** page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the **data source** that you created.
          * >  If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDataSourceItemRequest
          * @return CreateDataSourceItemResponse
         */
        public async Task<CreateDataSourceItemResponse> CreateDataSourceItemAsync(CreateDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDataSourceItemWithOptionsAsync(request, runtime);
        }

        public CreateDestinationResponse CreateDestinationWithOptions(CreateDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateDestinationResponse> CreateDestinationWithOptionsAsync(CreateDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateDestinationResponse CreateDestination(CreateDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDestinationWithOptions(request, runtime);
        }

        public async Task<CreateDestinationResponse> CreateDestinationAsync(CreateDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * To distribute devices, perform the following steps:
          * 1\\. Asynchronously call this operation to create a device distribution task and obtain the **JobId** parameter.
          * 2\\. Use **JobId** as a request parameter and repeatedly call the [QueryDeviceDistributeJob](~~199536~~) operation to obtain the **Status** parameter.
          * >  You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
          * If either of the following values is returned for the **Status** parameter, the distribution task ends:
          * *   **2**: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.
          * *   **3**: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
          * 3\\. Use **JobId** that is returned in Step 1 as a request parameter and call the [QueryDeviceDistributeDetail](~~199533~~) operation to obtain the **File** parameter. The File parameter indicates the file URL of the distribution result.
          * >  The file URL is valid for 10 minutes.
          * 4\\. Obtain the distribution result by using the file URL. The **Code** parameter indicates whether a device is distributed. If the value of the **Code** parameter is 200, the device is distributed.
          * If the distribution fails, you can perform the preceding steps to distribute devices again.
          * ## Limits
          * - This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * - You cannot call this operation to distribute devices across accounts.
          * - Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see [CreateProductDistributeJob](/help/en/iot-platform/latest/createproductdistributejob).
          * - Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDeviceDistributeJobResponse
         */
        public CreateDeviceDistributeJobResponse CreateDeviceDistributeJobWithOptions(CreateDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                body["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Strategy))
            {
                body["Strategy"] = request.Strategy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetAliyunId))
            {
                body["TargetAliyunId"] = request.TargetAliyunId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceConfig))
            {
                body["TargetInstanceConfig"] = request.TargetInstanceConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                body["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceDistributeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * To distribute devices, perform the following steps:
          * 1\\. Asynchronously call this operation to create a device distribution task and obtain the **JobId** parameter.
          * 2\\. Use **JobId** as a request parameter and repeatedly call the [QueryDeviceDistributeJob](~~199536~~) operation to obtain the **Status** parameter.
          * >  You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
          * If either of the following values is returned for the **Status** parameter, the distribution task ends:
          * *   **2**: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.
          * *   **3**: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
          * 3\\. Use **JobId** that is returned in Step 1 as a request parameter and call the [QueryDeviceDistributeDetail](~~199533~~) operation to obtain the **File** parameter. The File parameter indicates the file URL of the distribution result.
          * >  The file URL is valid for 10 minutes.
          * 4\\. Obtain the distribution result by using the file URL. The **Code** parameter indicates whether a device is distributed. If the value of the **Code** parameter is 200, the device is distributed.
          * If the distribution fails, you can perform the preceding steps to distribute devices again.
          * ## Limits
          * - This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * - You cannot call this operation to distribute devices across accounts.
          * - Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see [CreateProductDistributeJob](/help/en/iot-platform/latest/createproductdistributejob).
          * - Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDeviceDistributeJobResponse
         */
        public async Task<CreateDeviceDistributeJobResponse> CreateDeviceDistributeJobWithOptionsAsync(CreateDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                body["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Strategy))
            {
                body["Strategy"] = request.Strategy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetAliyunId))
            {
                body["TargetAliyunId"] = request.TargetAliyunId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceConfig))
            {
                body["TargetInstanceConfig"] = request.TargetInstanceConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                body["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceDistributeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * To distribute devices, perform the following steps:
          * 1\\. Asynchronously call this operation to create a device distribution task and obtain the **JobId** parameter.
          * 2\\. Use **JobId** as a request parameter and repeatedly call the [QueryDeviceDistributeJob](~~199536~~) operation to obtain the **Status** parameter.
          * >  You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
          * If either of the following values is returned for the **Status** parameter, the distribution task ends:
          * *   **2**: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.
          * *   **3**: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
          * 3\\. Use **JobId** that is returned in Step 1 as a request parameter and call the [QueryDeviceDistributeDetail](~~199533~~) operation to obtain the **File** parameter. The File parameter indicates the file URL of the distribution result.
          * >  The file URL is valid for 10 minutes.
          * 4\\. Obtain the distribution result by using the file URL. The **Code** parameter indicates whether a device is distributed. If the value of the **Code** parameter is 200, the device is distributed.
          * If the distribution fails, you can perform the preceding steps to distribute devices again.
          * ## Limits
          * - This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * - You cannot call this operation to distribute devices across accounts.
          * - Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see [CreateProductDistributeJob](/help/en/iot-platform/latest/createproductdistributejob).
          * - Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceDistributeJobRequest
          * @return CreateDeviceDistributeJobResponse
         */
        public CreateDeviceDistributeJobResponse CreateDeviceDistributeJob(CreateDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDeviceDistributeJobWithOptions(request, runtime);
        }

        /**
          * To distribute devices, perform the following steps:
          * 1\\. Asynchronously call this operation to create a device distribution task and obtain the **JobId** parameter.
          * 2\\. Use **JobId** as a request parameter and repeatedly call the [QueryDeviceDistributeJob](~~199536~~) operation to obtain the **Status** parameter.
          * >  You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
          * If either of the following values is returned for the **Status** parameter, the distribution task ends:
          * *   **2**: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.
          * *   **3**: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
          * 3\\. Use **JobId** that is returned in Step 1 as a request parameter and call the [QueryDeviceDistributeDetail](~~199533~~) operation to obtain the **File** parameter. The File parameter indicates the file URL of the distribution result.
          * >  The file URL is valid for 10 minutes.
          * 4\\. Obtain the distribution result by using the file URL. The **Code** parameter indicates whether a device is distributed. If the value of the **Code** parameter is 200, the device is distributed.
          * If the distribution fails, you can perform the preceding steps to distribute devices again.
          * ## Limits
          * - This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * - You cannot call this operation to distribute devices across accounts.
          * - Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see [CreateProductDistributeJob](/help/en/iot-platform/latest/createproductdistributejob).
          * - Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceDistributeJobRequest
          * @return CreateDeviceDistributeJobResponse
         */
        public async Task<CreateDeviceDistributeJobResponse> CreateDeviceDistributeJobAsync(CreateDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDeviceDistributeJobWithOptionsAsync(request, runtime);
        }

        public CreateDeviceDynamicGroupResponse CreateDeviceDynamicGroupWithOptions(CreateDeviceDynamicGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DynamicGroupExpression))
            {
                query["DynamicGroupExpression"] = request.DynamicGroupExpression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceDynamicGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceDynamicGroupResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateDeviceDynamicGroupResponse> CreateDeviceDynamicGroupWithOptionsAsync(CreateDeviceDynamicGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DynamicGroupExpression))
            {
                query["DynamicGroupExpression"] = request.DynamicGroupExpression;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceDynamicGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceDynamicGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateDeviceDynamicGroupResponse CreateDeviceDynamicGroup(CreateDeviceDynamicGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDeviceDynamicGroupWithOptions(request, runtime);
        }

        public async Task<CreateDeviceDynamicGroupResponse> CreateDeviceDynamicGroupAsync(CreateDeviceDynamicGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDeviceDynamicGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDeviceGroupResponse
         */
        public CreateDeviceGroupResponse CreateDeviceGroupWithOptions(CreateDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuperGroupId))
            {
                query["SuperGroupId"] = request.SuperGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateDeviceGroupResponse
         */
        public async Task<CreateDeviceGroupResponse> CreateDeviceGroupWithOptionsAsync(CreateDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuperGroupId))
            {
                query["SuperGroupId"] = request.SuperGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceGroupRequest
          * @return CreateDeviceGroupResponse
         */
        public CreateDeviceGroupResponse CreateDeviceGroup(CreateDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDeviceGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateDeviceGroupRequest
          * @return CreateDeviceGroupResponse
         */
        public async Task<CreateDeviceGroupResponse> CreateDeviceGroupAsync(CreateDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDeviceGroupWithOptionsAsync(request, runtime);
        }

        public CreateDeviceTunnelResponse CreateDeviceTunnelWithOptions(CreateDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Udi))
            {
                query["Udi"] = request.Udi;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateDeviceTunnelResponse> CreateDeviceTunnelWithOptionsAsync(CreateDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Udi))
            {
                query["Udi"] = request.Udi;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateDeviceTunnelResponse CreateDeviceTunnel(CreateDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<CreateDeviceTunnelResponse> CreateDeviceTunnelAsync(CreateDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDeviceTunnelWithOptionsAsync(request, runtime);
        }

        public CreateDownloadDataJobResponse CreateDownloadDataJobWithOptions(CreateDownloadDataJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateDownloadDataJobShrinkRequest request = new CreateDownloadDataJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FileConfig))
            {
                request.FileConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FileConfig, "FileConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadDataType))
            {
                query["DownloadDataType"] = request.DownloadDataType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileConfigShrink))
            {
                query["FileConfig"] = request.FileConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TableName))
            {
                query["TableName"] = request.TableName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDownloadDataJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDownloadDataJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateDownloadDataJobResponse> CreateDownloadDataJobWithOptionsAsync(CreateDownloadDataJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateDownloadDataJobShrinkRequest request = new CreateDownloadDataJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.FileConfig))
            {
                request.FileConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.FileConfig, "FileConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadDataType))
            {
                query["DownloadDataType"] = request.DownloadDataType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileConfigShrink))
            {
                query["FileConfig"] = request.FileConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TableName))
            {
                query["TableName"] = request.TableName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateDownloadDataJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateDownloadDataJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateDownloadDataJobResponse CreateDownloadDataJob(CreateDownloadDataJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateDownloadDataJobWithOptions(request, runtime);
        }

        public async Task<CreateDownloadDataJobResponse> CreateDownloadDataJobAsync(CreateDownloadDataJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateDownloadDataJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeDriverResponse
         */
        public CreateEdgeDriverResponse CreateEdgeDriverWithOptions(CreateEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CpuArch))
            {
                query["CpuArch"] = request.CpuArch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverName))
            {
                query["DriverName"] = request.DriverName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverProtocol))
            {
                query["DriverProtocol"] = request.DriverProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsBuiltIn))
            {
                query["IsBuiltIn"] = request.IsBuiltIn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Runtime))
            {
                query["Runtime"] = request.Runtime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeDriverResponse
         */
        public async Task<CreateEdgeDriverResponse> CreateEdgeDriverWithOptionsAsync(CreateEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CpuArch))
            {
                query["CpuArch"] = request.CpuArch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverName))
            {
                query["DriverName"] = request.DriverName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverProtocol))
            {
                query["DriverProtocol"] = request.DriverProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsBuiltIn))
            {
                query["IsBuiltIn"] = request.IsBuiltIn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Runtime))
            {
                query["Runtime"] = request.Runtime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeDriverRequest
          * @return CreateEdgeDriverResponse
         */
        public CreateEdgeDriverResponse CreateEdgeDriver(CreateEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeDriverWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeDriverRequest
          * @return CreateEdgeDriverResponse
         */
        public async Task<CreateEdgeDriverResponse> CreateEdgeDriverAsync(CreateEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeDriverVersionResponse
         */
        public CreateEdgeDriverVersionResponse CreateEdgeDriverVersionWithOptions(CreateEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Argument))
            {
                query["Argument"] = request.Argument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigCheckRule))
            {
                query["ConfigCheckRule"] = request.ConfigCheckRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerConfig))
            {
                query["ContainerConfig"] = request.ContainerConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverConfig))
            {
                query["DriverConfig"] = request.DriverConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeVersion))
            {
                query["EdgeVersion"] = request.EdgeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceConfig))
            {
                query["SourceConfig"] = request.SourceConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeDriverVersionResponse
         */
        public async Task<CreateEdgeDriverVersionResponse> CreateEdgeDriverVersionWithOptionsAsync(CreateEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Argument))
            {
                query["Argument"] = request.Argument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigCheckRule))
            {
                query["ConfigCheckRule"] = request.ConfigCheckRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerConfig))
            {
                query["ContainerConfig"] = request.ContainerConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverConfig))
            {
                query["DriverConfig"] = request.DriverConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeVersion))
            {
                query["EdgeVersion"] = request.EdgeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceConfig))
            {
                query["SourceConfig"] = request.SourceConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeDriverVersionRequest
          * @return CreateEdgeDriverVersionResponse
         */
        public CreateEdgeDriverVersionResponse CreateEdgeDriverVersion(CreateEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeDriverVersionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeDriverVersionRequest
          * @return CreateEdgeDriverVersionResponse
         */
        public async Task<CreateEdgeDriverVersionResponse> CreateEdgeDriverVersionAsync(CreateEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeInstanceResponse
         */
        public CreateEdgeInstanceResponse CreateEdgeInstanceWithOptions(CreateEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Spec))
            {
                query["Spec"] = request.Spec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeInstanceResponse
         */
        public async Task<CreateEdgeInstanceResponse> CreateEdgeInstanceWithOptionsAsync(CreateEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Spec))
            {
                query["Spec"] = request.Spec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeInstanceRequest
          * @return CreateEdgeInstanceResponse
         */
        public CreateEdgeInstanceResponse CreateEdgeInstance(CreateEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request CreateEdgeInstanceRequest
          * @return CreateEdgeInstanceResponse
         */
        public async Task<CreateEdgeInstanceResponse> CreateEdgeInstanceAsync(CreateEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public CreateEdgeInstanceChannelResponse CreateEdgeInstanceChannelWithOptions(CreateEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateEdgeInstanceChannelResponse> CreateEdgeInstanceChannelWithOptionsAsync(CreateEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateEdgeInstanceChannelResponse CreateEdgeInstanceChannel(CreateEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeInstanceChannelWithOptions(request, runtime);
        }

        public async Task<CreateEdgeInstanceChannelResponse> CreateEdgeInstanceChannelAsync(CreateEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeInstanceChannelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeInstanceDeploymentResponse
         */
        public CreateEdgeInstanceDeploymentResponse CreateEdgeInstanceDeploymentWithOptions(CreateEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceDeploymentResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeInstanceDeploymentResponse
         */
        public async Task<CreateEdgeInstanceDeploymentResponse> CreateEdgeInstanceDeploymentWithOptionsAsync(CreateEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceDeploymentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeInstanceDeploymentRequest
          * @return CreateEdgeInstanceDeploymentResponse
         */
        public CreateEdgeInstanceDeploymentResponse CreateEdgeInstanceDeployment(CreateEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeInstanceDeploymentWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeInstanceDeploymentRequest
          * @return CreateEdgeInstanceDeploymentResponse
         */
        public async Task<CreateEdgeInstanceDeploymentResponse> CreateEdgeInstanceDeploymentAsync(CreateEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeInstanceDeploymentWithOptionsAsync(request, runtime);
        }

        public CreateEdgeInstanceMessageRoutingResponse CreateEdgeInstanceMessageRoutingWithOptions(CreateEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceData))
            {
                query["SourceData"] = request.SourceData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetData))
            {
                query["TargetData"] = request.TargetData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIotHubQos))
            {
                query["TargetIotHubQos"] = request.TargetIotHubQos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFilter))
            {
                query["TopicFilter"] = request.TopicFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceMessageRoutingResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateEdgeInstanceMessageRoutingResponse> CreateEdgeInstanceMessageRoutingWithOptionsAsync(CreateEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceData))
            {
                query["SourceData"] = request.SourceData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetData))
            {
                query["TargetData"] = request.TargetData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIotHubQos))
            {
                query["TargetIotHubQos"] = request.TargetIotHubQos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFilter))
            {
                query["TopicFilter"] = request.TopicFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeInstanceMessageRoutingResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateEdgeInstanceMessageRoutingResponse CreateEdgeInstanceMessageRouting(CreateEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeInstanceMessageRoutingWithOptions(request, runtime);
        }

        public async Task<CreateEdgeInstanceMessageRoutingResponse> CreateEdgeInstanceMessageRoutingAsync(CreateEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeInstanceMessageRoutingWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeOssPreSignedAddressRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeOssPreSignedAddressResponse
         */
        public CreateEdgeOssPreSignedAddressResponse CreateEdgeOssPreSignedAddressWithOptions(CreateEdgeOssPreSignedAddressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceVersion))
            {
                query["ResourceVersion"] = request.ResourceVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeOssPreSignedAddress",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeOssPreSignedAddressResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeOssPreSignedAddressRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateEdgeOssPreSignedAddressResponse
         */
        public async Task<CreateEdgeOssPreSignedAddressResponse> CreateEdgeOssPreSignedAddressWithOptionsAsync(CreateEdgeOssPreSignedAddressRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceId))
            {
                query["ResourceId"] = request.ResourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceVersion))
            {
                query["ResourceVersion"] = request.ResourceVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateEdgeOssPreSignedAddress",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateEdgeOssPreSignedAddressResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeOssPreSignedAddressRequest
          * @return CreateEdgeOssPreSignedAddressResponse
         */
        public CreateEdgeOssPreSignedAddressResponse CreateEdgeOssPreSignedAddress(CreateEdgeOssPreSignedAddressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateEdgeOssPreSignedAddressWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateEdgeOssPreSignedAddressRequest
          * @return CreateEdgeOssPreSignedAddressResponse
         */
        public async Task<CreateEdgeOssPreSignedAddressResponse> CreateEdgeOssPreSignedAddressAsync(CreateEdgeOssPreSignedAddressRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateEdgeOssPreSignedAddressWithOptionsAsync(request, runtime);
        }

        public CreateJobResponse CreateJobWithOptions(CreateJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateJobShrinkRequest request = new CreateJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.JobFile))
            {
                request.JobFileShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.JobFile, "JobFile", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RolloutConfig))
            {
                request.RolloutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RolloutConfig, "RolloutConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TargetConfig))
            {
                request.TargetConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TargetConfig, "TargetConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TimeoutConfig))
            {
                request.TimeoutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TimeoutConfig, "TimeoutConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobDocument))
            {
                query["JobDocument"] = request.JobDocument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobFileShrink))
            {
                query["JobFile"] = request.JobFileShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobName))
            {
                query["JobName"] = request.JobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RolloutConfigShrink))
            {
                query["RolloutConfig"] = request.RolloutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduledTime))
            {
                query["ScheduledTime"] = request.ScheduledTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetConfigShrink))
            {
                query["TargetConfig"] = request.TargetConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutConfigShrink))
            {
                query["TimeoutConfig"] = request.TimeoutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateJobResponse> CreateJobWithOptionsAsync(CreateJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateJobShrinkRequest request = new CreateJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.JobFile))
            {
                request.JobFileShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.JobFile, "JobFile", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RolloutConfig))
            {
                request.RolloutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RolloutConfig, "RolloutConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TargetConfig))
            {
                request.TargetConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TargetConfig, "TargetConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TimeoutConfig))
            {
                request.TimeoutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TimeoutConfig, "TimeoutConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobDocument))
            {
                query["JobDocument"] = request.JobDocument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobFileShrink))
            {
                query["JobFile"] = request.JobFileShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobName))
            {
                query["JobName"] = request.JobName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RolloutConfigShrink))
            {
                query["RolloutConfig"] = request.RolloutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduledTime))
            {
                query["ScheduledTime"] = request.ScheduledTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetConfigShrink))
            {
                query["TargetConfig"] = request.TargetConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutConfigShrink))
            {
                query["TimeoutConfig"] = request.TimeoutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateJobResponse CreateJob(CreateJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateJobWithOptions(request, runtime);
        }

        public async Task<CreateJobResponse> CreateJobAsync(CreateJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to create up to 500 devices.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateLoRaNodesTaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateLoRaNodesTaskResponse
         */
        public CreateLoRaNodesTaskResponse CreateLoRaNodesTaskWithOptions(CreateLoRaNodesTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceInfo))
            {
                query["DeviceInfo"] = request.DeviceInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateLoRaNodesTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateLoRaNodesTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to create up to 500 devices.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateLoRaNodesTaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateLoRaNodesTaskResponse
         */
        public async Task<CreateLoRaNodesTaskResponse> CreateLoRaNodesTaskWithOptionsAsync(CreateLoRaNodesTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceInfo))
            {
                query["DeviceInfo"] = request.DeviceInfo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateLoRaNodesTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateLoRaNodesTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to create up to 500 devices.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateLoRaNodesTaskRequest
          * @return CreateLoRaNodesTaskResponse
         */
        public CreateLoRaNodesTaskResponse CreateLoRaNodesTask(CreateLoRaNodesTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateLoRaNodesTaskWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to create up to 500 devices.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateLoRaNodesTaskRequest
          * @return CreateLoRaNodesTaskResponse
         */
        public async Task<CreateLoRaNodesTaskResponse> CreateLoRaNodesTaskAsync(CreateLoRaNodesTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateLoRaNodesTaskWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common parameters](~~30561~~).
          *
          * @param request CreateOTADynamicUpgradeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTADynamicUpgradeJobResponse
         */
        public CreateOTADynamicUpgradeJobResponse CreateOTADynamicUpgradeJobWithOptions(CreateOTADynamicUpgradeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DynamicMode))
            {
                query["DynamicMode"] = request.DynamicMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaximumPerMinute))
            {
                query["MaximumPerMinute"] = request.MaximumPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiModuleMode))
            {
                query["MultiModuleMode"] = request.MultiModuleMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OverwriteMode))
            {
                query["OverwriteMode"] = request.OverwriteMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryCount))
            {
                query["RetryCount"] = request.RetryCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryInterval))
            {
                query["RetryInterval"] = request.RetryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTADynamicUpgradeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTADynamicUpgradeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common parameters](~~30561~~).
          *
          * @param request CreateOTADynamicUpgradeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTADynamicUpgradeJobResponse
         */
        public async Task<CreateOTADynamicUpgradeJobResponse> CreateOTADynamicUpgradeJobWithOptionsAsync(CreateOTADynamicUpgradeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DynamicMode))
            {
                query["DynamicMode"] = request.DynamicMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaximumPerMinute))
            {
                query["MaximumPerMinute"] = request.MaximumPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiModuleMode))
            {
                query["MultiModuleMode"] = request.MultiModuleMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OverwriteMode))
            {
                query["OverwriteMode"] = request.OverwriteMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryCount))
            {
                query["RetryCount"] = request.RetryCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryInterval))
            {
                query["RetryInterval"] = request.RetryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTADynamicUpgradeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTADynamicUpgradeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common parameters](~~30561~~).
          *
          * @param request CreateOTADynamicUpgradeJobRequest
          * @return CreateOTADynamicUpgradeJobResponse
         */
        public CreateOTADynamicUpgradeJobResponse CreateOTADynamicUpgradeJob(CreateOTADynamicUpgradeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOTADynamicUpgradeJobWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common parameters](~~30561~~).
          *
          * @param request CreateOTADynamicUpgradeJobRequest
          * @return CreateOTADynamicUpgradeJobResponse
         */
        public async Task<CreateOTADynamicUpgradeJobResponse> CreateOTADynamicUpgradeJobAsync(CreateOTADynamicUpgradeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOTADynamicUpgradeJobWithOptionsAsync(request, runtime);
        }

        /**
          * Before you call this operation to create an OTA update package, you must call the [GenerateOTAUploadURL](~~147310~~) operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) [PostObject](~~31988~~) operation to upload the files.
          * ## Limits
          * Each Alibaba Cloud account can have up to 500 update packages. 
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAFirmwareResponse
         */
        public CreateOTAFirmwareResponse CreateOTAFirmwareWithOptions(CreateOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestVersion))
            {
                query["DestVersion"] = request.DestVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareDesc))
            {
                query["FirmwareDesc"] = request.FirmwareDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareName))
            {
                query["FirmwareName"] = request.FirmwareName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareSign))
            {
                query["FirmwareSign"] = request.FirmwareSign;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareSize))
            {
                query["FirmwareSize"] = request.FirmwareSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareUrl))
            {
                query["FirmwareUrl"] = request.FirmwareUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiFiles))
            {
                query["MultiFiles"] = request.MultiFiles;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedToVerify))
            {
                query["NeedToVerify"] = request.NeedToVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SignMethod))
            {
                query["SignMethod"] = request.SignMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Udi))
            {
                query["Udi"] = request.Udi;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAFirmwareResponse>(CallApi(params_, req, runtime));
        }

        /**
          * Before you call this operation to create an OTA update package, you must call the [GenerateOTAUploadURL](~~147310~~) operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) [PostObject](~~31988~~) operation to upload the files.
          * ## Limits
          * Each Alibaba Cloud account can have up to 500 update packages. 
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAFirmwareResponse
         */
        public async Task<CreateOTAFirmwareResponse> CreateOTAFirmwareWithOptionsAsync(CreateOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestVersion))
            {
                query["DestVersion"] = request.DestVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareDesc))
            {
                query["FirmwareDesc"] = request.FirmwareDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareName))
            {
                query["FirmwareName"] = request.FirmwareName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareSign))
            {
                query["FirmwareSign"] = request.FirmwareSign;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareSize))
            {
                query["FirmwareSize"] = request.FirmwareSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareUrl))
            {
                query["FirmwareUrl"] = request.FirmwareUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiFiles))
            {
                query["MultiFiles"] = request.MultiFiles;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedToVerify))
            {
                query["NeedToVerify"] = request.NeedToVerify;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SignMethod))
            {
                query["SignMethod"] = request.SignMethod;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Udi))
            {
                query["Udi"] = request.Udi;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * Before you call this operation to create an OTA update package, you must call the [GenerateOTAUploadURL](~~147310~~) operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) [PostObject](~~31988~~) operation to upload the files.
          * ## Limits
          * Each Alibaba Cloud account can have up to 500 update packages. 
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAFirmwareRequest
          * @return CreateOTAFirmwareResponse
         */
        public CreateOTAFirmwareResponse CreateOTAFirmware(CreateOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOTAFirmwareWithOptions(request, runtime);
        }

        /**
          * Before you call this operation to create an OTA update package, you must call the [GenerateOTAUploadURL](~~147310~~) operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) [PostObject](~~31988~~) operation to upload the files.
          * ## Limits
          * Each Alibaba Cloud account can have up to 500 update packages. 
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAFirmwareRequest
          * @return CreateOTAFirmwareResponse
         */
        public async Task<CreateOTAFirmwareResponse> CreateOTAFirmwareAsync(CreateOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOTAFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.
          * *   You can create a maximum of 10 custom OTA modules for each product.
          * *   After an OTA module is created, you cannot modify its name. You can call the [UpdateOTAModule](~~186061~~) operation to modify the module alias and description.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAModuleResponse
         */
        public CreateOTAModuleResponse CreateOTAModuleWithOptions(CreateOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAModuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.
          * *   You can create a maximum of 10 custom OTA modules for each product.
          * *   After an OTA module is created, you cannot modify its name. You can call the [UpdateOTAModule](~~186061~~) operation to modify the module alias and description.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAModuleResponse
         */
        public async Task<CreateOTAModuleResponse> CreateOTAModuleWithOptionsAsync(CreateOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAModuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.
          * *   You can create a maximum of 10 custom OTA modules for each product.
          * *   After an OTA module is created, you cannot modify its name. You can call the [UpdateOTAModule](~~186061~~) operation to modify the module alias and description.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAModuleRequest
          * @return CreateOTAModuleResponse
         */
        public CreateOTAModuleResponse CreateOTAModule(CreateOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOTAModuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.
          * *   You can create a maximum of 10 custom OTA modules for each product.
          * *   After an OTA module is created, you cannot modify its name. You can call the [UpdateOTAModule](~~186061~~) operation to modify the module alias and description.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAModuleRequest
          * @return CreateOTAModuleResponse
         */
        public async Task<CreateOTAModuleResponse> CreateOTAModuleAsync(CreateOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOTAModuleWithOptionsAsync(request, runtime);
        }

        /**
          * *   If you specify that an update package does not need to be verified when you call the [CreateOTAFirmware](~~147311~~) operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see [CreateOTAVerifyJob](~~147480~~).
          * *   You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the [GenerateDeviceNameListURL](~~186062~~) operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.
          * *   When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.
          * *   Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.
          * *   You can create multiple static update batches by using a single update package.
          * *   Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAStaticUpgradeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAStaticUpgradeJobResponse
         */
        public CreateOTAStaticUpgradeJobResponse CreateOTAStaticUpgradeJobWithOptions(CreateOTAStaticUpgradeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnListFileUrl))
            {
                query["DnListFileUrl"] = request.DnListFileUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrayPercent))
            {
                query["GrayPercent"] = request.GrayPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaximumPerMinute))
            {
                query["MaximumPerMinute"] = request.MaximumPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiModuleMode))
            {
                query["MultiModuleMode"] = request.MultiModuleMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OverwriteMode))
            {
                query["OverwriteMode"] = request.OverwriteMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryCount))
            {
                query["RetryCount"] = request.RetryCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryInterval))
            {
                query["RetryInterval"] = request.RetryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleFinishTime))
            {
                query["ScheduleFinishTime"] = request.ScheduleFinishTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleTime))
            {
                query["ScheduleTime"] = request.ScheduleTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDeviceName))
            {
                query["TargetDeviceName"] = request.TargetDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetSelection))
            {
                query["TargetSelection"] = request.TargetSelection;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAStaticUpgradeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAStaticUpgradeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   If you specify that an update package does not need to be verified when you call the [CreateOTAFirmware](~~147311~~) operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see [CreateOTAVerifyJob](~~147480~~).
          * *   You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the [GenerateDeviceNameListURL](~~186062~~) operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.
          * *   When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.
          * *   Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.
          * *   You can create multiple static update batches by using a single update package.
          * *   Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAStaticUpgradeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAStaticUpgradeJobResponse
         */
        public async Task<CreateOTAStaticUpgradeJobResponse> CreateOTAStaticUpgradeJobWithOptionsAsync(CreateOTAStaticUpgradeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DnListFileUrl))
            {
                query["DnListFileUrl"] = request.DnListFileUrl;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GrayPercent))
            {
                query["GrayPercent"] = request.GrayPercent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MaximumPerMinute))
            {
                query["MaximumPerMinute"] = request.MaximumPerMinute;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MultiModuleMode))
            {
                query["MultiModuleMode"] = request.MultiModuleMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OverwriteMode))
            {
                query["OverwriteMode"] = request.OverwriteMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryCount))
            {
                query["RetryCount"] = request.RetryCount;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RetryInterval))
            {
                query["RetryInterval"] = request.RetryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleFinishTime))
            {
                query["ScheduleFinishTime"] = request.ScheduleFinishTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleTime))
            {
                query["ScheduleTime"] = request.ScheduleTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcVersion))
            {
                query["SrcVersion"] = request.SrcVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDeviceName))
            {
                query["TargetDeviceName"] = request.TargetDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetSelection))
            {
                query["TargetSelection"] = request.TargetSelection;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAStaticUpgradeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAStaticUpgradeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   If you specify that an update package does not need to be verified when you call the [CreateOTAFirmware](~~147311~~) operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see [CreateOTAVerifyJob](~~147480~~).
          * *   You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the [GenerateDeviceNameListURL](~~186062~~) operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.
          * *   When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.
          * *   Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.
          * *   You can create multiple static update batches by using a single update package.
          * *   Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAStaticUpgradeJobRequest
          * @return CreateOTAStaticUpgradeJobResponse
         */
        public CreateOTAStaticUpgradeJobResponse CreateOTAStaticUpgradeJob(CreateOTAStaticUpgradeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOTAStaticUpgradeJobWithOptions(request, runtime);
        }

        /**
          * *   If you specify that an update package does not need to be verified when you call the [CreateOTAFirmware](~~147311~~) operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see [CreateOTAVerifyJob](~~147480~~).
          * *   You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the [GenerateDeviceNameListURL](~~186062~~) operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.
          * *   When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.
          * *   Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.
          * *   You can create multiple static update batches by using a single update package.
          * *   Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAStaticUpgradeJobRequest
          * @return CreateOTAStaticUpgradeJobResponse
         */
        public async Task<CreateOTAStaticUpgradeJobResponse> CreateOTAStaticUpgradeJobAsync(CreateOTAStaticUpgradeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOTAStaticUpgradeJobWithOptionsAsync(request, runtime);
        }

        /**
          * *   You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the [QueryOTAFirmware](~~147461~~) operation to view the status of a verification task.
          * *   You cannot initiate a verification task for an update package that is being verified or has been verified.
          * *   You can specify a maximum of 10 devices for a verification task.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAVerifyJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAVerifyJobResponse
         */
        public CreateOTAVerifyJobResponse CreateOTAVerifyJobWithOptions(CreateOTAVerifyJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDeviceName))
            {
                query["TargetDeviceName"] = request.TargetDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAVerifyJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAVerifyJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the [QueryOTAFirmware](~~147461~~) operation to view the status of a verification task.
          * *   You cannot initiate a verification task for an update package that is being verified or has been verified.
          * *   You can specify a maximum of 10 devices for a verification task.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAVerifyJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateOTAVerifyJobResponse
         */
        public async Task<CreateOTAVerifyJobResponse> CreateOTAVerifyJobWithOptionsAsync(CreateOTAVerifyJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DownloadProtocol))
            {
                query["DownloadProtocol"] = request.DownloadProtocol;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedConfirm))
            {
                query["NeedConfirm"] = request.NeedConfirm;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NeedPush))
            {
                query["NeedPush"] = request.NeedPush;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetDeviceName))
            {
                query["TargetDeviceName"] = request.TargetDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutInMinutes))
            {
                query["TimeoutInMinutes"] = request.TimeoutInMinutes;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateOTAVerifyJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateOTAVerifyJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the [QueryOTAFirmware](~~147461~~) operation to view the status of a verification task.
          * *   You cannot initiate a verification task for an update package that is being verified or has been verified.
          * *   You can specify a maximum of 10 devices for a verification task.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAVerifyJobRequest
          * @return CreateOTAVerifyJobResponse
         */
        public CreateOTAVerifyJobResponse CreateOTAVerifyJob(CreateOTAVerifyJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateOTAVerifyJobWithOptions(request, runtime);
        }

        /**
          * *   You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the [QueryOTAFirmware](~~147461~~) operation to view the status of a verification task.
          * *   You cannot initiate a verification task for an update package that is being verified or has been verified.
          * *   You can specify a maximum of 10 devices for a verification task.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateOTAVerifyJobRequest
          * @return CreateOTAVerifyJobResponse
         */
        public async Task<CreateOTAVerifyJobResponse> CreateOTAVerifyJobAsync(CreateOTAVerifyJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateOTAVerifyJobWithOptionsAsync(request, runtime);
        }

        public CreateParserResponse CreateParserWithOptions(CreateParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateParserResponse> CreateParserWithOptionsAsync(CreateParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateParserResponse CreateParser(CreateParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateParserWithOptions(request, runtime);
        }

        public async Task<CreateParserResponse> CreateParserAsync(CreateParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateParserWithOptionsAsync(request, runtime);
        }

        public CreateParserDataSourceResponse CreateParserDataSourceWithOptions(CreateParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateParserDataSourceResponse> CreateParserDataSourceWithOptionsAsync(CreateParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateParserDataSourceResponse CreateParserDataSource(CreateParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateParserDataSourceWithOptions(request, runtime);
        }

        public async Task<CreateParserDataSourceResponse> CreateParserDataSourceAsync(CreateParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateParserDataSourceWithOptionsAsync(request, runtime);
        }

        /**
          * If a Thing Specification Language (TSL) model is required to create a product, you must set the **AliyunCommodityCode** parameter to iothub_senior and configure the **DataFormat** parameter.******** For more information, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductResponse
         */
        public CreateProductResponse CreateProductWithOptions(CreateProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunCommodityCode))
            {
                query["AliyunCommodityCode"] = request.AliyunCommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthType))
            {
                query["AuthType"] = request.AuthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CategoryKey))
            {
                query["CategoryKey"] = request.CategoryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataFormat))
            {
                query["DataFormat"] = request.DataFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id2))
            {
                query["Id2"] = request.Id2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JoinPermissionId))
            {
                query["JoinPermissionId"] = request.JoinPermissionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                query["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeType))
            {
                query["NodeType"] = request.NodeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductName))
            {
                query["ProductName"] = request.ProductName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                query["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishAuto))
            {
                query["PublishAuto"] = request.PublishAuto;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ValidateType))
            {
                query["ValidateType"] = request.ValidateType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If a Thing Specification Language (TSL) model is required to create a product, you must set the **AliyunCommodityCode** parameter to iothub_senior and configure the **DataFormat** parameter.******** For more information, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductResponse
         */
        public async Task<CreateProductResponse> CreateProductWithOptionsAsync(CreateProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunCommodityCode))
            {
                query["AliyunCommodityCode"] = request.AliyunCommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthType))
            {
                query["AuthType"] = request.AuthType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CategoryKey))
            {
                query["CategoryKey"] = request.CategoryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataFormat))
            {
                query["DataFormat"] = request.DataFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Id2))
            {
                query["Id2"] = request.Id2;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JoinPermissionId))
            {
                query["JoinPermissionId"] = request.JoinPermissionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NetType))
            {
                query["NetType"] = request.NetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NodeType))
            {
                query["NodeType"] = request.NodeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductName))
            {
                query["ProductName"] = request.ProductName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProtocolType))
            {
                query["ProtocolType"] = request.ProtocolType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PublishAuto))
            {
                query["PublishAuto"] = request.PublishAuto;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ValidateType))
            {
                query["ValidateType"] = request.ValidateType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If a Thing Specification Language (TSL) model is required to create a product, you must set the **AliyunCommodityCode** parameter to iothub_senior and configure the **DataFormat** parameter.******** For more information, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductRequest
          * @return CreateProductResponse
         */
        public CreateProductResponse CreateProduct(CreateProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateProductWithOptions(request, runtime);
        }

        /**
          * If a Thing Specification Language (TSL) model is required to create a product, you must set the **AliyunCommodityCode** parameter to iothub_senior and configure the **DataFormat** parameter.******** For more information, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductRequest
          * @return CreateProductResponse
         */
        public async Task<CreateProductResponse> CreateProductAsync(CreateProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateProductWithOptionsAsync(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   You cannot call this operation to distribute a product across accounts.
          * *   A product distribution task does not distribute the devices under the product.
          * *   After a product is distributed, you cannot modify its TSL model and scripts.
          * *   Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see [CreateDeviceDistributeJob](~~199390~~).
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          *     **
          *     **Note** RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductDistributeJobResponse
         */
        public CreateProductDistributeJobResponse CreateProductDistributeJobWithOptions(CreateProductDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetAliyunId))
            {
                query["TargetAliyunId"] = request.TargetAliyunId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceId))
            {
                query["TargetInstanceId"] = request.TargetInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductDistributeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   You cannot call this operation to distribute a product across accounts.
          * *   A product distribution task does not distribute the devices under the product.
          * *   After a product is distributed, you cannot modify its TSL model and scripts.
          * *   Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see [CreateDeviceDistributeJob](~~199390~~).
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          *     **
          *     **Note** RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductDistributeJobResponse
         */
        public async Task<CreateProductDistributeJobResponse> CreateProductDistributeJobWithOptionsAsync(CreateProductDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetAliyunId))
            {
                query["TargetAliyunId"] = request.TargetAliyunId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceId))
            {
                query["TargetInstanceId"] = request.TargetInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductDistributeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   You cannot call this operation to distribute a product across accounts.
          * *   A product distribution task does not distribute the devices under the product.
          * *   After a product is distributed, you cannot modify its TSL model and scripts.
          * *   Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see [CreateDeviceDistributeJob](~~199390~~).
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          *     **
          *     **Note** RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductDistributeJobRequest
          * @return CreateProductDistributeJobResponse
         */
        public CreateProductDistributeJobResponse CreateProductDistributeJob(CreateProductDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateProductDistributeJobWithOptions(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   You cannot call this operation to distribute a product across accounts.
          * *   A product distribution task does not distribute the devices under the product.
          * *   After a product is distributed, you cannot modify its TSL model and scripts.
          * *   Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see [CreateDeviceDistributeJob](~~199390~~).
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          *     **
          *     **Note** RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductDistributeJobRequest
          * @return CreateProductDistributeJobResponse
         */
        public async Task<CreateProductDistributeJobResponse> CreateProductDistributeJobAsync(CreateProductDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateProductDistributeJobWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can create a maximum of 10 tags for a product in a single call.
          * *   Each product can have a maximum of 100 tags.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductTagsResponse
         */
        public CreateProductTagsResponse CreateProductTagsWithOptions(CreateProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can create a maximum of 10 tags for a product in a single call.
          * *   Each product can have a maximum of 100 tags.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductTagsResponse
         */
        public async Task<CreateProductTagsResponse> CreateProductTagsWithOptionsAsync(CreateProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can create a maximum of 10 tags for a product in a single call.
          * *   Each product can have a maximum of 100 tags.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTagsRequest
          * @return CreateProductTagsResponse
         */
        public CreateProductTagsResponse CreateProductTags(CreateProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateProductTagsWithOptions(request, runtime);
        }

        /**
          * *   You can create a maximum of 10 tags for a product in a single call.
          * *   Each product can have a maximum of 100 tags.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTagsRequest
          * @return CreateProductTagsResponse
         */
        public async Task<CreateProductTagsResponse> CreateProductTagsAsync(CreateProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateProductTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductTopicResponse
         */
        public CreateProductTopicResponse CreateProductTopicWithOptions(CreateProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateProductTopicResponse
         */
        public async Task<CreateProductTopicResponse> CreateProductTopicWithOptionsAsync(CreateProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateProductTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTopicRequest
          * @return CreateProductTopicResponse
         */
        public CreateProductTopicResponse CreateProductTopic(CreateProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateProductTopicWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateProductTopicRequest
          * @return CreateProductTopicResponse
         */
        public async Task<CreateProductTopicResponse> CreateProductTopicAsync(CreateProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateProductTopicWithOptionsAsync(request, runtime);
        }

        /**
          * When you call this operation, you must specify the **ProductKey** parameter in the request.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateRuleResponse
         */
        public CreateRuleResponse CreateRuleWithOptions(CreateRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataType))
            {
                query["DataType"] = request.DataType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDesc))
            {
                query["RuleDesc"] = request.RuleDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Select))
            {
                query["Select"] = request.Select;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShortTopic))
            {
                query["ShortTopic"] = request.ShortTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicType))
            {
                query["TopicType"] = request.TopicType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Where))
            {
                query["Where"] = request.Where;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * When you call this operation, you must specify the **ProductKey** parameter in the request.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateRuleResponse
         */
        public async Task<CreateRuleResponse> CreateRuleWithOptionsAsync(CreateRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataType))
            {
                query["DataType"] = request.DataType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDesc))
            {
                query["RuleDesc"] = request.RuleDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Select))
            {
                query["Select"] = request.Select;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShortTopic))
            {
                query["ShortTopic"] = request.ShortTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicType))
            {
                query["TopicType"] = request.TopicType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Where))
            {
                query["Where"] = request.Where;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * When you call this operation, you must specify the **ProductKey** parameter in the request.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleRequest
          * @return CreateRuleResponse
         */
        public CreateRuleResponse CreateRule(CreateRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRuleWithOptions(request, runtime);
        }

        /**
          * When you call this operation, you must specify the **ProductKey** parameter in the request.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleRequest
          * @return CreateRuleResponse
         */
        public async Task<CreateRuleResponse> CreateRuleAsync(CreateRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see [Regions and zones](~~85669~~).
          * *   You can create a maximum of 10 rule actions for each rule.
          * *   You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the [IoT Platform console](https://iot.console.aliyun.com).
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateRuleActionResponse
         */
        public CreateRuleActionResponse CreateRuleActionWithOptions(CreateRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ErrorActionFlag))
            {
                query["ErrorActionFlag"] = request.ErrorActionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRuleActionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see [Regions and zones](~~85669~~).
          * *   You can create a maximum of 10 rule actions for each rule.
          * *   You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the [IoT Platform console](https://iot.console.aliyun.com).
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateRuleActionResponse
         */
        public async Task<CreateRuleActionResponse> CreateRuleActionWithOptionsAsync(CreateRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ErrorActionFlag))
            {
                query["ErrorActionFlag"] = request.ErrorActionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateRuleActionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see [Regions and zones](~~85669~~).
          * *   You can create a maximum of 10 rule actions for each rule.
          * *   You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the [IoT Platform console](https://iot.console.aliyun.com).
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleActionRequest
          * @return CreateRuleActionResponse
         */
        public CreateRuleActionResponse CreateRuleAction(CreateRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateRuleActionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see [Regions and zones](~~85669~~).
          * *   You can create a maximum of 10 rule actions for each rule.
          * *   You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the [IoT Platform console](https://iot.console.aliyun.com).
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateRuleActionRequest
          * @return CreateRuleActionResponse
         */
        public async Task<CreateRuleActionResponse> CreateRuleActionAsync(CreateRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateRuleActionWithOptionsAsync(request, runtime);
        }

        public CreateSceneRuleResponse CreateSceneRuleWithOptions(CreateSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleContent))
            {
                query["RuleContent"] = request.RuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDescription))
            {
                query["RuleDescription"] = request.RuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSceneRuleResponse> CreateSceneRuleWithOptionsAsync(CreateSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleContent))
            {
                query["RuleContent"] = request.RuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDescription))
            {
                query["RuleDescription"] = request.RuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSceneRuleResponse CreateSceneRule(CreateSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSceneRuleWithOptions(request, runtime);
        }

        public async Task<CreateSceneRuleResponse> CreateSceneRuleAsync(CreateSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSceneRuleWithOptionsAsync(request, runtime);
        }

        public CreateSchedulePeriodResponse CreateSchedulePeriodWithOptions(CreateSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSchedulePeriodResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSchedulePeriodResponse> CreateSchedulePeriodWithOptionsAsync(CreateSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSchedulePeriodResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSchedulePeriodResponse CreateSchedulePeriod(CreateSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSchedulePeriodWithOptions(request, runtime);
        }

        public async Task<CreateSchedulePeriodResponse> CreateSchedulePeriodAsync(CreateSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSchedulePeriodWithOptionsAsync(request, runtime);
        }

        public CreateSharePromotionActivityResponse CreateSharePromotionActivityWithOptions(CreateSharePromotionActivityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityName))
            {
                body["SharePromotionActivityName"] = request.SharePromotionActivityName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSharePromotionActivity",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSharePromotionActivityResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSharePromotionActivityResponse> CreateSharePromotionActivityWithOptionsAsync(CreateSharePromotionActivityRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityName))
            {
                body["SharePromotionActivityName"] = request.SharePromotionActivityName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSharePromotionActivity",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSharePromotionActivityResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSharePromotionActivityResponse CreateSharePromotionActivity(CreateSharePromotionActivityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSharePromotionActivityWithOptions(request, runtime);
        }

        public async Task<CreateSharePromotionActivityResponse> CreateSharePromotionActivityAsync(CreateSharePromotionActivityRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSharePromotionActivityWithOptionsAsync(request, runtime);
        }

        public CreateSharePromotionSpeechModelResponse CreateSharePromotionSpeechModelWithOptions(CreateSharePromotionSpeechModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                body["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechModelType))
            {
                body["SpeechModelType"] = request.SpeechModelType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSharePromotionSpeechModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSharePromotionSpeechModelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSharePromotionSpeechModelResponse> CreateSharePromotionSpeechModelWithOptionsAsync(CreateSharePromotionSpeechModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                body["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechModelType))
            {
                body["SpeechModelType"] = request.SpeechModelType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSharePromotionSpeechModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSharePromotionSpeechModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSharePromotionSpeechModelResponse CreateSharePromotionSpeechModel(CreateSharePromotionSpeechModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSharePromotionSpeechModelWithOptions(request, runtime);
        }

        public async Task<CreateSharePromotionSpeechModelResponse> CreateSharePromotionSpeechModelAsync(CreateSharePromotionSpeechModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSharePromotionSpeechModelWithOptionsAsync(request, runtime);
        }

        public CreateSoundCodeResponse CreateSoundCodeWithOptions(CreateSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OpenType))
            {
                body["OpenType"] = request.OpenType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSoundCodeResponse> CreateSoundCodeWithOptionsAsync(CreateSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OpenType))
            {
                body["OpenType"] = request.OpenType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSoundCodeResponse CreateSoundCode(CreateSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSoundCodeWithOptions(request, runtime);
        }

        public async Task<CreateSoundCodeResponse> CreateSoundCodeAsync(CreateSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSoundCodeWithOptionsAsync(request, runtime);
        }

        public CreateSoundCodeLabelResponse CreateSoundCodeLabelWithOptions(CreateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                body["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeLabelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSoundCodeLabelResponse> CreateSoundCodeLabelWithOptionsAsync(CreateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                body["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeLabelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSoundCodeLabelResponse CreateSoundCodeLabel(CreateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSoundCodeLabelWithOptions(request, runtime);
        }

        public async Task<CreateSoundCodeLabelResponse> CreateSoundCodeLabelAsync(CreateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSoundCodeLabelWithOptionsAsync(request, runtime);
        }

        public CreateSoundCodeScheduleResponse CreateSoundCodeScheduleWithOptions(CreateSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndDate))
            {
                body["EndDate"] = request.EndDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OpenType))
            {
                body["OpenType"] = request.OpenType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartDate))
            {
                body["StartDate"] = request.StartDate;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeScheduleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSoundCodeScheduleResponse> CreateSoundCodeScheduleWithOptionsAsync(CreateSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndDate))
            {
                body["EndDate"] = request.EndDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OpenType))
            {
                body["OpenType"] = request.OpenType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartDate))
            {
                body["StartDate"] = request.StartDate;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSoundCodeScheduleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSoundCodeScheduleResponse CreateSoundCodeSchedule(CreateSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSoundCodeScheduleWithOptions(request, runtime);
        }

        public async Task<CreateSoundCodeScheduleResponse> CreateSoundCodeScheduleAsync(CreateSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSoundCodeScheduleWithOptionsAsync(request, runtime);
        }

        public CreateSpeechResponse CreateSpeechWithOptions(CreateSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSpeechShrinkRequest request = new CreateSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                body["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechType))
            {
                body["SpeechType"] = request.SpeechType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateSpeechResponse> CreateSpeechWithOptionsAsync(CreateSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            CreateSpeechShrinkRequest request = new CreateSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                body["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechType))
            {
                body["SpeechType"] = request.SpeechType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateSpeechResponse CreateSpeech(CreateSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSpeechWithOptions(request, runtime);
        }

        public async Task<CreateSpeechResponse> CreateSpeechAsync(CreateSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSpeechWithOptionsAsync(request, runtime);
        }

        public CreateStudioAppDomainOpenResponse CreateStudioAppDomainOpenWithOptions(CreateStudioAppDomainOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                body["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Protocol))
            {
                body["Protocol"] = request.Protocol;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateStudioAppDomainOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateStudioAppDomainOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateStudioAppDomainOpenResponse> CreateStudioAppDomainOpenWithOptionsAsync(CreateStudioAppDomainOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Host))
            {
                body["Host"] = request.Host;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Protocol))
            {
                body["Protocol"] = request.Protocol;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateStudioAppDomainOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateStudioAppDomainOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateStudioAppDomainOpenResponse CreateStudioAppDomainOpen(CreateStudioAppDomainOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateStudioAppDomainOpenWithOptions(request, runtime);
        }

        public async Task<CreateStudioAppDomainOpenResponse> CreateStudioAppDomainOpenAsync(CreateStudioAppDomainOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateStudioAppDomainOpenWithOptionsAsync(request, runtime);
        }

        /**
          * Server-side subscriptions are categorized into the following two types:
          * *   MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see [Configure MNS server-side subscriptions](~~68948~~). You can call this operation to create an MNS subscription.
          * *   AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see [Configure AMQP server-side subscriptions](~~142376~~). To configure an AMQP subscription, perform the following steps:
          *     1\\. Call the [CreateConsumerGroup](~~170388~~) operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see [Connect an AMQP client to IoT Platform](~~142489~~).
          *     2\\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
          *     3\\. Optional. Call the [CreateConsumerGroupSubscribeRelation](~~170354~~) operation to add a consumer group to the AMQP subscription. You can also call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove a consumer group from an AMQP subscription.
          *     4\\. Optional. Call the [QueryConsumerGroupStatus](~~170358~~) operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the [ResetConsumerGroupPosition](~~170355~~) operation to clear the accumulated messages of the consumer group.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateSubscribeRelationResponse
         */
        public CreateSubscribeRelationResponse CreateSubscribeRelationWithOptions(CreateSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupIds))
            {
                query["ConsumerGroupIds"] = request.ConsumerGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceDataFlag))
            {
                query["DeviceDataFlag"] = request.DeviceDataFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceLifeCycleFlag))
            {
                query["DeviceLifeCycleFlag"] = request.DeviceLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceStatusChangeFlag))
            {
                query["DeviceStatusChangeFlag"] = request.DeviceStatusChangeFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTagFlag))
            {
                query["DeviceTagFlag"] = request.DeviceTagFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTopoLifeCycleFlag))
            {
                query["DeviceTopoLifeCycleFlag"] = request.DeviceTopoLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FoundDeviceListFlag))
            {
                query["FoundDeviceListFlag"] = request.FoundDeviceListFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MnsConfiguration))
            {
                query["MnsConfiguration"] = request.MnsConfiguration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaEventFlag))
            {
                query["OtaEventFlag"] = request.OtaEventFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaJobFlag))
            {
                query["OtaJobFlag"] = request.OtaJobFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaVersionFlag))
            {
                query["OtaVersionFlag"] = request.OtaVersionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubscribeFlags))
            {
                query["SubscribeFlags"] = request.SubscribeFlags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingHistoryFlag))
            {
                query["ThingHistoryFlag"] = request.ThingHistoryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * Server-side subscriptions are categorized into the following two types:
          * *   MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see [Configure MNS server-side subscriptions](~~68948~~). You can call this operation to create an MNS subscription.
          * *   AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see [Configure AMQP server-side subscriptions](~~142376~~). To configure an AMQP subscription, perform the following steps:
          *     1\\. Call the [CreateConsumerGroup](~~170388~~) operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see [Connect an AMQP client to IoT Platform](~~142489~~).
          *     2\\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
          *     3\\. Optional. Call the [CreateConsumerGroupSubscribeRelation](~~170354~~) operation to add a consumer group to the AMQP subscription. You can also call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove a consumer group from an AMQP subscription.
          *     4\\. Optional. Call the [QueryConsumerGroupStatus](~~170358~~) operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the [ResetConsumerGroupPosition](~~170355~~) operation to clear the accumulated messages of the consumer group.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateSubscribeRelationResponse
         */
        public async Task<CreateSubscribeRelationResponse> CreateSubscribeRelationWithOptionsAsync(CreateSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupIds))
            {
                query["ConsumerGroupIds"] = request.ConsumerGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceDataFlag))
            {
                query["DeviceDataFlag"] = request.DeviceDataFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceLifeCycleFlag))
            {
                query["DeviceLifeCycleFlag"] = request.DeviceLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceStatusChangeFlag))
            {
                query["DeviceStatusChangeFlag"] = request.DeviceStatusChangeFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTagFlag))
            {
                query["DeviceTagFlag"] = request.DeviceTagFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTopoLifeCycleFlag))
            {
                query["DeviceTopoLifeCycleFlag"] = request.DeviceTopoLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FoundDeviceListFlag))
            {
                query["FoundDeviceListFlag"] = request.FoundDeviceListFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MnsConfiguration))
            {
                query["MnsConfiguration"] = request.MnsConfiguration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaEventFlag))
            {
                query["OtaEventFlag"] = request.OtaEventFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaJobFlag))
            {
                query["OtaJobFlag"] = request.OtaJobFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaVersionFlag))
            {
                query["OtaVersionFlag"] = request.OtaVersionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubscribeFlags))
            {
                query["SubscribeFlags"] = request.SubscribeFlags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingHistoryFlag))
            {
                query["ThingHistoryFlag"] = request.ThingHistoryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateSubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * Server-side subscriptions are categorized into the following two types:
          * *   MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see [Configure MNS server-side subscriptions](~~68948~~). You can call this operation to create an MNS subscription.
          * *   AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see [Configure AMQP server-side subscriptions](~~142376~~). To configure an AMQP subscription, perform the following steps:
          *     1\\. Call the [CreateConsumerGroup](~~170388~~) operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see [Connect an AMQP client to IoT Platform](~~142489~~).
          *     2\\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
          *     3\\. Optional. Call the [CreateConsumerGroupSubscribeRelation](~~170354~~) operation to add a consumer group to the AMQP subscription. You can also call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove a consumer group from an AMQP subscription.
          *     4\\. Optional. Call the [QueryConsumerGroupStatus](~~170358~~) operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the [ResetConsumerGroupPosition](~~170355~~) operation to clear the accumulated messages of the consumer group.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateSubscribeRelationRequest
          * @return CreateSubscribeRelationResponse
         */
        public CreateSubscribeRelationResponse CreateSubscribeRelation(CreateSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateSubscribeRelationWithOptions(request, runtime);
        }

        /**
          * Server-side subscriptions are categorized into the following two types:
          * *   MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see [Configure MNS server-side subscriptions](~~68948~~). You can call this operation to create an MNS subscription.
          * *   AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see [Configure AMQP server-side subscriptions](~~142376~~). To configure an AMQP subscription, perform the following steps:
          *     1\\. Call the [CreateConsumerGroup](~~170388~~) operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see [Connect an AMQP client to IoT Platform](~~142489~~).
          *     2\\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
          *     3\\. Optional. Call the [CreateConsumerGroupSubscribeRelation](~~170354~~) operation to add a consumer group to the AMQP subscription. You can also call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove a consumer group from an AMQP subscription.
          *     4\\. Optional. Call the [QueryConsumerGroupStatus](~~170358~~) operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the [ResetConsumerGroupPosition](~~170355~~) operation to clear the accumulated messages of the consumer group.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateSubscribeRelationRequest
          * @return CreateSubscribeRelationResponse
         */
        public async Task<CreateSubscribeRelationResponse> CreateSubscribeRelationAsync(CreateSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateSubscribeRelationWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Before you call the operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateThingModelResponse
         */
        public CreateThingModelResponse CreateThingModelWithOptions(CreateThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingModelJson))
            {
                query["ThingModelJson"] = request.ThingModelJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Before you call the operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateThingModelResponse
         */
        public async Task<CreateThingModelResponse> CreateThingModelWithOptionsAsync(CreateThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingModelJson))
            {
                query["ThingModelJson"] = request.ThingModelJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Before you call the operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingModelRequest
          * @return CreateThingModelResponse
         */
        public CreateThingModelResponse CreateThingModel(CreateThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateThingModelWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Before you call the operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingModelRequest
          * @return CreateThingModelResponse
         */
        public async Task<CreateThingModelResponse> CreateThingModelAsync(CreateThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateThingModelWithOptionsAsync(request, runtime);
        }

        /**
          * A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * > If the data format is **Alink JSON**, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateThingScriptResponse
         */
        public CreateThingScriptResponse CreateThingScriptWithOptions(CreateThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptContent))
            {
                query["ScriptContent"] = request.ScriptContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptType))
            {
                query["ScriptType"] = request.ScriptType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateThingScriptResponse>(CallApi(params_, req, runtime));
        }

        /**
          * A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * > If the data format is **Alink JSON**, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateThingScriptResponse
         */
        public async Task<CreateThingScriptResponse> CreateThingScriptWithOptionsAsync(CreateThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptContent))
            {
                query["ScriptContent"] = request.ScriptContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptType))
            {
                query["ScriptType"] = request.ScriptType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateThingScriptResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * > If the data format is **Alink JSON**, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingScriptRequest
          * @return CreateThingScriptResponse
         */
        public CreateThingScriptResponse CreateThingScript(CreateThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateThingScriptWithOptions(request, runtime);
        }

        /**
          * A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * > If the data format is **Alink JSON**, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateThingScriptRequest
          * @return CreateThingScriptResponse
         */
        public async Task<CreateThingScriptResponse> CreateThingScriptAsync(CreateThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateThingScriptWithOptionsAsync(request, runtime);
        }

        public CreateTopicConfigResponse CreateTopicConfigWithOptions(CreateTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableBroadcast))
            {
                query["EnableBroadcast"] = request.EnableBroadcast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTopicConfigResponse>(CallApi(params_, req, runtime));
        }

        public async Task<CreateTopicConfigResponse> CreateTopicConfigWithOptionsAsync(CreateTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableBroadcast))
            {
                query["EnableBroadcast"] = request.EnableBroadcast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTopicConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        public CreateTopicConfigResponse CreateTopicConfig(CreateTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTopicConfigWithOptions(request, runtime);
        }

        public async Task<CreateTopicConfigResponse> CreateTopicConfigAsync(CreateTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTopicConfigWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 100 destination topics for a source topic.
          * *   The device to which the source topic belongs must be activated.
          * *   The source and destination topics support only custom topics.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateTopicRouteTableResponse
         */
        public CreateTopicRouteTableResponse CreateTopicRouteTableWithOptions(CreateTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTopic))
            {
                query["DstTopic"] = request.DstTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTopic))
            {
                query["SrcTopic"] = request.SrcTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTopicRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 100 destination topics for a source topic.
          * *   The device to which the source topic belongs must be activated.
          * *   The source and destination topics support only custom topics.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return CreateTopicRouteTableResponse
         */
        public async Task<CreateTopicRouteTableResponse> CreateTopicRouteTableWithOptionsAsync(CreateTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTopic))
            {
                query["DstTopic"] = request.DstTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTopic))
            {
                query["SrcTopic"] = request.SrcTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "CreateTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<CreateTopicRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 100 destination topics for a source topic.
          * *   The device to which the source topic belongs must be activated.
          * *   The source and destination topics support only custom topics.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateTopicRouteTableRequest
          * @return CreateTopicRouteTableResponse
         */
        public CreateTopicRouteTableResponse CreateTopicRouteTable(CreateTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return CreateTopicRouteTableWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 100 destination topics for a source topic.
          * *   The device to which the source topic belongs must be activated.
          * *   The source and destination topics support only custom topics.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request CreateTopicRouteTableRequest
          * @return CreateTopicRouteTableResponse
         */
        public async Task<CreateTopicRouteTableResponse> CreateTopicRouteTableAsync(CreateTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await CreateTopicRouteTableWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device and obtain the number of ClientIDs.
          * *   After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteClientIdsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteClientIdsResponse
         */
        public DeleteClientIdsResponse DeleteClientIdsWithOptions(DeleteClientIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientIds",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientIdsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device and obtain the number of ClientIDs.
          * *   After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteClientIdsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteClientIdsResponse
         */
        public async Task<DeleteClientIdsResponse> DeleteClientIdsWithOptionsAsync(DeleteClientIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteClientIds",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteClientIdsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device and obtain the number of ClientIDs.
          * *   After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteClientIdsRequest
          * @return DeleteClientIdsResponse
         */
        public DeleteClientIdsResponse DeleteClientIds(DeleteClientIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteClientIdsWithOptions(request, runtime);
        }

        /**
          * *   You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device and obtain the number of ClientIDs.
          * *   After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteClientIdsRequest
          * @return DeleteClientIdsResponse
         */
        public async Task<DeleteClientIdsResponse> DeleteClientIdsAsync(DeleteClientIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteClientIdsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You cannot delete the default consumer group provided by IoT Platform.
          * *   If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the [UpdateSubscribeRelation](~~170351~~) operation to change the consumer group or call the [DeleteSubscribeRelation](~~170353~~) operation to delete the subscription.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteConsumerGroupResponse
         */
        public DeleteConsumerGroupResponse DeleteConsumerGroupWithOptions(DeleteConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteConsumerGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You cannot delete the default consumer group provided by IoT Platform.
          * *   If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the [UpdateSubscribeRelation](~~170351~~) operation to change the consumer group or call the [DeleteSubscribeRelation](~~170353~~) operation to delete the subscription.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteConsumerGroupResponse
         */
        public async Task<DeleteConsumerGroupResponse> DeleteConsumerGroupWithOptionsAsync(DeleteConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteConsumerGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You cannot delete the default consumer group provided by IoT Platform.
          * *   If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the [UpdateSubscribeRelation](~~170351~~) operation to change the consumer group or call the [DeleteSubscribeRelation](~~170353~~) operation to delete the subscription.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupRequest
          * @return DeleteConsumerGroupResponse
         */
        public DeleteConsumerGroupResponse DeleteConsumerGroup(DeleteConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteConsumerGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You cannot delete the default consumer group provided by IoT Platform.
          * *   If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the [DeleteConsumerGroupSubscribeRelation](~~170357~~) operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the [UpdateSubscribeRelation](~~170351~~) operation to change the consumer group or call the [DeleteSubscribeRelation](~~170353~~) operation to delete the subscription.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupRequest
          * @return DeleteConsumerGroupResponse
         */
        public async Task<DeleteConsumerGroupResponse> DeleteConsumerGroupAsync(DeleteConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteConsumerGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteConsumerGroupSubscribeRelationResponse
         */
        public DeleteConsumerGroupSubscribeRelationResponse DeleteConsumerGroupSubscribeRelationWithOptions(DeleteConsumerGroupSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupId))
            {
                query["ConsumerGroupId"] = request.ConsumerGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteConsumerGroupSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteConsumerGroupSubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteConsumerGroupSubscribeRelationResponse
         */
        public async Task<DeleteConsumerGroupSubscribeRelationResponse> DeleteConsumerGroupSubscribeRelationWithOptionsAsync(DeleteConsumerGroupSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupId))
            {
                query["ConsumerGroupId"] = request.ConsumerGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteConsumerGroupSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteConsumerGroupSubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupSubscribeRelationRequest
          * @return DeleteConsumerGroupSubscribeRelationResponse
         */
        public DeleteConsumerGroupSubscribeRelationResponse DeleteConsumerGroupSubscribeRelation(DeleteConsumerGroupSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteConsumerGroupSubscribeRelationWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteConsumerGroupSubscribeRelationRequest
          * @return DeleteConsumerGroupSubscribeRelationResponse
         */
        public async Task<DeleteConsumerGroupSubscribeRelationResponse> DeleteConsumerGroupSubscribeRelationAsync(DeleteConsumerGroupSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteConsumerGroupSubscribeRelationWithOptionsAsync(request, runtime);
        }

        public DeleteDataSourceItemResponse DeleteDataSourceItemWithOptions(DeleteDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceItemId))
            {
                query["DataSourceItemId"] = request.DataSourceItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDataSourceItemResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteDataSourceItemResponse> DeleteDataSourceItemWithOptionsAsync(DeleteDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceItemId))
            {
                query["DataSourceItemId"] = request.DataSourceItemId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDataSourceItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteDataSourceItemResponse DeleteDataSourceItem(DeleteDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDataSourceItemWithOptions(request, runtime);
        }

        public async Task<DeleteDataSourceItemResponse> DeleteDataSourceItemAsync(DeleteDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDataSourceItemWithOptionsAsync(request, runtime);
        }

        public DeleteDestinationResponse DeleteDestinationWithOptions(DeleteDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteDestinationResponse> DeleteDestinationWithOptionsAsync(DeleteDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteDestinationResponse DeleteDestination(DeleteDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDestinationWithOptions(request, runtime);
        }

        public async Task<DeleteDestinationResponse> DeleteDestinationAsync(DeleteDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * *   When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.
          * *   When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see [Mapping of IoT Platform operations and RAM policies](~~47485~~) and [Custom permissions](~~47495~~).
          * **Warning**
          * *   After a device is deleted, the device ID (**IotId**) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.
          * *   Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.
          * *   After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.
          * ****
          * *   You must specify a value for the **IotId** parameter or values for the **ProductKey** and **DeviceName** parameters to identify a device.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceResponse
         */
        public DeleteDeviceResponse DeleteDeviceWithOptions(DeleteDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.
          * *   When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see [Mapping of IoT Platform operations and RAM policies](~~47485~~) and [Custom permissions](~~47495~~).
          * **Warning**
          * *   After a device is deleted, the device ID (**IotId**) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.
          * *   Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.
          * *   After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.
          * ****
          * *   You must specify a value for the **IotId** parameter or values for the **ProductKey** and **DeviceName** parameters to identify a device.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceResponse
         */
        public async Task<DeleteDeviceResponse> DeleteDeviceWithOptionsAsync(DeleteDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.
          * *   When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see [Mapping of IoT Platform operations and RAM policies](~~47485~~) and [Custom permissions](~~47495~~).
          * **Warning**
          * *   After a device is deleted, the device ID (**IotId**) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.
          * *   Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.
          * *   After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.
          * ****
          * *   You must specify a value for the **IotId** parameter or values for the **ProductKey** and **DeviceName** parameters to identify a device.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceRequest
          * @return DeleteDeviceResponse
         */
        public DeleteDeviceResponse DeleteDevice(DeleteDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceWithOptions(request, runtime);
        }

        /**
          * *   When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.
          * *   When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see [Mapping of IoT Platform operations and RAM policies](~~47485~~) and [Custom permissions](~~47495~~).
          * **Warning**
          * *   After a device is deleted, the device ID (**IotId**) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.
          * *   Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.
          * *   After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.
          * ****
          * *   You must specify a value for the **IotId** parameter or values for the **ProductKey** and **DeviceName** parameters to identify a device.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceRequest
          * @return DeleteDeviceResponse
         */
        public async Task<DeleteDeviceResponse> DeleteDeviceAsync(DeleteDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceDistributeJobResponse
         */
        public DeleteDeviceDistributeJobResponse DeleteDeviceDistributeJobWithOptions(DeleteDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceDistributeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceDistributeJobResponse
         */
        public async Task<DeleteDeviceDistributeJobResponse> DeleteDeviceDistributeJobWithOptionsAsync(DeleteDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceDistributeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceDistributeJobRequest
          * @return DeleteDeviceDistributeJobResponse
         */
        public DeleteDeviceDistributeJobResponse DeleteDeviceDistributeJob(DeleteDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceDistributeJobWithOptions(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceDistributeJobRequest
          * @return DeleteDeviceDistributeJobResponse
         */
        public async Task<DeleteDeviceDistributeJobResponse> DeleteDeviceDistributeJobAsync(DeleteDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceDistributeJobWithOptionsAsync(request, runtime);
        }

        public DeleteDeviceDynamicGroupResponse DeleteDeviceDynamicGroupWithOptions(DeleteDeviceDynamicGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceDynamicGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceDynamicGroupResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteDeviceDynamicGroupResponse> DeleteDeviceDynamicGroupWithOptionsAsync(DeleteDeviceDynamicGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceDynamicGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceDynamicGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteDeviceDynamicGroupResponse DeleteDeviceDynamicGroup(DeleteDeviceDynamicGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceDynamicGroupWithOptions(request, runtime);
        }

        public async Task<DeleteDeviceDynamicGroupResponse> DeleteDeviceDynamicGroupAsync(DeleteDeviceDynamicGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceDynamicGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceFileRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceFileResponse
         */
        public DeleteDeviceFileResponse DeleteDeviceFileWithOptions(DeleteDeviceFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileId))
            {
                query["FileId"] = request.FileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceFileResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceFileRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceFileResponse
         */
        public async Task<DeleteDeviceFileResponse> DeleteDeviceFileWithOptionsAsync(DeleteDeviceFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileId))
            {
                query["FileId"] = request.FileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceFileRequest
          * @return DeleteDeviceFileResponse
         */
        public DeleteDeviceFileResponse DeleteDeviceFile(DeleteDeviceFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceFileWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceFileRequest
          * @return DeleteDeviceFileResponse
         */
        public async Task<DeleteDeviceFileResponse> DeleteDeviceFileAsync(DeleteDeviceFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceFileWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceGroupResponse
         */
        public DeleteDeviceGroupResponse DeleteDeviceGroupWithOptions(DeleteDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDeviceGroupResponse
         */
        public async Task<DeleteDeviceGroupResponse> DeleteDeviceGroupWithOptionsAsync(DeleteDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceGroupRequest
          * @return DeleteDeviceGroupResponse
         */
        public DeleteDeviceGroupResponse DeleteDeviceGroup(DeleteDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDeviceGroupRequest
          * @return DeleteDeviceGroupResponse
         */
        public async Task<DeleteDeviceGroupResponse> DeleteDeviceGroupAsync(DeleteDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDevicePropResponse
         */
        public DeleteDevicePropResponse DeleteDevicePropWithOptions(DeleteDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropKey))
            {
                query["PropKey"] = request.PropKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDevicePropResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteDevicePropResponse
         */
        public async Task<DeleteDevicePropResponse> DeleteDevicePropWithOptionsAsync(DeleteDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropKey))
            {
                query["PropKey"] = request.PropKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDevicePropResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDevicePropRequest
          * @return DeleteDevicePropResponse
         */
        public DeleteDevicePropResponse DeleteDeviceProp(DeleteDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDevicePropWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteDevicePropRequest
          * @return DeleteDevicePropResponse
         */
        public async Task<DeleteDevicePropResponse> DeleteDevicePropAsync(DeleteDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDevicePropWithOptionsAsync(request, runtime);
        }

        public DeleteDeviceSpeechResponse DeleteDeviceSpeechWithOptions(DeleteDeviceSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSpeechList))
            {
                body["DeviceSpeechList"] = request.DeviceSpeechList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteDeviceSpeechResponse> DeleteDeviceSpeechWithOptionsAsync(DeleteDeviceSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSpeechList))
            {
                body["DeviceSpeechList"] = request.DeviceSpeechList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteDeviceSpeechResponse DeleteDeviceSpeech(DeleteDeviceSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceSpeechWithOptions(request, runtime);
        }

        public async Task<DeleteDeviceSpeechResponse> DeleteDeviceSpeechAsync(DeleteDeviceSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceSpeechWithOptionsAsync(request, runtime);
        }

        public DeleteDeviceTunnelResponse DeleteDeviceTunnelWithOptions(DeleteDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteDeviceTunnelResponse> DeleteDeviceTunnelWithOptionsAsync(DeleteDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteDeviceTunnelResponse DeleteDeviceTunnel(DeleteDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<DeleteDeviceTunnelResponse> DeleteDeviceTunnelAsync(DeleteDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteDeviceTunnelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a driver that has a published version.
          * *   Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeDriverResponse
         */
        public DeleteEdgeDriverResponse DeleteEdgeDriverWithOptions(DeleteEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a driver that has a published version.
          * *   Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeDriverResponse
         */
        public async Task<DeleteEdgeDriverResponse> DeleteEdgeDriverWithOptionsAsync(DeleteEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a driver that has a published version.
          * *   Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverRequest
          * @return DeleteEdgeDriverResponse
         */
        public DeleteEdgeDriverResponse DeleteEdgeDriver(DeleteEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeDriverWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a driver that has a published version.
          * *   Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverRequest
          * @return DeleteEdgeDriverResponse
         */
        public async Task<DeleteEdgeDriverResponse> DeleteEdgeDriverAsync(DeleteEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeDriverVersionResponse
         */
        public DeleteEdgeDriverVersionResponse DeleteEdgeDriverVersionWithOptions(DeleteEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeDriverVersionResponse
         */
        public async Task<DeleteEdgeDriverVersionResponse> DeleteEdgeDriverVersionWithOptionsAsync(DeleteEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverVersionRequest
          * @return DeleteEdgeDriverVersionResponse
         */
        public DeleteEdgeDriverVersionResponse DeleteEdgeDriverVersion(DeleteEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeDriverVersionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You are not allowed to delete a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeDriverVersionRequest
          * @return DeleteEdgeDriverVersionResponse
         */
        public async Task<DeleteEdgeDriverVersionResponse> DeleteEdgeDriverVersionAsync(DeleteEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeInstanceResponse
         */
        public DeleteEdgeInstanceResponse DeleteEdgeInstanceWithOptions(DeleteEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteEdgeInstanceResponse
         */
        public async Task<DeleteEdgeInstanceResponse> DeleteEdgeInstanceWithOptionsAsync(DeleteEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeInstanceRequest
          * @return DeleteEdgeInstanceResponse
         */
        public DeleteEdgeInstanceResponse DeleteEdgeInstance(DeleteEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteEdgeInstanceRequest
          * @return DeleteEdgeInstanceResponse
         */
        public async Task<DeleteEdgeInstanceResponse> DeleteEdgeInstanceAsync(DeleteEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public DeleteEdgeInstanceMessageRoutingResponse DeleteEdgeInstanceMessageRoutingWithOptions(DeleteEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeInstanceMessageRoutingResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteEdgeInstanceMessageRoutingResponse> DeleteEdgeInstanceMessageRoutingWithOptionsAsync(DeleteEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteEdgeInstanceMessageRoutingResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteEdgeInstanceMessageRoutingResponse DeleteEdgeInstanceMessageRouting(DeleteEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteEdgeInstanceMessageRoutingWithOptions(request, runtime);
        }

        public async Task<DeleteEdgeInstanceMessageRoutingResponse> DeleteEdgeInstanceMessageRoutingAsync(DeleteEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteEdgeInstanceMessageRoutingWithOptionsAsync(request, runtime);
        }

        public DeleteJobResponse DeleteJobWithOptions(DeleteJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteJobResponse> DeleteJobWithOptionsAsync(DeleteJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteJobResponse DeleteJob(DeleteJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteJobWithOptions(request, runtime);
        }

        public async Task<DeleteJobResponse> DeleteJobAsync(DeleteJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteOTAFirmwareResponse
         */
        public DeleteOTAFirmwareResponse DeleteOTAFirmwareWithOptions(DeleteOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOTAFirmwareResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteOTAFirmwareResponse
         */
        public async Task<DeleteOTAFirmwareResponse> DeleteOTAFirmwareWithOptionsAsync(DeleteOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOTAFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAFirmwareRequest
          * @return DeleteOTAFirmwareResponse
         */
        public DeleteOTAFirmwareResponse DeleteOTAFirmware(DeleteOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOTAFirmwareWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAFirmwareRequest
          * @return DeleteOTAFirmwareResponse
         */
        public async Task<DeleteOTAFirmwareResponse> DeleteOTAFirmwareAsync(DeleteOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOTAFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   The default module cannot be deleted.
          * *   If an update package exists in an OTA module, you cannot delete the OTA module.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteOTAModuleResponse
         */
        public DeleteOTAModuleResponse DeleteOTAModuleWithOptions(DeleteOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOTAModuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The default module cannot be deleted.
          * *   If an update package exists in an OTA module, you cannot delete the OTA module.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteOTAModuleResponse
         */
        public async Task<DeleteOTAModuleResponse> DeleteOTAModuleWithOptionsAsync(DeleteOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteOTAModuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The default module cannot be deleted.
          * *   If an update package exists in an OTA module, you cannot delete the OTA module.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAModuleRequest
          * @return DeleteOTAModuleResponse
         */
        public DeleteOTAModuleResponse DeleteOTAModule(DeleteOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteOTAModuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   The default module cannot be deleted.
          * *   If an update package exists in an OTA module, you cannot delete the OTA module.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteOTAModuleRequest
          * @return DeleteOTAModuleResponse
         */
        public async Task<DeleteOTAModuleResponse> DeleteOTAModuleAsync(DeleteOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteOTAModuleWithOptionsAsync(request, runtime);
        }

        public DeleteParserResponse DeleteParserWithOptions(DeleteParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteParserResponse> DeleteParserWithOptionsAsync(DeleteParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteParserResponse DeleteParser(DeleteParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteParserWithOptions(request, runtime);
        }

        public async Task<DeleteParserResponse> DeleteParserAsync(DeleteParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteParserWithOptionsAsync(request, runtime);
        }

        public DeleteParserDataSourceResponse DeleteParserDataSourceWithOptions(DeleteParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteParserDataSourceResponse> DeleteParserDataSourceWithOptionsAsync(DeleteParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteParserDataSourceResponse DeleteParserDataSource(DeleteParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteParserDataSourceWithOptions(request, runtime);
        }

        public async Task<DeleteParserDataSourceResponse> DeleteParserDataSourceAsync(DeleteParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteParserDataSourceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductResponse
         */
        public DeleteProductResponse DeleteProductWithOptions(DeleteProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductResponse
         */
        public async Task<DeleteProductResponse> DeleteProductWithOptionsAsync(DeleteProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductRequest
          * @return DeleteProductResponse
         */
        public DeleteProductResponse DeleteProduct(DeleteProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteProductWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductRequest
          * @return DeleteProductResponse
         */
        public async Task<DeleteProductResponse> DeleteProductAsync(DeleteProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteProductWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can delete a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductTagsResponse
         */
        public DeleteProductTagsResponse DeleteProductTagsWithOptions(DeleteProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTagKey))
            {
                query["ProductTagKey"] = request.ProductTagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can delete a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductTagsResponse
         */
        public async Task<DeleteProductTagsResponse> DeleteProductTagsWithOptionsAsync(DeleteProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTagKey))
            {
                query["ProductTagKey"] = request.ProductTagKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can delete a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTagsRequest
          * @return DeleteProductTagsResponse
         */
        public DeleteProductTagsResponse DeleteProductTags(DeleteProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteProductTagsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can delete a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTagsRequest
          * @return DeleteProductTagsResponse
         */
        public async Task<DeleteProductTagsResponse> DeleteProductTagsAsync(DeleteProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteProductTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductTopicResponse
         */
        public DeleteProductTopicResponse DeleteProductTopicWithOptions(DeleteProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicId))
            {
                query["TopicId"] = request.TopicId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteProductTopicResponse
         */
        public async Task<DeleteProductTopicResponse> DeleteProductTopicWithOptionsAsync(DeleteProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicId))
            {
                query["TopicId"] = request.TopicId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteProductTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTopicRequest
          * @return DeleteProductTopicResponse
         */
        public DeleteProductTopicResponse DeleteProductTopic(DeleteProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteProductTopicWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteProductTopicRequest
          * @return DeleteProductTopicResponse
         */
        public async Task<DeleteProductTopicResponse> DeleteProductTopicAsync(DeleteProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteProductTopicWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteRuleResponse
         */
        public DeleteRuleResponse DeleteRuleWithOptions(DeleteRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteRuleResponse
         */
        public async Task<DeleteRuleResponse> DeleteRuleWithOptionsAsync(DeleteRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleRequest
          * @return DeleteRuleResponse
         */
        public DeleteRuleResponse DeleteRule(DeleteRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleRequest
          * @return DeleteRuleResponse
         */
        public async Task<DeleteRuleResponse> DeleteRuleAsync(DeleteRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteRuleActionResponse
         */
        public DeleteRuleActionResponse DeleteRuleActionWithOptions(DeleteRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRuleActionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteRuleActionResponse
         */
        public async Task<DeleteRuleActionResponse> DeleteRuleActionWithOptionsAsync(DeleteRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteRuleActionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleActionRequest
          * @return DeleteRuleActionResponse
         */
        public DeleteRuleActionResponse DeleteRuleAction(DeleteRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteRuleActionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteRuleActionRequest
          * @return DeleteRuleActionResponse
         */
        public async Task<DeleteRuleActionResponse> DeleteRuleActionAsync(DeleteRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteRuleActionWithOptionsAsync(request, runtime);
        }

        public DeleteSceneRuleResponse DeleteSceneRuleWithOptions(DeleteSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSceneRuleResponse> DeleteSceneRuleWithOptionsAsync(DeleteSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSceneRuleResponse DeleteSceneRule(DeleteSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSceneRuleWithOptions(request, runtime);
        }

        public async Task<DeleteSceneRuleResponse> DeleteSceneRuleAsync(DeleteSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSceneRuleWithOptionsAsync(request, runtime);
        }

        public DeleteSchedulePeriodResponse DeleteSchedulePeriodWithOptions(DeleteSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodCode))
            {
                body["PeriodCode"] = request.PeriodCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSchedulePeriodResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSchedulePeriodResponse> DeleteSchedulePeriodWithOptionsAsync(DeleteSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodCode))
            {
                body["PeriodCode"] = request.PeriodCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSchedulePeriodResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSchedulePeriodResponse DeleteSchedulePeriod(DeleteSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSchedulePeriodWithOptions(request, runtime);
        }

        public async Task<DeleteSchedulePeriodResponse> DeleteSchedulePeriodAsync(DeleteSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSchedulePeriodWithOptionsAsync(request, runtime);
        }

        public DeleteShareTaskDeviceResponse DeleteShareTaskDeviceWithOptions(DeleteShareTaskDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteShareTaskDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteShareTaskDeviceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteShareTaskDeviceResponse> DeleteShareTaskDeviceWithOptionsAsync(DeleteShareTaskDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotIdList))
            {
                body["IotIdList"] = request.IotIdList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteShareTaskDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteShareTaskDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteShareTaskDeviceResponse DeleteShareTaskDevice(DeleteShareTaskDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteShareTaskDeviceWithOptions(request, runtime);
        }

        public async Task<DeleteShareTaskDeviceResponse> DeleteShareTaskDeviceAsync(DeleteShareTaskDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteShareTaskDeviceWithOptionsAsync(request, runtime);
        }

        public DeleteSoundCodeResponse DeleteSoundCodeWithOptions(DeleteSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSoundCodeResponse> DeleteSoundCodeWithOptionsAsync(DeleteSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSoundCodeResponse DeleteSoundCode(DeleteSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSoundCodeWithOptions(request, runtime);
        }

        public async Task<DeleteSoundCodeResponse> DeleteSoundCodeAsync(DeleteSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSoundCodeWithOptionsAsync(request, runtime);
        }

        public DeleteSoundCodeLabelResponse DeleteSoundCodeLabelWithOptions(DeleteSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeLabelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSoundCodeLabelResponse> DeleteSoundCodeLabelWithOptionsAsync(DeleteSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeLabelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSoundCodeLabelResponse DeleteSoundCodeLabel(DeleteSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSoundCodeLabelWithOptions(request, runtime);
        }

        public async Task<DeleteSoundCodeLabelResponse> DeleteSoundCodeLabelAsync(DeleteSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSoundCodeLabelWithOptionsAsync(request, runtime);
        }

        public DeleteSoundCodeScheduleResponse DeleteSoundCodeScheduleWithOptions(DeleteSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeScheduleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSoundCodeScheduleResponse> DeleteSoundCodeScheduleWithOptionsAsync(DeleteSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSoundCodeScheduleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSoundCodeScheduleResponse DeleteSoundCodeSchedule(DeleteSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSoundCodeScheduleWithOptions(request, runtime);
        }

        public async Task<DeleteSoundCodeScheduleResponse> DeleteSoundCodeScheduleAsync(DeleteSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSoundCodeScheduleWithOptionsAsync(request, runtime);
        }

        public DeleteSpeechResponse DeleteSpeechWithOptions(DeleteSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCodeList))
            {
                body["SpeechCodeList"] = request.SpeechCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteSpeechResponse> DeleteSpeechWithOptionsAsync(DeleteSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCodeList))
            {
                body["SpeechCodeList"] = request.SpeechCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteSpeechResponse DeleteSpeech(DeleteSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSpeechWithOptions(request, runtime);
        }

        public async Task<DeleteSpeechResponse> DeleteSpeechAsync(DeleteSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSpeechWithOptionsAsync(request, runtime);
        }

        public DeleteStudioAppDomainOpenResponse DeleteStudioAppDomainOpenWithOptions(DeleteStudioAppDomainOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainId))
            {
                body["DomainId"] = request.DomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteStudioAppDomainOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteStudioAppDomainOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteStudioAppDomainOpenResponse> DeleteStudioAppDomainOpenWithOptionsAsync(DeleteStudioAppDomainOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DomainId))
            {
                body["DomainId"] = request.DomainId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteStudioAppDomainOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteStudioAppDomainOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteStudioAppDomainOpenResponse DeleteStudioAppDomainOpen(DeleteStudioAppDomainOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteStudioAppDomainOpenWithOptions(request, runtime);
        }

        public async Task<DeleteStudioAppDomainOpenResponse> DeleteStudioAppDomainOpenAsync(DeleteStudioAppDomainOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteStudioAppDomainOpenWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteSubscribeRelationResponse
         */
        public DeleteSubscribeRelationResponse DeleteSubscribeRelationWithOptions(DeleteSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteSubscribeRelationResponse
         */
        public async Task<DeleteSubscribeRelationResponse> DeleteSubscribeRelationWithOptionsAsync(DeleteSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteSubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteSubscribeRelationRequest
          * @return DeleteSubscribeRelationResponse
         */
        public DeleteSubscribeRelationResponse DeleteSubscribeRelation(DeleteSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteSubscribeRelationWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteSubscribeRelationRequest
          * @return DeleteSubscribeRelationResponse
         */
        public async Task<DeleteSubscribeRelationResponse> DeleteSubscribeRelationAsync(DeleteSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteSubscribeRelationWithOptionsAsync(request, runtime);
        }

        /**
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call the DeleteThingModel operation.
          * *   If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.
          * *   When you call the DeleteThingModel operation, you must specify a value for the **ProductKey** parameter. The following list describes how the DeleteThingModel operation works:
          *     *   If you specify a value only for the **ProductKey** parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.
          *     *   If you specify values only for the **ProductKey** and **FunctionBlockId** parameters, the operation deletes the specified custom TSL module from the specified product.
          *     *   If you specify a value for the **ProductKey** parameter and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the **ProductKey** parameter.
          *     *   If you specify values for the **ProductKey** and **FunctionBlockId** parameters and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist, the operation returns the same result as when you specify values only for the **ProductKey** and **FunctionBlockId** parameters.
          * > You must specify up to 10 identifiers for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter.
          * *   After you call the DeleteThingModel operation to remove one or more features from a product, you must call the [PublishThingModel](~~150311~~) operation to re-publish the TSL model of the product. This way, the change takes effect.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 5 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DeleteThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteThingModelResponse
         */
        public DeleteThingModelResponse DeleteThingModelWithOptions(DeleteThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventIdentifier))
            {
                query["EventIdentifier"] = request.EventIdentifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyIdentifier))
            {
                query["PropertyIdentifier"] = request.PropertyIdentifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIdentifier))
            {
                query["ServiceIdentifier"] = request.ServiceIdentifier;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call the DeleteThingModel operation.
          * *   If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.
          * *   When you call the DeleteThingModel operation, you must specify a value for the **ProductKey** parameter. The following list describes how the DeleteThingModel operation works:
          *     *   If you specify a value only for the **ProductKey** parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.
          *     *   If you specify values only for the **ProductKey** and **FunctionBlockId** parameters, the operation deletes the specified custom TSL module from the specified product.
          *     *   If you specify a value for the **ProductKey** parameter and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the **ProductKey** parameter.
          *     *   If you specify values for the **ProductKey** and **FunctionBlockId** parameters and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist, the operation returns the same result as when you specify values only for the **ProductKey** and **FunctionBlockId** parameters.
          * > You must specify up to 10 identifiers for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter.
          * *   After you call the DeleteThingModel operation to remove one or more features from a product, you must call the [PublishThingModel](~~150311~~) operation to re-publish the TSL model of the product. This way, the change takes effect.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 5 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DeleteThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteThingModelResponse
         */
        public async Task<DeleteThingModelResponse> DeleteThingModelWithOptionsAsync(DeleteThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventIdentifier))
            {
                query["EventIdentifier"] = request.EventIdentifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyIdentifier))
            {
                query["PropertyIdentifier"] = request.PropertyIdentifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ServiceIdentifier))
            {
                query["ServiceIdentifier"] = request.ServiceIdentifier;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call the DeleteThingModel operation.
          * *   If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.
          * *   When you call the DeleteThingModel operation, you must specify a value for the **ProductKey** parameter. The following list describes how the DeleteThingModel operation works:
          *     *   If you specify a value only for the **ProductKey** parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.
          *     *   If you specify values only for the **ProductKey** and **FunctionBlockId** parameters, the operation deletes the specified custom TSL module from the specified product.
          *     *   If you specify a value for the **ProductKey** parameter and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the **ProductKey** parameter.
          *     *   If you specify values for the **ProductKey** and **FunctionBlockId** parameters and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist, the operation returns the same result as when you specify values only for the **ProductKey** and **FunctionBlockId** parameters.
          * > You must specify up to 10 identifiers for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter.
          * *   After you call the DeleteThingModel operation to remove one or more features from a product, you must call the [PublishThingModel](~~150311~~) operation to re-publish the TSL model of the product. This way, the change takes effect.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 5 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DeleteThingModelRequest
          * @return DeleteThingModelResponse
         */
        public DeleteThingModelResponse DeleteThingModel(DeleteThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteThingModelWithOptions(request, runtime);
        }

        /**
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call the DeleteThingModel operation.
          * *   If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.
          * *   When you call the DeleteThingModel operation, you must specify a value for the **ProductKey** parameter. The following list describes how the DeleteThingModel operation works:
          *     *   If you specify a value only for the **ProductKey** parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.
          *     *   If you specify values only for the **ProductKey** and **FunctionBlockId** parameters, the operation deletes the specified custom TSL module from the specified product.
          *     *   If you specify a value for the **ProductKey** parameter and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the **ProductKey** parameter.
          *     *   If you specify values for the **ProductKey** and **FunctionBlockId** parameters and a value for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter does not exist, the operation returns the same result as when you specify values only for the **ProductKey** and **FunctionBlockId** parameters.
          * > You must specify up to 10 identifiers for the **PropertyIdentifier.N**, **ServiceIdentifier.N**, or **EventIdentifier.N** parameter.
          * *   After you call the DeleteThingModel operation to remove one or more features from a product, you must call the [PublishThingModel](~~150311~~) operation to re-publish the TSL model of the product. This way, the change takes effect.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 5 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DeleteThingModelRequest
          * @return DeleteThingModelResponse
         */
        public async Task<DeleteThingModelResponse> DeleteThingModelAsync(DeleteThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteThingModelWithOptionsAsync(request, runtime);
        }

        public DeleteTopicConfigResponse DeleteTopicConfigWithOptions(DeleteTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTopicConfigResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DeleteTopicConfigResponse> DeleteTopicConfigWithOptionsAsync(DeleteTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTopicConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DeleteTopicConfigResponse DeleteTopicConfig(DeleteTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTopicConfigWithOptions(request, runtime);
        }

        public async Task<DeleteTopicConfigResponse> DeleteTopicConfigAsync(DeleteTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTopicConfigWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteTopicRouteTableResponse
         */
        public DeleteTopicRouteTableResponse DeleteTopicRouteTableWithOptions(DeleteTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTopic))
            {
                query["DstTopic"] = request.DstTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTopic))
            {
                query["SrcTopic"] = request.SrcTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTopicRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DeleteTopicRouteTableResponse
         */
        public async Task<DeleteTopicRouteTableResponse> DeleteTopicRouteTableWithOptionsAsync(DeleteTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DstTopic))
            {
                query["DstTopic"] = request.DstTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SrcTopic))
            {
                query["SrcTopic"] = request.SrcTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DeleteTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DeleteTopicRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteTopicRouteTableRequest
          * @return DeleteTopicRouteTableResponse
         */
        public DeleteTopicRouteTableResponse DeleteTopicRouteTable(DeleteTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DeleteTopicRouteTableWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DeleteTopicRouteTableRequest
          * @return DeleteTopicRouteTableResponse
         */
        public async Task<DeleteTopicRouteTableResponse> DeleteTopicRouteTableAsync(DeleteTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DeleteTopicRouteTableWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DetachDestinationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DetachDestinationResponse
         */
        public DetachDestinationResponse DetachDestinationWithOptions(DetachDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachDestinationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DetachDestinationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DetachDestinationResponse
         */
        public async Task<DetachDestinationResponse> DetachDestinationWithOptionsAsync(DetachDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DetachDestinationRequest
          * @return DetachDestinationResponse
         */
        public DetachDestinationResponse DetachDestination(DetachDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DetachDestinationWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request DetachDestinationRequest
          * @return DetachDestinationResponse
         */
        public async Task<DetachDestinationResponse> DetachDestinationAsync(DetachDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DetachDestinationWithOptionsAsync(request, runtime);
        }

        public DetachParserDataSourceResponse DetachParserDataSourceWithOptions(DetachParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DetachParserDataSourceResponse> DetachParserDataSourceWithOptionsAsync(DetachParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DetachParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DetachParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DetachParserDataSourceResponse DetachParserDataSource(DetachParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DetachParserDataSourceWithOptions(request, runtime);
        }

        public async Task<DetachParserDataSourceResponse> DetachParserDataSourceAsync(DetachParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DetachParserDataSourceWithOptionsAsync(request, runtime);
        }

        public DisableDeviceTunnelResponse DisableDeviceTunnelWithOptions(DisableDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DisableDeviceTunnelResponse> DisableDeviceTunnelWithOptionsAsync(DisableDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DisableDeviceTunnelResponse DisableDeviceTunnel(DisableDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<DisableDeviceTunnelResponse> DisableDeviceTunnelAsync(DisableDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableDeviceTunnelWithOptionsAsync(request, runtime);
        }

        public DisableDeviceTunnelShareResponse DisableDeviceTunnelShareWithOptions(DisableDeviceTunnelShareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableDeviceTunnelShare",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableDeviceTunnelShareResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DisableDeviceTunnelShareResponse> DisableDeviceTunnelShareWithOptionsAsync(DisableDeviceTunnelShareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableDeviceTunnelShare",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableDeviceTunnelShareResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DisableDeviceTunnelShareResponse DisableDeviceTunnelShare(DisableDeviceTunnelShareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableDeviceTunnelShareWithOptions(request, runtime);
        }

        public async Task<DisableDeviceTunnelShareResponse> DisableDeviceTunnelShareAsync(DisableDeviceTunnelShareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableDeviceTunnelShareWithOptionsAsync(request, runtime);
        }

        public DisableSceneRuleResponse DisableSceneRuleWithOptions(DisableSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<DisableSceneRuleResponse> DisableSceneRuleWithOptionsAsync(DisableSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public DisableSceneRuleResponse DisableSceneRule(DisableSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableSceneRuleWithOptions(request, runtime);
        }

        public async Task<DisableSceneRuleResponse> DisableSceneRuleAsync(DisableSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableSceneRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the [EnableThing](~~69603~~) API operation to connect the disabled device to IoT Platform again.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DisableThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DisableThingResponse
         */
        public DisableThingResponse DisableThingWithOptions(DisableThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableThingResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the [EnableThing](~~69603~~) API operation to connect the disabled device to IoT Platform again.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DisableThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return DisableThingResponse
         */
        public async Task<DisableThingResponse> DisableThingWithOptionsAsync(DisableThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "DisableThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<DisableThingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the [EnableThing](~~69603~~) API operation to connect the disabled device to IoT Platform again.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DisableThingRequest
          * @return DisableThingResponse
         */
        public DisableThingResponse DisableThing(DisableThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return DisableThingWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the [EnableThing](~~69603~~) API operation to connect the disabled device to IoT Platform again.
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request DisableThingRequest
          * @return DisableThingResponse
         */
        public async Task<DisableThingResponse> DisableThingAsync(DisableThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await DisableThingWithOptionsAsync(request, runtime);
        }

        public EnableDeviceTunnelResponse EnableDeviceTunnelWithOptions(EnableDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<EnableDeviceTunnelResponse> EnableDeviceTunnelWithOptionsAsync(EnableDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public EnableDeviceTunnelResponse EnableDeviceTunnel(EnableDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<EnableDeviceTunnelResponse> EnableDeviceTunnelAsync(EnableDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableDeviceTunnelWithOptionsAsync(request, runtime);
        }

        public EnableDeviceTunnelShareResponse EnableDeviceTunnelShareWithOptions(EnableDeviceTunnelShareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableDeviceTunnelShare",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableDeviceTunnelShareResponse>(CallApi(params_, req, runtime));
        }

        public async Task<EnableDeviceTunnelShareResponse> EnableDeviceTunnelShareWithOptionsAsync(EnableDeviceTunnelShareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableDeviceTunnelShare",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableDeviceTunnelShareResponse>(await CallApiAsync(params_, req, runtime));
        }

        public EnableDeviceTunnelShareResponse EnableDeviceTunnelShare(EnableDeviceTunnelShareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableDeviceTunnelShareWithOptions(request, runtime);
        }

        public async Task<EnableDeviceTunnelShareResponse> EnableDeviceTunnelShareAsync(EnableDeviceTunnelShareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableDeviceTunnelShareWithOptionsAsync(request, runtime);
        }

        public EnableSceneRuleResponse EnableSceneRuleWithOptions(EnableSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<EnableSceneRuleResponse> EnableSceneRuleWithOptionsAsync(EnableSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public EnableSceneRuleResponse EnableSceneRule(EnableSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableSceneRuleWithOptions(request, runtime);
        }

        public async Task<EnableSceneRuleResponse> EnableSceneRuleAsync(EnableSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableSceneRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request EnableThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return EnableThingResponse
         */
        public EnableThingResponse EnableThingWithOptions(EnableThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableThingResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request EnableThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return EnableThingResponse
         */
        public async Task<EnableThingResponse> EnableThingWithOptionsAsync(EnableThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "EnableThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<EnableThingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request EnableThingRequest
          * @return EnableThingResponse
         */
        public EnableThingResponse EnableThing(EnableThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return EnableThingWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request EnableThingRequest
          * @return EnableThingResponse
         */
        public async Task<EnableThingResponse> EnableThingAsync(EnableThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await EnableThingWithOptionsAsync(request, runtime);
        }

        /**
          * This operation can be used with other operations to upload a device list file. Procedure:
          * 1. Call this operation to generate the information of a device list file that you want to upload to OSS.  
          * The response parameters of this API operation include:
          * The following request parameters of the OSS [PostObject](/help/en/object-storage-service/latest/postobject) operation that is used to upload the device list file: **Key**, **AccessKeyId**, **Signature**, and **Policy**.  
          * 2. Use an [OSS SDK](/help/en/object-storage-service/latest/sdk-code-samples-overview) to call the [PostObject](/help/en/object-storage-service/latest/postobject) operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the "Usage of response parameters" section in this topic.  
          * >  The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the [CreateOTAStaticUpgradeJob](/help/en/iot-platform/latest/e1qtmo) operation of IoT Platform to create a static update batch within 60 minutes.  
          * If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.  
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. 
          * ## Requirements
          * *   A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.
          * *   Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.
          *
          * @param request GenerateDeviceNameListURLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GenerateDeviceNameListURLResponse
         */
        public GenerateDeviceNameListURLResponse GenerateDeviceNameListURLWithOptions(GenerateDeviceNameListURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateDeviceNameListURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateDeviceNameListURLResponse>(CallApi(params_, req, runtime));
        }

        /**
          * This operation can be used with other operations to upload a device list file. Procedure:
          * 1. Call this operation to generate the information of a device list file that you want to upload to OSS.  
          * The response parameters of this API operation include:
          * The following request parameters of the OSS [PostObject](/help/en/object-storage-service/latest/postobject) operation that is used to upload the device list file: **Key**, **AccessKeyId**, **Signature**, and **Policy**.  
          * 2. Use an [OSS SDK](/help/en/object-storage-service/latest/sdk-code-samples-overview) to call the [PostObject](/help/en/object-storage-service/latest/postobject) operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the "Usage of response parameters" section in this topic.  
          * >  The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the [CreateOTAStaticUpgradeJob](/help/en/iot-platform/latest/e1qtmo) operation of IoT Platform to create a static update batch within 60 minutes.  
          * If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.  
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. 
          * ## Requirements
          * *   A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.
          * *   Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.
          *
          * @param request GenerateDeviceNameListURLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GenerateDeviceNameListURLResponse
         */
        public async Task<GenerateDeviceNameListURLResponse> GenerateDeviceNameListURLWithOptionsAsync(GenerateDeviceNameListURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateDeviceNameListURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateDeviceNameListURLResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * This operation can be used with other operations to upload a device list file. Procedure:
          * 1. Call this operation to generate the information of a device list file that you want to upload to OSS.  
          * The response parameters of this API operation include:
          * The following request parameters of the OSS [PostObject](/help/en/object-storage-service/latest/postobject) operation that is used to upload the device list file: **Key**, **AccessKeyId**, **Signature**, and **Policy**.  
          * 2. Use an [OSS SDK](/help/en/object-storage-service/latest/sdk-code-samples-overview) to call the [PostObject](/help/en/object-storage-service/latest/postobject) operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the "Usage of response parameters" section in this topic.  
          * >  The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the [CreateOTAStaticUpgradeJob](/help/en/iot-platform/latest/e1qtmo) operation of IoT Platform to create a static update batch within 60 minutes.  
          * If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.  
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. 
          * ## Requirements
          * *   A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.
          * *   Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.
          *
          * @param request GenerateDeviceNameListURLRequest
          * @return GenerateDeviceNameListURLResponse
         */
        public GenerateDeviceNameListURLResponse GenerateDeviceNameListURL(GenerateDeviceNameListURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GenerateDeviceNameListURLWithOptions(request, runtime);
        }

        /**
          * This operation can be used with other operations to upload a device list file. Procedure:
          * 1. Call this operation to generate the information of a device list file that you want to upload to OSS.  
          * The response parameters of this API operation include:
          * The following request parameters of the OSS [PostObject](/help/en/object-storage-service/latest/postobject) operation that is used to upload the device list file: **Key**, **AccessKeyId**, **Signature**, and **Policy**.  
          * 2. Use an [OSS SDK](/help/en/object-storage-service/latest/sdk-code-samples-overview) to call the [PostObject](/help/en/object-storage-service/latest/postobject) operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the "Usage of response parameters" section in this topic.  
          * >  The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the [CreateOTAStaticUpgradeJob](/help/en/iot-platform/latest/e1qtmo) operation of IoT Platform to create a static update batch within 60 minutes.  
          * If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.  
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. 
          * ## Requirements
          * *   A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.
          * *   Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.
          *
          * @param request GenerateDeviceNameListURLRequest
          * @return GenerateDeviceNameListURLResponse
         */
        public async Task<GenerateDeviceNameListURLResponse> GenerateDeviceNameListURLAsync(GenerateDeviceNameListURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GenerateDeviceNameListURLWithOptionsAsync(request, runtime);
        }

        public GenerateFileUploadURLResponse GenerateFileUploadURLWithOptions(GenerateFileUploadURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                query["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileSuffix))
            {
                query["FileSuffix"] = request.FileSuffix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateFileUploadURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateFileUploadURLResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GenerateFileUploadURLResponse> GenerateFileUploadURLWithOptionsAsync(GenerateFileUploadURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizCode))
            {
                query["BizCode"] = request.BizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileName))
            {
                query["FileName"] = request.FileName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileSuffix))
            {
                query["FileSuffix"] = request.FileSuffix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateFileUploadURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateFileUploadURLResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GenerateFileUploadURLResponse GenerateFileUploadURL(GenerateFileUploadURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GenerateFileUploadURLWithOptions(request, runtime);
        }

        public async Task<GenerateFileUploadURLResponse> GenerateFileUploadURLAsync(GenerateFileUploadURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GenerateFileUploadURLWithOptionsAsync(request, runtime);
        }

        /**
          * This operation can be used together with other operations to create an update package. Procedure:
          * 1\\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
          * The following section describes the response parameters of this API operation:
          * *   The following request parameters of the OSS [PostObject](~~31988~~) operation that is used to upload the update package file: **Key**, **OSSAccessKeyId**, **Signature**, and **Policy**.
          * *   The following request parameter of the [CreateOTAFirmware](~~147311~~) operation that is used to create the update package: **FirmwareUrl**.
          * 2\\. Use an [OSS SDK](~~52834~~) to call the [PostObject](~~31988~~) operation to upload the update package file. For more information about sample code, see the "Usage of response parameters" section.
          * > The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
          * 3\\. After the update package file is uploaded, call the [CreateOTAFirmware](~~147311~~) operation to create an update package within 60 minutes.
          * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request GenerateOTAUploadURLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GenerateOTAUploadURLResponse
         */
        public GenerateOTAUploadURLResponse GenerateOTAUploadURLWithOptions(GenerateOTAUploadURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileSuffix))
            {
                query["FileSuffix"] = request.FileSuffix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateOTAUploadURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateOTAUploadURLResponse>(CallApi(params_, req, runtime));
        }

        /**
          * This operation can be used together with other operations to create an update package. Procedure:
          * 1\\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
          * The following section describes the response parameters of this API operation:
          * *   The following request parameters of the OSS [PostObject](~~31988~~) operation that is used to upload the update package file: **Key**, **OSSAccessKeyId**, **Signature**, and **Policy**.
          * *   The following request parameter of the [CreateOTAFirmware](~~147311~~) operation that is used to create the update package: **FirmwareUrl**.
          * 2\\. Use an [OSS SDK](~~52834~~) to call the [PostObject](~~31988~~) operation to upload the update package file. For more information about sample code, see the "Usage of response parameters" section.
          * > The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
          * 3\\. After the update package file is uploaded, call the [CreateOTAFirmware](~~147311~~) operation to create an update package within 60 minutes.
          * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request GenerateOTAUploadURLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GenerateOTAUploadURLResponse
         */
        public async Task<GenerateOTAUploadURLResponse> GenerateOTAUploadURLWithOptionsAsync(GenerateOTAUploadURLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileSuffix))
            {
                query["FileSuffix"] = request.FileSuffix;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GenerateOTAUploadURL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GenerateOTAUploadURLResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * This operation can be used together with other operations to create an update package. Procedure:
          * 1\\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
          * The following section describes the response parameters of this API operation:
          * *   The following request parameters of the OSS [PostObject](~~31988~~) operation that is used to upload the update package file: **Key**, **OSSAccessKeyId**, **Signature**, and **Policy**.
          * *   The following request parameter of the [CreateOTAFirmware](~~147311~~) operation that is used to create the update package: **FirmwareUrl**.
          * 2\\. Use an [OSS SDK](~~52834~~) to call the [PostObject](~~31988~~) operation to upload the update package file. For more information about sample code, see the "Usage of response parameters" section.
          * > The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
          * 3\\. After the update package file is uploaded, call the [CreateOTAFirmware](~~147311~~) operation to create an update package within 60 minutes.
          * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request GenerateOTAUploadURLRequest
          * @return GenerateOTAUploadURLResponse
         */
        public GenerateOTAUploadURLResponse GenerateOTAUploadURL(GenerateOTAUploadURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GenerateOTAUploadURLWithOptions(request, runtime);
        }

        /**
          * This operation can be used together with other operations to create an update package. Procedure:
          * 1\\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
          * The following section describes the response parameters of this API operation:
          * *   The following request parameters of the OSS [PostObject](~~31988~~) operation that is used to upload the update package file: **Key**, **OSSAccessKeyId**, **Signature**, and **Policy**.
          * *   The following request parameter of the [CreateOTAFirmware](~~147311~~) operation that is used to create the update package: **FirmwareUrl**.
          * 2\\. Use an [OSS SDK](~~52834~~) to call the [PostObject](~~31988~~) operation to upload the update package file. For more information about sample code, see the "Usage of response parameters" section.
          * > The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
          * 3\\. After the update package file is uploaded, call the [CreateOTAFirmware](~~147311~~) operation to create an update package within 60 minutes.
          * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request GenerateOTAUploadURLRequest
          * @return GenerateOTAUploadURLResponse
         */
        public async Task<GenerateOTAUploadURLResponse> GenerateOTAUploadURLAsync(GenerateOTAUploadURLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GenerateOTAUploadURLWithOptionsAsync(request, runtime);
        }

        public GetDataAPIServiceDetailResponse GetDataAPIServiceDetailWithOptions(GetDataAPIServiceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiSrn))
            {
                body["ApiSrn"] = request.ApiSrn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDataAPIServiceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDataAPIServiceDetailResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetDataAPIServiceDetailResponse> GetDataAPIServiceDetailWithOptionsAsync(GetDataAPIServiceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiSrn))
            {
                body["ApiSrn"] = request.ApiSrn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDataAPIServiceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDataAPIServiceDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetDataAPIServiceDetailResponse GetDataAPIServiceDetail(GetDataAPIServiceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDataAPIServiceDetailWithOptions(request, runtime);
        }

        public async Task<GetDataAPIServiceDetailResponse> GetDataAPIServiceDetailAsync(GetDataAPIServiceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDataAPIServiceDetailWithOptionsAsync(request, runtime);
        }

        public GetDestinationResponse GetDestinationWithOptions(GetDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetDestinationResponse> GetDestinationWithOptionsAsync(GetDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetDestinationResponse GetDestination(GetDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDestinationWithOptions(request, runtime);
        }

        public async Task<GetDestinationResponse> GetDestinationAsync(GetDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceShadowRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetDeviceShadowResponse
         */
        public GetDeviceShadowResponse GetDeviceShadowWithOptions(GetDeviceShadowRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceShadow",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceShadowResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceShadowRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetDeviceShadowResponse
         */
        public async Task<GetDeviceShadowResponse> GetDeviceShadowWithOptionsAsync(GetDeviceShadowRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceShadow",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceShadowResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceShadowRequest
          * @return GetDeviceShadowResponse
         */
        public GetDeviceShadowResponse GetDeviceShadow(GetDeviceShadowRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDeviceShadowWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceShadowRequest
          * @return GetDeviceShadowResponse
         */
        public async Task<GetDeviceShadowResponse> GetDeviceShadowAsync(GetDeviceShadowRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDeviceShadowWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetDeviceStatusResponse
         */
        public GetDeviceStatusResponse GetDeviceStatusWithOptions(GetDeviceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetDeviceStatusResponse
         */
        public async Task<GetDeviceStatusResponse> GetDeviceStatusWithOptionsAsync(GetDeviceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceStatusRequest
          * @return GetDeviceStatusResponse
         */
        public GetDeviceStatusResponse GetDeviceStatus(GetDeviceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDeviceStatusWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetDeviceStatusRequest
          * @return GetDeviceStatusResponse
         */
        public async Task<GetDeviceStatusResponse> GetDeviceStatusAsync(GetDeviceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDeviceStatusWithOptionsAsync(request, runtime);
        }

        public GetDeviceTunnelShareStatusResponse GetDeviceTunnelShareStatusWithOptions(GetDeviceTunnelShareStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceTunnelShareStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceTunnelShareStatusResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetDeviceTunnelShareStatusResponse> GetDeviceTunnelShareStatusWithOptionsAsync(GetDeviceTunnelShareStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceTunnelShareStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceTunnelShareStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetDeviceTunnelShareStatusResponse GetDeviceTunnelShareStatus(GetDeviceTunnelShareStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDeviceTunnelShareStatusWithOptions(request, runtime);
        }

        public async Task<GetDeviceTunnelShareStatusResponse> GetDeviceTunnelShareStatusAsync(GetDeviceTunnelShareStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDeviceTunnelShareStatusWithOptionsAsync(request, runtime);
        }

        public GetDeviceTunnelStatusResponse GetDeviceTunnelStatusWithOptions(GetDeviceTunnelStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceTunnelStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceTunnelStatusResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetDeviceTunnelStatusResponse> GetDeviceTunnelStatusWithOptionsAsync(GetDeviceTunnelStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDeviceTunnelStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDeviceTunnelStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetDeviceTunnelStatusResponse GetDeviceTunnelStatus(GetDeviceTunnelStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDeviceTunnelStatusWithOptions(request, runtime);
        }

        public async Task<GetDeviceTunnelStatusResponse> GetDeviceTunnelStatusAsync(GetDeviceTunnelStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDeviceTunnelStatusWithOptionsAsync(request, runtime);
        }

        public GetDownloadFileResponse GetDownloadFileWithOptions(GetDownloadFileRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            GetDownloadFileShrinkRequest request = new GetDownloadFileShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Context))
            {
                request.ContextShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Context, "Context", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LongJobId))
            {
                query["LongJobId"] = request.LongJobId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContextShrink))
            {
                body["Context"] = request.ContextShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDownloadFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDownloadFileResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetDownloadFileResponse> GetDownloadFileWithOptionsAsync(GetDownloadFileRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            GetDownloadFileShrinkRequest request = new GetDownloadFileShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Context))
            {
                request.ContextShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Context, "Context", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LongJobId))
            {
                query["LongJobId"] = request.LongJobId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContextShrink))
            {
                body["Context"] = request.ContextShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetDownloadFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetDownloadFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetDownloadFileResponse GetDownloadFile(GetDownloadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetDownloadFileWithOptions(request, runtime);
        }

        public async Task<GetDownloadFileResponse> GetDownloadFileAsync(GetDownloadFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetDownloadFileWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeDriverVersionResponse
         */
        public GetEdgeDriverVersionResponse GetEdgeDriverVersionWithOptions(GetEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeDriverVersionResponse
         */
        public async Task<GetEdgeDriverVersionResponse> GetEdgeDriverVersionWithOptionsAsync(GetEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeDriverVersionRequest
          * @return GetEdgeDriverVersionResponse
         */
        public GetEdgeDriverVersionResponse GetEdgeDriverVersion(GetEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeDriverVersionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeDriverVersionRequest
          * @return GetEdgeDriverVersionResponse
         */
        public async Task<GetEdgeDriverVersionResponse> GetEdgeDriverVersionAsync(GetEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeInstanceResponse
         */
        public GetEdgeInstanceResponse GetEdgeInstanceWithOptions(GetEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeInstanceResponse
         */
        public async Task<GetEdgeInstanceResponse> GetEdgeInstanceWithOptionsAsync(GetEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceRequest
          * @return GetEdgeInstanceResponse
         */
        public GetEdgeInstanceResponse GetEdgeInstance(GetEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceRequest
          * @return GetEdgeInstanceResponse
         */
        public async Task<GetEdgeInstanceResponse> GetEdgeInstanceAsync(GetEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeInstanceDeploymentResponse
         */
        public GetEdgeInstanceDeploymentResponse GetEdgeInstanceDeploymentWithOptions(GetEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeploymentId))
            {
                query["DeploymentId"] = request.DeploymentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceDeploymentResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetEdgeInstanceDeploymentResponse
         */
        public async Task<GetEdgeInstanceDeploymentResponse> GetEdgeInstanceDeploymentWithOptionsAsync(GetEdgeInstanceDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeploymentId))
            {
                query["DeploymentId"] = request.DeploymentId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstanceDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceDeploymentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceDeploymentRequest
          * @return GetEdgeInstanceDeploymentResponse
         */
        public GetEdgeInstanceDeploymentResponse GetEdgeInstanceDeployment(GetEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeInstanceDeploymentWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetEdgeInstanceDeploymentRequest
          * @return GetEdgeInstanceDeploymentResponse
         */
        public async Task<GetEdgeInstanceDeploymentResponse> GetEdgeInstanceDeploymentAsync(GetEdgeInstanceDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeInstanceDeploymentWithOptionsAsync(request, runtime);
        }

        public GetEdgeInstanceMessageRoutingResponse GetEdgeInstanceMessageRoutingWithOptions(GetEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceMessageRoutingResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetEdgeInstanceMessageRoutingResponse> GetEdgeInstanceMessageRoutingWithOptionsAsync(GetEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetEdgeInstanceMessageRoutingResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetEdgeInstanceMessageRoutingResponse GetEdgeInstanceMessageRouting(GetEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetEdgeInstanceMessageRoutingWithOptions(request, runtime);
        }

        public async Task<GetEdgeInstanceMessageRoutingResponse> GetEdgeInstanceMessageRoutingAsync(GetEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetEdgeInstanceMessageRoutingWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetGatewayBySubDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetGatewayBySubDeviceResponse
         */
        public GetGatewayBySubDeviceResponse GetGatewayBySubDeviceWithOptions(GetGatewayBySubDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetGatewayBySubDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetGatewayBySubDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetGatewayBySubDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetGatewayBySubDeviceResponse
         */
        public async Task<GetGatewayBySubDeviceResponse> GetGatewayBySubDeviceWithOptionsAsync(GetGatewayBySubDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetGatewayBySubDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetGatewayBySubDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetGatewayBySubDeviceRequest
          * @return GetGatewayBySubDeviceResponse
         */
        public GetGatewayBySubDeviceResponse GetGatewayBySubDevice(GetGatewayBySubDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetGatewayBySubDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetGatewayBySubDeviceRequest
          * @return GetGatewayBySubDeviceResponse
         */
        public async Task<GetGatewayBySubDeviceResponse> GetGatewayBySubDeviceAsync(GetGatewayBySubDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetGatewayBySubDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetLoraNodesTaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetLoraNodesTaskResponse
         */
        public GetLoraNodesTaskResponse GetLoraNodesTaskWithOptions(GetLoraNodesTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLoraNodesTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLoraNodesTaskResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetLoraNodesTaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetLoraNodesTaskResponse
         */
        public async Task<GetLoraNodesTaskResponse> GetLoraNodesTaskWithOptionsAsync(GetLoraNodesTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetLoraNodesTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetLoraNodesTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetLoraNodesTaskRequest
          * @return GetLoraNodesTaskResponse
         */
        public GetLoraNodesTaskResponse GetLoraNodesTask(GetLoraNodesTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetLoraNodesTaskWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetLoraNodesTaskRequest
          * @return GetLoraNodesTaskResponse
         */
        public async Task<GetLoraNodesTaskResponse> GetLoraNodesTaskAsync(GetLoraNodesTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetLoraNodesTaskWithOptionsAsync(request, runtime);
        }

        public GetParserResponse GetParserWithOptions(GetParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetParserResponse> GetParserWithOptionsAsync(GetParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetParserResponse GetParser(GetParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetParserWithOptions(request, runtime);
        }

        public async Task<GetParserResponse> GetParserAsync(GetParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetParserWithOptionsAsync(request, runtime);
        }

        public GetParserDataSourceResponse GetParserDataSourceWithOptions(GetParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetParserDataSourceResponse> GetParserDataSourceWithOptionsAsync(GetParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetParserDataSourceResponse GetParserDataSource(GetParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetParserDataSourceWithOptions(request, runtime);
        }

        public async Task<GetParserDataSourceResponse> GetParserDataSourceAsync(GetParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetParserDataSourceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetRuleResponse
         */
        public GetRuleResponse GetRuleWithOptions(GetRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetRuleResponse
         */
        public async Task<GetRuleResponse> GetRuleWithOptionsAsync(GetRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetRuleRequest
          * @return GetRuleResponse
         */
        public GetRuleResponse GetRule(GetRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetRuleRequest
          * @return GetRuleResponse
         */
        public async Task<GetRuleResponse> GetRuleAsync(GetRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRuleWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetRuleActionResponse
         */
        public GetRuleActionResponse GetRuleActionWithOptions(GetRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRuleActionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetRuleActionResponse
         */
        public async Task<GetRuleActionResponse> GetRuleActionWithOptionsAsync(GetRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetRuleActionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetRuleActionRequest
          * @return GetRuleActionResponse
         */
        public GetRuleActionResponse GetRuleAction(GetRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetRuleActionWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetRuleActionRequest
          * @return GetRuleActionResponse
         */
        public async Task<GetRuleActionResponse> GetRuleActionAsync(GetRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetRuleActionWithOptionsAsync(request, runtime);
        }

        public GetSceneRuleResponse GetSceneRuleWithOptions(GetSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetSceneRuleResponse> GetSceneRuleWithOptionsAsync(GetSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetSceneRuleResponse GetSceneRule(GetSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSceneRuleWithOptions(request, runtime);
        }

        public async Task<GetSceneRuleResponse> GetSceneRuleAsync(GetSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSceneRuleWithOptionsAsync(request, runtime);
        }

        public GetShareSpeechModelAudioResponse GetShareSpeechModelAudioWithOptions(GetShareSpeechModelAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechModelCodeList))
            {
                body["SpeechModelCodeList"] = request.SpeechModelCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetShareSpeechModelAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetShareSpeechModelAudioResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetShareSpeechModelAudioResponse> GetShareSpeechModelAudioWithOptionsAsync(GetShareSpeechModelAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechModelCodeList))
            {
                body["SpeechModelCodeList"] = request.SpeechModelCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetShareSpeechModelAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetShareSpeechModelAudioResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetShareSpeechModelAudioResponse GetShareSpeechModelAudio(GetShareSpeechModelAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetShareSpeechModelAudioWithOptions(request, runtime);
        }

        public async Task<GetShareSpeechModelAudioResponse> GetShareSpeechModelAudioAsync(GetShareSpeechModelAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetShareSpeechModelAudioWithOptionsAsync(request, runtime);
        }

        public GetShareTaskByDeviceOpenResponse GetShareTaskByDeviceOpenWithOptions(GetShareTaskByDeviceOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetShareTaskByDeviceOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetShareTaskByDeviceOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetShareTaskByDeviceOpenResponse> GetShareTaskByDeviceOpenWithOptionsAsync(GetShareTaskByDeviceOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetShareTaskByDeviceOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetShareTaskByDeviceOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetShareTaskByDeviceOpenResponse GetShareTaskByDeviceOpen(GetShareTaskByDeviceOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetShareTaskByDeviceOpenWithOptions(request, runtime);
        }

        public async Task<GetShareTaskByDeviceOpenResponse> GetShareTaskByDeviceOpenAsync(GetShareTaskByDeviceOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetShareTaskByDeviceOpenWithOptionsAsync(request, runtime);
        }

        public GetSoundCodeAudioResponse GetSoundCodeAudioWithOptions(GetSoundCodeAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeList))
            {
                body["SoundCodeList"] = request.SoundCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSoundCodeAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSoundCodeAudioResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetSoundCodeAudioResponse> GetSoundCodeAudioWithOptionsAsync(GetSoundCodeAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeList))
            {
                body["SoundCodeList"] = request.SoundCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSoundCodeAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSoundCodeAudioResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetSoundCodeAudioResponse GetSoundCodeAudio(GetSoundCodeAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSoundCodeAudioWithOptions(request, runtime);
        }

        public async Task<GetSoundCodeAudioResponse> GetSoundCodeAudioAsync(GetSoundCodeAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSoundCodeAudioWithOptionsAsync(request, runtime);
        }

        public GetSoundCodeScheduleResponse GetSoundCodeScheduleWithOptions(GetSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSoundCodeScheduleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetSoundCodeScheduleResponse> GetSoundCodeScheduleWithOptionsAsync(GetSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSoundCodeScheduleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetSoundCodeScheduleResponse GetSoundCodeSchedule(GetSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSoundCodeScheduleWithOptions(request, runtime);
        }

        public async Task<GetSoundCodeScheduleResponse> GetSoundCodeScheduleAsync(GetSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSoundCodeScheduleWithOptionsAsync(request, runtime);
        }

        public GetSpeechDeviceDetailResponse GetSpeechDeviceDetailWithOptions(GetSpeechDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechDeviceDetailResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetSpeechDeviceDetailResponse> GetSpeechDeviceDetailWithOptionsAsync(GetSpeechDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechDeviceDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetSpeechDeviceDetailResponse GetSpeechDeviceDetail(GetSpeechDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSpeechDeviceDetailWithOptions(request, runtime);
        }

        public async Task<GetSpeechDeviceDetailResponse> GetSpeechDeviceDetailAsync(GetSpeechDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSpeechDeviceDetailWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetSpeechLicenseDeviceStatisticsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetSpeechLicenseDeviceStatisticsResponse
         */
        public GetSpeechLicenseDeviceStatisticsResponse GetSpeechLicenseDeviceStatisticsWithOptions(GetSpeechLicenseDeviceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechLicenseDeviceStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechLicenseDeviceStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetSpeechLicenseDeviceStatisticsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetSpeechLicenseDeviceStatisticsResponse
         */
        public async Task<GetSpeechLicenseDeviceStatisticsResponse> GetSpeechLicenseDeviceStatisticsWithOptionsAsync(GetSpeechLicenseDeviceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechLicenseDeviceStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechLicenseDeviceStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetSpeechLicenseDeviceStatisticsRequest
          * @return GetSpeechLicenseDeviceStatisticsResponse
         */
        public GetSpeechLicenseDeviceStatisticsResponse GetSpeechLicenseDeviceStatistics(GetSpeechLicenseDeviceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSpeechLicenseDeviceStatisticsWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetSpeechLicenseDeviceStatisticsRequest
          * @return GetSpeechLicenseDeviceStatisticsResponse
         */
        public async Task<GetSpeechLicenseDeviceStatisticsResponse> GetSpeechLicenseDeviceStatisticsAsync(GetSpeechLicenseDeviceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSpeechLicenseDeviceStatisticsWithOptionsAsync(request, runtime);
        }

        public GetSpeechVoiceResponse GetSpeechVoiceWithOptions(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechVoice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechVoiceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetSpeechVoiceResponse> GetSpeechVoiceWithOptionsAsync(AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest();
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetSpeechVoice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetSpeechVoiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetSpeechVoiceResponse GetSpeechVoice()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetSpeechVoiceWithOptions(runtime);
        }

        public async Task<GetSpeechVoiceResponse> GetSpeechVoiceAsync()
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetSpeechVoiceWithOptionsAsync(runtime);
        }

        public GetStudioAppTokenOpenResponse GetStudioAppTokenOpenWithOptions(GetStudioAppTokenOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStudioAppTokenOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStudioAppTokenOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GetStudioAppTokenOpenResponse> GetStudioAppTokenOpenWithOptionsAsync(GetStudioAppTokenOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetStudioAppTokenOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetStudioAppTokenOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GetStudioAppTokenOpenResponse GetStudioAppTokenOpen(GetStudioAppTokenOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetStudioAppTokenOpenWithOptions(request, runtime);
        }

        public async Task<GetStudioAppTokenOpenResponse> GetStudioAppTokenOpenAsync(GetStudioAppTokenOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetStudioAppTokenOpenWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetThingModelTslRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingModelTslResponse
         */
        public GetThingModelTslResponse GetThingModelTslWithOptions(GetThingModelTslRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Simple))
            {
                query["Simple"] = request.Simple;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingModelTsl",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingModelTslResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetThingModelTslRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingModelTslResponse
         */
        public async Task<GetThingModelTslResponse> GetThingModelTslWithOptionsAsync(GetThingModelTslRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Simple))
            {
                query["Simple"] = request.Simple;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingModelTsl",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingModelTslResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetThingModelTslRequest
          * @return GetThingModelTslResponse
         */
        public GetThingModelTslResponse GetThingModelTsl(GetThingModelTslRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetThingModelTslWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request GetThingModelTslRequest
          * @return GetThingModelTslResponse
         */
        public async Task<GetThingModelTslResponse> GetThingModelTslAsync(GetThingModelTslRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetThingModelTslWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingModelTslPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingModelTslPublishedResponse
         */
        public GetThingModelTslPublishedResponse GetThingModelTslPublishedWithOptions(GetThingModelTslPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Simple))
            {
                query["Simple"] = request.Simple;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingModelTslPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingModelTslPublishedResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingModelTslPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingModelTslPublishedResponse
         */
        public async Task<GetThingModelTslPublishedResponse> GetThingModelTslPublishedWithOptionsAsync(GetThingModelTslPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Simple))
            {
                query["Simple"] = request.Simple;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingModelTslPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingModelTslPublishedResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingModelTslPublishedRequest
          * @return GetThingModelTslPublishedResponse
         */
        public GetThingModelTslPublishedResponse GetThingModelTslPublished(GetThingModelTslPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetThingModelTslPublishedWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingModelTslPublishedRequest
          * @return GetThingModelTslPublishedResponse
         */
        public async Task<GetThingModelTslPublishedResponse> GetThingModelTslPublishedAsync(GetThingModelTslPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetThingModelTslPublishedWithOptionsAsync(request, runtime);
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingScriptResponse
         */
        public GetThingScriptResponse GetThingScriptWithOptions(GetThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingScriptResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingScriptResponse
         */
        public async Task<GetThingScriptResponse> GetThingScriptWithOptionsAsync(GetThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingScriptResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingScriptRequest
          * @return GetThingScriptResponse
         */
        public GetThingScriptResponse GetThingScript(GetThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetThingScriptWithOptions(request, runtime);
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingScriptRequest
          * @return GetThingScriptResponse
         */
        public async Task<GetThingScriptResponse> GetThingScriptAsync(GetThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetThingScriptWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTemplateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingTemplateResponse
         */
        public GetThingTemplateResponse GetThingTemplateWithOptions(GetThingTemplateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CategoryKey))
            {
                query["CategoryKey"] = request.CategoryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingTemplate",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingTemplateResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTemplateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingTemplateResponse
         */
        public async Task<GetThingTemplateResponse> GetThingTemplateWithOptionsAsync(GetThingTemplateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CategoryKey))
            {
                query["CategoryKey"] = request.CategoryKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingTemplate",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingTemplateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTemplateRequest
          * @return GetThingTemplateResponse
         */
        public GetThingTemplateResponse GetThingTemplate(GetThingTemplateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetThingTemplateWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTemplateRequest
          * @return GetThingTemplateResponse
         */
        public async Task<GetThingTemplateResponse> GetThingTemplateAsync(GetThingTemplateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetThingTemplateWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingTopoResponse
         */
        public GetThingTopoResponse GetThingTopoWithOptions(GetThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                query["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingTopoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return GetThingTopoResponse
         */
        public async Task<GetThingTopoResponse> GetThingTopoWithOptionsAsync(GetThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                query["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GetThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GetThingTopoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTopoRequest
          * @return GetThingTopoResponse
         */
        public GetThingTopoResponse GetThingTopo(GetThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GetThingTopoWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request GetThingTopoRequest
          * @return GetThingTopoResponse
         */
        public async Task<GetThingTopoResponse> GetThingTopoAsync(GetThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GetThingTopoWithOptionsAsync(request, runtime);
        }

        public GisQueryDeviceLocationResponse GisQueryDeviceLocationWithOptions(GisQueryDeviceLocationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingList))
            {
                query["ThingList"] = request.ThingList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GisQueryDeviceLocation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GisQueryDeviceLocationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GisQueryDeviceLocationResponse> GisQueryDeviceLocationWithOptionsAsync(GisQueryDeviceLocationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingList))
            {
                query["ThingList"] = request.ThingList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GisQueryDeviceLocation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GisQueryDeviceLocationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GisQueryDeviceLocationResponse GisQueryDeviceLocation(GisQueryDeviceLocationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GisQueryDeviceLocationWithOptions(request, runtime);
        }

        public async Task<GisQueryDeviceLocationResponse> GisQueryDeviceLocationAsync(GisQueryDeviceLocationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GisQueryDeviceLocationWithOptionsAsync(request, runtime);
        }

        public GisSearchDeviceTraceResponse GisSearchDeviceTraceWithOptions(GisSearchDeviceTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapMatch))
            {
                query["MapMatch"] = request.MapMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GisSearchDeviceTrace",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GisSearchDeviceTraceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<GisSearchDeviceTraceResponse> GisSearchDeviceTraceWithOptionsAsync(GisSearchDeviceTraceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MapMatch))
            {
                query["MapMatch"] = request.MapMatch;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "GisSearchDeviceTrace",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<GisSearchDeviceTraceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public GisSearchDeviceTraceResponse GisSearchDeviceTrace(GisSearchDeviceTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return GisSearchDeviceTraceWithOptions(request, runtime);
        }

        public async Task<GisSearchDeviceTraceResponse> GisSearchDeviceTraceAsync(GisSearchDeviceTraceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await GisSearchDeviceTraceWithOptionsAsync(request, runtime);
        }

        public ImportDTDataResponse ImportDTDataWithOptions(ImportDTDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DTInstanceId))
            {
                query["DTInstanceId"] = request.DTInstanceId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                body["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportDTData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportDTDataResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ImportDTDataResponse> ImportDTDataWithOptionsAsync(ImportDTDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DTInstanceId))
            {
                query["DTInstanceId"] = request.DTInstanceId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                body["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportDTData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportDTDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ImportDTDataResponse ImportDTData(ImportDTDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ImportDTDataWithOptions(request, runtime);
        }

        public async Task<ImportDTDataResponse> ImportDTDataAsync(ImportDTDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ImportDTDataWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ImportDeviceResponse
         */
        public ImportDeviceResponse ImportDeviceWithOptions(ImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSecret))
            {
                query["DeviceSecret"] = request.DeviceSecret;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sn))
            {
                query["Sn"] = request.Sn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ImportDeviceResponse
         */
        public async Task<ImportDeviceResponse> ImportDeviceWithOptionsAsync(ImportDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceSecret))
            {
                query["DeviceSecret"] = request.DeviceSecret;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Sn))
            {
                query["Sn"] = request.Sn;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportDeviceRequest
          * @return ImportDeviceResponse
         */
        public ImportDeviceResponse ImportDevice(ImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ImportDeviceWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * Before you call this operation, make sure that an MQTT gateway and the related product are created and the **ProductKey** of the product is obtained. For more information, see [Create an MQTT gateway](~~433804~~).
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportDeviceRequest
          * @return ImportDeviceResponse
         */
        public async Task<ImportDeviceResponse> ImportDeviceAsync(ImportDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ImportDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportThingModelTslRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ImportThingModelTslResponse
         */
        public ImportThingModelTslResponse ImportThingModelTslWithOptions(ImportThingModelTslRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TslStr))
            {
                query["TslStr"] = request.TslStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TslUrl))
            {
                query["TslUrl"] = request.TslUrl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportThingModelTsl",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportThingModelTslResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportThingModelTslRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ImportThingModelTslResponse
         */
        public async Task<ImportThingModelTslResponse> ImportThingModelTslWithOptionsAsync(ImportThingModelTslRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TslStr))
            {
                query["TslStr"] = request.TslStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TslUrl))
            {
                query["TslUrl"] = request.TslUrl;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ImportThingModelTsl",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ImportThingModelTslResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportThingModelTslRequest
          * @return ImportThingModelTslResponse
         */
        public ImportThingModelTslResponse ImportThingModelTsl(ImportThingModelTslRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ImportThingModelTslWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ImportThingModelTslRequest
          * @return ImportThingModelTslResponse
         */
        public async Task<ImportThingModelTslResponse> ImportThingModelTslAsync(ImportThingModelTslRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ImportThingModelTslWithOptionsAsync(request, runtime);
        }

        public InvokeDataAPIServiceResponse InvokeDataAPIServiceWithOptions(InvokeDataAPIServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiSrn))
            {
                body["ApiSrn"] = request.ApiSrn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                body["Param"] = request.Param;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeDataAPIService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeDataAPIServiceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<InvokeDataAPIServiceResponse> InvokeDataAPIServiceWithOptionsAsync(InvokeDataAPIServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiSrn))
            {
                body["ApiSrn"] = request.ApiSrn;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Param))
            {
                body["Param"] = request.Param;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeDataAPIService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeDataAPIServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public InvokeDataAPIServiceResponse InvokeDataAPIService(InvokeDataAPIServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InvokeDataAPIServiceWithOptions(request, runtime);
        }

        public async Task<InvokeDataAPIServiceResponse> InvokeDataAPIServiceAsync(InvokeDataAPIServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InvokeDataAPIServiceWithOptionsAsync(request, runtime);
        }

        /**
          * When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the **Identifier** parameter.
          * *   Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see [What is RRPC?](~~90567~~)
          * *   Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see [Device properties, events, and services](~~89301~~).
          * > If you set the Checksum Type parameter to **Verification-free** when you create a product, the asynchronous mode is used.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*   Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## Limits
          * If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. 
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingServiceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return InvokeThingServiceResponse
         */
        public InvokeThingServiceResponse InvokeThingServiceWithOptions(InvokeThingServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Args))
            {
                query["Args"] = request.Args;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeThingService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeThingServiceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the **Identifier** parameter.
          * *   Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see [What is RRPC?](~~90567~~)
          * *   Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see [Device properties, events, and services](~~89301~~).
          * > If you set the Checksum Type parameter to **Verification-free** when you create a product, the asynchronous mode is used.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*   Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## Limits
          * If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. 
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingServiceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return InvokeThingServiceResponse
         */
        public async Task<InvokeThingServiceResponse> InvokeThingServiceWithOptionsAsync(InvokeThingServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Args))
            {
                query["Args"] = request.Args;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeThingService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeThingServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the **Identifier** parameter.
          * *   Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see [What is RRPC?](~~90567~~)
          * *   Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see [Device properties, events, and services](~~89301~~).
          * > If you set the Checksum Type parameter to **Verification-free** when you create a product, the asynchronous mode is used.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*   Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## Limits
          * If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. 
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingServiceRequest
          * @return InvokeThingServiceResponse
         */
        public InvokeThingServiceResponse InvokeThingService(InvokeThingServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InvokeThingServiceWithOptions(request, runtime);
        }

        /**
          * When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the **Identifier** parameter.
          * *   Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see [What is RRPC?](~~90567~~)
          * *   Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see [Device properties, events, and services](~~89301~~).
          * > If you set the Checksum Type parameter to **Verification-free** when you create a product, the asynchronous mode is used.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*   Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## Limits
          * If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. 
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingServiceRequest
          * @return InvokeThingServiceResponse
         */
        public async Task<InvokeThingServiceResponse> InvokeThingServiceAsync(InvokeThingServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InvokeThingServiceWithOptionsAsync(request, runtime);
        }

        /**
          * You can only asynchronously call this operation.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*    Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingsServiceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return InvokeThingsServiceResponse
         */
        public InvokeThingsServiceResponse InvokeThingsServiceWithOptions(InvokeThingsServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Args))
            {
                query["Args"] = request.Args;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeThingsService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeThingsServiceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can only asynchronously call this operation.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*    Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingsServiceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return InvokeThingsServiceResponse
         */
        public async Task<InvokeThingsServiceResponse> InvokeThingsServiceWithOptionsAsync(InvokeThingsServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Args))
            {
                query["Args"] = request.Args;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "InvokeThingsService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<InvokeThingsServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can only asynchronously call this operation.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*    Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingsServiceRequest
          * @return InvokeThingsServiceResponse
         */
        public InvokeThingsServiceResponse InvokeThingsService(InvokeThingsServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return InvokeThingsServiceWithOptions(request, runtime);
        }

        /**
          * You can only asynchronously call this operation.
          * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:
          * ```
          * {
          * 	"id": "58***89",
          * 	"code": 200,
          * 	"data": {},
          * 	"message": "success",
          * 	"localizedMsg": "localizedMsg"
          * }
          * ```
          * > *   The **id** parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.
          * >*   The **code** parameter specifies the result of the service call. The value of the parameter is an integer.
          * >*   The **data** parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.
          * >*   The **message** and **localizedMsg** parameters are optional.
          * >*    Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see [Call device services](~~258239~~).
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request InvokeThingsServiceRequest
          * @return InvokeThingsServiceResponse
         */
        public async Task<InvokeThingsServiceResponse> InvokeThingsServiceAsync(InvokeThingsServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await InvokeThingsServiceWithOptionsAsync(request, runtime);
        }

        public ListAnalyticsDataResponse ListAnalyticsDataWithOptions(ListAnalyticsDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiPath))
            {
                query["ApiPath"] = request.ApiPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Condition))
            {
                query["Condition"] = request.Condition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsoId))
            {
                query["IsoId"] = request.IsoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNum))
            {
                query["PageNum"] = request.PageNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAnalyticsData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAnalyticsDataResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListAnalyticsDataResponse> ListAnalyticsDataWithOptionsAsync(ListAnalyticsDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApiPath))
            {
                query["ApiPath"] = request.ApiPath;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Condition))
            {
                query["Condition"] = request.Condition;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsoId))
            {
                query["IsoId"] = request.IsoId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNum))
            {
                query["PageNum"] = request.PageNum;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListAnalyticsData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListAnalyticsDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListAnalyticsDataResponse ListAnalyticsData(ListAnalyticsDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListAnalyticsDataWithOptions(request, runtime);
        }

        public async Task<ListAnalyticsDataResponse> ListAnalyticsDataAsync(ListAnalyticsDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListAnalyticsDataWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDataSourceItemRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDataSourceItemResponse
         */
        public ListDataSourceItemResponse ListDataSourceItemWithOptions(ListDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDataSourceItemResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDataSourceItemRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDataSourceItemResponse
         */
        public async Task<ListDataSourceItemResponse> ListDataSourceItemWithOptionsAsync(ListDataSourceItemRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDataSourceItem",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDataSourceItemResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDataSourceItemRequest
          * @return ListDataSourceItemResponse
         */
        public ListDataSourceItemResponse ListDataSourceItem(ListDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDataSourceItemWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDataSourceItemRequest
          * @return ListDataSourceItemResponse
         */
        public async Task<ListDataSourceItemResponse> ListDataSourceItemAsync(ListDataSourceItemRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDataSourceItemWithOptionsAsync(request, runtime);
        }

        public ListDestinationResponse ListDestinationWithOptions(ListDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListDestinationResponse> ListDestinationWithOptionsAsync(ListDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                query["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListDestinationResponse ListDestination(ListDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDestinationWithOptions(request, runtime);
        }

        public async Task<ListDestinationResponse> ListDestinationAsync(ListDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * If you use an Enterprise Edition instance, you must specify the **IotInstanceId** parameter when you call this operation. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDeviceDistributeJobResponse
         */
        public ListDeviceDistributeJobResponse ListDeviceDistributeJobWithOptions(ListDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                body["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDeviceDistributeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If you use an Enterprise Edition instance, you must specify the **IotInstanceId** parameter when you call this operation. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDeviceDistributeJobResponse
         */
        public async Task<ListDeviceDistributeJobResponse> ListDeviceDistributeJobWithOptionsAsync(ListDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                body["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDeviceDistributeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If you use an Enterprise Edition instance, you must specify the **IotInstanceId** parameter when you call this operation. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDeviceDistributeJobRequest
          * @return ListDeviceDistributeJobResponse
         */
        public ListDeviceDistributeJobResponse ListDeviceDistributeJob(ListDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDeviceDistributeJobWithOptions(request, runtime);
        }

        /**
          * If you use an Enterprise Edition instance, you must specify the **IotInstanceId** parameter when you call this operation. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDeviceDistributeJobRequest
          * @return ListDeviceDistributeJobResponse
         */
        public async Task<ListDeviceDistributeJobResponse> ListDeviceDistributeJobAsync(ListDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDeviceDistributeJobWithOptionsAsync(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.
          *
          * @param request ListDistributedDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDistributedDeviceResponse
         */
        public ListDistributedDeviceResponse ListDistributedDeviceWithOptions(ListDistributedDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDistributedDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDistributedDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.
          *
          * @param request ListDistributedDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDistributedDeviceResponse
         */
        public async Task<ListDistributedDeviceResponse> ListDistributedDeviceWithOptionsAsync(ListDistributedDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDistributedDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDistributedDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.
          *
          * @param request ListDistributedDeviceRequest
          * @return ListDistributedDeviceResponse
         */
        public ListDistributedDeviceResponse ListDistributedDevice(ListDistributedDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDistributedDeviceWithOptions(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.
          *
          * @param request ListDistributedDeviceRequest
          * @return ListDistributedDeviceResponse
         */
        public async Task<ListDistributedDeviceResponse> ListDistributedDeviceAsync(ListDistributedDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDistributedDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * You can call this operation only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDistributedProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDistributedProductResponse
         */
        public ListDistributedProductResponse ListDistributedProductWithOptions(ListDistributedProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceId))
            {
                query["TargetInstanceId"] = request.TargetInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDistributedProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDistributedProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can call this operation only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDistributedProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListDistributedProductResponse
         */
        public async Task<ListDistributedProductResponse> ListDistributedProductWithOptionsAsync(ListDistributedProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceInstanceId))
            {
                query["SourceInstanceId"] = request.SourceInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetInstanceId))
            {
                query["TargetInstanceId"] = request.TargetInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetUid))
            {
                query["TargetUid"] = request.TargetUid;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListDistributedProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListDistributedProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can call this operation only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDistributedProductRequest
          * @return ListDistributedProductResponse
         */
        public ListDistributedProductResponse ListDistributedProduct(ListDistributedProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListDistributedProductWithOptions(request, runtime);
        }

        /**
          * You can call this operation only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * ## QPS limits
          * You can call this API operation up to five times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListDistributedProductRequest
          * @return ListDistributedProductResponse
         */
        public async Task<ListDistributedProductResponse> ListDistributedProductAsync(ListDistributedProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListDistributedProductWithOptionsAsync(request, runtime);
        }

        public ListJobResponse ListJobWithOptions(ListJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListJobResponse> ListJobWithOptionsAsync(ListJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListJobResponse ListJob(ListJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListJobWithOptions(request, runtime);
        }

        public async Task<ListJobResponse> ListJobAsync(ListJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAFirmwareResponse
         */
        public ListOTAFirmwareResponse ListOTAFirmwareWithOptions(ListOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestVersion))
            {
                query["DestVersion"] = request.DestVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAFirmwareResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAFirmwareResponse
         */
        public async Task<ListOTAFirmwareResponse> ListOTAFirmwareWithOptionsAsync(ListOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestVersion))
            {
                query["DestVersion"] = request.DestVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAFirmwareRequest
          * @return ListOTAFirmwareResponse
         */
        public ListOTAFirmwareResponse ListOTAFirmware(ListOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAFirmwareWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAFirmwareRequest
          * @return ListOTAFirmwareResponse
         */
        public async Task<ListOTAFirmwareResponse> ListOTAFirmwareAsync(ListOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAJobByDeviceResponse
         */
        public ListOTAJobByDeviceResponse ListOTAJobByDeviceWithOptions(ListOTAJobByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAJobByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAJobByDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAJobByDeviceResponse
         */
        public async Task<ListOTAJobByDeviceResponse> ListOTAJobByDeviceWithOptionsAsync(ListOTAJobByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAJobByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAJobByDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByDeviceRequest
          * @return ListOTAJobByDeviceResponse
         */
        public ListOTAJobByDeviceResponse ListOTAJobByDevice(ListOTAJobByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAJobByDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByDeviceRequest
          * @return ListOTAJobByDeviceResponse
         */
        public async Task<ListOTAJobByDeviceResponse> ListOTAJobByDeviceAsync(ListOTAJobByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAJobByDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAJobByFirmwareResponse
         */
        public ListOTAJobByFirmwareResponse ListOTAJobByFirmwareWithOptions(ListOTAJobByFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAJobByFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAJobByFirmwareResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAJobByFirmwareResponse
         */
        public async Task<ListOTAJobByFirmwareResponse> ListOTAJobByFirmwareWithOptionsAsync(ListOTAJobByFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAJobByFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAJobByFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByFirmwareRequest
          * @return ListOTAJobByFirmwareResponse
         */
        public ListOTAJobByFirmwareResponse ListOTAJobByFirmware(ListOTAJobByFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAJobByFirmwareWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAJobByFirmwareRequest
          * @return ListOTAJobByFirmwareResponse
         */
        public async Task<ListOTAJobByFirmwareResponse> ListOTAJobByFirmwareAsync(ListOTAJobByFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAJobByFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleByProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAModuleByProductResponse
         */
        public ListOTAModuleByProductResponse ListOTAModuleByProductWithOptions(ListOTAModuleByProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAModuleByProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAModuleByProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleByProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAModuleByProductResponse
         */
        public async Task<ListOTAModuleByProductResponse> ListOTAModuleByProductWithOptionsAsync(ListOTAModuleByProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAModuleByProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAModuleByProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleByProductRequest
          * @return ListOTAModuleByProductResponse
         */
        public ListOTAModuleByProductResponse ListOTAModuleByProduct(ListOTAModuleByProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAModuleByProductWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleByProductRequest
          * @return ListOTAModuleByProductResponse
         */
        public async Task<ListOTAModuleByProductResponse> ListOTAModuleByProductAsync(ListOTAModuleByProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAModuleByProductWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleVersionsByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAModuleVersionsByDeviceResponse
         */
        public ListOTAModuleVersionsByDeviceResponse ListOTAModuleVersionsByDeviceWithOptions(ListOTAModuleVersionsByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAModuleVersionsByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAModuleVersionsByDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleVersionsByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAModuleVersionsByDeviceResponse
         */
        public async Task<ListOTAModuleVersionsByDeviceResponse> ListOTAModuleVersionsByDeviceWithOptionsAsync(ListOTAModuleVersionsByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAModuleVersionsByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAModuleVersionsByDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleVersionsByDeviceRequest
          * @return ListOTAModuleVersionsByDeviceResponse
         */
        public ListOTAModuleVersionsByDeviceResponse ListOTAModuleVersionsByDevice(ListOTAModuleVersionsByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAModuleVersionsByDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAModuleVersionsByDeviceRequest
          * @return ListOTAModuleVersionsByDeviceResponse
         */
        public async Task<ListOTAModuleVersionsByDeviceResponse> ListOTAModuleVersionsByDeviceAsync(ListOTAModuleVersionsByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAModuleVersionsByDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ListOTATaskByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTATaskByJobResponse
         */
        public ListOTATaskByJobResponse ListOTATaskByJobWithOptions(ListOTATaskByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNames))
            {
                query["DeviceNames"] = request.DeviceNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTATaskByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTATaskByJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ListOTATaskByJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTATaskByJobResponse
         */
        public async Task<ListOTATaskByJobResponse> ListOTATaskByJobWithOptionsAsync(ListOTATaskByJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNames))
            {
                query["DeviceNames"] = request.DeviceNames;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTATaskByJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTATaskByJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ListOTATaskByJobRequest
          * @return ListOTATaskByJobResponse
         */
        public ListOTATaskByJobResponse ListOTATaskByJob(ListOTATaskByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTATaskByJobWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ListOTATaskByJobRequest
          * @return ListOTATaskByJobResponse
         */
        public async Task<ListOTATaskByJobResponse> ListOTATaskByJobAsync(ListOTATaskByJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTATaskByJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAUnfinishedTaskByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAUnfinishedTaskByDeviceResponse
         */
        public ListOTAUnfinishedTaskByDeviceResponse ListOTAUnfinishedTaskByDeviceWithOptions(ListOTAUnfinishedTaskByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAUnfinishedTaskByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAUnfinishedTaskByDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAUnfinishedTaskByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListOTAUnfinishedTaskByDeviceResponse
         */
        public async Task<ListOTAUnfinishedTaskByDeviceResponse> ListOTAUnfinishedTaskByDeviceWithOptionsAsync(ListOTAUnfinishedTaskByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskStatus))
            {
                query["TaskStatus"] = request.TaskStatus;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListOTAUnfinishedTaskByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListOTAUnfinishedTaskByDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAUnfinishedTaskByDeviceRequest
          * @return ListOTAUnfinishedTaskByDeviceResponse
         */
        public ListOTAUnfinishedTaskByDeviceResponse ListOTAUnfinishedTaskByDevice(ListOTAUnfinishedTaskByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListOTAUnfinishedTaskByDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListOTAUnfinishedTaskByDeviceRequest
          * @return ListOTAUnfinishedTaskByDeviceResponse
         */
        public async Task<ListOTAUnfinishedTaskByDeviceResponse> ListOTAUnfinishedTaskByDeviceAsync(ListOTAUnfinishedTaskByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListOTAUnfinishedTaskByDeviceWithOptionsAsync(request, runtime);
        }

        public ListParserResponse ListParserWithOptions(ListParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListParserResponse> ListParserWithOptionsAsync(ListParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListParserResponse ListParser(ListParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListParserWithOptions(request, runtime);
        }

        public async Task<ListParserResponse> ListParserAsync(ListParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListParserWithOptionsAsync(request, runtime);
        }

        public ListParserDataSourceResponse ListParserDataSourceWithOptions(ListParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListParserDataSourceResponse> ListParserDataSourceWithOptionsAsync(ListParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Page))
            {
                query["Page"] = request.Page;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SearchName))
            {
                query["SearchName"] = request.SearchName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListParserDataSourceResponse ListParserDataSource(ListParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListParserDataSourceWithOptions(request, runtime);
        }

        public async Task<ListParserDataSourceResponse> ListParserDataSourceAsync(ListParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListParserDataSourceWithOptionsAsync(request, runtime);
        }

        public ListParserDestinationResponse ListParserDestinationWithOptions(ListParserDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsFailover))
            {
                query["IsFailover"] = request.IsFailover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParserDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListParserDestinationResponse> ListParserDestinationWithOptionsAsync(ListParserDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsFailover))
            {
                query["IsFailover"] = request.IsFailover;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListParserDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListParserDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListParserDestinationResponse ListParserDestination(ListParserDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListParserDestinationWithOptions(request, runtime);
        }

        public async Task<ListParserDestinationResponse> ListParserDestinationAsync(ListParserDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListParserDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   You can specify a tag key or a tag key-value pair for search.
          * *   If you specify multiple tags, the logical relationship among these tags is **OR**.
          *
          * @param request ListProductByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListProductByTagsResponse
         */
        public ListProductByTagsResponse ListProductByTagsWithOptions(ListProductByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListProductByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListProductByTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   You can specify a tag key or a tag key-value pair for search.
          * *   If you specify multiple tags, the logical relationship among these tags is **OR**.
          *
          * @param request ListProductByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListProductByTagsResponse
         */
        public async Task<ListProductByTagsResponse> ListProductByTagsWithOptionsAsync(ListProductByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListProductByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListProductByTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   You can specify a tag key or a tag key-value pair for search.
          * *   If you specify multiple tags, the logical relationship among these tags is **OR**.
          *
          * @param request ListProductByTagsRequest
          * @return ListProductByTagsResponse
         */
        public ListProductByTagsResponse ListProductByTags(ListProductByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListProductByTagsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          * *   You can specify a tag key or a tag key-value pair for search.
          * *   If you specify multiple tags, the logical relationship among these tags is **OR**.
          *
          * @param request ListProductByTagsRequest
          * @return ListProductByTagsResponse
         */
        public async Task<ListProductByTagsResponse> ListProductByTagsAsync(ListProductByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListProductByTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListProductTagsResponse
         */
        public ListProductTagsResponse ListProductTagsWithOptions(ListProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListProductTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListProductTagsResponse
         */
        public async Task<ListProductTagsResponse> ListProductTagsWithOptionsAsync(ListProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListProductTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListProductTagsRequest
          * @return ListProductTagsResponse
         */
        public ListProductTagsResponse ListProductTags(ListProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListProductTagsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListProductTagsRequest
          * @return ListProductTagsResponse
         */
        public async Task<ListProductTagsResponse> ListProductTagsAsync(ListProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListProductTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 20 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListRuleResponse
         */
        public ListRuleResponse ListRuleWithOptions(ListRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 20 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListRuleResponse
         */
        public async Task<ListRuleResponse> ListRuleWithOptionsAsync(ListRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 20 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleRequest
          * @return ListRuleResponse
         */
        public ListRuleResponse ListRule(ListRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRuleWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 20 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleRequest
          * @return ListRuleResponse
         */
        public async Task<ListRuleResponse> ListRuleAsync(ListRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleActionsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListRuleActionsResponse
         */
        public ListRuleActionsResponse ListRuleActionsWithOptions(ListRuleActionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRuleActions",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleActionsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleActionsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListRuleActionsResponse
         */
        public async Task<ListRuleActionsResponse> ListRuleActionsWithOptionsAsync(ListRuleActionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListRuleActions",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListRuleActionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleActionsRequest
          * @return ListRuleActionsResponse
         */
        public ListRuleActionsResponse ListRuleActions(ListRuleActionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListRuleActionsWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListRuleActionsRequest
          * @return ListRuleActionsResponse
         */
        public async Task<ListRuleActionsResponse> ListRuleActionsAsync(ListRuleActionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListRuleActionsWithOptionsAsync(request, runtime);
        }

        public ListTaskResponse ListTaskWithOptions(ListTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListTaskShrinkRequest request = new ListTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Device))
            {
                request.DeviceShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Device, "Device", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceShrink))
            {
                query["Device"] = request.DeviceShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTaskResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ListTaskResponse> ListTaskWithOptionsAsync(ListTaskRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            ListTaskShrinkRequest request = new ListTaskShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.Device))
            {
                request.DeviceShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.Device, "Device", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceShrink))
            {
                query["Device"] = request.DeviceShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Limit))
            {
                query["Limit"] = request.Limit;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ListTaskResponse ListTask(ListTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListTaskWithOptions(request, runtime);
        }

        public async Task<ListTaskResponse> ListTaskAsync(ListTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListTaskWithOptionsAsync(request, runtime);
        }

        /**
          * You can manage TSL models by version. After you import a TSL model by calling the [ImportThingModelTsl](~~150320~~) operation, copy a TSL model by calling the [CopyThingModel](~~150322~~) operation, or edit a TSL model, you must publish the TSL model by calling the [PublishThingModel](~~150311~~) operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingModelVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListThingModelVersionResponse
         */
        public ListThingModelVersionResponse ListThingModelVersionWithOptions(ListThingModelVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListThingModelVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListThingModelVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can manage TSL models by version. After you import a TSL model by calling the [ImportThingModelTsl](~~150320~~) operation, copy a TSL model by calling the [CopyThingModel](~~150322~~) operation, or edit a TSL model, you must publish the TSL model by calling the [PublishThingModel](~~150311~~) operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingModelVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListThingModelVersionResponse
         */
        public async Task<ListThingModelVersionResponse> ListThingModelVersionWithOptionsAsync(ListThingModelVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListThingModelVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListThingModelVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can manage TSL models by version. After you import a TSL model by calling the [ImportThingModelTsl](~~150320~~) operation, copy a TSL model by calling the [CopyThingModel](~~150322~~) operation, or edit a TSL model, you must publish the TSL model by calling the [PublishThingModel](~~150311~~) operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingModelVersionRequest
          * @return ListThingModelVersionResponse
         */
        public ListThingModelVersionResponse ListThingModelVersion(ListThingModelVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListThingModelVersionWithOptions(request, runtime);
        }

        /**
          * You can manage TSL models by version. After you import a TSL model by calling the [ImportThingModelTsl](~~150320~~) operation, copy a TSL model by calling the [CopyThingModel](~~150322~~) operation, or edit a TSL model, you must publish the TSL model by calling the [PublishThingModel](~~150311~~) operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingModelVersionRequest
          * @return ListThingModelVersionResponse
         */
        public async Task<ListThingModelVersionResponse> ListThingModelVersionAsync(ListThingModelVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListThingModelVersionWithOptionsAsync(request, runtime);
        }

        /**
          * IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
          * When you call the [CreateProduct](~~69123~~) operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingTemplatesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListThingTemplatesResponse
         */
        public ListThingTemplatesResponse ListThingTemplatesWithOptions(ListThingTemplatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListThingTemplates",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListThingTemplatesResponse>(CallApi(params_, req, runtime));
        }

        /**
          * IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
          * When you call the [CreateProduct](~~69123~~) operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingTemplatesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ListThingTemplatesResponse
         */
        public async Task<ListThingTemplatesResponse> ListThingTemplatesWithOptionsAsync(ListThingTemplatesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ListThingTemplates",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ListThingTemplatesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
          * When you call the [CreateProduct](~~69123~~) operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingTemplatesRequest
          * @return ListThingTemplatesResponse
         */
        public ListThingTemplatesResponse ListThingTemplates(ListThingTemplatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ListThingTemplatesWithOptions(request, runtime);
        }

        /**
          * IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
          * When you call the [CreateProduct](~~69123~~) operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ListThingTemplatesRequest
          * @return ListThingTemplatesResponse
         */
        public async Task<ListThingTemplatesResponse> ListThingTemplatesAsync(ListThingTemplatesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ListThingTemplatesWithOptionsAsync(request, runtime);
        }

        public ModifyOTAFirmwareResponse ModifyOTAFirmwareWithOptions(ModifyOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareDesc))
            {
                query["FirmwareDesc"] = request.FirmwareDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareName))
            {
                query["FirmwareName"] = request.FirmwareName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareUdi))
            {
                query["FirmwareUdi"] = request.FirmwareUdi;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOTAFirmwareResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ModifyOTAFirmwareResponse> ModifyOTAFirmwareWithOptionsAsync(ModifyOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareDesc))
            {
                query["FirmwareDesc"] = request.FirmwareDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareName))
            {
                query["FirmwareName"] = request.FirmwareName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareUdi))
            {
                query["FirmwareUdi"] = request.FirmwareUdi;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ModifyOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ModifyOTAFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ModifyOTAFirmwareResponse ModifyOTAFirmware(ModifyOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ModifyOTAFirmwareWithOptions(request, runtime);
        }

        public async Task<ModifyOTAFirmwareResponse> ModifyOTAFirmwareAsync(ModifyOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ModifyOTAFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
          * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see [Manage topological relationships](~~89299~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request NotifyAddThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return NotifyAddThingTopoResponse
         */
        public NotifyAddThingTopoResponse NotifyAddThingTopoWithOptions(NotifyAddThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceListStr))
            {
                query["DeviceListStr"] = request.DeviceListStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwDeviceName))
            {
                query["GwDeviceName"] = request.GwDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwIotId))
            {
                query["GwIotId"] = request.GwIotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwProductKey))
            {
                query["GwProductKey"] = request.GwProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "NotifyAddThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<NotifyAddThingTopoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
          * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see [Manage topological relationships](~~89299~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request NotifyAddThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return NotifyAddThingTopoResponse
         */
        public async Task<NotifyAddThingTopoResponse> NotifyAddThingTopoWithOptionsAsync(NotifyAddThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceListStr))
            {
                query["DeviceListStr"] = request.DeviceListStr;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwDeviceName))
            {
                query["GwDeviceName"] = request.GwDeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwIotId))
            {
                query["GwIotId"] = request.GwIotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GwProductKey))
            {
                query["GwProductKey"] = request.GwProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "NotifyAddThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<NotifyAddThingTopoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
          * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see [Manage topological relationships](~~89299~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request NotifyAddThingTopoRequest
          * @return NotifyAddThingTopoResponse
         */
        public NotifyAddThingTopoResponse NotifyAddThingTopo(NotifyAddThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return NotifyAddThingTopoWithOptions(request, runtime);
        }

        /**
          * A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
          * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see [Manage topological relationships](~~89299~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request NotifyAddThingTopoRequest
          * @return NotifyAddThingTopoResponse
         */
        public async Task<NotifyAddThingTopoResponse> NotifyAddThingTopoAsync(NotifyAddThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await NotifyAddThingTopoWithOptionsAsync(request, runtime);
        }

        public OpenIotServiceResponse OpenIotServiceWithOptions(OpenIotServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenIotService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenIotServiceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<OpenIotServiceResponse> OpenIotServiceWithOptionsAsync(OpenIotServiceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OwnerId))
            {
                query["OwnerId"] = request.OwnerId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "OpenIotService",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<OpenIotServiceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public OpenIotServiceResponse OpenIotService(OpenIotServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return OpenIotServiceWithOptions(request, runtime);
        }

        public async Task<OpenIotServiceResponse> OpenIotServiceAsync(OpenIotServiceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await OpenIotServiceWithOptionsAsync(request, runtime);
        }

        public PackageSoundCodeLabelBatchAudioResponse PackageSoundCodeLabelBatchAudioWithOptions(PackageSoundCodeLabelBatchAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PackageSoundCodeLabelBatchAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PackageSoundCodeLabelBatchAudioResponse>(CallApi(params_, req, runtime));
        }

        public async Task<PackageSoundCodeLabelBatchAudioResponse> PackageSoundCodeLabelBatchAudioWithOptionsAsync(PackageSoundCodeLabelBatchAudioRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PackageSoundCodeLabelBatchAudio",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PackageSoundCodeLabelBatchAudioResponse>(await CallApiAsync(params_, req, runtime));
        }

        public PackageSoundCodeLabelBatchAudioResponse PackageSoundCodeLabelBatchAudio(PackageSoundCodeLabelBatchAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PackageSoundCodeLabelBatchAudioWithOptions(request, runtime);
        }

        public async Task<PackageSoundCodeLabelBatchAudioResponse> PackageSoundCodeLabelBatchAudioAsync(PackageSoundCodeLabelBatchAudioRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PackageSoundCodeLabelBatchAudioWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySharedSpeechOpenRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PageQuerySharedSpeechOpenResponse
         */
        public PageQuerySharedSpeechOpenResponse PageQuerySharedSpeechOpenWithOptions(PageQuerySharedSpeechOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageQuerySharedSpeechOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageQuerySharedSpeechOpenResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySharedSpeechOpenRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PageQuerySharedSpeechOpenResponse
         */
        public async Task<PageQuerySharedSpeechOpenResponse> PageQuerySharedSpeechOpenWithOptionsAsync(PageQuerySharedSpeechOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageQuerySharedSpeechOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageQuerySharedSpeechOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySharedSpeechOpenRequest
          * @return PageQuerySharedSpeechOpenResponse
         */
        public PageQuerySharedSpeechOpenResponse PageQuerySharedSpeechOpen(PageQuerySharedSpeechOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PageQuerySharedSpeechOpenWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySharedSpeechOpenRequest
          * @return PageQuerySharedSpeechOpenResponse
         */
        public async Task<PageQuerySharedSpeechOpenResponse> PageQuerySharedSpeechOpenAsync(PageQuerySharedSpeechOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PageQuerySharedSpeechOpenWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySpeechBroadcastHourRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PageQuerySpeechBroadcastHourResponse
         */
        public PageQuerySpeechBroadcastHourResponse PageQuerySpeechBroadcastHourWithOptions(PageQuerySpeechBroadcastHourRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryDateTimeHour))
            {
                query["QueryDateTimeHour"] = request.QueryDateTimeHour;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageToken))
            {
                body["PageToken"] = request.PageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageQuerySpeechBroadcastHour",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageQuerySpeechBroadcastHourResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySpeechBroadcastHourRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PageQuerySpeechBroadcastHourResponse
         */
        public async Task<PageQuerySpeechBroadcastHourResponse> PageQuerySpeechBroadcastHourWithOptionsAsync(PageQuerySpeechBroadcastHourRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.QueryDateTimeHour))
            {
                query["QueryDateTimeHour"] = request.QueryDateTimeHour;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageToken))
            {
                body["PageToken"] = request.PageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PageQuerySpeechBroadcastHour",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PageQuerySpeechBroadcastHourResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySpeechBroadcastHourRequest
          * @return PageQuerySpeechBroadcastHourResponse
         */
        public PageQuerySpeechBroadcastHourResponse PageQuerySpeechBroadcastHour(PageQuerySpeechBroadcastHourRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PageQuerySpeechBroadcastHourWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PageQuerySpeechBroadcastHourRequest
          * @return PageQuerySpeechBroadcastHourResponse
         */
        public async Task<PageQuerySpeechBroadcastHourResponse> PageQuerySpeechBroadcastHourAsync(PageQuerySpeechBroadcastHourRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PageQuerySpeechBroadcastHourWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PrintByTemplateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PrintByTemplateResponse
         */
        public PrintByTemplateResponse PrintByTemplateWithOptions(PrintByTemplateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HistoryPrintTopic))
            {
                body["HistoryPrintTopic"] = request.HistoryPrintTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParamsJsonString))
            {
                body["ParamsJsonString"] = request.ParamsJsonString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateBizCode))
            {
                body["TemplateBizCode"] = request.TemplateBizCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PrintByTemplate",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PrintByTemplateResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PrintByTemplateRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PrintByTemplateResponse
         */
        public async Task<PrintByTemplateResponse> PrintByTemplateWithOptionsAsync(PrintByTemplateRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.HistoryPrintTopic))
            {
                body["HistoryPrintTopic"] = request.HistoryPrintTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParamsJsonString))
            {
                body["ParamsJsonString"] = request.ParamsJsonString;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TemplateBizCode))
            {
                body["TemplateBizCode"] = request.TemplateBizCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PrintByTemplate",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PrintByTemplateResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PrintByTemplateRequest
          * @return PrintByTemplateResponse
         */
        public PrintByTemplateResponse PrintByTemplate(PrintByTemplateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PrintByTemplateWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PrintByTemplateRequest
          * @return PrintByTemplateResponse
         */
        public async Task<PrintByTemplateResponse> PrintByTemplateAsync(PrintByTemplateRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PrintByTemplateWithOptionsAsync(request, runtime);
        }

        /**
          * This operation does not support device property settings and service invocations.
          * *   To set properties, call the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation.
          * *   To invoke a service, call the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * ## QPS limit
          * You can call this API operation up to 1,600 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PubResponse
         */
        public PubResponse PubWithOptions(PubRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CorrelationData))
            {
                query["CorrelationData"] = request.CorrelationData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageExpiryInterval))
            {
                query["MessageExpiryInterval"] = request.MessageExpiryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PayloadFormatIndicator))
            {
                query["PayloadFormatIndicator"] = request.PayloadFormatIndicator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseTopic))
            {
                query["ResponseTopic"] = request.ResponseTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retained))
            {
                query["Retained"] = request.Retained;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicAlias))
            {
                query["TopicAlias"] = request.TopicAlias;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserProp))
            {
                query["UserProp"] = request.UserProp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                body["MessageContent"] = request.MessageContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "Pub",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PubResponse>(CallApi(params_, req, runtime));
        }

        /**
          * This operation does not support device property settings and service invocations.
          * *   To set properties, call the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation.
          * *   To invoke a service, call the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * ## QPS limit
          * You can call this API operation up to 1,600 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PubResponse
         */
        public async Task<PubResponse> PubWithOptionsAsync(PubRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CorrelationData))
            {
                query["CorrelationData"] = request.CorrelationData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageExpiryInterval))
            {
                query["MessageExpiryInterval"] = request.MessageExpiryInterval;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PayloadFormatIndicator))
            {
                query["PayloadFormatIndicator"] = request.PayloadFormatIndicator;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResponseTopic))
            {
                query["ResponseTopic"] = request.ResponseTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Retained))
            {
                query["Retained"] = request.Retained;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicAlias))
            {
                query["TopicAlias"] = request.TopicAlias;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserProp))
            {
                query["UserProp"] = request.UserProp;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                body["MessageContent"] = request.MessageContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "Pub",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PubResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * This operation does not support device property settings and service invocations.
          * *   To set properties, call the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation.
          * *   To invoke a service, call the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * ## QPS limit
          * You can call this API operation up to 1,600 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubRequest
          * @return PubResponse
         */
        public PubResponse Pub(PubRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PubWithOptions(request, runtime);
        }

        /**
          * This operation does not support device property settings and service invocations.
          * *   To set properties, call the [SetDeviceProperty](~~69579~~) or [SetDevicesProperty](~~96243~~) operation.
          * *   To invoke a service, call the [InvokeThingService](~~69584~~) or [InvokeThingsService](~~96242~~) operation.
          * ## QPS limit
          * You can call this API operation up to 1,600 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubRequest
          * @return PubResponse
         */
        public async Task<PubResponse> PubAsync(PubRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PubWithOptionsAsync(request, runtime);
        }

        /**
          * You can use the **TopicFullName** parameter in the **request** to specify the devices to which you want to broadcast messages. For more information, see the description about the **TopicFullName** parameter in this topic.
          * ## QPS limits
          * - Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.
          * - Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubBroadcastRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PubBroadcastResponse
         */
        public PubBroadcastResponse PubBroadcastWithOptions(PubBroadcastRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                query["MessageContent"] = request.MessageContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PubBroadcast",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PubBroadcastResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can use the **TopicFullName** parameter in the **request** to specify the devices to which you want to broadcast messages. For more information, see the description about the **TopicFullName** parameter in this topic.
          * ## QPS limits
          * - Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.
          * - Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubBroadcastRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PubBroadcastResponse
         */
        public async Task<PubBroadcastResponse> PubBroadcastWithOptionsAsync(PubBroadcastRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MessageContent))
            {
                query["MessageContent"] = request.MessageContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PubBroadcast",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PubBroadcastResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can use the **TopicFullName** parameter in the **request** to specify the devices to which you want to broadcast messages. For more information, see the description about the **TopicFullName** parameter in this topic.
          * ## QPS limits
          * - Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.
          * - Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubBroadcastRequest
          * @return PubBroadcastResponse
         */
        public PubBroadcastResponse PubBroadcast(PubBroadcastRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PubBroadcastWithOptions(request, runtime);
        }

        /**
          * You can use the **TopicFullName** parameter in the **request** to specify the devices to which you want to broadcast messages. For more information, see the description about the **TopicFullName** parameter in this topic.
          * ## QPS limits
          * - Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.
          * - Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PubBroadcastRequest
          * @return PubBroadcastResponse
         */
        public async Task<PubBroadcastResponse> PubBroadcastAsync(PubBroadcastRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PubBroadcastWithOptionsAsync(request, runtime);
        }

        public PublishScriptResponse PublishScriptWithOptions(PublishScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishScriptResponse>(CallApi(params_, req, runtime));
        }

        public async Task<PublishScriptResponse> PublishScriptWithOptionsAsync(PublishScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishScriptResponse>(await CallApiAsync(params_, req, runtime));
        }

        public PublishScriptResponse PublishScript(PublishScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishScriptWithOptions(request, runtime);
        }

        public async Task<PublishScriptResponse> PublishScriptAsync(PublishScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishScriptWithOptionsAsync(request, runtime);
        }

        public PublishStudioAppResponse PublishStudioAppWithOptions(PublishStudioAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishStudioApp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishStudioAppResponse>(CallApi(params_, req, runtime));
        }

        public async Task<PublishStudioAppResponse> PublishStudioAppWithOptionsAsync(PublishStudioAppRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishStudioApp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishStudioAppResponse>(await CallApiAsync(params_, req, runtime));
        }

        public PublishStudioAppResponse PublishStudioApp(PublishStudioAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishStudioAppWithOptions(request, runtime);
        }

        public async Task<PublishStudioAppResponse> PublishStudioAppAsync(PublishStudioAppRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishStudioAppWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PublishThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PublishThingModelResponse
         */
        public PublishThingModelResponse PublishThingModelWithOptions(PublishThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PublishThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return PublishThingModelResponse
         */
        public async Task<PublishThingModelResponse> PublishThingModelWithOptionsAsync(PublishThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PublishThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PublishThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PublishThingModelRequest
          * @return PublishThingModelResponse
         */
        public PublishThingModelResponse PublishThingModel(PublishThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PublishThingModelWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request PublishThingModelRequest
          * @return PublishThingModelResponse
         */
        public async Task<PublishThingModelResponse> PublishThingModelAsync(PublishThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PublishThingModelWithOptionsAsync(request, runtime);
        }

        public PushSpeechResponse PushSpeechWithOptions(PushSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PushMode))
            {
                body["PushMode"] = request.PushMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCodeList))
            {
                body["SpeechCodeList"] = request.SpeechCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PushSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PushSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<PushSpeechResponse> PushSpeechWithOptionsAsync(PushSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PushMode))
            {
                body["PushMode"] = request.PushMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCodeList))
            {
                body["SpeechCodeList"] = request.SpeechCodeList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "PushSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<PushSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public PushSpeechResponse PushSpeech(PushSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return PushSpeechWithOptions(request, runtime);
        }

        public async Task<PushSpeechResponse> PushSpeechAsync(PushSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await PushSpeechWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryBatchRegisterDeviceStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryBatchRegisterDeviceStatusResponse
         */
        public QueryBatchRegisterDeviceStatusResponse QueryBatchRegisterDeviceStatusWithOptions(QueryBatchRegisterDeviceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryBatchRegisterDeviceStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryBatchRegisterDeviceStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryBatchRegisterDeviceStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryBatchRegisterDeviceStatusResponse
         */
        public async Task<QueryBatchRegisterDeviceStatusResponse> QueryBatchRegisterDeviceStatusWithOptionsAsync(QueryBatchRegisterDeviceStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryBatchRegisterDeviceStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryBatchRegisterDeviceStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryBatchRegisterDeviceStatusRequest
          * @return QueryBatchRegisterDeviceStatusResponse
         */
        public QueryBatchRegisterDeviceStatusResponse QueryBatchRegisterDeviceStatus(QueryBatchRegisterDeviceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryBatchRegisterDeviceStatusWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryBatchRegisterDeviceStatusRequest
          * @return QueryBatchRegisterDeviceStatusResponse
         */
        public async Task<QueryBatchRegisterDeviceStatusResponse> QueryBatchRegisterDeviceStatusAsync(QueryBatchRegisterDeviceStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryBatchRegisterDeviceStatusWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryCertUrlByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryCertUrlByApplyIdResponse
         */
        public QueryCertUrlByApplyIdResponse QueryCertUrlByApplyIdWithOptions(QueryCertUrlByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryCertUrlByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryCertUrlByApplyIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryCertUrlByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryCertUrlByApplyIdResponse
         */
        public async Task<QueryCertUrlByApplyIdResponse> QueryCertUrlByApplyIdWithOptionsAsync(QueryCertUrlByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryCertUrlByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryCertUrlByApplyIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryCertUrlByApplyIdRequest
          * @return QueryCertUrlByApplyIdResponse
         */
        public QueryCertUrlByApplyIdResponse QueryCertUrlByApplyId(QueryCertUrlByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryCertUrlByApplyIdWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryCertUrlByApplyIdRequest
          * @return QueryCertUrlByApplyIdResponse
         */
        public async Task<QueryCertUrlByApplyIdResponse> QueryCertUrlByApplyIdAsync(QueryCertUrlByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryCertUrlByApplyIdWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryClientIdsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryClientIdsResponse
         */
        public QueryClientIdsResponse QueryClientIdsWithOptions(QueryClientIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryClientIds",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryClientIdsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryClientIdsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryClientIdsResponse
         */
        public async Task<QueryClientIdsResponse> QueryClientIdsWithOptionsAsync(QueryClientIdsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryClientIds",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryClientIdsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryClientIdsRequest
          * @return QueryClientIdsResponse
         */
        public QueryClientIdsResponse QueryClientIds(QueryClientIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryClientIdsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryClientIdsRequest
          * @return QueryClientIdsResponse
         */
        public async Task<QueryClientIdsResponse> QueryClientIdsAsync(QueryClientIdsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryClientIdsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupByGroupIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupByGroupIdResponse
         */
        public QueryConsumerGroupByGroupIdResponse QueryConsumerGroupByGroupIdWithOptions(QueryConsumerGroupByGroupIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupByGroupId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupByGroupIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupByGroupIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupByGroupIdResponse
         */
        public async Task<QueryConsumerGroupByGroupIdResponse> QueryConsumerGroupByGroupIdWithOptionsAsync(QueryConsumerGroupByGroupIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupByGroupId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupByGroupIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupByGroupIdRequest
          * @return QueryConsumerGroupByGroupIdResponse
         */
        public QueryConsumerGroupByGroupIdResponse QueryConsumerGroupByGroupId(QueryConsumerGroupByGroupIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryConsumerGroupByGroupIdWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupByGroupIdRequest
          * @return QueryConsumerGroupByGroupIdResponse
         */
        public async Task<QueryConsumerGroupByGroupIdResponse> QueryConsumerGroupByGroupIdAsync(QueryConsumerGroupByGroupIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryConsumerGroupByGroupIdWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupListResponse
         */
        public QueryConsumerGroupListResponse QueryConsumerGroupListWithOptions(QueryConsumerGroupListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Fuzzy))
            {
                query["Fuzzy"] = request.Fuzzy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubBizCode))
            {
                query["SubBizCode"] = request.SubBizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupListResponse
         */
        public async Task<QueryConsumerGroupListResponse> QueryConsumerGroupListWithOptionsAsync(QueryConsumerGroupListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Fuzzy))
            {
                query["Fuzzy"] = request.Fuzzy;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubBizCode))
            {
                query["SubBizCode"] = request.SubBizCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupListRequest
          * @return QueryConsumerGroupListResponse
         */
        public QueryConsumerGroupListResponse QueryConsumerGroupList(QueryConsumerGroupListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryConsumerGroupListWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupListRequest
          * @return QueryConsumerGroupListResponse
         */
        public async Task<QueryConsumerGroupListResponse> QueryConsumerGroupListAsync(QueryConsumerGroupListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryConsumerGroupListWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupStatusResponse
         */
        public QueryConsumerGroupStatusResponse QueryConsumerGroupStatusWithOptions(QueryConsumerGroupStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryConsumerGroupStatusResponse
         */
        public async Task<QueryConsumerGroupStatusResponse> QueryConsumerGroupStatusWithOptionsAsync(QueryConsumerGroupStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryConsumerGroupStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryConsumerGroupStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupStatusRequest
          * @return QueryConsumerGroupStatusResponse
         */
        public QueryConsumerGroupStatusResponse QueryConsumerGroupStatus(QueryConsumerGroupStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryConsumerGroupStatusWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryConsumerGroupStatusRequest
          * @return QueryConsumerGroupStatusResponse
         */
        public async Task<QueryConsumerGroupStatusResponse> QueryConsumerGroupStatusAsync(QueryConsumerGroupStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryConsumerGroupStatusWithOptionsAsync(request, runtime);
        }

        public QueryDetailSceneRuleLogResponse QueryDetailSceneRuleLogWithOptions(QueryDetailSceneRuleLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceId))
            {
                query["TraceId"] = request.TraceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDetailSceneRuleLog",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDetailSceneRuleLogResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDetailSceneRuleLogResponse> QueryDetailSceneRuleLogWithOptionsAsync(QueryDetailSceneRuleLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TraceId))
            {
                query["TraceId"] = request.TraceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDetailSceneRuleLog",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDetailSceneRuleLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDetailSceneRuleLogResponse QueryDetailSceneRuleLog(QueryDetailSceneRuleLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDetailSceneRuleLogWithOptions(request, runtime);
        }

        public async Task<QueryDetailSceneRuleLogResponse> QueryDetailSceneRuleLogAsync(QueryDetailSceneRuleLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDetailSceneRuleLogWithOptionsAsync(request, runtime);
        }

        /**
          * The QueryDevice operation can return up to one million devices each time you call the operation.
          * ## QPS limits
          * - You can call this API operation up to 50 times per second per account. >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * - If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
          * In this case, you can call this API operation up to two times per second per account.
          *
          * @param request QueryDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceResponse
         */
        public QueryDeviceResponse QueryDeviceWithOptions(QueryDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * The QueryDevice operation can return up to one million devices each time you call the operation.
          * ## QPS limits
          * - You can call this API operation up to 50 times per second per account. >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * - If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
          * In this case, you can call this API operation up to two times per second per account.
          *
          * @param request QueryDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceResponse
         */
        public async Task<QueryDeviceResponse> QueryDeviceWithOptionsAsync(QueryDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * The QueryDevice operation can return up to one million devices each time you call the operation.
          * ## QPS limits
          * - You can call this API operation up to 50 times per second per account. >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * - If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
          * In this case, you can call this API operation up to two times per second per account.
          *
          * @param request QueryDeviceRequest
          * @return QueryDeviceResponse
         */
        public QueryDeviceResponse QueryDevice(QueryDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceWithOptions(request, runtime);
        }

        /**
          * The QueryDevice operation can return up to one million devices each time you call the operation.
          * ## QPS limits
          * - You can call this API operation up to 50 times per second per account. >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * - If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
          * In this case, you can call this API operation up to two times per second per account.
          *
          * @param request QueryDeviceRequest
          * @return QueryDeviceResponse
         */
        public async Task<QueryDeviceResponse> QueryDeviceAsync(QueryDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.
          * *   The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the "`Syntax of LIMIT clauses`" section of this topic.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceBySQLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceBySQLResponse
         */
        public QueryDeviceBySQLResponse QueryDeviceBySQLWithOptions(QueryDeviceBySQLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SQL))
            {
                query["SQL"] = request.SQL;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceBySQL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceBySQLResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.
          * *   The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the "`Syntax of LIMIT clauses`" section of this topic.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceBySQLRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceBySQLResponse
         */
        public async Task<QueryDeviceBySQLResponse> QueryDeviceBySQLWithOptionsAsync(QueryDeviceBySQLRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SQL))
            {
                query["SQL"] = request.SQL;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceBySQL",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceBySQLResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.
          * *   The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the "`Syntax of LIMIT clauses`" section of this topic.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceBySQLRequest
          * @return QueryDeviceBySQLResponse
         */
        public QueryDeviceBySQLResponse QueryDeviceBySQL(QueryDeviceBySQLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceBySQLWithOptions(request, runtime);
        }

        /**
          * *   You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.
          * *   The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the "`Syntax of LIMIT clauses`" section of this topic.
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceBySQLRequest
          * @return QueryDeviceBySQLResponse
         */
        public async Task<QueryDeviceBySQLResponse> QueryDeviceBySQLAsync(QueryDeviceBySQLRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceBySQLWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceByStatusResponse
         */
        public QueryDeviceByStatusResponse QueryDeviceByStatusWithOptions(QueryDeviceByStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceByStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceByStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceByStatusResponse
         */
        public async Task<QueryDeviceByStatusResponse> QueryDeviceByStatusWithOptionsAsync(QueryDeviceByStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceByStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceByStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByStatusRequest
          * @return QueryDeviceByStatusResponse
         */
        public QueryDeviceByStatusResponse QueryDeviceByStatus(QueryDeviceByStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceByStatusWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByStatusRequest
          * @return QueryDeviceByStatusResponse
         */
        public async Task<QueryDeviceByStatusResponse> QueryDeviceByStatusAsync(QueryDeviceByStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceByStatusWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceByTagsResponse
         */
        public QueryDeviceByTagsResponse QueryDeviceByTagsWithOptions(QueryDeviceByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceByTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceByTagsResponse
         */
        public async Task<QueryDeviceByTagsResponse> QueryDeviceByTagsWithOptionsAsync(QueryDeviceByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceByTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByTagsRequest
          * @return QueryDeviceByTagsResponse
         */
        public QueryDeviceByTagsResponse QueryDeviceByTags(QueryDeviceByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceByTagsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can specify a maximum of 10 tags in a single call.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceByTagsRequest
          * @return QueryDeviceByTagsResponse
         */
        public async Task<QueryDeviceByTagsResponse> QueryDeviceByTagsAsync(QueryDeviceByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceByTagsWithOptionsAsync(request, runtime);
        }

        public QueryDeviceCertResponse QueryDeviceCertWithOptions(QueryDeviceCertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceCert",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceCertResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDeviceCertResponse> QueryDeviceCertWithOptionsAsync(QueryDeviceCertRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceCert",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceCertResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDeviceCertResponse QueryDeviceCert(QueryDeviceCertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceCertWithOptions(request, runtime);
        }

        public async Task<QueryDeviceCertResponse> QueryDeviceCertAsync(QueryDeviceCertRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceCertWithOptionsAsync(request, runtime);
        }

        /**
          * *   The desired values of read-only properties cannot be queried.
          * *   You can query the desired values of up to 10 properties in a single call.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDesiredPropertyResponse
         */
        public QueryDeviceDesiredPropertyResponse QueryDeviceDesiredPropertyWithOptions(QueryDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDesiredPropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   The desired values of read-only properties cannot be queried.
          * *   You can query the desired values of up to 10 properties in a single call.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDesiredPropertyResponse
         */
        public async Task<QueryDeviceDesiredPropertyResponse> QueryDeviceDesiredPropertyWithOptionsAsync(QueryDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDesiredPropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   The desired values of read-only properties cannot be queried.
          * *   You can query the desired values of up to 10 properties in a single call.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDesiredPropertyRequest
          * @return QueryDeviceDesiredPropertyResponse
         */
        public QueryDeviceDesiredPropertyResponse QueryDeviceDesiredProperty(QueryDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceDesiredPropertyWithOptions(request, runtime);
        }

        /**
          * *   The desired values of read-only properties cannot be queried.
          * *   You can query the desired values of up to 10 properties in a single call.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDesiredPropertyRequest
          * @return QueryDeviceDesiredPropertyResponse
         */
        public async Task<QueryDeviceDesiredPropertyResponse> QueryDeviceDesiredPropertyAsync(QueryDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceDesiredPropertyWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDetailResponse
         */
        public QueryDeviceDetailResponse QueryDeviceDetailWithOptions(QueryDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDetailResponse
         */
        public async Task<QueryDeviceDetailResponse> QueryDeviceDetailWithOptionsAsync(QueryDeviceDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDetailRequest
          * @return QueryDeviceDetailResponse
         */
        public QueryDeviceDetailResponse QueryDeviceDetail(QueryDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceDetailWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDetailRequest
          * @return QueryDeviceDetailResponse
         */
        public async Task<QueryDeviceDetailResponse> QueryDeviceDetailAsync(QueryDeviceDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceDetailWithOptionsAsync(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDistributeDetailResponse
         */
        public QueryDeviceDistributeDetailResponse QueryDeviceDistributeDetailWithOptions(QueryDeviceDistributeDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDistributeDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDistributeDetailResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeDetailRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDistributeDetailResponse
         */
        public async Task<QueryDeviceDistributeDetailResponse> QueryDeviceDistributeDetailWithOptionsAsync(QueryDeviceDistributeDetailRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDistributeDetail",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDistributeDetailResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeDetailRequest
          * @return QueryDeviceDistributeDetailResponse
         */
        public QueryDeviceDistributeDetailResponse QueryDeviceDistributeDetail(QueryDeviceDistributeDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceDistributeDetailWithOptions(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeDetailRequest
          * @return QueryDeviceDistributeDetailResponse
         */
        public async Task<QueryDeviceDistributeDetailResponse> QueryDeviceDistributeDetailAsync(QueryDeviceDistributeDetailRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceDistributeDetailWithOptionsAsync(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDistributeJobResponse
         */
        public QueryDeviceDistributeJobResponse QueryDeviceDistributeJobWithOptions(QueryDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDistributeJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceDistributeJobResponse
         */
        public async Task<QueryDeviceDistributeJobResponse> QueryDeviceDistributeJobWithOptionsAsync(QueryDeviceDistributeJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceDistributeJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceDistributeJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeJobRequest
          * @return QueryDeviceDistributeJobResponse
         */
        public QueryDeviceDistributeJobResponse QueryDeviceDistributeJob(QueryDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceDistributeJobWithOptions(request, runtime);
        }

        /**
          * *   This operation can be called only by using the following **endpoint**: `iot.cn-shanghai.aliyuncs.com`.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceDistributeJobRequest
          * @return QueryDeviceDistributeJobResponse
         */
        public async Task<QueryDeviceDistributeJobResponse> QueryDeviceDistributeJobAsync(QueryDeviceDistributeJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceDistributeJobWithOptionsAsync(request, runtime);
        }

        /**
          * You can query only the event records that are generated in the previous 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDeviceEventDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceEventDataResponse
         */
        public QueryDeviceEventDataResponse QueryDeviceEventDataWithOptions(QueryDeviceEventDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceEventData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceEventDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can query only the event records that are generated in the previous 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDeviceEventDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceEventDataResponse
         */
        public async Task<QueryDeviceEventDataResponse> QueryDeviceEventDataWithOptionsAsync(QueryDeviceEventDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EventType))
            {
                query["EventType"] = request.EventType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceEventData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceEventDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can query only the event records that are generated in the previous 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDeviceEventDataRequest
          * @return QueryDeviceEventDataResponse
         */
        public QueryDeviceEventDataResponse QueryDeviceEventData(QueryDeviceEventDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceEventDataWithOptions(request, runtime);
        }

        /**
          * You can query only the event records that are generated in the previous 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDeviceEventDataRequest
          * @return QueryDeviceEventDataResponse
         */
        public async Task<QueryDeviceEventDataResponse> QueryDeviceEventDataAsync(QueryDeviceEventDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceEventDataWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceFileResponse
         */
        public QueryDeviceFileResponse QueryDeviceFileWithOptions(QueryDeviceFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileId))
            {
                query["FileId"] = request.FileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceFileResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceFileResponse
         */
        public async Task<QueryDeviceFileResponse> QueryDeviceFileWithOptionsAsync(QueryDeviceFileRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FileId))
            {
                query["FileId"] = request.FileId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceFile",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceFileResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileRequest
          * @return QueryDeviceFileResponse
         */
        public QueryDeviceFileResponse QueryDeviceFile(QueryDeviceFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceFileWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileRequest
          * @return QueryDeviceFileResponse
         */
        public async Task<QueryDeviceFileResponse> QueryDeviceFileAsync(QueryDeviceFileRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceFileWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call [QueryDeviceFile](~~112002~~).
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceFileListResponse
         */
        public QueryDeviceFileListResponse QueryDeviceFileListWithOptions(QueryDeviceFileListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceFileList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceFileListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call [QueryDeviceFile](~~112002~~).
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceFileListResponse
         */
        public async Task<QueryDeviceFileListResponse> QueryDeviceFileListWithOptionsAsync(QueryDeviceFileListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceFileList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceFileListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call [QueryDeviceFile](~~112002~~).
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileListRequest
          * @return QueryDeviceFileListResponse
         */
        public QueryDeviceFileListResponse QueryDeviceFileList(QueryDeviceFileListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceFileListWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call [QueryDeviceFile](~~112002~~).
          * *   Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceFileListRequest
          * @return QueryDeviceFileListResponse
         */
        public async Task<QueryDeviceFileListResponse> QueryDeviceFileListAsync(QueryDeviceFileListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceFileListWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can add a device to a maximum of 10 groups.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupByDeviceResponse
         */
        public QueryDeviceGroupByDeviceResponse QueryDeviceGroupByDeviceWithOptions(QueryDeviceGroupByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupByDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can add a device to a maximum of 10 groups.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupByDeviceResponse
         */
        public async Task<QueryDeviceGroupByDeviceResponse> QueryDeviceGroupByDeviceWithOptionsAsync(QueryDeviceGroupByDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupByDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupByDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can add a device to a maximum of 10 groups.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByDeviceRequest
          * @return QueryDeviceGroupByDeviceResponse
         */
        public QueryDeviceGroupByDeviceResponse QueryDeviceGroupByDevice(QueryDeviceGroupByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceGroupByDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can add a device to a maximum of 10 groups.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByDeviceRequest
          * @return QueryDeviceGroupByDeviceResponse
         */
        public async Task<QueryDeviceGroupByDeviceResponse> QueryDeviceGroupByDeviceAsync(QueryDeviceGroupByDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceGroupByDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupByTagsResponse
         */
        public QueryDeviceGroupByTagsResponse QueryDeviceGroupByTagsWithOptions(QueryDeviceGroupByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupByTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupByTagsResponse
         */
        public async Task<QueryDeviceGroupByTagsResponse> QueryDeviceGroupByTagsWithOptionsAsync(QueryDeviceGroupByTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tag))
            {
                query["Tag"] = request.Tag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupByTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupByTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByTagsRequest
          * @return QueryDeviceGroupByTagsResponse
         */
        public QueryDeviceGroupByTagsResponse QueryDeviceGroupByTags(QueryDeviceGroupByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceGroupByTagsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupByTagsRequest
          * @return QueryDeviceGroupByTagsResponse
         */
        public async Task<QueryDeviceGroupByTagsResponse> QueryDeviceGroupByTagsAsync(QueryDeviceGroupByTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceGroupByTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupInfoResponse
         */
        public QueryDeviceGroupInfoResponse QueryDeviceGroupInfoWithOptions(QueryDeviceGroupInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupInfoResponse
         */
        public async Task<QueryDeviceGroupInfoResponse> QueryDeviceGroupInfoWithOptionsAsync(QueryDeviceGroupInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupInfoRequest
          * @return QueryDeviceGroupInfoResponse
         */
        public QueryDeviceGroupInfoResponse QueryDeviceGroupInfo(QueryDeviceGroupInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceGroupInfoWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupInfoRequest
          * @return QueryDeviceGroupInfoResponse
         */
        public async Task<QueryDeviceGroupInfoResponse> QueryDeviceGroupInfoAsync(QueryDeviceGroupInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceGroupInfoWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupListResponse
         */
        public QueryDeviceGroupListResponse QueryDeviceGroupListWithOptions(QueryDeviceGroupListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupTypes))
            {
                query["GroupTypes"] = request.GroupTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuperGroupId))
            {
                query["SuperGroupId"] = request.SuperGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupListResponse
         */
        public async Task<QueryDeviceGroupListResponse> QueryDeviceGroupListWithOptionsAsync(QueryDeviceGroupListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupName))
            {
                query["GroupName"] = request.GroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupTypes))
            {
                query["GroupTypes"] = request.GroupTypes;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SuperGroupId))
            {
                query["SuperGroupId"] = request.SuperGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupListRequest
          * @return QueryDeviceGroupListResponse
         */
        public QueryDeviceGroupListResponse QueryDeviceGroupList(QueryDeviceGroupListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceGroupListWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupListRequest
          * @return QueryDeviceGroupListResponse
         */
        public async Task<QueryDeviceGroupListResponse> QueryDeviceGroupListAsync(QueryDeviceGroupListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceGroupListWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupTagListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupTagListResponse
         */
        public QueryDeviceGroupTagListResponse QueryDeviceGroupTagListWithOptions(QueryDeviceGroupTagListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupTagList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupTagListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupTagListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceGroupTagListResponse
         */
        public async Task<QueryDeviceGroupTagListResponse> QueryDeviceGroupTagListWithOptionsAsync(QueryDeviceGroupTagListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceGroupTagList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceGroupTagListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupTagListRequest
          * @return QueryDeviceGroupTagListResponse
         */
        public QueryDeviceGroupTagListResponse QueryDeviceGroupTagList(QueryDeviceGroupTagListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceGroupTagListWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceGroupTagListRequest
          * @return QueryDeviceGroupTagListResponse
         */
        public async Task<QueryDeviceGroupTagListResponse> QueryDeviceGroupTagListAsync(QueryDeviceGroupTagListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceGroupTagListWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryDeviceInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceInfoResponse
         */
        public QueryDeviceInfoResponse QueryDeviceInfoWithOptions(QueryDeviceInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryDeviceInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceInfoResponse
         */
        public async Task<QueryDeviceInfoResponse> QueryDeviceInfoWithOptionsAsync(QueryDeviceInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryDeviceInfoRequest
          * @return QueryDeviceInfoResponse
         */
        public QueryDeviceInfoResponse QueryDeviceInfo(QueryDeviceInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceInfoWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryDeviceInfoRequest
          * @return QueryDeviceInfoResponse
         */
        public async Task<QueryDeviceInfoResponse> QueryDeviceInfoAsync(QueryDeviceInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceInfoWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceListByDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceListByDeviceGroupResponse
         */
        public QueryDeviceListByDeviceGroupResponse QueryDeviceListByDeviceGroupWithOptions(QueryDeviceListByDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceListByDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceListByDeviceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceListByDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceListByDeviceGroupResponse
         */
        public async Task<QueryDeviceListByDeviceGroupResponse> QueryDeviceListByDeviceGroupWithOptionsAsync(QueryDeviceListByDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceListByDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceListByDeviceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceListByDeviceGroupRequest
          * @return QueryDeviceListByDeviceGroupResponse
         */
        public QueryDeviceListByDeviceGroupResponse QueryDeviceListByDeviceGroup(QueryDeviceListByDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceListByDeviceGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceListByDeviceGroupRequest
          * @return QueryDeviceListByDeviceGroupResponse
         */
        public async Task<QueryDeviceListByDeviceGroupResponse> QueryDeviceListByDeviceGroupAsync(QueryDeviceListByDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceListByDeviceGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query only the event records that are generated in the last 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalEventDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalEventDataResponse
         */
        public QueryDeviceOriginalEventDataResponse QueryDeviceOriginalEventDataWithOptions(QueryDeviceOriginalEventDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalEventData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalEventDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query only the event records that are generated in the last 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalEventDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalEventDataResponse
         */
        public async Task<QueryDeviceOriginalEventDataResponse> QueryDeviceOriginalEventDataWithOptionsAsync(QueryDeviceOriginalEventDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalEventData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalEventDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query only the event records that are generated in the last 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalEventDataRequest
          * @return QueryDeviceOriginalEventDataResponse
         */
        public QueryDeviceOriginalEventDataResponse QueryDeviceOriginalEventData(QueryDeviceOriginalEventDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceOriginalEventDataWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query only the event records that are generated in the last 30 days.
          * >  The storage period of an event record is calculated from the day when the record is generated.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalEventDataRequest
          * @return QueryDeviceOriginalEventDataResponse
         */
        public async Task<QueryDeviceOriginalEventDataResponse> QueryDeviceOriginalEventDataAsync(QueryDeviceOriginalEventDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceOriginalEventDataWithOptionsAsync(request, runtime);
        }

        /**
          * You can query only the property records that are generated within the previous 30 days.
          * >  The data of a property is stored from the day when the data is generated.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalPropertyDataResponse
         */
        public QueryDeviceOriginalPropertyDataResponse QueryDeviceOriginalPropertyDataWithOptions(QueryDeviceOriginalPropertyDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalPropertyData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalPropertyDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can query only the property records that are generated within the previous 30 days.
          * >  The data of a property is stored from the day when the data is generated.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalPropertyDataResponse
         */
        public async Task<QueryDeviceOriginalPropertyDataResponse> QueryDeviceOriginalPropertyDataWithOptionsAsync(QueryDeviceOriginalPropertyDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalPropertyData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalPropertyDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can query only the property records that are generated within the previous 30 days.
          * >  The data of a property is stored from the day when the data is generated.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyDataRequest
          * @return QueryDeviceOriginalPropertyDataResponse
         */
        public QueryDeviceOriginalPropertyDataResponse QueryDeviceOriginalPropertyData(QueryDeviceOriginalPropertyDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceOriginalPropertyDataWithOptions(request, runtime);
        }

        /**
          * You can query only the property records that are generated within the previous 30 days.
          * >  The data of a property is stored from the day when the data is generated.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyDataRequest
          * @return QueryDeviceOriginalPropertyDataResponse
         */
        public async Task<QueryDeviceOriginalPropertyDataResponse> QueryDeviceOriginalPropertyDataAsync(QueryDeviceOriginalPropertyDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceOriginalPropertyDataWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalPropertyStatusResponse
         */
        public QueryDeviceOriginalPropertyStatusResponse QueryDeviceOriginalPropertyStatusWithOptions(QueryDeviceOriginalPropertyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalPropertyStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalPropertyStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalPropertyStatusResponse
         */
        public async Task<QueryDeviceOriginalPropertyStatusResponse> QueryDeviceOriginalPropertyStatusWithOptionsAsync(QueryDeviceOriginalPropertyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalPropertyStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalPropertyStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyStatusRequest
          * @return QueryDeviceOriginalPropertyStatusResponse
         */
        public QueryDeviceOriginalPropertyStatusResponse QueryDeviceOriginalPropertyStatus(QueryDeviceOriginalPropertyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceOriginalPropertyStatusWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalPropertyStatusRequest
          * @return QueryDeviceOriginalPropertyStatusResponse
         */
        public async Task<QueryDeviceOriginalPropertyStatusResponse> QueryDeviceOriginalPropertyStatusAsync(QueryDeviceOriginalPropertyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceOriginalPropertyStatusWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query only the service call records that are generated in the last 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalServiceDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalServiceDataResponse
         */
        public QueryDeviceOriginalServiceDataResponse QueryDeviceOriginalServiceDataWithOptions(QueryDeviceOriginalServiceDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalServiceData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalServiceDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query only the service call records that are generated in the last 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalServiceDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceOriginalServiceDataResponse
         */
        public async Task<QueryDeviceOriginalServiceDataResponse> QueryDeviceOriginalServiceDataWithOptionsAsync(QueryDeviceOriginalServiceDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceOriginalServiceData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceOriginalServiceDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You can query only the service call records that are generated in the last 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalServiceDataRequest
          * @return QueryDeviceOriginalServiceDataResponse
         */
        public QueryDeviceOriginalServiceDataResponse QueryDeviceOriginalServiceData(QueryDeviceOriginalServiceDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceOriginalServiceDataWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You can query only the service call records that are generated in the last 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceOriginalServiceDataRequest
          * @return QueryDeviceOriginalServiceDataResponse
         */
        public async Task<QueryDeviceOriginalServiceDataResponse> QueryDeviceOriginalServiceDataAsync(QueryDeviceOriginalServiceDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceOriginalServiceDataWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropResponse
         */
        public QueryDevicePropResponse QueryDevicePropWithOptions(QueryDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropResponse
         */
        public async Task<QueryDevicePropResponse> QueryDevicePropWithOptionsAsync(QueryDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropRequest
          * @return QueryDevicePropResponse
         */
        public QueryDevicePropResponse QueryDeviceProp(QueryDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicePropWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropRequest
          * @return QueryDevicePropResponse
         */
        public async Task<QueryDevicePropResponse> QueryDevicePropAsync(QueryDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicePropWithOptionsAsync(request, runtime);
        }

        /**
          * When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the **PageSize** parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: 
          * - If the value of the **NextValid** parameter is true, unretrieved records exist in the period that is indicated by the **NextTime** and **EndTime** parameter.  
          * You can use the value of the **NextTime** response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the **NextValid** parameter is false.  >  To retrieve all property records within a specified period, you can set the **PageSize** parameter to the maximum value. Then, call this operation multiple times until the value of the **NextValid** parameter is false.
          * - If the value of the **NextValid** parameter is false, all property records are returned.
          * ## Limits
          * *   A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.
          * *   You can query property data that is generated within the last 30 days.
          * > The storage period of a property record is calculated from the day when the property record was generated.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropertiesDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertiesDataResponse
         */
        public QueryDevicePropertiesDataResponse QueryDevicePropertiesDataWithOptions(QueryDevicePropertiesDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertiesData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertiesDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the **PageSize** parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: 
          * - If the value of the **NextValid** parameter is true, unretrieved records exist in the period that is indicated by the **NextTime** and **EndTime** parameter.  
          * You can use the value of the **NextTime** response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the **NextValid** parameter is false.  >  To retrieve all property records within a specified period, you can set the **PageSize** parameter to the maximum value. Then, call this operation multiple times until the value of the **NextValid** parameter is false.
          * - If the value of the **NextValid** parameter is false, all property records are returned.
          * ## Limits
          * *   A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.
          * *   You can query property data that is generated within the last 30 days.
          * > The storage period of a property record is calculated from the day when the property record was generated.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropertiesDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertiesDataResponse
         */
        public async Task<QueryDevicePropertiesDataResponse> QueryDevicePropertiesDataWithOptionsAsync(QueryDevicePropertiesDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertiesData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertiesDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the **PageSize** parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: 
          * - If the value of the **NextValid** parameter is true, unretrieved records exist in the period that is indicated by the **NextTime** and **EndTime** parameter.  
          * You can use the value of the **NextTime** response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the **NextValid** parameter is false.  >  To retrieve all property records within a specified period, you can set the **PageSize** parameter to the maximum value. Then, call this operation multiple times until the value of the **NextValid** parameter is false.
          * - If the value of the **NextValid** parameter is false, all property records are returned.
          * ## Limits
          * *   A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.
          * *   You can query property data that is generated within the last 30 days.
          * > The storage period of a property record is calculated from the day when the property record was generated.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropertiesDataRequest
          * @return QueryDevicePropertiesDataResponse
         */
        public QueryDevicePropertiesDataResponse QueryDevicePropertiesData(QueryDevicePropertiesDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicePropertiesDataWithOptions(request, runtime);
        }

        /**
          * When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the **PageSize** parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: 
          * - If the value of the **NextValid** parameter is true, unretrieved records exist in the period that is indicated by the **NextTime** and **EndTime** parameter.  
          * You can use the value of the **NextTime** response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the **NextValid** parameter is false.  >  To retrieve all property records within a specified period, you can set the **PageSize** parameter to the maximum value. Then, call this operation multiple times until the value of the **NextValid** parameter is false.
          * - If the value of the **NextValid** parameter is false, all property records are returned.
          * ## Limits
          * *   A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.
          * *   You can query property data that is generated within the last 30 days.
          * > The storage period of a property record is calculated from the day when the property record was generated.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDevicePropertiesDataRequest
          * @return QueryDevicePropertiesDataResponse
         */
        public async Task<QueryDevicePropertiesDataResponse> QueryDevicePropertiesDataAsync(QueryDevicePropertiesDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicePropertiesDataWithOptionsAsync(request, runtime);
        }

        /**
          * If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the **Identifier** parameter each time you call the operation. You can also call the [QueryDevicePropertiesData](~~99237~~) operation and specify multiple values for the **Identifier** parameter to query the data of the properties.
          * ## Limits
          * You can query only property data that is generated within the previous 30 days. 
          * >  The data of a property is stored from the day when the data is generated.
          *   
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertyDataResponse
         */
        public QueryDevicePropertyDataResponse QueryDevicePropertyDataWithOptions(QueryDevicePropertyDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertyData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertyDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the **Identifier** parameter each time you call the operation. You can also call the [QueryDevicePropertiesData](~~99237~~) operation and specify multiple values for the **Identifier** parameter to query the data of the properties.
          * ## Limits
          * You can query only property data that is generated within the previous 30 days. 
          * >  The data of a property is stored from the day when the data is generated.
          *   
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertyDataResponse
         */
        public async Task<QueryDevicePropertyDataResponse> QueryDevicePropertyDataWithOptionsAsync(QueryDevicePropertyDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertyData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertyDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the **Identifier** parameter each time you call the operation. You can also call the [QueryDevicePropertiesData](~~99237~~) operation and specify multiple values for the **Identifier** parameter to query the data of the properties.
          * ## Limits
          * You can query only property data that is generated within the previous 30 days. 
          * >  The data of a property is stored from the day when the data is generated.
          *   
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyDataRequest
          * @return QueryDevicePropertyDataResponse
         */
        public QueryDevicePropertyDataResponse QueryDevicePropertyData(QueryDevicePropertyDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicePropertyDataWithOptions(request, runtime);
        }

        /**
          * If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the **Identifier** parameter each time you call the operation. You can also call the [QueryDevicePropertiesData](~~99237~~) operation and specify multiple values for the **Identifier** parameter to query the data of the properties.
          * ## Limits
          * You can query only property data that is generated within the previous 30 days. 
          * >  The data of a property is stored from the day when the data is generated.
          *   
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyDataRequest
          * @return QueryDevicePropertyDataResponse
         */
        public async Task<QueryDevicePropertyDataResponse> QueryDevicePropertyDataAsync(QueryDevicePropertyDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicePropertyDataWithOptionsAsync(request, runtime);
        }

        /**
          * To query the property data of a digital twin node, you must set the **IotId** parameter to the ID of the digital twin node.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 200 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertyStatusResponse
         */
        public QueryDevicePropertyStatusResponse QueryDevicePropertyStatusWithOptions(QueryDevicePropertyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertyStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertyStatusResponse>(CallApi(params_, req, runtime));
        }

        /**
          * To query the property data of a digital twin node, you must set the **IotId** parameter to the ID of the digital twin node.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 200 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyStatusRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDevicePropertyStatusResponse
         */
        public async Task<QueryDevicePropertyStatusResponse> QueryDevicePropertyStatusWithOptionsAsync(QueryDevicePropertyStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicePropertyStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicePropertyStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * To query the property data of a digital twin node, you must set the **IotId** parameter to the ID of the digital twin node.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 200 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyStatusRequest
          * @return QueryDevicePropertyStatusResponse
         */
        public QueryDevicePropertyStatusResponse QueryDevicePropertyStatus(QueryDevicePropertyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicePropertyStatusWithOptions(request, runtime);
        }

        /**
          * To query the property data of a digital twin node, you must set the **IotId** parameter to the ID of the digital twin node.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 200 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryDevicePropertyStatusRequest
          * @return QueryDevicePropertyStatusResponse
         */
        public async Task<QueryDevicePropertyStatusResponse> QueryDevicePropertyStatusAsync(QueryDevicePropertyStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicePropertyStatusWithOptionsAsync(request, runtime);
        }

        public QueryDeviceProvisioningResponse QueryDeviceProvisioningWithOptions(QueryDeviceProvisioningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceProvisioning",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceProvisioningResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDeviceProvisioningResponse> QueryDeviceProvisioningWithOptionsAsync(QueryDeviceProvisioningRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceProvisioning",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceProvisioningResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDeviceProvisioningResponse QueryDeviceProvisioning(QueryDeviceProvisioningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceProvisioningWithOptions(request, runtime);
        }

        public async Task<QueryDeviceProvisioningResponse> QueryDeviceProvisioningAsync(QueryDeviceProvisioningRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceProvisioningWithOptionsAsync(request, runtime);
        }

        /**
          * You can query only the service call records of the previous 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceServiceDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceServiceDataResponse
         */
        public QueryDeviceServiceDataResponse QueryDeviceServiceDataWithOptions(QueryDeviceServiceDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceServiceData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceServiceDataResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can query only the service call records of the previous 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceServiceDataRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceServiceDataResponse
         */
        public async Task<QueryDeviceServiceDataResponse> QueryDeviceServiceDataWithOptionsAsync(QueryDeviceServiceDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceServiceData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceServiceDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can query only the service call records of the previous 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceServiceDataRequest
          * @return QueryDeviceServiceDataResponse
         */
        public QueryDeviceServiceDataResponse QueryDeviceServiceData(QueryDeviceServiceDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceServiceDataWithOptions(request, runtime);
        }

        /**
          * You can query only the service call records of the previous 30 days.
          * >  The storage period of a service call record is calculated from the day when the service is called.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceServiceDataRequest
          * @return QueryDeviceServiceDataResponse
         */
        public async Task<QueryDeviceServiceDataResponse> QueryDeviceServiceDataAsync(QueryDeviceServiceDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceServiceDataWithOptionsAsync(request, runtime);
        }

        public QueryDeviceSpeechResponse QueryDeviceSpeechWithOptions(QueryDeviceSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDeviceSpeechResponse> QueryDeviceSpeechWithOptionsAsync(QueryDeviceSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDeviceSpeechResponse QueryDeviceSpeech(QueryDeviceSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceSpeechWithOptions(request, runtime);
        }

        public async Task<QueryDeviceSpeechResponse> QueryDeviceSpeechAsync(QueryDeviceSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceSpeechWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceStatisticsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceStatisticsResponse
         */
        public QueryDeviceStatisticsResponse QueryDeviceStatisticsWithOptions(QueryDeviceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceStatisticsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceStatisticsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceStatisticsResponse
         */
        public async Task<QueryDeviceStatisticsResponse> QueryDeviceStatisticsWithOptionsAsync(QueryDeviceStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceStatisticsRequest
          * @return QueryDeviceStatisticsResponse
         */
        public QueryDeviceStatisticsResponse QueryDeviceStatistics(QueryDeviceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceStatisticsWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceStatisticsRequest
          * @return QueryDeviceStatisticsResponse
         */
        public async Task<QueryDeviceStatisticsResponse> QueryDeviceStatisticsAsync(QueryDeviceStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceStatisticsWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceSubTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceSubTopicResponse
         */
        public QueryDeviceSubTopicResponse QueryDeviceSubTopicWithOptions(QueryDeviceSubTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceSubTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceSubTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceSubTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDeviceSubTopicResponse
         */
        public async Task<QueryDeviceSubTopicResponse> QueryDeviceSubTopicWithOptionsAsync(QueryDeviceSubTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceSubTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceSubTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceSubTopicRequest
          * @return QueryDeviceSubTopicResponse
         */
        public QueryDeviceSubTopicResponse QueryDeviceSubTopic(QueryDeviceSubTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceSubTopicWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this operation up to 100 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDeviceSubTopicRequest
          * @return QueryDeviceSubTopicResponse
         */
        public async Task<QueryDeviceSubTopicResponse> QueryDeviceSubTopicAsync(QueryDeviceSubTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceSubTopicWithOptionsAsync(request, runtime);
        }

        public QueryDeviceTunnelResponse QueryDeviceTunnelWithOptions(QueryDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceTunnelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDeviceTunnelResponse> QueryDeviceTunnelWithOptionsAsync(QueryDeviceTunnelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TunnelId))
            {
                query["TunnelId"] = request.TunnelId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDeviceTunnel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDeviceTunnelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDeviceTunnelResponse QueryDeviceTunnel(QueryDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDeviceTunnelWithOptions(request, runtime);
        }

        public async Task<QueryDeviceTunnelResponse> QueryDeviceTunnelAsync(QueryDeviceTunnelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDeviceTunnelWithOptionsAsync(request, runtime);
        }

        public QueryDevicesHotStorageDataResponse QueryDevicesHotStorageDataWithOptions(QueryDevicesHotStorageDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicesHotStorageData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicesHotStorageDataResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDevicesHotStorageDataResponse> QueryDevicesHotStorageDataWithOptionsAsync(QueryDevicesHotStorageDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicesHotStorageData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicesHotStorageDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDevicesHotStorageDataResponse QueryDevicesHotStorageData(QueryDevicesHotStorageDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicesHotStorageDataWithOptions(request, runtime);
        }

        public async Task<QueryDevicesHotStorageDataResponse> QueryDevicesHotStorageDataAsync(QueryDevicesHotStorageDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicesHotStorageDataWithOptionsAsync(request, runtime);
        }

        public QueryDevicesHotStorageDataStatusResponse QueryDevicesHotStorageDataStatusWithOptions(QueryDevicesHotStorageDataStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicesHotStorageDataStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicesHotStorageDataStatusResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryDevicesHotStorageDataStatusResponse> QueryDevicesHotStorageDataStatusWithOptionsAsync(QueryDevicesHotStorageDataStatusRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Asc))
            {
                query["Asc"] = request.Asc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextPageToken))
            {
                query["NextPageToken"] = request.NextPageToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDevicesHotStorageDataStatus",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDevicesHotStorageDataStatusResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryDevicesHotStorageDataStatusResponse QueryDevicesHotStorageDataStatus(QueryDevicesHotStorageDataStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDevicesHotStorageDataStatusWithOptions(request, runtime);
        }

        public async Task<QueryDevicesHotStorageDataStatusResponse> QueryDevicesHotStorageDataStatusAsync(QueryDevicesHotStorageDataStatusRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDevicesHotStorageDataStatusWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see [Manage instances](~~147356~~).
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          *     **
          *     **Note**The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDynamicGroupDevicesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDynamicGroupDevicesResponse
         */
        public QueryDynamicGroupDevicesResponse QueryDynamicGroupDevicesWithOptions(QueryDynamicGroupDevicesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyName))
            {
                query["FuzzyName"] = request.FuzzyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDynamicGroupDevices",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDynamicGroupDevicesResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see [Manage instances](~~147356~~).
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          *     **
          *     **Note**The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDynamicGroupDevicesRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryDynamicGroupDevicesResponse
         */
        public async Task<QueryDynamicGroupDevicesResponse> QueryDynamicGroupDevicesWithOptionsAsync(QueryDynamicGroupDevicesRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyName))
            {
                query["FuzzyName"] = request.FuzzyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NextToken))
            {
                query["NextToken"] = request.NextToken;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryDynamicGroupDevices",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryDynamicGroupDevicesResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see [Manage instances](~~147356~~).
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          *     **
          *     **Note**The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDynamicGroupDevicesRequest
          * @return QueryDynamicGroupDevicesResponse
         */
        public QueryDynamicGroupDevicesResponse QueryDynamicGroupDevices(QueryDynamicGroupDevicesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryDynamicGroupDevicesWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see [Manage instances](~~147356~~).
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          *     **
          *     **Note**The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryDynamicGroupDevicesRequest
          * @return QueryDynamicGroupDevicesResponse
         */
        public async Task<QueryDynamicGroupDevicesResponse> QueryDynamicGroupDevicesAsync(QueryDynamicGroupDevicesRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryDynamicGroupDevicesWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request QueryEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeDriverResponse
         */
        public QueryEdgeDriverResponse QueryEdgeDriverWithOptions(QueryEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverName))
            {
                query["DriverName"] = request.DriverName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request QueryEdgeDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeDriverResponse
         */
        public async Task<QueryEdgeDriverResponse> QueryEdgeDriverWithOptionsAsync(QueryEdgeDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverName))
            {
                query["DriverName"] = request.DriverName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request QueryEdgeDriverRequest
          * @return QueryEdgeDriverResponse
         */
        public QueryEdgeDriverResponse QueryEdgeDriver(QueryEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeDriverWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users share the quota of the Alibaba Cloud account.
          *
          * @param request QueryEdgeDriverRequest
          * @return QueryEdgeDriverResponse
         */
        public async Task<QueryEdgeDriverResponse> QueryEdgeDriverAsync(QueryEdgeDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeDriverVersionResponse
         */
        public QueryEdgeDriverVersionResponse QueryEdgeDriverVersionWithOptions(QueryEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionState))
            {
                query["VersionState"] = request.VersionState;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeDriverVersionResponse
         */
        public async Task<QueryEdgeDriverVersionResponse> QueryEdgeDriverVersionWithOptionsAsync(QueryEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.VersionState))
            {
                query["VersionState"] = request.VersionState;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeDriverVersionRequest
          * @return QueryEdgeDriverVersionResponse
         */
        public QueryEdgeDriverVersionResponse QueryEdgeDriverVersion(QueryEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeDriverVersionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeDriverVersionRequest
          * @return QueryEdgeDriverVersionResponse
         */
        public async Task<QueryEdgeDriverVersionResponse> QueryEdgeDriverVersionAsync(QueryEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request QueryEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceResponse
         */
        public QueryEdgeInstanceResponse QueryEdgeInstanceWithOptions(QueryEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request QueryEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceResponse
         */
        public async Task<QueryEdgeInstanceResponse> QueryEdgeInstanceWithOptionsAsync(QueryEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request QueryEdgeInstanceRequest
          * @return QueryEdgeInstanceResponse
         */
        public QueryEdgeInstanceResponse QueryEdgeInstance(QueryEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see [Common parameters](~~30561~~).
          *
          * @param request QueryEdgeInstanceRequest
          * @return QueryEdgeInstanceResponse
         */
        public async Task<QueryEdgeInstanceResponse> QueryEdgeInstanceAsync(QueryEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public QueryEdgeInstanceChannelResponse QueryEdgeInstanceChannelWithOptions(QueryEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryEdgeInstanceChannelResponse> QueryEdgeInstanceChannelWithOptionsAsync(QueryEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryEdgeInstanceChannelResponse QueryEdgeInstanceChannel(QueryEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceChannelWithOptions(request, runtime);
        }

        public async Task<QueryEdgeInstanceChannelResponse> QueryEdgeInstanceChannelAsync(QueryEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceChannelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceDeviceResponse
         */
        public QueryEdgeInstanceDeviceResponse QueryEdgeInstanceDeviceWithOptions(QueryEdgeInstanceDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceDeviceResponse
         */
        public async Task<QueryEdgeInstanceDeviceResponse> QueryEdgeInstanceDeviceWithOptionsAsync(QueryEdgeInstanceDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDeviceRequest
          * @return QueryEdgeInstanceDeviceResponse
         */
        public QueryEdgeInstanceDeviceResponse QueryEdgeInstanceDevice(QueryEdgeInstanceDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceDeviceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDeviceRequest
          * @return QueryEdgeInstanceDeviceResponse
         */
        public async Task<QueryEdgeInstanceDeviceResponse> QueryEdgeInstanceDeviceAsync(QueryEdgeInstanceDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceDeviceWithOptionsAsync(request, runtime);
        }

        public QueryEdgeInstanceDeviceByDriverResponse QueryEdgeInstanceDeviceByDriverWithOptions(QueryEdgeInstanceDeviceByDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDeviceByDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDeviceByDriverResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryEdgeInstanceDeviceByDriverResponse> QueryEdgeInstanceDeviceByDriverWithOptionsAsync(QueryEdgeInstanceDeviceByDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDeviceByDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDeviceByDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryEdgeInstanceDeviceByDriverResponse QueryEdgeInstanceDeviceByDriver(QueryEdgeInstanceDeviceByDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceDeviceByDriverWithOptions(request, runtime);
        }

        public async Task<QueryEdgeInstanceDeviceByDriverResponse> QueryEdgeInstanceDeviceByDriverAsync(QueryEdgeInstanceDeviceByDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceDeviceByDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceDriverResponse
         */
        public QueryEdgeInstanceDriverResponse QueryEdgeInstanceDriverWithOptions(QueryEdgeInstanceDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDriverResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDriverRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceDriverResponse
         */
        public async Task<QueryEdgeInstanceDriverResponse> QueryEdgeInstanceDriverWithOptionsAsync(QueryEdgeInstanceDriverRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceDriver",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceDriverResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDriverRequest
          * @return QueryEdgeInstanceDriverResponse
         */
        public QueryEdgeInstanceDriverResponse QueryEdgeInstanceDriver(QueryEdgeInstanceDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceDriverWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceDriverRequest
          * @return QueryEdgeInstanceDriverResponse
         */
        public async Task<QueryEdgeInstanceDriverResponse> QueryEdgeInstanceDriverAsync(QueryEdgeInstanceDriverRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceDriverWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceGatewayRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceGatewayResponse
         */
        public QueryEdgeInstanceGatewayResponse QueryEdgeInstanceGatewayWithOptions(QueryEdgeInstanceGatewayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceGateway",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceGatewayResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceGatewayRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceGatewayResponse
         */
        public async Task<QueryEdgeInstanceGatewayResponse> QueryEdgeInstanceGatewayWithOptionsAsync(QueryEdgeInstanceGatewayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceGateway",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceGatewayResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceGatewayRequest
          * @return QueryEdgeInstanceGatewayResponse
         */
        public QueryEdgeInstanceGatewayResponse QueryEdgeInstanceGateway(QueryEdgeInstanceGatewayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceGatewayWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceGatewayRequest
          * @return QueryEdgeInstanceGatewayResponse
         */
        public async Task<QueryEdgeInstanceGatewayResponse> QueryEdgeInstanceGatewayAsync(QueryEdgeInstanceGatewayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceGatewayWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceHistoricDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceHistoricDeploymentResponse
         */
        public QueryEdgeInstanceHistoricDeploymentResponse QueryEdgeInstanceHistoricDeploymentWithOptions(QueryEdgeInstanceHistoricDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceHistoricDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceHistoricDeploymentResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceHistoricDeploymentRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryEdgeInstanceHistoricDeploymentResponse
         */
        public async Task<QueryEdgeInstanceHistoricDeploymentResponse> QueryEdgeInstanceHistoricDeploymentWithOptionsAsync(QueryEdgeInstanceHistoricDeploymentRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceHistoricDeployment",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceHistoricDeploymentResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceHistoricDeploymentRequest
          * @return QueryEdgeInstanceHistoricDeploymentResponse
         */
        public QueryEdgeInstanceHistoricDeploymentResponse QueryEdgeInstanceHistoricDeployment(QueryEdgeInstanceHistoricDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceHistoricDeploymentWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryEdgeInstanceHistoricDeploymentRequest
          * @return QueryEdgeInstanceHistoricDeploymentResponse
         */
        public async Task<QueryEdgeInstanceHistoricDeploymentResponse> QueryEdgeInstanceHistoricDeploymentAsync(QueryEdgeInstanceHistoricDeploymentRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceHistoricDeploymentWithOptionsAsync(request, runtime);
        }

        public QueryEdgeInstanceMessageRoutingResponse QueryEdgeInstanceMessageRoutingWithOptions(QueryEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceMessageRoutingResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryEdgeInstanceMessageRoutingResponse> QueryEdgeInstanceMessageRoutingWithOptionsAsync(QueryEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceMessageRoutingResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryEdgeInstanceMessageRoutingResponse QueryEdgeInstanceMessageRouting(QueryEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceMessageRoutingWithOptions(request, runtime);
        }

        public async Task<QueryEdgeInstanceMessageRoutingResponse> QueryEdgeInstanceMessageRoutingAsync(QueryEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceMessageRoutingWithOptionsAsync(request, runtime);
        }

        public QueryEdgeInstanceSceneRuleResponse QueryEdgeInstanceSceneRuleWithOptions(QueryEdgeInstanceSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryEdgeInstanceSceneRuleResponse> QueryEdgeInstanceSceneRuleWithOptionsAsync(QueryEdgeInstanceSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryEdgeInstanceSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryEdgeInstanceSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryEdgeInstanceSceneRuleResponse QueryEdgeInstanceSceneRule(QueryEdgeInstanceSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryEdgeInstanceSceneRuleWithOptions(request, runtime);
        }

        public async Task<QueryEdgeInstanceSceneRuleResponse> QueryEdgeInstanceSceneRuleAsync(QueryEdgeInstanceSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryEdgeInstanceSceneRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryImportedDeviceByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryImportedDeviceByApplyIdResponse
         */
        public QueryImportedDeviceByApplyIdResponse QueryImportedDeviceByApplyIdWithOptions(QueryImportedDeviceByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                query["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryImportedDeviceByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryImportedDeviceByApplyIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryImportedDeviceByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryImportedDeviceByApplyIdResponse
         */
        public async Task<QueryImportedDeviceByApplyIdResponse> QueryImportedDeviceByApplyIdWithOptionsAsync(QueryImportedDeviceByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                query["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryImportedDeviceByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryImportedDeviceByApplyIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryImportedDeviceByApplyIdRequest
          * @return QueryImportedDeviceByApplyIdResponse
         */
        public QueryImportedDeviceByApplyIdResponse QueryImportedDeviceByApplyId(QueryImportedDeviceByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryImportedDeviceByApplyIdWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryImportedDeviceByApplyIdRequest
          * @return QueryImportedDeviceByApplyIdResponse
         */
        public async Task<QueryImportedDeviceByApplyIdResponse> QueryImportedDeviceByApplyIdAsync(QueryImportedDeviceByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryImportedDeviceByApplyIdWithOptionsAsync(request, runtime);
        }

        public QueryJobResponse QueryJobWithOptions(QueryJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryJobResponse> QueryJobWithOptionsAsync(QueryJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryJobResponse QueryJob(QueryJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryJobWithOptions(request, runtime);
        }

        public async Task<QueryJobResponse> QueryJobAsync(QueryJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryJobWithOptionsAsync(request, runtime);
        }

        public QueryJobStatisticsResponse QueryJobStatisticsWithOptions(QueryJobStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJobStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJobStatisticsResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryJobStatisticsResponse> QueryJobStatisticsWithOptionsAsync(QueryJobStatisticsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, string> query = AlibabaCloud.OpenApiUtil.Client.Query(AlibabaCloud.TeaUtil.Common.ToMap(request));
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryJobStatistics",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "GET",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryJobStatisticsResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryJobStatisticsResponse QueryJobStatistics(QueryJobStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryJobStatisticsWithOptions(request, runtime);
        }

        public async Task<QueryJobStatisticsResponse> QueryJobStatisticsAsync(QueryJobStatisticsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryJobStatisticsWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryLicenseDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryLicenseDeviceListResponse
         */
        public QueryLicenseDeviceListResponse QueryLicenseDeviceListWithOptions(QueryLicenseDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryLicenseDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryLicenseDeviceListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryLicenseDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryLicenseDeviceListResponse
         */
        public async Task<QueryLicenseDeviceListResponse> QueryLicenseDeviceListWithOptionsAsync(QueryLicenseDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryLicenseDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryLicenseDeviceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryLicenseDeviceListRequest
          * @return QueryLicenseDeviceListResponse
         */
        public QueryLicenseDeviceListResponse QueryLicenseDeviceList(QueryLicenseDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryLicenseDeviceListWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryLicenseDeviceListRequest
          * @return QueryLicenseDeviceListResponse
         */
        public async Task<QueryLicenseDeviceListResponse> QueryLicenseDeviceListAsync(QueryLicenseDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryLicenseDeviceListWithOptionsAsync(request, runtime);
        }

        public QueryLoRaJoinPermissionsResponse QueryLoRaJoinPermissionsWithOptions(QueryLoRaJoinPermissionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryLoRaJoinPermissions",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryLoRaJoinPermissionsResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryLoRaJoinPermissionsResponse> QueryLoRaJoinPermissionsWithOptionsAsync(QueryLoRaJoinPermissionsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryLoRaJoinPermissions",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryLoRaJoinPermissionsResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryLoRaJoinPermissionsResponse QueryLoRaJoinPermissions(QueryLoRaJoinPermissionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryLoRaJoinPermissionsWithOptions(request, runtime);
        }

        public async Task<QueryLoRaJoinPermissionsResponse> QueryLoRaJoinPermissionsAsync(QueryLoRaJoinPermissionsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryLoRaJoinPermissionsWithOptionsAsync(request, runtime);
        }

        public QueryMessageInfoResponse QueryMessageInfoWithOptions(QueryMessageInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniMsgId))
            {
                query["UniMsgId"] = request.UniMsgId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryMessageInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryMessageInfoResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryMessageInfoResponse> QueryMessageInfoWithOptionsAsync(QueryMessageInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UniMsgId))
            {
                query["UniMsgId"] = request.UniMsgId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryMessageInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryMessageInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryMessageInfoResponse QueryMessageInfo(QueryMessageInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryMessageInfoWithOptions(request, runtime);
        }

        public async Task<QueryMessageInfoResponse> QueryMessageInfoAsync(QueryMessageInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryMessageInfoWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryOTAFirmwareResponse
         */
        public QueryOTAFirmwareResponse QueryOTAFirmwareWithOptions(QueryOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryOTAFirmwareResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAFirmwareRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryOTAFirmwareResponse
         */
        public async Task<QueryOTAFirmwareResponse> QueryOTAFirmwareWithOptionsAsync(QueryOTAFirmwareRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FirmwareId))
            {
                query["FirmwareId"] = request.FirmwareId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryOTAFirmware",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryOTAFirmwareResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAFirmwareRequest
          * @return QueryOTAFirmwareResponse
         */
        public QueryOTAFirmwareResponse QueryOTAFirmware(QueryOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryOTAFirmwareWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAFirmwareRequest
          * @return QueryOTAFirmwareResponse
         */
        public async Task<QueryOTAFirmwareResponse> QueryOTAFirmwareAsync(QueryOTAFirmwareRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryOTAFirmwareWithOptionsAsync(request, runtime);
        }

        /**
          * After you call the [CreateOTAVerifyJob](~~147480~~), [CreateOTAStaticUpgradeJob](~~147496~~), or [CreateOTADynamicUpgradeJob](~~147887~~) API operation to create an update batch, the **JobId** parameter is returned. You can use this parameter to query the details of the update batch.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryOTAJobResponse
         */
        public QueryOTAJobResponse QueryOTAJobWithOptions(QueryOTAJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryOTAJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryOTAJobResponse>(CallApi(params_, req, runtime));
        }

        /**
          * After you call the [CreateOTAVerifyJob](~~147480~~), [CreateOTAStaticUpgradeJob](~~147496~~), or [CreateOTADynamicUpgradeJob](~~147887~~) API operation to create an update batch, the **JobId** parameter is returned. You can use this parameter to query the details of the update batch.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAJobRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryOTAJobResponse
         */
        public async Task<QueryOTAJobResponse> QueryOTAJobWithOptionsAsync(QueryOTAJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryOTAJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryOTAJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * After you call the [CreateOTAVerifyJob](~~147480~~), [CreateOTAStaticUpgradeJob](~~147496~~), or [CreateOTADynamicUpgradeJob](~~147887~~) API operation to create an update batch, the **JobId** parameter is returned. You can use this parameter to query the details of the update batch.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAJobRequest
          * @return QueryOTAJobResponse
         */
        public QueryOTAJobResponse QueryOTAJob(QueryOTAJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryOTAJobWithOptions(request, runtime);
        }

        /**
          * After you call the [CreateOTAVerifyJob](~~147480~~), [CreateOTAStaticUpgradeJob](~~147496~~), or [CreateOTADynamicUpgradeJob](~~147887~~) API operation to create an update batch, the **JobId** parameter is returned. You can use this parameter to query the details of the update batch.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryOTAJobRequest
          * @return QueryOTAJobResponse
         */
        public async Task<QueryOTAJobResponse> QueryOTAJobAsync(QueryOTAJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryOTAJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryPageByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryPageByApplyIdResponse
         */
        public QueryPageByApplyIdResponse QueryPageByApplyIdWithOptions(QueryPageByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPageByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPageByApplyIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryPageByApplyIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryPageByApplyIdResponse
         */
        public async Task<QueryPageByApplyIdResponse> QueryPageByApplyIdWithOptionsAsync(QueryPageByApplyIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplyId))
            {
                query["ApplyId"] = request.ApplyId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryPageByApplyId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryPageByApplyIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryPageByApplyIdRequest
          * @return QueryPageByApplyIdResponse
         */
        public QueryPageByApplyIdResponse QueryPageByApplyId(QueryPageByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryPageByApplyIdWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryPageByApplyIdRequest
          * @return QueryPageByApplyIdResponse
         */
        public async Task<QueryPageByApplyIdResponse> QueryPageByApplyIdAsync(QueryPageByApplyIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryPageByApplyIdWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductResponse
         */
        public QueryProductResponse QueryProductWithOptions(QueryProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductResponse
         */
        public async Task<QueryProductResponse> QueryProductWithOptionsAsync(QueryProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductRequest
          * @return QueryProductResponse
         */
        public QueryProductResponse QueryProduct(QueryProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryProductWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductRequest
          * @return QueryProductResponse
         */
        public async Task<QueryProductResponse> QueryProductAsync(QueryProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryProductWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductCertInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductCertInfoResponse
         */
        public QueryProductCertInfoResponse QueryProductCertInfoWithOptions(QueryProductCertInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductCertInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductCertInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductCertInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductCertInfoResponse
         */
        public async Task<QueryProductCertInfoResponse> QueryProductCertInfoWithOptionsAsync(QueryProductCertInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductCertInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductCertInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductCertInfoRequest
          * @return QueryProductCertInfoResponse
         */
        public QueryProductCertInfoResponse QueryProductCertInfo(QueryProductCertInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryProductCertInfoWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductCertInfoRequest
          * @return QueryProductCertInfoResponse
         */
        public async Task<QueryProductCertInfoResponse> QueryProductCertInfoAsync(QueryProductCertInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryProductCertInfoWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * > The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * *   If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the QPS of this operation decreases.
          *     In this case, each Alibaba Cloud account can run up to 2 QPS.
          *
          * @param request QueryProductListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductListResponse
         */
        public QueryProductListResponse QueryProductListWithOptions(QueryProductListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunCommodityCode))
            {
                query["AliyunCommodityCode"] = request.AliyunCommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * > The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * *   If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the QPS of this operation decreases.
          *     In this case, each Alibaba Cloud account can run up to 2 QPS.
          *
          * @param request QueryProductListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductListResponse
         */
        public async Task<QueryProductListResponse> QueryProductListWithOptionsAsync(QueryProductListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliyunCommodityCode))
            {
                query["AliyunCommodityCode"] = request.AliyunCommodityCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * > The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * *   If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the QPS of this operation decreases.
          *     In this case, each Alibaba Cloud account can run up to 2 QPS.
          *
          * @param request QueryProductListRequest
          * @return QueryProductListResponse
         */
        public QueryProductListResponse QueryProductList(QueryProductListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryProductListWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * *   Each Alibaba Cloud account can run up to 50 queries per second (QPS).
          * > The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          * *   If the product of the value of the **CurrentPage** parameter and the value of the **PageSize** parameter is greater than or equal to 100,000, the QPS of this operation decreases.
          *     In this case, each Alibaba Cloud account can run up to 2 QPS.
          *
          * @param request QueryProductListRequest
          * @return QueryProductListResponse
         */
        public async Task<QueryProductListResponse> QueryProductListAsync(QueryProductListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryProductListWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductTopicResponse
         */
        public QueryProductTopicResponse QueryProductTopicWithOptions(QueryProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProductTopicResponse
         */
        public async Task<QueryProductTopicResponse> QueryProductTopicWithOptionsAsync(QueryProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProductTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductTopicRequest
          * @return QueryProductTopicResponse
         */
        public QueryProductTopicResponse QueryProductTopic(QueryProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryProductTopicWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProductTopicRequest
          * @return QueryProductTopicResponse
         */
        public async Task<QueryProductTopicResponse> QueryProductTopicAsync(QueryProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryProductTopicWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProjectShareDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProjectShareDeviceListResponse
         */
        public QueryProjectShareDeviceListResponse QueryProjectShareDeviceListWithOptions(QueryProjectShareDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProjectShareDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProjectShareDeviceListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProjectShareDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryProjectShareDeviceListResponse
         */
        public async Task<QueryProjectShareDeviceListResponse> QueryProjectShareDeviceListWithOptionsAsync(QueryProjectShareDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryProjectShareDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryProjectShareDeviceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProjectShareDeviceListRequest
          * @return QueryProjectShareDeviceListResponse
         */
        public QueryProjectShareDeviceListResponse QueryProjectShareDeviceList(QueryProjectShareDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryProjectShareDeviceListWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryProjectShareDeviceListRequest
          * @return QueryProjectShareDeviceListResponse
         */
        public async Task<QueryProjectShareDeviceListResponse> QueryProjectShareDeviceListAsync(QueryProjectShareDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryProjectShareDeviceListWithOptionsAsync(request, runtime);
        }

        public QuerySceneRuleResponse QuerySceneRuleWithOptions(QuerySceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySceneRuleResponse> QuerySceneRuleWithOptionsAsync(QuerySceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySceneRuleResponse QuerySceneRule(QuerySceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySceneRuleWithOptions(request, runtime);
        }

        public async Task<QuerySceneRuleResponse> QuerySceneRuleAsync(QuerySceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySceneRuleWithOptionsAsync(request, runtime);
        }

        public QuerySchedulePeriodListResponse QuerySchedulePeriodListWithOptions(QuerySchedulePeriodListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySchedulePeriodList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySchedulePeriodListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySchedulePeriodListResponse> QuerySchedulePeriodListWithOptionsAsync(QuerySchedulePeriodListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySchedulePeriodList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySchedulePeriodListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySchedulePeriodListResponse QuerySchedulePeriodList(QuerySchedulePeriodListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySchedulePeriodListWithOptions(request, runtime);
        }

        public async Task<QuerySchedulePeriodListResponse> QuerySchedulePeriodListAsync(QuerySchedulePeriodListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySchedulePeriodListWithOptionsAsync(request, runtime);
        }

        public QueryShareProductNameByProductKeyResponse QueryShareProductNameByProductKeyWithOptions(QueryShareProductNameByProductKeyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryShareProductNameByProductKey",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryShareProductNameByProductKeyResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryShareProductNameByProductKeyResponse> QueryShareProductNameByProductKeyWithOptionsAsync(QueryShareProductNameByProductKeyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryShareProductNameByProductKey",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryShareProductNameByProductKeyResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryShareProductNameByProductKeyResponse QueryShareProductNameByProductKey(QueryShareProductNameByProductKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryShareProductNameByProductKeyWithOptions(request, runtime);
        }

        public async Task<QueryShareProductNameByProductKeyResponse> QueryShareProductNameByProductKeyAsync(QueryShareProductNameByProductKeyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryShareProductNameByProductKeyWithOptionsAsync(request, runtime);
        }

        public QuerySharePromotionActivityAuditResultResponse QuerySharePromotionActivityAuditResultWithOptions(QuerySharePromotionActivityAuditResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySharePromotionActivityAuditResult",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySharePromotionActivityAuditResultResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySharePromotionActivityAuditResultResponse> QuerySharePromotionActivityAuditResultWithOptionsAsync(QuerySharePromotionActivityAuditResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SharePromotionActivityId))
            {
                body["SharePromotionActivityId"] = request.SharePromotionActivityId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskCode))
            {
                body["ShareTaskCode"] = request.ShareTaskCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySharePromotionActivityAuditResult",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySharePromotionActivityAuditResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySharePromotionActivityAuditResultResponse QuerySharePromotionActivityAuditResult(QuerySharePromotionActivityAuditResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySharePromotionActivityAuditResultWithOptions(request, runtime);
        }

        public async Task<QuerySharePromotionActivityAuditResultResponse> QuerySharePromotionActivityAuditResultAsync(QuerySharePromotionActivityAuditResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySharePromotionActivityAuditResultWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryShareTaskDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryShareTaskDeviceListResponse
         */
        public QueryShareTaskDeviceListResponse QueryShareTaskDeviceListWithOptions(QueryShareTaskDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryShareTaskDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryShareTaskDeviceListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryShareTaskDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryShareTaskDeviceListResponse
         */
        public async Task<QueryShareTaskDeviceListResponse> QueryShareTaskDeviceListWithOptionsAsync(QueryShareTaskDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShareTaskId))
            {
                body["ShareTaskId"] = request.ShareTaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryShareTaskDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryShareTaskDeviceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryShareTaskDeviceListRequest
          * @return QueryShareTaskDeviceListResponse
         */
        public QueryShareTaskDeviceListResponse QueryShareTaskDeviceList(QueryShareTaskDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryShareTaskDeviceListWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryShareTaskDeviceListRequest
          * @return QueryShareTaskDeviceListResponse
         */
        public async Task<QueryShareTaskDeviceListResponse> QueryShareTaskDeviceListAsync(QueryShareTaskDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryShareTaskDeviceListWithOptionsAsync(request, runtime);
        }

        public QuerySolutionDeviceGroupPageResponse QuerySolutionDeviceGroupPageWithOptions(QuerySolutionDeviceGroupPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyGroupName))
            {
                query["FuzzyGroupName"] = request.FuzzyGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                query["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySolutionDeviceGroupPage",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySolutionDeviceGroupPageResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySolutionDeviceGroupPageResponse> QuerySolutionDeviceGroupPageWithOptionsAsync(QuerySolutionDeviceGroupPageRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyGroupName))
            {
                query["FuzzyGroupName"] = request.FuzzyGroupName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                query["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySolutionDeviceGroupPage",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySolutionDeviceGroupPageResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySolutionDeviceGroupPageResponse QuerySolutionDeviceGroupPage(QuerySolutionDeviceGroupPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySolutionDeviceGroupPageWithOptions(request, runtime);
        }

        public async Task<QuerySolutionDeviceGroupPageResponse> QuerySolutionDeviceGroupPageAsync(QuerySolutionDeviceGroupPageRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySolutionDeviceGroupPageWithOptionsAsync(request, runtime);
        }

        public QuerySoundCodeLabelBatchFailedResultResponse QuerySoundCodeLabelBatchFailedResultWithOptions(QuerySoundCodeLabelBatchFailedResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelBatchFailedResult",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelBatchFailedResultResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySoundCodeLabelBatchFailedResultResponse> QuerySoundCodeLabelBatchFailedResultWithOptionsAsync(QuerySoundCodeLabelBatchFailedResultRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelBatchFailedResult",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelBatchFailedResultResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySoundCodeLabelBatchFailedResultResponse QuerySoundCodeLabelBatchFailedResult(QuerySoundCodeLabelBatchFailedResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySoundCodeLabelBatchFailedResultWithOptions(request, runtime);
        }

        public async Task<QuerySoundCodeLabelBatchFailedResultResponse> QuerySoundCodeLabelBatchFailedResultAsync(QuerySoundCodeLabelBatchFailedResultRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySoundCodeLabelBatchFailedResultWithOptionsAsync(request, runtime);
        }

        public QuerySoundCodeLabelBatchListResponse QuerySoundCodeLabelBatchListWithOptions(QuerySoundCodeLabelBatchListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelBatchList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelBatchListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySoundCodeLabelBatchListResponse> QuerySoundCodeLabelBatchListWithOptionsAsync(QuerySoundCodeLabelBatchListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelBatchList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelBatchListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySoundCodeLabelBatchListResponse QuerySoundCodeLabelBatchList(QuerySoundCodeLabelBatchListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySoundCodeLabelBatchListWithOptions(request, runtime);
        }

        public async Task<QuerySoundCodeLabelBatchListResponse> QuerySoundCodeLabelBatchListAsync(QuerySoundCodeLabelBatchListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySoundCodeLabelBatchListWithOptionsAsync(request, runtime);
        }

        public QuerySoundCodeLabelListResponse QuerySoundCodeLabelListWithOptions(QuerySoundCodeLabelListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySoundCodeLabelListResponse> QuerySoundCodeLabelListWithOptionsAsync(QuerySoundCodeLabelListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeLabelList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeLabelListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySoundCodeLabelListResponse QuerySoundCodeLabelList(QuerySoundCodeLabelListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySoundCodeLabelListWithOptions(request, runtime);
        }

        public async Task<QuerySoundCodeLabelListResponse> QuerySoundCodeLabelListAsync(QuerySoundCodeLabelListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySoundCodeLabelListWithOptionsAsync(request, runtime);
        }

        public QuerySoundCodeListResponse QuerySoundCodeListWithOptions(QuerySoundCodeListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySoundCodeListResponse> QuerySoundCodeListWithOptionsAsync(QuerySoundCodeListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySoundCodeListResponse QuerySoundCodeList(QuerySoundCodeListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySoundCodeListWithOptions(request, runtime);
        }

        public async Task<QuerySoundCodeListResponse> QuerySoundCodeListAsync(QuerySoundCodeListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySoundCodeListWithOptionsAsync(request, runtime);
        }

        public QuerySoundCodeScheduleListResponse QuerySoundCodeScheduleListWithOptions(QuerySoundCodeScheduleListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeScheduleList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeScheduleListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySoundCodeScheduleListResponse> QuerySoundCodeScheduleListWithOptionsAsync(QuerySoundCodeScheduleListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySoundCodeScheduleList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySoundCodeScheduleListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySoundCodeScheduleListResponse QuerySoundCodeScheduleList(QuerySoundCodeScheduleListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySoundCodeScheduleListWithOptions(request, runtime);
        }

        public async Task<QuerySoundCodeScheduleListResponse> QuerySoundCodeScheduleListAsync(QuerySoundCodeScheduleListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySoundCodeScheduleListWithOptionsAsync(request, runtime);
        }

        public QuerySpeechResponse QuerySpeechWithOptions(QuerySpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCode))
            {
                body["SpeechCode"] = request.SpeechCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechResponse> QuerySpeechWithOptionsAsync(QuerySpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCode))
            {
                body["SpeechCode"] = request.SpeechCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechResponse QuerySpeech(QuerySpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechWithOptions(request, runtime);
        }

        public async Task<QuerySpeechResponse> QuerySpeechAsync(QuerySpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechWithOptionsAsync(request, runtime);
        }

        public QuerySpeechDeviceResponse QuerySpeechDeviceWithOptions(QuerySpeechDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableSpace))
            {
                body["AvailableSpace"] = request.AvailableSpace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableSpaceScope))
            {
                body["AvailableSpaceScope"] = request.AvailableSpaceScope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechDeviceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechDeviceResponse> QuerySpeechDeviceWithOptionsAsync(QuerySpeechDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableSpace))
            {
                body["AvailableSpace"] = request.AvailableSpace;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AvailableSpaceScope))
            {
                body["AvailableSpaceScope"] = request.AvailableSpaceScope;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechDeviceResponse QuerySpeechDevice(QuerySpeechDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechDeviceWithOptions(request, runtime);
        }

        public async Task<QuerySpeechDeviceResponse> QuerySpeechDeviceAsync(QuerySpeechDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechDeviceWithOptionsAsync(request, runtime);
        }

        public QuerySpeechLicenseAvailableQuotaResponse QuerySpeechLicenseAvailableQuotaWithOptions(QuerySpeechLicenseAvailableQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechLicenseAvailableQuota",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechLicenseAvailableQuotaResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechLicenseAvailableQuotaResponse> QuerySpeechLicenseAvailableQuotaWithOptionsAsync(QuerySpeechLicenseAvailableQuotaRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechLicenseAvailableQuota",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechLicenseAvailableQuotaResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechLicenseAvailableQuotaResponse QuerySpeechLicenseAvailableQuota(QuerySpeechLicenseAvailableQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechLicenseAvailableQuotaWithOptions(request, runtime);
        }

        public async Task<QuerySpeechLicenseAvailableQuotaResponse> QuerySpeechLicenseAvailableQuotaAsync(QuerySpeechLicenseAvailableQuotaRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechLicenseAvailableQuotaWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySpeechLicenseDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySpeechLicenseDeviceListResponse
         */
        public QuerySpeechLicenseDeviceListResponse QuerySpeechLicenseDeviceListWithOptions(QuerySpeechLicenseDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                body["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseStatusList))
            {
                body["LicenseStatusList"] = request.LicenseStatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechLicenseDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechLicenseDeviceListResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySpeechLicenseDeviceListRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySpeechLicenseDeviceListResponse
         */
        public async Task<QuerySpeechLicenseDeviceListResponse> QuerySpeechLicenseDeviceListWithOptionsAsync(QuerySpeechLicenseDeviceListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                query["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CheckGroupId))
            {
                body["CheckGroupId"] = request.CheckGroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseStatusList))
            {
                body["LicenseStatusList"] = request.LicenseStatusList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechLicenseDeviceList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechLicenseDeviceListResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySpeechLicenseDeviceListRequest
          * @return QuerySpeechLicenseDeviceListResponse
         */
        public QuerySpeechLicenseDeviceListResponse QuerySpeechLicenseDeviceList(QuerySpeechLicenseDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechLicenseDeviceListWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to three times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySpeechLicenseDeviceListRequest
          * @return QuerySpeechLicenseDeviceListResponse
         */
        public async Task<QuerySpeechLicenseDeviceListResponse> QuerySpeechLicenseDeviceListAsync(QuerySpeechLicenseDeviceListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechLicenseDeviceListWithOptionsAsync(request, runtime);
        }

        public QuerySpeechListResponse QuerySpeechListWithOptions(QuerySpeechListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechListResponse> QuerySpeechListWithOptionsAsync(QuerySpeechListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechListResponse QuerySpeechList(QuerySpeechListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechListWithOptions(request, runtime);
        }

        public async Task<QuerySpeechListResponse> QuerySpeechListAsync(QuerySpeechListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechListWithOptionsAsync(request, runtime);
        }

        public QuerySpeechPushJobResponse QuerySpeechPushJobWithOptions(QuerySpeechPushJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                query["JobCode"] = request.JobCode;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PushMode))
            {
                body["PushMode"] = request.PushMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                body["StatusList"] = request.StatusList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechPushJobResponse> QuerySpeechPushJobWithOptionsAsync(QuerySpeechPushJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                query["JobCode"] = request.JobCode;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PushMode))
            {
                body["PushMode"] = request.PushMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StatusList))
            {
                body["StatusList"] = request.StatusList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechPushJobResponse QuerySpeechPushJob(QuerySpeechPushJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechPushJobWithOptions(request, runtime);
        }

        public async Task<QuerySpeechPushJobResponse> QuerySpeechPushJobAsync(QuerySpeechPushJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechPushJobWithOptionsAsync(request, runtime);
        }

        public QuerySpeechPushJobDeviceResponse QuerySpeechPushJobDeviceWithOptions(QuerySpeechPushJobDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                body["JobCode"] = request.JobCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJobDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobDeviceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechPushJobDeviceResponse> QuerySpeechPushJobDeviceWithOptionsAsync(QuerySpeechPushJobDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                body["JobCode"] = request.JobCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJobDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechPushJobDeviceResponse QuerySpeechPushJobDevice(QuerySpeechPushJobDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechPushJobDeviceWithOptions(request, runtime);
        }

        public async Task<QuerySpeechPushJobDeviceResponse> QuerySpeechPushJobDeviceAsync(QuerySpeechPushJobDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechPushJobDeviceWithOptionsAsync(request, runtime);
        }

        public QuerySpeechPushJobSpeechResponse QuerySpeechPushJobSpeechWithOptions(QuerySpeechPushJobSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                body["JobCode"] = request.JobCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJobSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySpeechPushJobSpeechResponse> QuerySpeechPushJobSpeechWithOptionsAsync(QuerySpeechPushJobSpeechRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobCode))
            {
                body["JobCode"] = request.JobCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageId))
            {
                body["PageId"] = request.PageId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySpeechPushJobSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySpeechPushJobSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySpeechPushJobSpeechResponse QuerySpeechPushJobSpeech(QuerySpeechPushJobSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySpeechPushJobSpeechWithOptions(request, runtime);
        }

        public async Task<QuerySpeechPushJobSpeechResponse> QuerySpeechPushJobSpeechAsync(QuerySpeechPushJobSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySpeechPushJobSpeechWithOptionsAsync(request, runtime);
        }

        public QueryStudioAppDomainListOpenResponse QueryStudioAppDomainListOpenWithOptions(QueryStudioAppDomainListOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppDomainListOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppDomainListOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryStudioAppDomainListOpenResponse> QueryStudioAppDomainListOpenWithOptionsAsync(QueryStudioAppDomainListOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppDomainListOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppDomainListOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryStudioAppDomainListOpenResponse QueryStudioAppDomainListOpen(QueryStudioAppDomainListOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryStudioAppDomainListOpenWithOptions(request, runtime);
        }

        public async Task<QueryStudioAppDomainListOpenResponse> QueryStudioAppDomainListOpenAsync(QueryStudioAppDomainListOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryStudioAppDomainListOpenWithOptionsAsync(request, runtime);
        }

        public QueryStudioAppListResponse QueryStudioAppListWithOptions(QueryStudioAppListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyName))
            {
                body["FuzzyName"] = request.FuzzyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                body["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryStudioAppListResponse> QueryStudioAppListWithOptionsAsync(QueryStudioAppListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FuzzyName))
            {
                body["FuzzyName"] = request.FuzzyName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Types))
            {
                body["Types"] = request.Types;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryStudioAppListResponse QueryStudioAppList(QueryStudioAppListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryStudioAppListWithOptions(request, runtime);
        }

        public async Task<QueryStudioAppListResponse> QueryStudioAppListAsync(QueryStudioAppListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryStudioAppListWithOptionsAsync(request, runtime);
        }

        public QueryStudioAppPageListOpenResponse QueryStudioAppPageListOpenWithOptions(QueryStudioAppPageListOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsRelease))
            {
                body["IsRelease"] = request.IsRelease;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppPageListOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppPageListOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryStudioAppPageListOpenResponse> QueryStudioAppPageListOpenWithOptionsAsync(QueryStudioAppPageListOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IsRelease))
            {
                body["IsRelease"] = request.IsRelease;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioAppPageListOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioAppPageListOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryStudioAppPageListOpenResponse QueryStudioAppPageListOpen(QueryStudioAppPageListOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryStudioAppPageListOpenWithOptions(request, runtime);
        }

        public async Task<QueryStudioAppPageListOpenResponse> QueryStudioAppPageListOpenAsync(QueryStudioAppPageListOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryStudioAppPageListOpenWithOptionsAsync(request, runtime);
        }

        public QueryStudioProjectListResponse QueryStudioProjectListWithOptions(QueryStudioProjectListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioProjectList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioProjectListResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryStudioProjectListResponse> QueryStudioProjectListWithOptionsAsync(QueryStudioProjectListRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageNo))
            {
                body["PageNo"] = request.PageNo;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                body["PageSize"] = request.PageSize;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryStudioProjectList",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryStudioProjectListResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryStudioProjectListResponse QueryStudioProjectList(QueryStudioProjectListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryStudioProjectListWithOptions(request, runtime);
        }

        public async Task<QueryStudioProjectListResponse> QueryStudioProjectListAsync(QueryStudioProjectListRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryStudioProjectListWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySubscribeRelationResponse
         */
        public QuerySubscribeRelationResponse QuerySubscribeRelationWithOptions(QuerySubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySubscribeRelationResponse
         */
        public async Task<QuerySubscribeRelationResponse> QuerySubscribeRelationWithOptionsAsync(QuerySubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySubscribeRelationRequest
          * @return QuerySubscribeRelationResponse
         */
        public QuerySubscribeRelationResponse QuerySubscribeRelation(QuerySubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySubscribeRelationWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySubscribeRelationRequest
          * @return QuerySubscribeRelationResponse
         */
        public async Task<QuerySubscribeRelationResponse> QuerySubscribeRelationAsync(QuerySubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySubscribeRelationWithOptionsAsync(request, runtime);
        }

        public QuerySummarySceneRuleLogResponse QuerySummarySceneRuleLogWithOptions(QuerySummarySceneRuleLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySummarySceneRuleLog",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySummarySceneRuleLogResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QuerySummarySceneRuleLogResponse> QuerySummarySceneRuleLogWithOptionsAsync(QuerySummarySceneRuleLogRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentPage))
            {
                query["CurrentPage"] = request.CurrentPage;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                query["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PageSize))
            {
                query["PageSize"] = request.PageSize;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                query["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                query["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySummarySceneRuleLog",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySummarySceneRuleLogResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QuerySummarySceneRuleLogResponse QuerySummarySceneRuleLog(QuerySummarySceneRuleLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySummarySceneRuleLogWithOptions(request, runtime);
        }

        public async Task<QuerySummarySceneRuleLogResponse> QuerySummarySceneRuleLogAsync(QuerySummarySceneRuleLogRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySummarySceneRuleLogWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySuperDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySuperDeviceGroupResponse
         */
        public QuerySuperDeviceGroupResponse QuerySuperDeviceGroupWithOptions(QuerySuperDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySuperDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySuperDeviceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySuperDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QuerySuperDeviceGroupResponse
         */
        public async Task<QuerySuperDeviceGroupResponse> QuerySuperDeviceGroupWithOptionsAsync(QuerySuperDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QuerySuperDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QuerySuperDeviceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySuperDeviceGroupRequest
          * @return QuerySuperDeviceGroupResponse
         */
        public QuerySuperDeviceGroupResponse QuerySuperDeviceGroup(QuerySuperDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QuerySuperDeviceGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QuerySuperDeviceGroupRequest
          * @return QuerySuperDeviceGroupResponse
         */
        public async Task<QuerySuperDeviceGroupResponse> QuerySuperDeviceGroupAsync(QuerySuperDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QuerySuperDeviceGroupWithOptionsAsync(request, runtime);
        }

        public QueryTaskResponse QueryTaskWithOptions(QueryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTaskResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryTaskResponse> QueryTaskWithOptionsAsync(QueryTaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryTaskResponse QueryTask(QueryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryTaskWithOptions(request, runtime);
        }

        public async Task<QueryTaskResponse> QueryTaskAsync(QueryTaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryTaskWithOptionsAsync(request, runtime);
        }

        /**
          * TSL features include properties, services, and events.
          * If you add custom modules to a TSL model and the value of the **FunctionBlockId** parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
          * For more information about the data format of the **ThingModelJson** parameter, see [Data structure of ThingModelJson](~~150457~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelResponse
         */
        public QueryThingModelResponse QueryThingModelWithOptions(QueryThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * TSL features include properties, services, and events.
          * If you add custom modules to a TSL model and the value of the **FunctionBlockId** parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
          * For more information about the data format of the **ThingModelJson** parameter, see [Data structure of ThingModelJson](~~150457~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelResponse
         */
        public async Task<QueryThingModelResponse> QueryThingModelWithOptionsAsync(QueryThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * TSL features include properties, services, and events.
          * If you add custom modules to a TSL model and the value of the **FunctionBlockId** parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
          * For more information about the data format of the **ThingModelJson** parameter, see [Data structure of ThingModelJson](~~150457~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelRequest
          * @return QueryThingModelResponse
         */
        public QueryThingModelResponse QueryThingModel(QueryThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryThingModelWithOptions(request, runtime);
        }

        /**
          * TSL features include properties, services, and events.
          * If you add custom modules to a TSL model and the value of the **FunctionBlockId** parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
          * For more information about the data format of the **ThingModelJson** parameter, see [Data structure of ThingModelJson](~~150457~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelRequest
          * @return QueryThingModelResponse
         */
        public async Task<QueryThingModelResponse> QueryThingModelAsync(QueryThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryThingModelWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelExtendConfigResponse
         */
        public QueryThingModelExtendConfigResponse QueryThingModelExtendConfigWithOptions(QueryThingModelExtendConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelExtendConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelExtendConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelExtendConfigResponse
         */
        public async Task<QueryThingModelExtendConfigResponse> QueryThingModelExtendConfigWithOptionsAsync(QueryThingModelExtendConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelExtendConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelExtendConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigRequest
          * @return QueryThingModelExtendConfigResponse
         */
        public QueryThingModelExtendConfigResponse QueryThingModelExtendConfig(QueryThingModelExtendConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryThingModelExtendConfigWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigRequest
          * @return QueryThingModelExtendConfigResponse
         */
        public async Task<QueryThingModelExtendConfigResponse> QueryThingModelExtendConfigAsync(QueryThingModelExtendConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryThingModelExtendConfigWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelExtendConfigPublishedResponse
         */
        public QueryThingModelExtendConfigPublishedResponse QueryThingModelExtendConfigPublishedWithOptions(QueryThingModelExtendConfigPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelExtendConfigPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelExtendConfigPublishedResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelExtendConfigPublishedResponse
         */
        public async Task<QueryThingModelExtendConfigPublishedResponse> QueryThingModelExtendConfigPublishedWithOptionsAsync(QueryThingModelExtendConfigPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelExtendConfigPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelExtendConfigPublishedResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigPublishedRequest
          * @return QueryThingModelExtendConfigPublishedResponse
         */
        public QueryThingModelExtendConfigPublishedResponse QueryThingModelExtendConfigPublished(QueryThingModelExtendConfigPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryThingModelExtendConfigPublishedWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelExtendConfigPublishedRequest
          * @return QueryThingModelExtendConfigPublishedResponse
         */
        public async Task<QueryThingModelExtendConfigPublishedResponse> QueryThingModelExtendConfigPublishedAsync(QueryThingModelExtendConfigPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryThingModelExtendConfigPublishedWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelPublishedResponse
         */
        public QueryThingModelPublishedResponse QueryThingModelPublishedWithOptions(QueryThingModelPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelPublishedResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelPublishedRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryThingModelPublishedResponse
         */
        public async Task<QueryThingModelPublishedResponse> QueryThingModelPublishedWithOptionsAsync(QueryThingModelPublishedRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModelVersion))
            {
                query["ModelVersion"] = request.ModelVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ResourceGroupId))
            {
                query["ResourceGroupId"] = request.ResourceGroupId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryThingModelPublished",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryThingModelPublishedResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelPublishedRequest
          * @return QueryThingModelPublishedResponse
         */
        public QueryThingModelPublishedResponse QueryThingModelPublished(QueryThingModelPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryThingModelPublishedWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryThingModelPublishedRequest
          * @return QueryThingModelPublishedResponse
         */
        public async Task<QueryThingModelPublishedResponse> QueryThingModelPublishedAsync(QueryThingModelPublishedRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryThingModelPublishedWithOptionsAsync(request, runtime);
        }

        public QueryTopicConfigResponse QueryTopicConfigWithOptions(QueryTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicConfigResponse>(CallApi(params_, req, runtime));
        }

        public async Task<QueryTopicConfigResponse> QueryTopicConfigWithOptionsAsync(QueryTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        public QueryTopicConfigResponse QueryTopicConfig(QueryTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryTopicConfigWithOptions(request, runtime);
        }

        public async Task<QueryTopicConfigResponse> QueryTopicConfigAsync(QueryTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryTopicConfigWithOptionsAsync(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryTopicReverseRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryTopicReverseRouteTableResponse
         */
        public QueryTopicReverseRouteTableResponse QueryTopicReverseRouteTableWithOptions(QueryTopicReverseRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicReverseRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicReverseRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryTopicReverseRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryTopicReverseRouteTableResponse
         */
        public async Task<QueryTopicReverseRouteTableResponse> QueryTopicReverseRouteTableWithOptionsAsync(QueryTopicReverseRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RegionId))
            {
                query["RegionId"] = request.RegionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicReverseRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicReverseRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryTopicReverseRouteTableRequest
          * @return QueryTopicReverseRouteTableResponse
         */
        public QueryTopicReverseRouteTableResponse QueryTopicReverseRouteTable(QueryTopicReverseRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryTopicReverseRouteTableWithOptions(request, runtime);
        }

        /**
          * In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see [Common request parameters](~~30561~~).
          *
          * @param request QueryTopicReverseRouteTableRequest
          * @return QueryTopicReverseRouteTableResponse
         */
        public async Task<QueryTopicReverseRouteTableResponse> QueryTopicReverseRouteTableAsync(QueryTopicReverseRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryTopicReverseRouteTableWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryTopicRouteTableResponse
         */
        public QueryTopicRouteTableResponse QueryTopicRouteTableWithOptions(QueryTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicRouteTableResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryTopicRouteTableRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryTopicRouteTableResponse
         */
        public async Task<QueryTopicRouteTableResponse> QueryTopicRouteTableWithOptionsAsync(QueryTopicRouteTableRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryTopicRouteTable",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryTopicRouteTableResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryTopicRouteTableRequest
          * @return QueryTopicRouteTableResponse
         */
        public QueryTopicRouteTableResponse QueryTopicRouteTable(QueryTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryTopicRouteTableWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request QueryTopicRouteTableRequest
          * @return QueryTopicRouteTableResponse
         */
        public async Task<QueryTopicRouteTableResponse> QueryTopicRouteTableAsync(QueryTopicRouteTableRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryTopicRouteTableWithOptionsAsync(request, runtime);
        }

        /**
          * *   You can call this operation to query the information about a device of a JT/T 808 gateway product.
          * *   When you call this operation, you must specify a **ProductKey** and a **DeviceName**. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryVehicleDeviceResponse
         */
        public QueryVehicleDeviceResponse QueryVehicleDeviceWithOptions(QueryVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryVehicleDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You can call this operation to query the information about a device of a JT/T 808 gateway product.
          * *   When you call this operation, you must specify a **ProductKey** and a **DeviceName**. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryVehicleDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return QueryVehicleDeviceResponse
         */
        public async Task<QueryVehicleDeviceResponse> QueryVehicleDeviceWithOptionsAsync(QueryVehicleDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "QueryVehicleDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<QueryVehicleDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You can call this operation to query the information about a device of a JT/T 808 gateway product.
          * *   When you call this operation, you must specify a **ProductKey** and a **DeviceName**. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryVehicleDeviceRequest
          * @return QueryVehicleDeviceResponse
         */
        public QueryVehicleDeviceResponse QueryVehicleDevice(QueryVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return QueryVehicleDeviceWithOptions(request, runtime);
        }

        /**
          * *   You can call this operation to query the information about a device of a JT/T 808 gateway product.
          * *   When you call this operation, you must specify a **ProductKey** and a **DeviceName**. Otherwise, the call fails.
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account. 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request QueryVehicleDeviceRequest
          * @return QueryVehicleDeviceResponse
         */
        public async Task<QueryVehicleDeviceResponse> QueryVehicleDeviceAsync(QueryVehicleDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await QueryVehicleDeviceWithOptionsAsync(request, runtime);
        }

        /**
          * If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the **Timeout** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 1000 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RRpcRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RRpcResponse
         */
        public RRpcResponse RRpcWithOptions(RRpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Timeout))
            {
                query["Timeout"] = request.Timeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestBase64Byte))
            {
                body["RequestBase64Byte"] = request.RequestBase64Byte;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RRpc",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RRpcResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the **Timeout** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 1000 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RRpcRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RRpcResponse
         */
        public async Task<RRpcResponse> RRpcWithOptionsAsync(RRpcRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContentType))
            {
                query["ContentType"] = request.ContentType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Timeout))
            {
                query["Timeout"] = request.Timeout;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RequestBase64Byte))
            {
                body["RequestBase64Byte"] = request.RequestBase64Byte;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RRpc",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RRpcResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the **Timeout** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 1000 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RRpcRequest
          * @return RRpcResponse
         */
        public RRpcResponse RRpc(RRpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RRpcWithOptions(request, runtime);
        }

        /**
          * If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the **Timeout** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 1000 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RRpcRequest
          * @return RRpcResponse
         */
        public async Task<RRpcResponse> RRpcAsync(RRpcRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RRpcWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to five times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReBindLicenseDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReBindLicenseDeviceResponse
         */
        public ReBindLicenseDeviceResponse ReBindLicenseDeviceWithOptions(ReBindLicenseDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReBindLicenseDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReBindLicenseDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to five times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReBindLicenseDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReBindLicenseDeviceResponse
         */
        public async Task<ReBindLicenseDeviceResponse> ReBindLicenseDeviceWithOptionsAsync(ReBindLicenseDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceNameList))
            {
                body["DeviceNameList"] = request.DeviceNameList;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReBindLicenseDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReBindLicenseDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to five times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReBindLicenseDeviceRequest
          * @return ReBindLicenseDeviceResponse
         */
        public ReBindLicenseDeviceResponse ReBindLicenseDevice(ReBindLicenseDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReBindLicenseDeviceWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to five times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReBindLicenseDeviceRequest
          * @return ReBindLicenseDeviceResponse
         */
        public async Task<ReBindLicenseDeviceResponse> ReBindLicenseDeviceAsync(ReBindLicenseDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReBindLicenseDeviceWithOptionsAsync(request, runtime);
        }

        public RecognizeCarNumResponse RecognizeCarNumWithOptions(RecognizeCarNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RecognizeCarNum",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RecognizeCarNumResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RecognizeCarNumResponse> RecognizeCarNumWithOptionsAsync(RecognizeCarNumRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RecognizeCarNum",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RecognizeCarNumResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RecognizeCarNumResponse RecognizeCarNum(RecognizeCarNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RecognizeCarNumWithOptions(request, runtime);
        }

        public async Task<RecognizeCarNumResponse> RecognizeCarNumAsync(RecognizeCarNumRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RecognizeCarNumWithOptionsAsync(request, runtime);
        }

        public RecognizePictureGeneralResponse RecognizePictureGeneralWithOptions(RecognizePictureGeneralRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RecognizePictureGeneral",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RecognizePictureGeneralResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RecognizePictureGeneralResponse> RecognizePictureGeneralWithOptionsAsync(RecognizePictureGeneralRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Url))
            {
                query["Url"] = request.Url;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RecognizePictureGeneral",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RecognizePictureGeneralResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RecognizePictureGeneralResponse RecognizePictureGeneral(RecognizePictureGeneralRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RecognizePictureGeneralWithOptions(request, runtime);
        }

        public async Task<RecognizePictureGeneralResponse> RecognizePictureGeneralAsync(RecognizePictureGeneralRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RecognizePictureGeneralWithOptionsAsync(request, runtime);
        }

        public RefreshDeviceTunnelSharePasswordResponse RefreshDeviceTunnelSharePasswordWithOptions(RefreshDeviceTunnelSharePasswordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshDeviceTunnelSharePassword",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshDeviceTunnelSharePasswordResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RefreshDeviceTunnelSharePasswordResponse> RefreshDeviceTunnelSharePasswordWithOptionsAsync(RefreshDeviceTunnelSharePasswordRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshDeviceTunnelSharePassword",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshDeviceTunnelSharePasswordResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RefreshDeviceTunnelSharePasswordResponse RefreshDeviceTunnelSharePassword(RefreshDeviceTunnelSharePasswordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshDeviceTunnelSharePasswordWithOptions(request, runtime);
        }

        public async Task<RefreshDeviceTunnelSharePasswordResponse> RefreshDeviceTunnelSharePasswordAsync(RefreshDeviceTunnelSharePasswordRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshDeviceTunnelSharePasswordWithOptionsAsync(request, runtime);
        }

        public RefreshStudioAppTokenOpenResponse RefreshStudioAppTokenOpenWithOptions(RefreshStudioAppTokenOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshStudioAppTokenOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshStudioAppTokenOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RefreshStudioAppTokenOpenResponse> RefreshStudioAppTokenOpenWithOptionsAsync(RefreshStudioAppTokenOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RefreshStudioAppTokenOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RefreshStudioAppTokenOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RefreshStudioAppTokenOpenResponse RefreshStudioAppTokenOpen(RefreshStudioAppTokenOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RefreshStudioAppTokenOpenWithOptions(request, runtime);
        }

        public async Task<RefreshStudioAppTokenOpenResponse> RefreshStudioAppTokenOpenAsync(RefreshStudioAppTokenOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RefreshStudioAppTokenOpenWithOptionsAsync(request, runtime);
        }

        /**
          * If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
          * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
          * For information about how to register multiple devices under a product at the same time, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RegisterDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RegisterDeviceResponse
         */
        public RegisterDeviceResponse RegisterDeviceWithOptions(RegisterDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppKey))
            {
                query["AppKey"] = request.AppKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DevEui))
            {
                query["DevEui"] = request.DevEui;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JoinEui))
            {
                query["JoinEui"] = request.JoinEui;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LoraNodeType))
            {
                query["LoraNodeType"] = request.LoraNodeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PinCode))
            {
                query["PinCode"] = request.PinCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterDeviceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
          * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
          * For information about how to register multiple devices under a product at the same time, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RegisterDeviceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RegisterDeviceResponse
         */
        public async Task<RegisterDeviceResponse> RegisterDeviceWithOptionsAsync(RegisterDeviceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppKey))
            {
                query["AppKey"] = request.AppKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DevEui))
            {
                query["DevEui"] = request.DevEui;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JoinEui))
            {
                query["JoinEui"] = request.JoinEui;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LoraNodeType))
            {
                query["LoraNodeType"] = request.LoraNodeType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Nickname))
            {
                query["Nickname"] = request.Nickname;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PinCode))
            {
                query["PinCode"] = request.PinCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RegisterDevice",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RegisterDeviceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
          * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
          * For information about how to register multiple devices under a product at the same time, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RegisterDeviceRequest
          * @return RegisterDeviceResponse
         */
        public RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RegisterDeviceWithOptions(request, runtime);
        }

        /**
          * If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
          * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
          * For information about how to register multiple devices under a product at the same time, see [BatchRegisterDeviceWithApplyId](~~69514~~).
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RegisterDeviceRequest
          * @return RegisterDeviceResponse
         */
        public async Task<RegisterDeviceResponse> RegisterDeviceAsync(RegisterDeviceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RegisterDeviceWithOptionsAsync(request, runtime);
        }

        public ReleaseEdgeDriverVersionResponse ReleaseEdgeDriverVersionWithOptions(ReleaseEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ReleaseEdgeDriverVersionResponse> ReleaseEdgeDriverVersionWithOptionsAsync(ReleaseEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ReleaseEdgeDriverVersionResponse ReleaseEdgeDriverVersion(ReleaseEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReleaseEdgeDriverVersionWithOptions(request, runtime);
        }

        public async Task<ReleaseEdgeDriverVersionResponse> ReleaseEdgeDriverVersionAsync(ReleaseEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReleaseEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * *   After a product is published, you cannot call the [CreateThingModel](~~150323~~), [UpdateThingModel](~~151240~~), [ImportThingModelTSL](~~150320~~), [PublishThingModel](~~150311~~), [DeleteThingModel](~~150312~~), or [CopyThingModel](~~150322~~) operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReleaseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReleaseProductResponse
         */
        public ReleaseProductResponse ReleaseProductWithOptions(ReleaseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   After a product is published, you cannot call the [CreateThingModel](~~150323~~), [UpdateThingModel](~~151240~~), [ImportThingModelTSL](~~150320~~), [PublishThingModel](~~150311~~), [DeleteThingModel](~~150312~~), or [CopyThingModel](~~150322~~) operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReleaseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReleaseProductResponse
         */
        public async Task<ReleaseProductResponse> ReleaseProductWithOptionsAsync(ReleaseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReleaseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReleaseProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   After a product is published, you cannot call the [CreateThingModel](~~150323~~), [UpdateThingModel](~~151240~~), [ImportThingModelTSL](~~150320~~), [PublishThingModel](~~150311~~), [DeleteThingModel](~~150312~~), or [CopyThingModel](~~150322~~) operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReleaseProductRequest
          * @return ReleaseProductResponse
         */
        public ReleaseProductResponse ReleaseProduct(ReleaseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReleaseProductWithOptions(request, runtime);
        }

        /**
          * *   After a product is published, you cannot call the [CreateThingModel](~~150323~~), [UpdateThingModel](~~151240~~), [ImportThingModelTSL](~~150320~~), [PublishThingModel](~~150311~~), [DeleteThingModel](~~150312~~), or [CopyThingModel](~~150322~~) operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReleaseProductRequest
          * @return ReleaseProductResponse
         */
        public async Task<ReleaseProductResponse> ReleaseProductAsync(ReleaseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReleaseProductWithOptionsAsync(request, runtime);
        }

        /**
          * *   If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.
          * *   If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.
          * # QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RemoveThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RemoveThingTopoResponse
         */
        public RemoveThingTopoResponse RemoveThingTopoWithOptions(RemoveThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveThingTopoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.
          * *   If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.
          * # QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RemoveThingTopoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return RemoveThingTopoResponse
         */
        public async Task<RemoveThingTopoResponse> RemoveThingTopoWithOptionsAsync(RemoveThingTopoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RemoveThingTopo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RemoveThingTopoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.
          * *   If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.
          * # QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RemoveThingTopoRequest
          * @return RemoveThingTopoResponse
         */
        public RemoveThingTopoResponse RemoveThingTopo(RemoveThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RemoveThingTopoWithOptions(request, runtime);
        }

        /**
          * *   If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.
          * *   If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.
          * # QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request RemoveThingTopoRequest
          * @return RemoveThingTopoResponse
         */
        public async Task<RemoveThingTopoResponse> RemoveThingTopoAsync(RemoveThingTopoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RemoveThingTopoWithOptionsAsync(request, runtime);
        }

        public ReplaceEdgeInstanceGatewayResponse ReplaceEdgeInstanceGatewayWithOptions(ReplaceEdgeInstanceGatewayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentGatewayId))
            {
                query["CurrentGatewayId"] = request.CurrentGatewayId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewGatewayId))
            {
                query["NewGatewayId"] = request.NewGatewayId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReplaceEdgeInstanceGateway",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReplaceEdgeInstanceGatewayResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ReplaceEdgeInstanceGatewayResponse> ReplaceEdgeInstanceGatewayWithOptionsAsync(ReplaceEdgeInstanceGatewayRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CurrentGatewayId))
            {
                query["CurrentGatewayId"] = request.CurrentGatewayId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewGatewayId))
            {
                query["NewGatewayId"] = request.NewGatewayId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReplaceEdgeInstanceGateway",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReplaceEdgeInstanceGatewayResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ReplaceEdgeInstanceGatewayResponse ReplaceEdgeInstanceGateway(ReplaceEdgeInstanceGatewayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReplaceEdgeInstanceGatewayWithOptions(request, runtime);
        }

        public async Task<ReplaceEdgeInstanceGatewayResponse> ReplaceEdgeInstanceGatewayAsync(ReplaceEdgeInstanceGatewayRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReplaceEdgeInstanceGatewayWithOptionsAsync(request, runtime);
        }

        public RerunJobResponse RerunJobWithOptions(RerunJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RerunJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RerunJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RerunJobResponse> RerunJobWithOptionsAsync(RerunJobRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RerunJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RerunJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RerunJobResponse RerunJob(RerunJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RerunJobWithOptions(request, runtime);
        }

        public async Task<RerunJobResponse> RerunJobAsync(RerunJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RerunJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ResetConsumerGroupPositionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ResetConsumerGroupPositionResponse
         */
        public ResetConsumerGroupPositionResponse ResetConsumerGroupPositionWithOptions(ResetConsumerGroupPositionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetConsumerGroupPosition",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetConsumerGroupPositionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ResetConsumerGroupPositionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ResetConsumerGroupPositionResponse
         */
        public async Task<ResetConsumerGroupPositionResponse> ResetConsumerGroupPositionWithOptionsAsync(ResetConsumerGroupPositionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetConsumerGroupPosition",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetConsumerGroupPositionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ResetConsumerGroupPositionRequest
          * @return ResetConsumerGroupPositionResponse
         */
        public ResetConsumerGroupPositionResponse ResetConsumerGroupPosition(ResetConsumerGroupPositionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResetConsumerGroupPositionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ResetConsumerGroupPositionRequest
          * @return ResetConsumerGroupPositionResponse
         */
        public async Task<ResetConsumerGroupPositionResponse> ResetConsumerGroupPositionAsync(ResetConsumerGroupPositionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResetConsumerGroupPositionWithOptionsAsync(request, runtime);
        }

        public ResetDeviceTimelineResponse ResetDeviceTimelineWithOptions(ResetDeviceTimelineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetDeviceTimeline",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetDeviceTimelineResponse>(CallApi(params_, req, runtime));
        }

        public async Task<ResetDeviceTimelineResponse> ResetDeviceTimelineWithOptionsAsync(ResetDeviceTimelineRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetDeviceTimeline",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetDeviceTimelineResponse>(await CallApiAsync(params_, req, runtime));
        }

        public ResetDeviceTimelineResponse ResetDeviceTimeline(ResetDeviceTimelineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResetDeviceTimelineWithOptions(request, runtime);
        }

        public async Task<ResetDeviceTimelineResponse> ResetDeviceTimelineAsync(ResetDeviceTimelineRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResetDeviceTimelineWithOptionsAsync(request, runtime);
        }

        /**
          * *   After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.
          * > This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ResetThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ResetThingResponse
         */
        public ResetThingResponse ResetThingWithOptions(ResetThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetThingResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.
          * > This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ResetThingRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ResetThingResponse
         */
        public async Task<ResetThingResponse> ResetThingWithOptionsAsync(ResetThingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ResetThing",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ResetThingResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.
          * > This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ResetThingRequest
          * @return ResetThingResponse
         */
        public ResetThingResponse ResetThing(ResetThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ResetThingWithOptions(request, runtime);
        }

        /**
          * *   After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.
          * > This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.
          * *   If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the **JobId** parameter.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request ResetThingRequest
          * @return ResetThingResponse
         */
        public async Task<ResetThingResponse> ResetThingAsync(ResetThingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ResetThingWithOptionsAsync(request, runtime);
        }

        public RetrySoundCodeLabelBatchResponse RetrySoundCodeLabelBatchWithOptions(RetrySoundCodeLabelBatchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetrySoundCodeLabelBatch",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetrySoundCodeLabelBatchResponse>(CallApi(params_, req, runtime));
        }

        public async Task<RetrySoundCodeLabelBatchResponse> RetrySoundCodeLabelBatchWithOptionsAsync(RetrySoundCodeLabelBatchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BatchCode))
            {
                body["BatchCode"] = request.BatchCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "RetrySoundCodeLabelBatch",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<RetrySoundCodeLabelBatchResponse>(await CallApiAsync(params_, req, runtime));
        }

        public RetrySoundCodeLabelBatchResponse RetrySoundCodeLabelBatch(RetrySoundCodeLabelBatchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return RetrySoundCodeLabelBatchWithOptions(request, runtime);
        }

        public async Task<RetrySoundCodeLabelBatchResponse> RetrySoundCodeLabelBatchAsync(RetrySoundCodeLabelBatchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await RetrySoundCodeLabelBatchWithOptionsAsync(request, runtime);
        }

        /**
          * If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the [ConfirmOTATask](~~254666~~) operation to confirm update tasks.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReupgradeOTATaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReupgradeOTATaskResponse
         */
        public ReupgradeOTATaskResponse ReupgradeOTATaskWithOptions(ReupgradeOTATaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReupgradeOTATask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReupgradeOTATaskResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the [ConfirmOTATask](~~254666~~) operation to confirm update tasks.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReupgradeOTATaskRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ReupgradeOTATaskResponse
         */
        public async Task<ReupgradeOTATaskResponse> ReupgradeOTATaskWithOptionsAsync(ReupgradeOTATaskRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TaskId))
            {
                query["TaskId"] = request.TaskId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ReupgradeOTATask",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ReupgradeOTATaskResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the [ConfirmOTATask](~~254666~~) operation to confirm update tasks.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReupgradeOTATaskRequest
          * @return ReupgradeOTATaskResponse
         */
        public ReupgradeOTATaskResponse ReupgradeOTATask(ReupgradeOTATaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ReupgradeOTATaskWithOptions(request, runtime);
        }

        /**
          * If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the [ConfirmOTATask](~~254666~~) operation to confirm update tasks.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ReupgradeOTATaskRequest
          * @return ReupgradeOTATaskResponse
         */
        public async Task<ReupgradeOTATaskResponse> ReupgradeOTATaskAsync(ReupgradeOTATaskRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ReupgradeOTATaskWithOptionsAsync(request, runtime);
        }

        /**
          * *   A device can have a maximum of 100 tags.
          * *   You can modify or add a maximum of 100 tags at a time.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SaveDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SaveDevicePropResponse
         */
        public SaveDevicePropResponse SaveDevicePropWithOptions(SaveDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Props))
            {
                query["Props"] = request.Props;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveDevicePropResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   A device can have a maximum of 100 tags.
          * *   You can modify or add a maximum of 100 tags at a time.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SaveDevicePropRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SaveDevicePropResponse
         */
        public async Task<SaveDevicePropResponse> SaveDevicePropWithOptionsAsync(SaveDevicePropRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Props))
            {
                query["Props"] = request.Props;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveDeviceProp",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveDevicePropResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   A device can have a maximum of 100 tags.
          * *   You can modify or add a maximum of 100 tags at a time.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SaveDevicePropRequest
          * @return SaveDevicePropResponse
         */
        public SaveDevicePropResponse SaveDeviceProp(SaveDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SaveDevicePropWithOptions(request, runtime);
        }

        /**
          * *   A device can have a maximum of 100 tags.
          * *   You can modify or add a maximum of 100 tags at a time.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SaveDevicePropRequest
          * @return SaveDevicePropResponse
         */
        public async Task<SaveDevicePropResponse> SaveDevicePropAsync(SaveDevicePropRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SaveDevicePropWithOptionsAsync(request, runtime);
        }

        public SaveScriptResponse SaveScriptWithOptions(SaveScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptDraft))
            {
                query["ScriptDraft"] = request.ScriptDraft;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveScriptResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SaveScriptResponse> SaveScriptWithOptionsAsync(SaveScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptDraft))
            {
                query["ScriptDraft"] = request.ScriptDraft;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SaveScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SaveScriptResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SaveScriptResponse SaveScript(SaveScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SaveScriptWithOptions(request, runtime);
        }

        public async Task<SaveScriptResponse> SaveScriptAsync(SaveScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SaveScriptWithOptionsAsync(request, runtime);
        }

        /**
          * *   You cannot query the desired values of read-only properties.
          * *   You can specify up to 10 desired property values in a call.
          * *   After a device is created, the value of the **Version** parameter is 0. If you want to configure the **Version** parameter the first time you specify a desired property value, set the **Version** parameter to 0.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDeviceDesiredPropertyResponse
         */
        public SetDeviceDesiredPropertyResponse SetDeviceDesiredPropertyWithOptions(SetDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Versions))
            {
                query["Versions"] = request.Versions;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDeviceDesiredPropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   You cannot query the desired values of read-only properties.
          * *   You can specify up to 10 desired property values in a call.
          * *   After a device is created, the value of the **Version** parameter is 0. If you want to configure the **Version** parameter the first time you specify a desired property value, set the **Version** parameter to 0.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceDesiredPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDeviceDesiredPropertyResponse
         */
        public async Task<SetDeviceDesiredPropertyResponse> SetDeviceDesiredPropertyWithOptionsAsync(SetDeviceDesiredPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Versions))
            {
                query["Versions"] = request.Versions;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceDesiredProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDeviceDesiredPropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   You cannot query the desired values of read-only properties.
          * *   You can specify up to 10 desired property values in a call.
          * *   After a device is created, the value of the **Version** parameter is 0. If you want to configure the **Version** parameter the first time you specify a desired property value, set the **Version** parameter to 0.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceDesiredPropertyRequest
          * @return SetDeviceDesiredPropertyResponse
         */
        public SetDeviceDesiredPropertyResponse SetDeviceDesiredProperty(SetDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetDeviceDesiredPropertyWithOptions(request, runtime);
        }

        /**
          * *   You cannot query the desired values of read-only properties.
          * *   You can specify up to 10 desired property values in a call.
          * *   After a device is created, the value of the **Version** parameter is 0. If you want to configure the **Version** parameter the first time you specify a desired property value, set the **Version** parameter to 0.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceDesiredPropertyRequest
          * @return SetDeviceDesiredPropertyResponse
         */
        public async Task<SetDeviceDesiredPropertyResponse> SetDeviceDesiredPropertyAsync(SetDeviceDesiredPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetDeviceDesiredPropertyWithOptionsAsync(request, runtime);
        }

        /**
          * A device group can have a maximum of 100 tags.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceGroupTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDeviceGroupTagsResponse
         */
        public SetDeviceGroupTagsResponse SetDeviceGroupTagsWithOptions(SetDeviceGroupTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagString))
            {
                query["TagString"] = request.TagString;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceGroupTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDeviceGroupTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * A device group can have a maximum of 100 tags.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceGroupTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDeviceGroupTagsResponse
         */
        public async Task<SetDeviceGroupTagsResponse> SetDeviceGroupTagsWithOptionsAsync(SetDeviceGroupTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TagString))
            {
                query["TagString"] = request.TagString;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceGroupTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDeviceGroupTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * A device group can have a maximum of 100 tags.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceGroupTagsRequest
          * @return SetDeviceGroupTagsResponse
         */
        public SetDeviceGroupTagsResponse SetDeviceGroupTags(SetDeviceGroupTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetDeviceGroupTagsWithOptions(request, runtime);
        }

        /**
          * A device group can have a maximum of 100 tags.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 50 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDeviceGroupTagsRequest
          * @return SetDeviceGroupTagsResponse
         */
        public async Task<SetDeviceGroupTagsResponse> SetDeviceGroupTagsAsync(SetDeviceGroupTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetDeviceGroupTagsWithOptionsAsync(request, runtime);
        }

        /**
          * After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicePropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDevicePropertyResponse
         */
        public SetDevicePropertyResponse SetDevicePropertyWithOptions(SetDevicePropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDevicePropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
          * After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicePropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDevicePropertyResponse
         */
        public async Task<SetDevicePropertyResponse> SetDevicePropertyWithOptionsAsync(SetDevicePropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDeviceProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDevicePropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicePropertyRequest
          * @return SetDevicePropertyResponse
         */
        public SetDevicePropertyResponse SetDeviceProperty(SetDevicePropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetDevicePropertyWithOptions(request, runtime);
        }

        /**
          * After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.
          * > If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 500 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicePropertyRequest
          * @return SetDevicePropertyResponse
         */
        public async Task<SetDevicePropertyResponse> SetDevicePropertyAsync(SetDevicePropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetDevicePropertyWithOptionsAsync(request, runtime);
        }

        /**
          * If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicesPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDevicesPropertyResponse
         */
        public SetDevicesPropertyResponse SetDevicesPropertyWithOptions(SetDevicesPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDevicesProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDevicesPropertyResponse>(CallApi(params_, req, runtime));
        }

        /**
          * If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicesPropertyRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetDevicesPropertyResponse
         */
        public async Task<SetDevicesPropertyResponse> SetDevicesPropertyWithOptionsAsync(SetDevicesPropertyRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Qos))
            {
                query["Qos"] = request.Qos;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetDevicesProperty",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetDevicesPropertyResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicesPropertyRequest
          * @return SetDevicesPropertyResponse
         */
        public SetDevicesPropertyResponse SetDevicesProperty(SetDevicesPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetDevicesPropertyWithOptions(request, runtime);
        }

        /**
          * If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetDevicesPropertyRequest
          * @return SetDevicesPropertyResponse
         */
        public async Task<SetDevicesPropertyResponse> SetDevicesPropertyAsync(SetDevicesPropertyRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetDevicesPropertyWithOptionsAsync(request, runtime);
        }

        public SetEdgeInstanceDriverConfigsResponse SetEdgeInstanceDriverConfigsWithOptions(SetEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetEdgeInstanceDriverConfigsResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SetEdgeInstanceDriverConfigsResponse> SetEdgeInstanceDriverConfigsWithOptionsAsync(SetEdgeInstanceDriverConfigsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetEdgeInstanceDriverConfigs",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetEdgeInstanceDriverConfigsResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SetEdgeInstanceDriverConfigsResponse SetEdgeInstanceDriverConfigs(SetEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetEdgeInstanceDriverConfigsWithOptions(request, runtime);
        }

        public async Task<SetEdgeInstanceDriverConfigsResponse> SetEdgeInstanceDriverConfigsAsync(SetEdgeInstanceDriverConfigsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetEdgeInstanceDriverConfigsWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetProductCertInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetProductCertInfoResponse
         */
        public SetProductCertInfoResponse SetProductCertInfoWithOptions(SetProductCertInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IssueModel))
            {
                query["IssueModel"] = request.IssueModel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetProductCertInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetProductCertInfoResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetProductCertInfoRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SetProductCertInfoResponse
         */
        public async Task<SetProductCertInfoResponse> SetProductCertInfoWithOptionsAsync(SetProductCertInfoRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IssueModel))
            {
                query["IssueModel"] = request.IssueModel;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetProductCertInfo",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetProductCertInfoResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetProductCertInfoRequest
          * @return SetProductCertInfoResponse
         */
        public SetProductCertInfoResponse SetProductCertInfo(SetProductCertInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetProductCertInfoWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 30 times per second per account.
          * >The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request SetProductCertInfoRequest
          * @return SetProductCertInfoResponse
         */
        public async Task<SetProductCertInfoResponse> SetProductCertInfoAsync(SetProductCertInfoRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetProductCertInfoWithOptionsAsync(request, runtime);
        }

        public SetStudioProjectCooperationResponse SetStudioProjectCooperationWithOptions(SetStudioProjectCooperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetStudioProjectCooperation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetStudioProjectCooperationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SetStudioProjectCooperationResponse> SetStudioProjectCooperationWithOptionsAsync(SetStudioProjectCooperationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetStudioProjectCooperation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetStudioProjectCooperationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SetStudioProjectCooperationResponse SetStudioProjectCooperation(SetStudioProjectCooperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetStudioProjectCooperationWithOptions(request, runtime);
        }

        public async Task<SetStudioProjectCooperationResponse> SetStudioProjectCooperationAsync(SetStudioProjectCooperationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetStudioProjectCooperationWithOptionsAsync(request, runtime);
        }

        public SetupStudioAppAuthModeOpenResponse SetupStudioAppAuthModeOpenWithOptions(SetupStudioAppAuthModeOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthMode))
            {
                body["AuthMode"] = request.AuthMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetupStudioAppAuthModeOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetupStudioAppAuthModeOpenResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SetupStudioAppAuthModeOpenResponse> SetupStudioAppAuthModeOpenWithOptionsAsync(SetupStudioAppAuthModeOpenRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AppId))
            {
                body["AppId"] = request.AppId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AuthMode))
            {
                body["AuthMode"] = request.AuthMode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectId))
            {
                body["ProjectId"] = request.ProjectId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SetupStudioAppAuthModeOpen",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SetupStudioAppAuthModeOpenResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SetupStudioAppAuthModeOpenResponse SetupStudioAppAuthModeOpen(SetupStudioAppAuthModeOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SetupStudioAppAuthModeOpenWithOptions(request, runtime);
        }

        public async Task<SetupStudioAppAuthModeOpenResponse> SetupStudioAppAuthModeOpenAsync(SetupStudioAppAuthModeOpenRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SetupStudioAppAuthModeOpenWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ShareSpeechByCombinationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ShareSpeechByCombinationResponse
         */
        public ShareSpeechByCombinationResponse ShareSpeechByCombinationWithOptions(ShareSpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ShareSpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ShareSpeechByCombinationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ShareSpeechByCombinationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return ShareSpeechByCombinationResponse
         */
        public async Task<ShareSpeechByCombinationResponse> ShareSpeechByCombinationWithOptionsAsync(ShareSpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "ShareSpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<ShareSpeechByCombinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ShareSpeechByCombinationRequest
          * @return ShareSpeechByCombinationResponse
         */
        public ShareSpeechByCombinationResponse ShareSpeechByCombination(ShareSpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return ShareSpeechByCombinationWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 50 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request ShareSpeechByCombinationRequest
          * @return ShareSpeechByCombinationResponse
         */
        public async Task<ShareSpeechByCombinationResponse> ShareSpeechByCombinationAsync(ShareSpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await ShareSpeechByCombinationWithOptionsAsync(request, runtime);
        }

        public SpeechByCombinationResponse SpeechByCombinationWithOptions(SpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnforceFlag))
            {
                body["EnforceFlag"] = request.EnforceFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SpeechByCombinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SpeechByCombinationResponse> SpeechByCombinationWithOptionsAsync(SpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnforceFlag))
            {
                body["EnforceFlag"] = request.EnforceFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SpeechByCombinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SpeechByCombinationResponse SpeechByCombination(SpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SpeechByCombinationWithOptions(request, runtime);
        }

        public async Task<SpeechByCombinationResponse> SpeechByCombinationAsync(SpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SpeechByCombinationWithOptionsAsync(request, runtime);
        }

        public SpeechBySynthesisResponse SpeechBySynthesisWithOptions(SpeechBySynthesisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SpeechBySynthesis",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SpeechBySynthesisResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SpeechBySynthesisResponse> SpeechBySynthesisWithOptionsAsync(SpeechBySynthesisRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SpeechBySynthesis",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SpeechBySynthesisResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SpeechBySynthesisResponse SpeechBySynthesis(SpeechBySynthesisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SpeechBySynthesisWithOptions(request, runtime);
        }

        public async Task<SpeechBySynthesisResponse> SpeechBySynthesisAsync(SpeechBySynthesisRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SpeechBySynthesisWithOptionsAsync(request, runtime);
        }

        public StartParserResponse StartParserWithOptions(StartParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<StartParserResponse> StartParserWithOptionsAsync(StartParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public StartParserResponse StartParser(StartParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartParserWithOptions(request, runtime);
        }

        public async Task<StartParserResponse> StartParserAsync(StartParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartParserWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the [UpdateRule](~~69513~~) operation to add an SQL statement and update the rule.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StartRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return StartRuleResponse
         */
        public StartRuleResponse StartRuleWithOptions(StartRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the [UpdateRule](~~69513~~) operation to add an SQL statement and update the rule.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StartRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return StartRuleResponse
         */
        public async Task<StartRuleResponse> StartRuleWithOptionsAsync(StartRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StartRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StartRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the [UpdateRule](~~69513~~) operation to add an SQL statement and update the rule.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StartRuleRequest
          * @return StartRuleResponse
         */
        public StartRuleResponse StartRule(StartRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StartRuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the [UpdateRule](~~69513~~) operation to add an SQL statement and update the rule.
          * *   Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StartRuleRequest
          * @return StartRuleResponse
         */
        public async Task<StartRuleResponse> StartRuleAsync(StartRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StartRuleWithOptionsAsync(request, runtime);
        }

        public StopParserResponse StopParserWithOptions(StopParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<StopParserResponse> StopParserWithOptionsAsync(StopParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public StopParserResponse StopParser(StopParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopParserWithOptions(request, runtime);
        }

        public async Task<StopParserResponse> StopParserAsync(StopParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopParserWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StopRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return StopRuleResponse
         */
        public StopRuleResponse StopRuleWithOptions(StopRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StopRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return StopRuleResponse
         */
        public async Task<StopRuleResponse> StopRuleWithOptionsAsync(StopRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "StopRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<StopRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StopRuleRequest
          * @return StopRuleResponse
         */
        public StopRuleResponse StopRule(StopRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return StopRuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request StopRuleRequest
          * @return StopRuleResponse
         */
        public async Task<StopRuleResponse> StopRuleAsync(StopRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await StopRuleWithOptionsAsync(request, runtime);
        }

        /**
          * *   The device that needs to subscribe to topics must be connected to IoT Platform and online.
          * *   You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request SubscribeTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SubscribeTopicResponse
         */
        public SubscribeTopicResponse SubscribeTopicWithOptions(SubscribeTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SubscribeTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SubscribeTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   The device that needs to subscribe to topics must be connected to IoT Platform and online.
          * *   You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request SubscribeTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return SubscribeTopicResponse
         */
        public async Task<SubscribeTopicResponse> SubscribeTopicWithOptionsAsync(SubscribeTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SubscribeTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SubscribeTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   The device that needs to subscribe to topics must be connected to IoT Platform and online.
          * *   You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request SubscribeTopicRequest
          * @return SubscribeTopicResponse
         */
        public SubscribeTopicResponse SubscribeTopic(SubscribeTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SubscribeTopicWithOptions(request, runtime);
        }

        /**
          * *   The device that needs to subscribe to topics must be connected to IoT Platform and online.
          * *   You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.
          * ## QPS limits
          * Each Alibaba Cloud account can run up to 10 queries per second (QPS). 
          * >  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.
          *
          * @param request SubscribeTopicRequest
          * @return SubscribeTopicResponse
         */
        public async Task<SubscribeTopicResponse> SubscribeTopicAsync(SubscribeTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SubscribeTopicWithOptionsAsync(request, runtime);
        }

        public SyncSpeechByCombinationResponse SyncSpeechByCombinationWithOptions(SyncSpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnforceFlag))
            {
                body["EnforceFlag"] = request.EnforceFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SyncSpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SyncSpeechByCombinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<SyncSpeechByCombinationResponse> SyncSpeechByCombinationWithOptionsAsync(SyncSpeechByCombinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.CombinationList))
            {
                body["CombinationList"] = request.CombinationList;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                body["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnforceFlag))
            {
                body["EnforceFlag"] = request.EnforceFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                body["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                body["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechId))
            {
                body["SpeechId"] = request.SpeechId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "SyncSpeechByCombination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<SyncSpeechByCombinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public SyncSpeechByCombinationResponse SyncSpeechByCombination(SyncSpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return SyncSpeechByCombinationWithOptions(request, runtime);
        }

        public async Task<SyncSpeechByCombinationResponse> SyncSpeechByCombinationAsync(SyncSpeechByCombinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await SyncSpeechByCombinationWithOptionsAsync(request, runtime);
        }

        public TestSpeechResponse TestSpeechWithOptions(TestSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            TestSpeechShrinkRequest request = new TestSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechType))
            {
                body["SpeechType"] = request.SpeechType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TestSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TestSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<TestSpeechResponse> TestSpeechWithOptionsAsync(TestSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            TestSpeechShrinkRequest request = new TestSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AudioFormat))
            {
                body["AudioFormat"] = request.AudioFormat;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechType))
            {
                body["SpeechType"] = request.SpeechType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Text))
            {
                body["Text"] = request.Text;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TestSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TestSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public TestSpeechResponse TestSpeech(TestSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TestSpeechWithOptions(request, runtime);
        }

        public async Task<TestSpeechResponse> TestSpeechAsync(TestSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TestSpeechWithOptionsAsync(request, runtime);
        }

        public TestSwitchResponse TestSwitchWithOptions(TestSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TestSwitch",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TestSwitchResponse>(CallApi(params_, req, runtime));
        }

        public async Task<TestSwitchResponse> TestSwitchWithOptionsAsync(TestSwitchRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TestSwitch",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TestSwitchResponse>(await CallApiAsync(params_, req, runtime));
        }

        public TestSwitchResponse TestSwitch(TestSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TestSwitchWithOptions(request, runtime);
        }

        public async Task<TestSwitchResponse> TestSwitchAsync(TestSwitchRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TestSwitchWithOptionsAsync(request, runtime);
        }

        /**
          * You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request TransformClientIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return TransformClientIdResponse
         */
        public TransformClientIdResponse TransformClientIdWithOptions(TransformClientIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientId))
            {
                query["ClientId"] = request.ClientId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TransformClientId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TransformClientIdResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request TransformClientIdRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return TransformClientIdResponse
         */
        public async Task<TransformClientIdResponse> TransformClientIdWithOptionsAsync(TransformClientIdRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ClientId))
            {
                query["ClientId"] = request.ClientId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TransformClientId",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TransformClientIdResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request TransformClientIdRequest
          * @return TransformClientIdResponse
         */
        public TransformClientIdResponse TransformClientId(TransformClientIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TransformClientIdWithOptions(request, runtime);
        }

        /**
          * You can call the [QueryClientIds](~~371985~~) operation to view the ClientIDs of a device.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request TransformClientIdRequest
          * @return TransformClientIdResponse
         */
        public async Task<TransformClientIdResponse> TransformClientIdAsync(TransformClientIdRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TransformClientIdWithOptionsAsync(request, runtime);
        }

        public TriggerSceneRuleResponse TriggerSceneRuleWithOptions(TriggerSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TriggerSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TriggerSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<TriggerSceneRuleResponse> TriggerSceneRuleWithOptionsAsync(TriggerSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "TriggerSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<TriggerSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public TriggerSceneRuleResponse TriggerSceneRule(TriggerSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return TriggerSceneRuleWithOptions(request, runtime);
        }

        public async Task<TriggerSceneRuleResponse> TriggerSceneRuleAsync(TriggerSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await TriggerSceneRuleWithOptionsAsync(request, runtime);
        }

        public UnbindApplicationFromEdgeInstanceResponse UnbindApplicationFromEdgeInstanceWithOptions(UnbindApplicationFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindApplicationFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindApplicationFromEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UnbindApplicationFromEdgeInstanceResponse> UnbindApplicationFromEdgeInstanceWithOptionsAsync(UnbindApplicationFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ApplicationId))
            {
                query["ApplicationId"] = request.ApplicationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindApplicationFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindApplicationFromEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UnbindApplicationFromEdgeInstanceResponse UnbindApplicationFromEdgeInstance(UnbindApplicationFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindApplicationFromEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<UnbindApplicationFromEdgeInstanceResponse> UnbindApplicationFromEdgeInstanceAsync(UnbindApplicationFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindApplicationFromEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindDriverFromEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UnbindDriverFromEdgeInstanceResponse
         */
        public UnbindDriverFromEdgeInstanceResponse UnbindDriverFromEdgeInstanceWithOptions(UnbindDriverFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindDriverFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindDriverFromEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindDriverFromEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UnbindDriverFromEdgeInstanceResponse
         */
        public async Task<UnbindDriverFromEdgeInstanceResponse> UnbindDriverFromEdgeInstanceWithOptionsAsync(UnbindDriverFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindDriverFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindDriverFromEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindDriverFromEdgeInstanceRequest
          * @return UnbindDriverFromEdgeInstanceResponse
         */
        public UnbindDriverFromEdgeInstanceResponse UnbindDriverFromEdgeInstance(UnbindDriverFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindDriverFromEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindDriverFromEdgeInstanceRequest
          * @return UnbindDriverFromEdgeInstanceResponse
         */
        public async Task<UnbindDriverFromEdgeInstanceResponse> UnbindDriverFromEdgeInstanceAsync(UnbindDriverFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindDriverFromEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Usage notes
          * A license is bound with a product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindLicenseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UnbindLicenseProductResponse
         */
        public UnbindLicenseProductResponse UnbindLicenseProductWithOptions(UnbindLicenseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindLicenseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindLicenseProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * A license is bound with a product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindLicenseProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UnbindLicenseProductResponse
         */
        public async Task<UnbindLicenseProductResponse> UnbindLicenseProductWithOptionsAsync(UnbindLicenseProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.LicenseCode))
            {
                query["LicenseCode"] = request.LicenseCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindLicenseProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindLicenseProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Usage notes
          * A license is bound with a product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindLicenseProductRequest
          * @return UnbindLicenseProductResponse
         */
        public UnbindLicenseProductResponse UnbindLicenseProduct(UnbindLicenseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindLicenseProductWithOptions(request, runtime);
        }

        /**
          * ## Usage notes
          * A license is bound with a product. For more information, see [BindLicenseProduct](~~427956~~) or [Bind a license to a product](~~427937~~).
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * > The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UnbindLicenseProductRequest
          * @return UnbindLicenseProductResponse
         */
        public async Task<UnbindLicenseProductResponse> UnbindLicenseProductAsync(UnbindLicenseProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindLicenseProductWithOptionsAsync(request, runtime);
        }

        public UnbindRoleFromEdgeInstanceResponse UnbindRoleFromEdgeInstanceWithOptions(UnbindRoleFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindRoleFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindRoleFromEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UnbindRoleFromEdgeInstanceResponse> UnbindRoleFromEdgeInstanceWithOptionsAsync(UnbindRoleFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindRoleFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindRoleFromEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UnbindRoleFromEdgeInstanceResponse UnbindRoleFromEdgeInstance(UnbindRoleFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindRoleFromEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<UnbindRoleFromEdgeInstanceResponse> UnbindRoleFromEdgeInstanceAsync(UnbindRoleFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindRoleFromEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public UnbindSceneRuleFromEdgeInstanceResponse UnbindSceneRuleFromEdgeInstanceWithOptions(UnbindSceneRuleFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindSceneRuleFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindSceneRuleFromEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UnbindSceneRuleFromEdgeInstanceResponse> UnbindSceneRuleFromEdgeInstanceWithOptionsAsync(UnbindSceneRuleFromEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UnbindSceneRuleFromEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UnbindSceneRuleFromEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UnbindSceneRuleFromEdgeInstanceResponse UnbindSceneRuleFromEdgeInstance(UnbindSceneRuleFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UnbindSceneRuleFromEdgeInstanceWithOptions(request, runtime);
        }

        public async Task<UnbindSceneRuleFromEdgeInstanceResponse> UnbindSceneRuleFromEdgeInstanceAsync(UnbindSceneRuleFromEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UnbindSceneRuleFromEdgeInstanceWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   You cannot modify the default consumer group provided by IoT Platform.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateConsumerGroupResponse
         */
        public UpdateConsumerGroupResponse UpdateConsumerGroupWithOptions(UpdateConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewGroupName))
            {
                query["NewGroupName"] = request.NewGroupName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateConsumerGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You cannot modify the default consumer group provided by IoT Platform.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateConsumerGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateConsumerGroupResponse
         */
        public async Task<UpdateConsumerGroupResponse> UpdateConsumerGroupWithOptionsAsync(UpdateConsumerGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.NewGroupName))
            {
                query["NewGroupName"] = request.NewGroupName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateConsumerGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateConsumerGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   You cannot modify the default consumer group provided by IoT Platform.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateConsumerGroupRequest
          * @return UpdateConsumerGroupResponse
         */
        public UpdateConsumerGroupResponse UpdateConsumerGroup(UpdateConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateConsumerGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   You cannot modify the default consumer group provided by IoT Platform.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateConsumerGroupRequest
          * @return UpdateConsumerGroupResponse
         */
        public async Task<UpdateConsumerGroupResponse> UpdateConsumerGroupAsync(UpdateConsumerGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateConsumerGroupWithOptionsAsync(request, runtime);
        }

        public UpdateDestinationResponse UpdateDestinationWithOptions(UpdateDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDestinationResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateDestinationResponse> UpdateDestinationWithOptionsAsync(UpdateDestinationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DestinationId))
            {
                query["DestinationId"] = request.DestinationId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDestination",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDestinationResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateDestinationResponse UpdateDestination(UpdateDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateDestinationWithOptions(request, runtime);
        }

        public async Task<UpdateDestinationResponse> UpdateDestinationAsync(UpdateDestinationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateDestinationWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateDeviceGroupResponse
         */
        public UpdateDeviceGroupResponse UpdateDeviceGroupWithOptions(UpdateDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDeviceGroupResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceGroupRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateDeviceGroupResponse
         */
        public async Task<UpdateDeviceGroupResponse> UpdateDeviceGroupWithOptionsAsync(UpdateDeviceGroupRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupDesc))
            {
                query["GroupDesc"] = request.GroupDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupId))
            {
                query["GroupId"] = request.GroupId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.GroupType))
            {
                query["GroupType"] = request.GroupType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDeviceGroup",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDeviceGroupResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceGroupRequest
          * @return UpdateDeviceGroupResponse
         */
        public UpdateDeviceGroupResponse UpdateDeviceGroup(UpdateDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateDeviceGroupWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceGroupRequest
          * @return UpdateDeviceGroupResponse
         */
        public async Task<UpdateDeviceGroupResponse> UpdateDeviceGroupAsync(UpdateDeviceGroupRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateDeviceGroupWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceShadowRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateDeviceShadowResponse
         */
        public UpdateDeviceShadowResponse UpdateDeviceShadowWithOptions(UpdateDeviceShadowRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeltaUpdate))
            {
                query["DeltaUpdate"] = request.DeltaUpdate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShadowMessage))
            {
                query["ShadowMessage"] = request.ShadowMessage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDeviceShadow",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDeviceShadowResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceShadowRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateDeviceShadowResponse
         */
        public async Task<UpdateDeviceShadowResponse> UpdateDeviceShadowWithOptionsAsync(UpdateDeviceShadowRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeltaUpdate))
            {
                query["DeltaUpdate"] = request.DeltaUpdate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShadowMessage))
            {
                query["ShadowMessage"] = request.ShadowMessage;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateDeviceShadow",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateDeviceShadowResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceShadowRequest
          * @return UpdateDeviceShadowResponse
         */
        public UpdateDeviceShadowResponse UpdateDeviceShadow(UpdateDeviceShadowRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateDeviceShadowWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 500 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateDeviceShadowRequest
          * @return UpdateDeviceShadowResponse
         */
        public async Task<UpdateDeviceShadowResponse> UpdateDeviceShadowAsync(UpdateDeviceShadowRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateDeviceShadowWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.
          * *   You are not allowed to update a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateEdgeDriverVersionResponse
         */
        public UpdateEdgeDriverVersionResponse UpdateEdgeDriverVersionWithOptions(UpdateEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Argument))
            {
                query["Argument"] = request.Argument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigCheckRule))
            {
                query["ConfigCheckRule"] = request.ConfigCheckRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerConfig))
            {
                query["ContainerConfig"] = request.ContainerConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverConfig))
            {
                query["DriverConfig"] = request.DriverConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeVersion))
            {
                query["EdgeVersion"] = request.EdgeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceConfig))
            {
                query["SourceConfig"] = request.SourceConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeDriverVersionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.
          * *   You are not allowed to update a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeDriverVersionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateEdgeDriverVersionResponse
         */
        public async Task<UpdateEdgeDriverVersionResponse> UpdateEdgeDriverVersionWithOptionsAsync(UpdateEdgeDriverVersionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Argument))
            {
                query["Argument"] = request.Argument;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConfigCheckRule))
            {
                query["ConfigCheckRule"] = request.ConfigCheckRule;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ContainerConfig))
            {
                query["ContainerConfig"] = request.ContainerConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverConfig))
            {
                query["DriverConfig"] = request.DriverConfig;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverVersion))
            {
                query["DriverVersion"] = request.DriverVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EdgeVersion))
            {
                query["EdgeVersion"] = request.EdgeVersion;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceConfig))
            {
                query["SourceConfig"] = request.SourceConfig;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeDriverVersion",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeDriverVersionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.
          * *   You are not allowed to update a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeDriverVersionRequest
          * @return UpdateEdgeDriverVersionResponse
         */
        public UpdateEdgeDriverVersionResponse UpdateEdgeDriverVersion(UpdateEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeDriverVersionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.
          * *   You are not allowed to update a published driver version.
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeDriverVersionRequest
          * @return UpdateEdgeDriverVersionResponse
         */
        public async Task<UpdateEdgeDriverVersionResponse> UpdateEdgeDriverVersionAsync(UpdateEdgeDriverVersionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeDriverVersionWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateEdgeInstanceResponse
         */
        public UpdateEdgeInstanceResponse UpdateEdgeInstanceWithOptions(UpdateEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizEnable))
            {
                query["BizEnable"] = request.BizEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Spec))
            {
                query["Spec"] = request.Spec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeInstanceRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateEdgeInstanceResponse
         */
        public async Task<UpdateEdgeInstanceResponse> UpdateEdgeInstanceWithOptionsAsync(UpdateEdgeInstanceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.BizEnable))
            {
                query["BizEnable"] = request.BizEnable;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Spec))
            {
                query["Spec"] = request.Spec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Tags))
            {
                query["Tags"] = request.Tags;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstance",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeInstanceRequest
          * @return UpdateEdgeInstanceResponse
         */
        public UpdateEdgeInstanceResponse UpdateEdgeInstance(UpdateEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeInstanceWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of five queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateEdgeInstanceRequest
          * @return UpdateEdgeInstanceResponse
         */
        public async Task<UpdateEdgeInstanceResponse> UpdateEdgeInstanceAsync(UpdateEdgeInstanceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeInstanceWithOptionsAsync(request, runtime);
        }

        public UpdateEdgeInstanceChannelResponse UpdateEdgeInstanceChannelWithOptions(UpdateEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceChannelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateEdgeInstanceChannelResponse> UpdateEdgeInstanceChannelWithOptionsAsync(UpdateEdgeInstanceChannelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelId))
            {
                query["ChannelId"] = request.ChannelId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ChannelName))
            {
                query["ChannelName"] = request.ChannelName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configs))
            {
                query["Configs"] = request.Configs;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DriverId))
            {
                query["DriverId"] = request.DriverId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstanceChannel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceChannelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateEdgeInstanceChannelResponse UpdateEdgeInstanceChannel(UpdateEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeInstanceChannelWithOptions(request, runtime);
        }

        public async Task<UpdateEdgeInstanceChannelResponse> UpdateEdgeInstanceChannelAsync(UpdateEdgeInstanceChannelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeInstanceChannelWithOptionsAsync(request, runtime);
        }

        public UpdateEdgeInstanceMessageRoutingResponse UpdateEdgeInstanceMessageRoutingWithOptions(UpdateEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceData))
            {
                query["SourceData"] = request.SourceData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetData))
            {
                query["TargetData"] = request.TargetData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIotHubQos))
            {
                query["TargetIotHubQos"] = request.TargetIotHubQos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFilter))
            {
                query["TopicFilter"] = request.TopicFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceMessageRoutingResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateEdgeInstanceMessageRoutingResponse> UpdateEdgeInstanceMessageRoutingWithOptionsAsync(UpdateEdgeInstanceMessageRoutingRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.InstanceId))
            {
                query["InstanceId"] = request.InstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RouteId))
            {
                query["RouteId"] = request.RouteId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceData))
            {
                query["SourceData"] = request.SourceData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SourceType))
            {
                query["SourceType"] = request.SourceType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetData))
            {
                query["TargetData"] = request.TargetData;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetIotHubQos))
            {
                query["TargetIotHubQos"] = request.TargetIotHubQos;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TargetType))
            {
                query["TargetType"] = request.TargetType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFilter))
            {
                query["TopicFilter"] = request.TopicFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateEdgeInstanceMessageRouting",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateEdgeInstanceMessageRoutingResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateEdgeInstanceMessageRoutingResponse UpdateEdgeInstanceMessageRouting(UpdateEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateEdgeInstanceMessageRoutingWithOptions(request, runtime);
        }

        public async Task<UpdateEdgeInstanceMessageRoutingResponse> UpdateEdgeInstanceMessageRoutingAsync(UpdateEdgeInstanceMessageRoutingRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateEdgeInstanceMessageRoutingWithOptionsAsync(request, runtime);
        }

        public UpdateJobResponse UpdateJobWithOptions(UpdateJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateJobShrinkRequest request = new UpdateJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RolloutConfig))
            {
                request.RolloutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RolloutConfig, "RolloutConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TimeoutConfig))
            {
                request.TimeoutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TimeoutConfig, "TimeoutConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RolloutConfigShrink))
            {
                query["RolloutConfig"] = request.RolloutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutConfigShrink))
            {
                query["TimeoutConfig"] = request.TimeoutConfigShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJobResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateJobResponse> UpdateJobWithOptionsAsync(UpdateJobRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateJobShrinkRequest request = new UpdateJobShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.RolloutConfig))
            {
                request.RolloutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.RolloutConfig, "RolloutConfig", "json");
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.TimeoutConfig))
            {
                request.TimeoutConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.TimeoutConfig, "TimeoutConfig", "json");
            }
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.JobId))
            {
                query["JobId"] = request.JobId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RolloutConfigShrink))
            {
                query["RolloutConfig"] = request.RolloutConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TimeoutConfigShrink))
            {
                query["TimeoutConfig"] = request.TimeoutConfigShrink;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateJob",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateJobResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateJobResponse UpdateJob(UpdateJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateJobWithOptions(request, runtime);
        }

        public async Task<UpdateJobResponse> UpdateJobAsync(UpdateJobRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateJobWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateOTAModuleResponse
         */
        public UpdateOTAModuleResponse UpdateOTAModuleWithOptions(UpdateOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOTAModuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateOTAModuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateOTAModuleResponse
         */
        public async Task<UpdateOTAModuleResponse> UpdateOTAModuleWithOptionsAsync(UpdateOTAModuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.AliasName))
            {
                query["AliasName"] = request.AliasName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ModuleName))
            {
                query["ModuleName"] = request.ModuleName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateOTAModule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateOTAModuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateOTAModuleRequest
          * @return UpdateOTAModuleResponse
         */
        public UpdateOTAModuleResponse UpdateOTAModule(UpdateOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateOTAModuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateOTAModuleRequest
          * @return UpdateOTAModuleResponse
         */
        public async Task<UpdateOTAModuleResponse> UpdateOTAModuleAsync(UpdateOTAModuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateOTAModuleWithOptionsAsync(request, runtime);
        }

        public UpdateParserResponse UpdateParserWithOptions(UpdateParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateParserResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateParserResponse> UpdateParserWithOptionsAsync(UpdateParserRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ParserId))
            {
                query["ParserId"] = request.ParserId;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateParser",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateParserResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateParserResponse UpdateParser(UpdateParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateParserWithOptions(request, runtime);
        }

        public async Task<UpdateParserResponse> UpdateParserAsync(UpdateParserRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateParserWithOptionsAsync(request, runtime);
        }

        public UpdateParserDataSourceResponse UpdateParserDataSourceWithOptions(UpdateParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateParserDataSourceResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateParserDataSourceResponse> UpdateParserDataSourceWithOptionsAsync(UpdateParserDataSourceRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DataSourceId))
            {
                query["DataSourceId"] = request.DataSourceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateParserDataSource",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateParserDataSourceResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateParserDataSourceResponse UpdateParserDataSource(UpdateParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateParserDataSourceWithOptions(request, runtime);
        }

        public async Task<UpdateParserDataSourceResponse> UpdateParserDataSourceAsync(UpdateParserDataSourceRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateParserDataSourceWithOptionsAsync(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductResponse
         */
        public UpdateProductResponse UpdateProductWithOptions(UpdateProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductName))
            {
                query["ProductName"] = request.ProductName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductResponse
         */
        public async Task<UpdateProductResponse> UpdateProductWithOptionsAsync(UpdateProductRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductName))
            {
                query["ProductName"] = request.ProductName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProduct",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductRequest
          * @return UpdateProductResponse
         */
        public UpdateProductResponse UpdateProduct(UpdateProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateProductWithOptions(request, runtime);
        }

        /**
          * ## QPS limits
          * You can call this API operation up to 10 times per second per account.
          * >  The RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductRequest
          * @return UpdateProductResponse
         */
        public async Task<UpdateProductResponse> UpdateProductAsync(UpdateProductRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateProductWithOptionsAsync(request, runtime);
        }

        /**
          * ## Message deduplication rules
          * Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
          * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductFilterConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductFilterConfigResponse
         */
        public UpdateProductFilterConfigResponse UpdateProductFilterConfigWithOptions(UpdateProductFilterConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyTimestampFilter))
            {
                query["PropertyTimestampFilter"] = request.PropertyTimestampFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyValueFilter))
            {
                query["PropertyValueFilter"] = request.PropertyValueFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductFilterConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductFilterConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Message deduplication rules
          * Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
          * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductFilterConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductFilterConfigResponse
         */
        public async Task<UpdateProductFilterConfigResponse> UpdateProductFilterConfigWithOptionsAsync(UpdateProductFilterConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyTimestampFilter))
            {
                query["PropertyTimestampFilter"] = request.PropertyTimestampFilter;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PropertyValueFilter))
            {
                query["PropertyValueFilter"] = request.PropertyValueFilter;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductFilterConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductFilterConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Message deduplication rules
          * Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
          * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductFilterConfigRequest
          * @return UpdateProductFilterConfigResponse
         */
        public UpdateProductFilterConfigResponse UpdateProductFilterConfig(UpdateProductFilterConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateProductFilterConfigWithOptions(request, runtime);
        }

        /**
          * ## Message deduplication rules
          * Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
          * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). 
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductFilterConfigRequest
          * @return UpdateProductFilterConfigResponse
         */
        public async Task<UpdateProductFilterConfigResponse> UpdateProductFilterConfigAsync(UpdateProductFilterConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateProductFilterConfigWithOptionsAsync(request, runtime);
        }

        /**
          * You can update a maximum of 10 tags in a single call.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductTagsResponse
         */
        public UpdateProductTagsResponse UpdateProductTagsWithOptions(UpdateProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductTagsResponse>(CallApi(params_, req, runtime));
        }

        /**
          * You can update a maximum of 10 tags in a single call.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTagsRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductTagsResponse
         */
        public async Task<UpdateProductTagsResponse> UpdateProductTagsWithOptionsAsync(UpdateProductTagsRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductTag))
            {
                query["ProductTag"] = request.ProductTag;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductTags",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductTagsResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * You can update a maximum of 10 tags in a single call.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTagsRequest
          * @return UpdateProductTagsResponse
         */
        public UpdateProductTagsResponse UpdateProductTags(UpdateProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateProductTagsWithOptions(request, runtime);
        }

        /**
          * You can update a maximum of 10 tags in a single call.
          * > You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the "**Request parameters**" section of this topic.
          * ## QPS limits
          * Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). 
          * >  The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTagsRequest
          * @return UpdateProductTagsResponse
         */
        public async Task<UpdateProductTagsResponse> UpdateProductTagsAsync(UpdateProductTagsRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateProductTagsWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductTopicResponse
         */
        public UpdateProductTopicResponse UpdateProductTopicWithOptions(UpdateProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicId))
            {
                query["TopicId"] = request.TopicId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductTopicResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTopicRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateProductTopicResponse
         */
        public async Task<UpdateProductTopicResponse> UpdateProductTopicWithOptionsAsync(UpdateProductTopicRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Desc))
            {
                query["Desc"] = request.Desc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicId))
            {
                query["TopicId"] = request.TopicId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicShortName))
            {
                query["TopicShortName"] = request.TopicShortName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateProductTopic",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateProductTopicResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTopicRequest
          * @return UpdateProductTopicResponse
         */
        public UpdateProductTopicResponse UpdateProductTopic(UpdateProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateProductTopicWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateProductTopicRequest
          * @return UpdateProductTopicResponse
         */
        public async Task<UpdateProductTopicResponse> UpdateProductTopicAsync(UpdateProductTopicRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateProductTopicWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateRuleResponse
         */
        public UpdateRuleResponse UpdateRuleWithOptions(UpdateRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDesc))
            {
                query["RuleDesc"] = request.RuleDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Select))
            {
                query["Select"] = request.Select;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShortTopic))
            {
                query["ShortTopic"] = request.ShortTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicType))
            {
                query["TopicType"] = request.TopicType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Where))
            {
                query["Where"] = request.Where;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRuleResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateRuleResponse
         */
        public async Task<UpdateRuleResponse> UpdateRuleWithOptionsAsync(UpdateRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                query["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDesc))
            {
                query["RuleDesc"] = request.RuleDesc;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Select))
            {
                query["Select"] = request.Select;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ShortTopic))
            {
                query["ShortTopic"] = request.ShortTopic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Topic))
            {
                query["Topic"] = request.Topic;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicType))
            {
                query["TopicType"] = request.TopicType;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Where))
            {
                query["Where"] = request.Where;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleRequest
          * @return UpdateRuleResponse
         */
        public UpdateRuleResponse UpdateRule(UpdateRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRuleWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleRequest
          * @return UpdateRuleResponse
         */
        public async Task<UpdateRuleResponse> UpdateRuleAsync(UpdateRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRuleWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateRuleActionResponse
         */
        public UpdateRuleActionResponse UpdateRuleActionWithOptions(UpdateRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRuleActionResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleActionRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateRuleActionResponse
         */
        public async Task<UpdateRuleActionResponse> UpdateRuleActionWithOptionsAsync(UpdateRuleActionRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ActionId))
            {
                query["ActionId"] = request.ActionId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Configuration))
            {
                query["Configuration"] = request.Configuration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateRuleAction",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateRuleActionResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleActionRequest
          * @return UpdateRuleActionResponse
         */
        public UpdateRuleActionResponse UpdateRuleAction(UpdateRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateRuleActionWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateRuleActionRequest
          * @return UpdateRuleActionResponse
         */
        public async Task<UpdateRuleActionResponse> UpdateRuleActionAsync(UpdateRuleActionRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateRuleActionWithOptionsAsync(request, runtime);
        }

        public UpdateSceneRuleResponse UpdateSceneRuleWithOptions(UpdateSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleContent))
            {
                query["RuleContent"] = request.RuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDescription))
            {
                query["RuleDescription"] = request.RuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSceneRuleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSceneRuleResponse> UpdateSceneRuleWithOptionsAsync(UpdateSceneRuleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleContent))
            {
                query["RuleContent"] = request.RuleContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleDescription))
            {
                query["RuleDescription"] = request.RuleDescription;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleId))
            {
                query["RuleId"] = request.RuleId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.RuleName))
            {
                query["RuleName"] = request.RuleName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSceneRule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSceneRuleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSceneRuleResponse UpdateSceneRule(UpdateSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSceneRuleWithOptions(request, runtime);
        }

        public async Task<UpdateSceneRuleResponse> UpdateSceneRuleAsync(UpdateSceneRuleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSceneRuleWithOptionsAsync(request, runtime);
        }

        public UpdateSchedulePeriodResponse UpdateSchedulePeriodWithOptions(UpdateSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodCode))
            {
                body["PeriodCode"] = request.PeriodCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSchedulePeriodResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSchedulePeriodResponse> UpdateSchedulePeriodWithOptionsAsync(UpdateSchedulePeriodRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.PeriodCode))
            {
                body["PeriodCode"] = request.PeriodCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSchedulePeriod",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSchedulePeriodResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSchedulePeriodResponse UpdateSchedulePeriod(UpdateSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSchedulePeriodWithOptions(request, runtime);
        }

        public async Task<UpdateSchedulePeriodResponse> UpdateSchedulePeriodAsync(UpdateSchedulePeriodRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSchedulePeriodWithOptionsAsync(request, runtime);
        }

        public UpdateSoundCodeResponse UpdateSoundCodeWithOptions(UpdateSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSoundCodeResponse> UpdateSoundCodeWithOptionsAsync(UpdateSoundCodeRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Duration))
            {
                body["Duration"] = request.Duration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeContent))
            {
                body["SoundCodeContent"] = request.SoundCodeContent;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCode",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSoundCodeResponse UpdateSoundCode(UpdateSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSoundCodeWithOptions(request, runtime);
        }

        public async Task<UpdateSoundCodeResponse> UpdateSoundCodeAsync(UpdateSoundCodeRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSoundCodeWithOptionsAsync(request, runtime);
        }

        public UpdateSoundCodeLabelResponse UpdateSoundCodeLabelWithOptions(UpdateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                body["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeLabelResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSoundCodeLabelResponse> UpdateSoundCodeLabelWithOptionsAsync(UpdateSoundCodeLabelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Label))
            {
                body["Label"] = request.Label;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCode))
            {
                body["SoundCode"] = request.SoundCode;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCodeLabel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeLabelResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSoundCodeLabelResponse UpdateSoundCodeLabel(UpdateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSoundCodeLabelWithOptions(request, runtime);
        }

        public async Task<UpdateSoundCodeLabelResponse> UpdateSoundCodeLabelAsync(UpdateSoundCodeLabelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSoundCodeLabelWithOptionsAsync(request, runtime);
        }

        public UpdateSoundCodeScheduleResponse UpdateSoundCodeScheduleWithOptions(UpdateSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndDate))
            {
                body["EndDate"] = request.EndDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartDate))
            {
                body["StartDate"] = request.StartDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeScheduleResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSoundCodeScheduleResponse> UpdateSoundCodeScheduleWithOptionsAsync(UpdateSoundCodeScheduleRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                body["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndDate))
            {
                body["EndDate"] = request.EndDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EndTime))
            {
                body["EndTime"] = request.EndTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Name))
            {
                body["Name"] = request.Name;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScheduleCode))
            {
                body["ScheduleCode"] = request.ScheduleCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartDate))
            {
                body["StartDate"] = request.StartDate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.StartTime))
            {
                body["StartTime"] = request.StartTime;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Status))
            {
                body["Status"] = request.Status;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSoundCodeSchedule",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSoundCodeScheduleResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSoundCodeScheduleResponse UpdateSoundCodeSchedule(UpdateSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSoundCodeScheduleWithOptions(request, runtime);
        }

        public async Task<UpdateSoundCodeScheduleResponse> UpdateSoundCodeScheduleAsync(UpdateSoundCodeScheduleRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSoundCodeScheduleWithOptionsAsync(request, runtime);
        }

        public UpdateSpeechResponse UpdateSpeechWithOptions(UpdateSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateSpeechShrinkRequest request = new UpdateSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCode))
            {
                body["SpeechCode"] = request.SpeechCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSpeechResponse>(CallApi(params_, req, runtime));
        }

        public async Task<UpdateSpeechResponse> UpdateSpeechWithOptionsAsync(UpdateSpeechRequest tmpReq, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(tmpReq);
            UpdateSpeechShrinkRequest request = new UpdateSpeechShrinkRequest();
            AlibabaCloud.OpenApiUtil.Client.Convert(tmpReq, request);
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(tmpReq.SoundCodeConfig))
            {
                request.SoundCodeConfigShrink = AlibabaCloud.OpenApiUtil.Client.ArrayToStringWithSpecifiedStyle(tmpReq.SoundCodeConfig, "SoundCodeConfig", "json");
            }
            Dictionary<string, object> body = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableSoundCode))
            {
                body["EnableSoundCode"] = request.EnableSoundCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                body["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProjectCode))
            {
                body["ProjectCode"] = request.ProjectCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SoundCodeConfigShrink))
            {
                body["SoundCodeConfig"] = request.SoundCodeConfigShrink;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechCode))
            {
                body["SpeechCode"] = request.SpeechCode;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SpeechRate))
            {
                body["SpeechRate"] = request.SpeechRate;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Voice))
            {
                body["Voice"] = request.Voice;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Volume))
            {
                body["Volume"] = request.Volume;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Body = AlibabaCloud.OpenApiUtil.Client.ParseToMap(body),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSpeech",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSpeechResponse>(await CallApiAsync(params_, req, runtime));
        }

        public UpdateSpeechResponse UpdateSpeech(UpdateSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSpeechWithOptions(request, runtime);
        }

        public async Task<UpdateSpeechResponse> UpdateSpeechAsync(UpdateSpeechRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSpeechWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateSubscribeRelationResponse
         */
        public UpdateSubscribeRelationResponse UpdateSubscribeRelationWithOptions(UpdateSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupIds))
            {
                query["ConsumerGroupIds"] = request.ConsumerGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceDataFlag))
            {
                query["DeviceDataFlag"] = request.DeviceDataFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceLifeCycleFlag))
            {
                query["DeviceLifeCycleFlag"] = request.DeviceLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceStatusChangeFlag))
            {
                query["DeviceStatusChangeFlag"] = request.DeviceStatusChangeFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTagFlag))
            {
                query["DeviceTagFlag"] = request.DeviceTagFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTopoLifeCycleFlag))
            {
                query["DeviceTopoLifeCycleFlag"] = request.DeviceTopoLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FoundDeviceListFlag))
            {
                query["FoundDeviceListFlag"] = request.FoundDeviceListFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MnsConfiguration))
            {
                query["MnsConfiguration"] = request.MnsConfiguration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaEventFlag))
            {
                query["OtaEventFlag"] = request.OtaEventFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaJobFlag))
            {
                query["OtaJobFlag"] = request.OtaJobFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaVersionFlag))
            {
                query["OtaVersionFlag"] = request.OtaVersionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubscribeFlags))
            {
                query["SubscribeFlags"] = request.SubscribeFlags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingHistoryFlag))
            {
                query["ThingHistoryFlag"] = request.ThingHistoryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSubscribeRelationResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateSubscribeRelationRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateSubscribeRelationResponse
         */
        public async Task<UpdateSubscribeRelationResponse> UpdateSubscribeRelationWithOptionsAsync(UpdateSubscribeRelationRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ConsumerGroupIds))
            {
                query["ConsumerGroupIds"] = request.ConsumerGroupIds;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceDataFlag))
            {
                query["DeviceDataFlag"] = request.DeviceDataFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceLifeCycleFlag))
            {
                query["DeviceLifeCycleFlag"] = request.DeviceLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceStatusChangeFlag))
            {
                query["DeviceStatusChangeFlag"] = request.DeviceStatusChangeFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTagFlag))
            {
                query["DeviceTagFlag"] = request.DeviceTagFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceTopoLifeCycleFlag))
            {
                query["DeviceTopoLifeCycleFlag"] = request.DeviceTopoLifeCycleFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FoundDeviceListFlag))
            {
                query["FoundDeviceListFlag"] = request.FoundDeviceListFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.MnsConfiguration))
            {
                query["MnsConfiguration"] = request.MnsConfiguration;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaEventFlag))
            {
                query["OtaEventFlag"] = request.OtaEventFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaJobFlag))
            {
                query["OtaJobFlag"] = request.OtaJobFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.OtaVersionFlag))
            {
                query["OtaVersionFlag"] = request.OtaVersionFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.SubscribeFlags))
            {
                query["SubscribeFlags"] = request.SubscribeFlags;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingHistoryFlag))
            {
                query["ThingHistoryFlag"] = request.ThingHistoryFlag;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Type))
            {
                query["Type"] = request.Type;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateSubscribeRelation",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateSubscribeRelationResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateSubscribeRelationRequest
          * @return UpdateSubscribeRelationResponse
         */
        public UpdateSubscribeRelationResponse UpdateSubscribeRelation(UpdateSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateSubscribeRelationWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * >  RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateSubscribeRelationRequest
          * @return UpdateSubscribeRelationResponse
         */
        public async Task<UpdateSubscribeRelationResponse> UpdateSubscribeRelationAsync(UpdateSubscribeRelationRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateSubscribeRelationWithOptionsAsync(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   When you call this operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to update only one feature. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateThingModelResponse
         */
        public UpdateThingModelResponse UpdateThingModelWithOptions(UpdateThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingModelJson))
            {
                query["ThingModelJson"] = request.ThingModelJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateThingModelResponse>(CallApi(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   When you call this operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to update only one feature. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingModelRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateThingModelResponse
         */
        public async Task<UpdateThingModelResponse> UpdateThingModelWithOptionsAsync(UpdateThingModelRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockId))
            {
                query["FunctionBlockId"] = request.FunctionBlockId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.FunctionBlockName))
            {
                query["FunctionBlockName"] = request.FunctionBlockName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Identifier))
            {
                query["Identifier"] = request.Identifier;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ThingModelJson))
            {
                query["ThingModelJson"] = request.ThingModelJson;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateThingModel",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateThingModelResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   When you call this operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to update only one feature. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingModelRequest
          * @return UpdateThingModelResponse
         */
        public UpdateThingModelResponse UpdateThingModel(UpdateThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateThingModelWithOptions(request, runtime);
        }

        /**
          * ## Limits
          * *   If a product is published, you must call the [CancelReleaseProduct](~~213875~~) operation to unpublish the product before you call this operation.
          * *   When you call this operation, you can use the [json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb) library to verify the input parameters in **ThingModelJson**. For more information, see [Data structure of ThingModelJson](~~150457~~).
          * *   You can call this operation to update only one feature. TSL features include properties, services, and events.
          * *   Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingModelRequest
          * @return UpdateThingModelResponse
         */
        public async Task<UpdateThingModelResponse> UpdateThingModelAsync(UpdateThingModelRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateThingModelWithOptionsAsync(request, runtime);
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateThingScriptResponse
         */
        public UpdateThingScriptResponse UpdateThingScriptWithOptions(UpdateThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptContent))
            {
                query["ScriptContent"] = request.ScriptContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptType))
            {
                query["ScriptType"] = request.ScriptType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateThingScriptResponse>(CallApi(params_, req, runtime));
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingScriptRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateThingScriptResponse
         */
        public async Task<UpdateThingScriptResponse> UpdateThingScriptWithOptionsAsync(UpdateThingScriptRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptContent))
            {
                query["ScriptContent"] = request.ScriptContent;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ScriptType))
            {
                query["ScriptType"] = request.ScriptType;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateThingScript",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateThingScriptResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingScriptRequest
          * @return UpdateThingScriptResponse
         */
        public UpdateThingScriptResponse UpdateThingScript(UpdateThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateThingScriptWithOptions(request, runtime);
        }

        /**
          * *   A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see [Submit scripts for data parsing](~~149963~~).
          * *   Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).
          * > RAM users of an Alibaba Cloud account share the quota of the account.
          *
          * @param request UpdateThingScriptRequest
          * @return UpdateThingScriptResponse
         */
        public async Task<UpdateThingScriptResponse> UpdateThingScriptAsync(UpdateThingScriptRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateThingScriptWithOptionsAsync(request, runtime);
        }

        /**
          *
          * @param request UpdateTopicConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateTopicConfigResponse
         */
        public UpdateTopicConfigResponse UpdateTopicConfigWithOptions(UpdateTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableBroadcast))
            {
                query["EnableBroadcast"] = request.EnableBroadcast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTopicConfigResponse>(CallApi(params_, req, runtime));
        }

        /**
          *
          * @param request UpdateTopicConfigRequest
          * @param runtime runtime options for this request RuntimeOptions
          * @return UpdateTopicConfigResponse
         */
        public async Task<UpdateTopicConfigResponse> UpdateTopicConfigWithOptionsAsync(UpdateTopicConfigRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Codec))
            {
                query["Codec"] = request.Codec;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Description))
            {
                query["Description"] = request.Description;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableBroadcast))
            {
                query["EnableBroadcast"] = request.EnableBroadcast;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.EnableProxySubscribe))
            {
                query["EnableProxySubscribe"] = request.EnableProxySubscribe;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Operation))
            {
                query["Operation"] = request.Operation;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.TopicFullName))
            {
                query["TopicFullName"] = request.TopicFullName;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "UpdateTopicConfig",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<UpdateTopicConfigResponse>(await CallApiAsync(params_, req, runtime));
        }

        /**
          *
          * @param request UpdateTopicConfigRequest
          * @return UpdateTopicConfigResponse
         */
        public UpdateTopicConfigResponse UpdateTopicConfig(UpdateTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return UpdateTopicConfigWithOptions(request, runtime);
        }

        /**
          *
          * @param request UpdateTopicConfigRequest
          * @return UpdateTopicConfigResponse
         */
        public async Task<UpdateTopicConfigResponse> UpdateTopicConfigAsync(UpdateTopicConfigRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await UpdateTopicConfigWithOptionsAsync(request, runtime);
        }

        public WriteDevicesHotStorageDataResponse WriteDevicesHotStorageDataWithOptions(WriteDevicesHotStorageDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "WriteDevicesHotStorageData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<WriteDevicesHotStorageDataResponse>(CallApi(params_, req, runtime));
        }

        public async Task<WriteDevicesHotStorageDataResponse> WriteDevicesHotStorageDataWithOptionsAsync(WriteDevicesHotStorageDataRequest request, AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime)
        {
            AlibabaCloud.TeaUtil.Common.ValidateModel(request);
            Dictionary<string, object> query = new Dictionary<string, object>(){};
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.DeviceName))
            {
                query["DeviceName"] = request.DeviceName;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotId))
            {
                query["IotId"] = request.IotId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.IotInstanceId))
            {
                query["IotInstanceId"] = request.IotInstanceId;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.Items))
            {
                query["Items"] = request.Items;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.ProductKey))
            {
                query["ProductKey"] = request.ProductKey;
            }
            if (!AlibabaCloud.TeaUtil.Common.IsUnset(request.UserTopic))
            {
                query["UserTopic"] = request.UserTopic;
            }
            AlibabaCloud.OpenApiClient.Models.OpenApiRequest req = new AlibabaCloud.OpenApiClient.Models.OpenApiRequest
            {
                Query = AlibabaCloud.OpenApiUtil.Client.Query(query),
            };
            AlibabaCloud.OpenApiClient.Models.Params params_ = new AlibabaCloud.OpenApiClient.Models.Params
            {
                Action = "WriteDevicesHotStorageData",
                Version = "2018-01-20",
                Protocol = "HTTPS",
                Pathname = "/",
                Method = "POST",
                AuthType = "AK",
                Style = "RPC",
                ReqBodyType = "formData",
                BodyType = "json",
            };
            return TeaModel.ToObject<WriteDevicesHotStorageDataResponse>(await CallApiAsync(params_, req, runtime));
        }

        public WriteDevicesHotStorageDataResponse WriteDevicesHotStorageData(WriteDevicesHotStorageDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return WriteDevicesHotStorageDataWithOptions(request, runtime);
        }

        public async Task<WriteDevicesHotStorageDataResponse> WriteDevicesHotStorageDataAsync(WriteDevicesHotStorageDataRequest request)
        {
            AlibabaCloud.TeaUtil.Models.RuntimeOptions runtime = new AlibabaCloud.TeaUtil.Models.RuntimeOptions();
            return await WriteDevicesHotStorageDataWithOptionsAsync(request, runtime);
        }

    }
}
